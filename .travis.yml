--- 
matrix: 
  include: 
    - 
      cache: cargo
      language: rust
      rust: 
        - stable
        - beta
        - nightly
      script: 
        - "cd $TRAVIS_BUILD_DIR/implementations/rs"
        - "cargo build --all"
        - "cargo test --all"
    - 
      before_install: 
        - "export GOBIN=/home/travis/gopath/src/bin"
        - "cd $TRAVIS_BUILD_DIR/implementations/go/tests"
      go: master
      language: go
      script: 
        - "for pattern in ./*; do cd $pattern; go get -d ./...; go run *; cd ../; done"
            - language: rust
    - 
      addons: 
        firefox: latest
      cache: cargo
      language: rust
      rust: 
        - stable
        - beta
        - nightly
      script: 
        -  sudo curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
        -  cd $TRAVIS_BUILD_DIR/implementations/wasm
        -  for pattern in ./*; do cd $pattern; wasm-pack test --firefox --headless; cd ..; done;
    -
      addons: 
        firefox: latest
      cache: cargo
      language: rust
      rust: 
        - stable
        - beta
        - nightly
      script: 
        - "sudo curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh"
        - "cd $TRAVIS_BUILD_DIR/implementations/wasm"
        - "for pattern in ./*; do cd $pattern; wasm-pack build --target web --release --scope noiseexplorer_$pattern; rm pkg/.gitignore; cd ..; done"
        - "cd $TRAVIS_BUILD_DIR"
        - NOISE_VER="x"
        - "git config --global user.email \"georgio@symbolic.software\""
        - "git config --global user.name \"georgio\""
        - "git checkout master > /dev/null 2>&1"
        - "git merge --squash pre-release > /dev/null 2>&1"
        - "cd $TRAVIS_BUILD_DIR/src"
        - "make wasm"
        - "cd ../"
        - "git add * > /dev/null 2>&1"
        - "git commit -m \"Release Noise Explorer v${NOISE_VER}\" > /dev/null 2>&1"
        - "git remote rm origin"
        - "git remote add origin https://georgio:${GH_TOKEN}@github.com/SymbolicSoft/noiseexplorer.git > /dev/null 2>&1"
        - "git push origin master --quiet > /dev/null 2>&1"
        - "git tag -a v${NOISE_VER} -m \"Noise Explorer v${NOISE_VER}\"  > /dev/null 2>&1"
        - "git push --tags > /dev/null 2>&1  > /dev/null 2>&1"
      stage: Release
stages: 
  - 
    if: "(branch = pre-release)"
    name: Release
