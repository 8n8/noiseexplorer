File "K.noise.active.pv", line 265, character 7 - line 265, character 8:
Warning: identifier ck rebound.
File "K.noise.active.pv", line 274, character 7 - line 274, character 8:
Warning: identifier ck rebound.
File "K.noise.active.pv", line 275, character 7 - line 275, character 8:
Warning: identifier cs rebound.
File "K.noise.active.pv", line 275, character 36 - line 275, character 36:
Warning: identifier h rebound.
File "K.noise.active.pv", line 284, character 7 - line 284, character 8:
Warning: identifier cs rebound.
File "K.noise.active.pv", line 285, character 6 - line 285, character 7:
Warning: identifier ss rebound.
File "K.noise.active.pv", line 290, character 7 - line 290, character 8:
Warning: identifier cs rebound.
File "K.noise.active.pv", line 291, character 6 - line 291, character 7:
Warning: identifier ss rebound.
File "K.noise.active.pv", line 305, character 6 - line 305, character 7:
Warning: identifier ss rebound.
File "K.noise.active.pv", line 306, character 6 - line 306, character 7:
Warning: identifier ss rebound.
File "K.noise.active.pv", line 311, character 6 - line 311, character 7:
Warning: identifier ss rebound.
File "K.noise.active.pv", line 312, character 6 - line 312, character 7:
Warning: identifier ss rebound.
File "K.noise.active.pv", line 318, character 6 - line 318, character 6:
Warning: identifier e rebound.
File "K.noise.active.pv", line 319, character 6 - line 319, character 7:
Warning: identifier ne rebound.
File "K.noise.active.pv", line 320, character 6 - line 320, character 7:
Warning: identifier ss rebound.
File "K.noise.active.pv", line 322, character 6 - line 322, character 7:
Warning: identifier ss rebound.
File "K.noise.active.pv", line 323, character 6 - line 323, character 7:
Warning: identifier ss rebound.
File "K.noise.active.pv", line 324, character 7 - line 324, character 8:
Warning: identifier ss rebound.
File "K.noise.active.pv", line 324, character 26 - line 324, character 36:
Warning: identifier ciphertext2 rebound.
File "K.noise.active.pv", line 325, character 6 - line 325, character 7:
Warning: identifier hs rebound.
File "K.noise.active.pv", line 334, character 6 - line 334, character 7:
Warning: identifier re rebound.
File "K.noise.active.pv", line 335, character 6 - line 335, character 7:
Warning: identifier ss rebound.
File "K.noise.active.pv", line 337, character 6 - line 337, character 7:
Warning: identifier ss rebound.
File "K.noise.active.pv", line 338, character 6 - line 338, character 7:
Warning: identifier ss rebound.
File "K.noise.active.pv", line 339, character 7 - line 339, character 8:
Warning: identifier ss rebound.
File "K.noise.active.pv", line 341, character 7 - line 341, character 8:
Warning: identifier hs rebound.
File "K.noise.active.pv", line 410, character 8 - line 410, character 9:
Warning: identifier hs rebound.
File "K.noise.active.pv", line 318, character 6 - line 318, character 6:
Warning: identifier e rebound.
File "K.noise.active.pv", line 319, character 6 - line 319, character 7:
Warning: identifier ne rebound.
File "K.noise.active.pv", line 320, character 6 - line 320, character 7:
Warning: identifier ss rebound.
File "K.noise.active.pv", line 322, character 6 - line 322, character 7:
Warning: identifier ss rebound.
File "K.noise.active.pv", line 323, character 6 - line 323, character 7:
Warning: identifier ss rebound.
File "K.noise.active.pv", line 324, character 7 - line 324, character 8:
Warning: identifier ss rebound.
File "K.noise.active.pv", line 324, character 26 - line 324, character 36:
Warning: identifier ciphertext2 rebound.
File "K.noise.active.pv", line 325, character 6 - line 325, character 7:
Warning: identifier hs rebound.
File "K.noise.active.pv", line 265, character 7 - line 265, character 8:
Warning: identifier ck rebound.
File "K.noise.active.pv", line 265, character 7 - line 265, character 8:
Warning: identifier ck rebound.
File "K.noise.active.pv", line 284, character 7 - line 284, character 8:
Warning: identifier cs rebound.
File "K.noise.active.pv", line 285, character 6 - line 285, character 7:
Warning: identifier ss rebound.
File "K.noise.active.pv", line 305, character 6 - line 305, character 7:
Warning: identifier ss rebound.
File "K.noise.active.pv", line 306, character 6 - line 306, character 7:
Warning: identifier ss rebound.
File "K.noise.active.pv", line 438, character 8 - line 438, character 9:
Warning: identifier hs rebound.
File "K.noise.active.pv", line 334, character 6 - line 334, character 7:
Warning: identifier re rebound.
File "K.noise.active.pv", line 335, character 6 - line 335, character 7:
Warning: identifier ss rebound.
File "K.noise.active.pv", line 337, character 6 - line 337, character 7:
Warning: identifier ss rebound.
File "K.noise.active.pv", line 338, character 6 - line 338, character 7:
Warning: identifier ss rebound.
File "K.noise.active.pv", line 339, character 7 - line 339, character 8:
Warning: identifier ss rebound.
File "K.noise.active.pv", line 341, character 7 - line 341, character 8:
Warning: identifier hs rebound.
File "K.noise.active.pv", line 265, character 7 - line 265, character 8:
Warning: identifier ck rebound.
File "K.noise.active.pv", line 265, character 7 - line 265, character 8:
Warning: identifier ck rebound.
File "K.noise.active.pv", line 290, character 7 - line 290, character 8:
Warning: identifier cs rebound.
File "K.noise.active.pv", line 291, character 6 - line 291, character 7:
Warning: identifier ss rebound.
File "K.noise.active.pv", line 311, character 6 - line 311, character 7:
Warning: identifier ss rebound.
File "K.noise.active.pv", line 312, character 6 - line 312, character 7:
Warning: identifier ss rebound.
Linear part:
dhexp(b_49,dhexp(a_48,g)) = dhexp(a_48,dhexp(b_49,g))
Completing equations...
Completed equations:
dhexp(b_49,dhexp(a_48,g)) = dhexp(a_48,dhexp(b_49,g))
Convergent part:
Completing equations...
Completed equations:
Process:
{1}!
(
    {2}let v_408: key = catch-fail(dhexp(key_s(alice),g)) in
    {3}let s_409: keypair = (if not-caught-fail(v_408) then keypairpack(v_408,key_s(alice)) else fail-any) in
    {4}out(pub, getpublickey(s_409));
    (
        {5}let e_410: keypair = keypairpack(empty,empty) in
        {6}let v_411: key = catch-fail(dhexp(key_s(bob),g)) in
        {7}let rs_412: key = getpublickey((if not-caught-fail(v_411) then keypairpack(v_411,key_s(bob)) else fail-any)) in
        {8}let re_413: key = empty in
        {9}let v_414: bitstring = catch-fail(hash(somename,empty)) in
        {10}let v_415: key = catch-fail(v_414) in
        {11}let v_416: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {12}let v_417: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_414) then (if not-caught-fail(v_415) then (if not-caught-fail(v_416) then symmetricstatepack(v_416,v_415,v_414) else fail-any) else fail-any) else fail-any))) in
        {13}let v_418: symmetricstate = catch-fail((if success?((if not-caught-fail(v_414) then (if not-caught-fail(v_415) then (if not-caught-fail(v_416) then symmetricstatepack(v_416,v_415,v_414) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_417) && success?(is-true(success?(1-proj-3-tuple(v_417))))) then symmetricstatepack(1-proj-3-tuple(v_417),2-proj-3-tuple(v_417),hash(3-proj-3-tuple(v_417),empty)) else fail-any) else fail-any)) in
        {14}let v_419: bitstring = catch-fail(symmetricstateunpack(v_418)) in
        {15}let v_420: symmetricstate = catch-fail((if success?(getpublickey(s_409)) then (if (not-caught-fail(v_419) && success?(is-true(success?(1-proj-3-tuple(v_419))))) then symmetricstatepack(1-proj-3-tuple(v_419),2-proj-3-tuple(v_419),hash(3-proj-3-tuple(v_419),getpublickey(s_409))) else fail-any) else fail-any)) in
        {16}let v_421: bitstring = catch-fail(symmetricstateunpack(v_420)) in
        {17}let v_422: symmetricstate = catch-fail((if (not-caught-fail(v_421) && success?(is-true(success?(1-proj-3-tuple(v_421))))) then symmetricstatepack(1-proj-3-tuple(v_421),2-proj-3-tuple(v_421),hash(3-proj-3-tuple(v_421),rs_412)) else fail-any)) in
        {18}let hs: handshakestate = (if not-caught-fail(v_418) then (if not-caught-fail(v_420) then (if not-caught-fail(v_422) then handshakestatepack(v_422,s_409,e_410,rs_412,re_413,empty,true) else fail-any) else fail-any) else fail-any) in
        {19}insert statestore(alice,bob,statepack_a(hs))
    ) | (
        {64}get statestore(=alice,=bob,statepack_a(hs_423: handshakestate)) in
        {20}let v_424: bitstring = catch-fail(handshakestateunpack(hs_423)) in
        {21}let v_425: bitstring = catch-fail((empty,empty,empty)) in
        {22}let v_426: key = catch-fail(dhexp(key_e(alice,bob),g)) in
        {23}let v_427: keypair = catch-fail((if not-caught-fail(v_426) then keypairpack(v_426,key_e(alice,bob)) else fail-any)) in
        {24}let v_428: bitstring = catch-fail(getpublickey(v_427)) in
        {25}let v_429: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_424))) in
        {26}let v_430: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_424)) then (if (not-caught-fail(v_429) && success?(is-true(success?(1-proj-3-tuple(v_429))))) then symmetricstatepack(1-proj-3-tuple(v_429),2-proj-3-tuple(v_429),hash(3-proj-3-tuple(v_429),v_428)) else fail-any) else fail-any)) in
        {27}let v_431: bitstring = catch-fail(keypairunpack(v_427)) in
        {28}let v_432: bitstring = catch-fail(symmetricstateunpack(v_430)) in
        {29}let v_433: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_432),(if success?(4-proj-7-tuple(v_424)) then (if (not-caught-fail(v_431) && success?(is-true(success?(1-proj-2-tuple(v_431))))) then dhexp(2-proj-2-tuple(v_431),4-proj-7-tuple(v_424)) else fail-any) else fail-any))) in
        {30}let v_434: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_432),(if success?(4-proj-7-tuple(v_424)) then (if (not-caught-fail(v_431) && success?(is-true(success?(1-proj-2-tuple(v_431))))) then dhexp(2-proj-2-tuple(v_431),4-proj-7-tuple(v_424)) else fail-any) else fail-any))) in
        {31}let v_435: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_432),(if success?(4-proj-7-tuple(v_424)) then (if (not-caught-fail(v_431) && success?(is-true(success?(1-proj-2-tuple(v_431))))) then dhexp(2-proj-2-tuple(v_431),4-proj-7-tuple(v_424)) else fail-any) else fail-any))) in
        {32}let v_436: bitstring = catch-fail((if (success?((if success?(4-proj-7-tuple(v_424)) then (if (not-caught-fail(v_431) && success?(is-true(success?(1-proj-2-tuple(v_431))))) then dhexp(2-proj-2-tuple(v_431),4-proj-7-tuple(v_424)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_432))) then (if not-caught-fail(v_433) then (if not-caught-fail(v_434) then (if not-caught-fail(v_435) then (v_433,v_434,v_435) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {33}let v_437: symmetricstate = catch-fail((if success?((if success?(4-proj-7-tuple(v_424)) then (if (not-caught-fail(v_431) && success?(is-true(success?(1-proj-2-tuple(v_431))))) then dhexp(2-proj-2-tuple(v_431),4-proj-7-tuple(v_424)) else fail-any) else fail-any)) then (if (not-caught-fail(v_432) && success?(is-true(success?(1-proj-3-tuple(v_432))))) then (if (not-caught-fail(v_436) && success?(is-true(success?(1-proj-3-tuple(v_436))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_436)) then cipherstatepack(2-proj-3-tuple(v_436),minnonce) else fail-any),1-proj-3-tuple(v_436),3-proj-3-tuple(v_432)) else fail-any) else fail-any) else fail-any)) in
        {34}let v_438: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_424))) in
        {35}let v_439: bitstring = catch-fail(symmetricstateunpack(v_437)) in
        {36}let v_440: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_439),(if (success?(4-proj-7-tuple(v_424)) && success?(2-proj-7-tuple(v_424))) then (if (not-caught-fail(v_438) && success?(is-true(success?(1-proj-2-tuple(v_438))))) then dhexp(2-proj-2-tuple(v_438),4-proj-7-tuple(v_424)) else fail-any) else fail-any))) in
        {37}let v_441: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_439),(if (success?(4-proj-7-tuple(v_424)) && success?(2-proj-7-tuple(v_424))) then (if (not-caught-fail(v_438) && success?(is-true(success?(1-proj-2-tuple(v_438))))) then dhexp(2-proj-2-tuple(v_438),4-proj-7-tuple(v_424)) else fail-any) else fail-any))) in
        {38}let v_442: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_439),(if (success?(4-proj-7-tuple(v_424)) && success?(2-proj-7-tuple(v_424))) then (if (not-caught-fail(v_438) && success?(is-true(success?(1-proj-2-tuple(v_438))))) then dhexp(2-proj-2-tuple(v_438),4-proj-7-tuple(v_424)) else fail-any) else fail-any))) in
        {39}let v_443: bitstring = catch-fail((if (success?((if (success?(4-proj-7-tuple(v_424)) && success?(2-proj-7-tuple(v_424))) then (if (not-caught-fail(v_438) && success?(is-true(success?(1-proj-2-tuple(v_438))))) then dhexp(2-proj-2-tuple(v_438),4-proj-7-tuple(v_424)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_439))) then (if not-caught-fail(v_440) then (if not-caught-fail(v_441) then (if not-caught-fail(v_442) then (v_440,v_441,v_442) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {40}let v_444: symmetricstate = catch-fail((if success?((if (success?(4-proj-7-tuple(v_424)) && success?(2-proj-7-tuple(v_424))) then (if (not-caught-fail(v_438) && success?(is-true(success?(1-proj-2-tuple(v_438))))) then dhexp(2-proj-2-tuple(v_438),4-proj-7-tuple(v_424)) else fail-any) else fail-any)) then (if (not-caught-fail(v_439) && success?(is-true(success?(1-proj-3-tuple(v_439))))) then (if (not-caught-fail(v_443) && success?(is-true(success?(1-proj-3-tuple(v_443))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_443)) then cipherstatepack(2-proj-3-tuple(v_443),minnonce) else fail-any),1-proj-3-tuple(v_443),3-proj-3-tuple(v_439)) else fail-any) else fail-any) else fail-any)) in
        {41}let v_445: bitstring = catch-fail(symmetricstateunpack(v_444)) in
        {42}let v_446: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_445))) in
        {43}let v_447: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_446),2-proj-2-tuple(v_446),3-proj-3-tuple(v_445),msg_a(alice,bob))) in
        {44}let v_448: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_445))) in
        {45}let v_449: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_446))) && success?(1-proj-3-tuple(v_445))) then (if (not-caught-fail(v_448) && success?(is-true(success?(1-proj-2-tuple(v_448))))) then cipherstatepack(1-proj-2-tuple(v_448),increment_nonce(2-proj-2-tuple(v_446))) else fail-any) else fail-any)) in
        {46}let v_450: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_445)) && success?(1-proj-3-tuple(v_445))) then (if (not-caught-fail(v_446) && success?(is-true(success?(1-proj-2-tuple(v_446))))) then (if not-caught-fail(v_447) then (if not-caught-fail(v_449) then (v_449,v_447) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {47}let v_451: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_450),2-proj-3-tuple(v_445),3-proj-3-tuple(v_445)))) in
        {48}let v_452: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_450)) && success?(symmetricstatepack(1-proj-2-tuple(v_450),2-proj-3-tuple(v_445),3-proj-3-tuple(v_445)))) then (if (not-caught-fail(v_451) && success?(is-true(success?(1-proj-3-tuple(v_451))))) then symmetricstatepack(1-proj-3-tuple(v_451),2-proj-3-tuple(v_451),hash(3-proj-3-tuple(v_451),2-proj-2-tuple(v_450))) else fail-any) else fail-any)) in
        {49}let v_453: bitstring = catch-fail((if (not-caught-fail(v_445) && success?(is-true(success?(1-proj-3-tuple(v_445))))) then (if (not-caught-fail(v_450) && success?(is-true(success?(1-proj-2-tuple(v_450))))) then (if not-caught-fail(v_452) then (v_452,2-proj-2-tuple(v_450)) else fail-any) else fail-any) else fail-any)) in
        {50}let v_454: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_453),2-proj-7-tuple(v_424),v_427,4-proj-7-tuple(v_424),5-proj-7-tuple(v_424),6-proj-7-tuple(v_424),7-proj-7-tuple(v_424))) in
        {51}let v_455: bitstring = catch-fail(concat3(v_428,2-proj-3-tuple(v_425),2-proj-2-tuple(v_453))) in
        {52}let v_456: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_453))) in
        {53}let v_457: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_456),zero)) in
        {54}let v_458: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_456),zero)) in
        {55}let v_459: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_456),zero)) in
        {56}let v_460: bitstring = catch-fail((if success?(2-proj-3-tuple(v_456)) then (if not-caught-fail(v_457) then (if not-caught-fail(v_458) then (if not-caught-fail(v_459) then (v_457,v_458,v_459) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {57}let v_461: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_460)) then cipherstatepack(1-proj-3-tuple(v_460),minnonce) else fail-any)) in
        {58}let v_462: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_460)) then cipherstatepack(2-proj-3-tuple(v_460),minnonce) else fail-any)) in
        {59}let v_463: bitstring = catch-fail((if success?(1-proj-2-tuple(v_453)) then (if (not-caught-fail(v_456) && success?(is-true(success?(1-proj-3-tuple(v_456))))) then (if (not-caught-fail(v_460) && success?(is-true(success?(1-proj-3-tuple(v_460))))) then (if not-caught-fail(v_461) then (if not-caught-fail(v_462) then (1-proj-2-tuple(v_453),v_461,v_462) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {60}let (hs_464: handshakestate,re_465: key,message_a: bitstring,cs1: cipherstate,cs2: cipherstate) = (if (not-caught-fail(v_424) && success?(is-true(success?(1-proj-7-tuple(v_424))))) then (if (not-caught-fail(v_425) && success?(is-true(success?(1-proj-3-tuple(v_425))))) then (if not-caught-fail(v_427) then (if not-caught-fail(v_428) then (if not-caught-fail(v_430) then (if not-caught-fail(v_437) then (if not-caught-fail(v_444) then (if (not-caught-fail(v_453) && success?(is-true(success?(1-proj-2-tuple(v_453))))) then (if not-caught-fail(v_454) then (if not-caught-fail(v_455) then (if (not-caught-fail(v_463) && success?(is-true(success?(1-proj-3-tuple(v_463))))) then (v_454,5-proj-7-tuple(v_424),v_455,2-proj-3-tuple(v_463),3-proj-3-tuple(v_463)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {61}event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true);
        {62}insert statestore(alice,bob,statepack_b(hs_464));
        {63}out(pub, message_a)
    ) | (
        {65}event LeakS(phase0,alice);
        {66}out(pub, key_s(alice))
    ) | (
        {67}phase 1;
        {68}event LeakS(phase1,alice);
        {69}out(pub, key_s(alice))
    )
) | (
    {70}let v_466: key = catch-fail(dhexp(key_s(alice),g)) in
    {71}let s_467: keypair = (if not-caught-fail(v_466) then keypairpack(v_466,key_s(alice)) else fail-any) in
    {72}out(pub, getpublickey(s_467));
    (
        {73}let e_468: keypair = keypairpack(empty,empty) in
        {74}let v_469: key = catch-fail(dhexp(key_s(charlie),g)) in
        {75}let rs_470: key = getpublickey((if not-caught-fail(v_469) then keypairpack(v_469,key_s(charlie)) else fail-any)) in
        {76}let re_471: key = empty in
        {77}let v_472: bitstring = catch-fail(hash(somename,empty)) in
        {78}let v_473: key = catch-fail(v_472) in
        {79}let v_474: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {80}let v_475: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_472) then (if not-caught-fail(v_473) then (if not-caught-fail(v_474) then symmetricstatepack(v_474,v_473,v_472) else fail-any) else fail-any) else fail-any))) in
        {81}let v_476: symmetricstate = catch-fail((if success?((if not-caught-fail(v_472) then (if not-caught-fail(v_473) then (if not-caught-fail(v_474) then symmetricstatepack(v_474,v_473,v_472) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_475) && success?(is-true(success?(1-proj-3-tuple(v_475))))) then symmetricstatepack(1-proj-3-tuple(v_475),2-proj-3-tuple(v_475),hash(3-proj-3-tuple(v_475),empty)) else fail-any) else fail-any)) in
        {82}let v_477: bitstring = catch-fail(symmetricstateunpack(v_476)) in
        {83}let v_478: symmetricstate = catch-fail((if success?(getpublickey(s_467)) then (if (not-caught-fail(v_477) && success?(is-true(success?(1-proj-3-tuple(v_477))))) then symmetricstatepack(1-proj-3-tuple(v_477),2-proj-3-tuple(v_477),hash(3-proj-3-tuple(v_477),getpublickey(s_467))) else fail-any) else fail-any)) in
        {84}let v_479: bitstring = catch-fail(symmetricstateunpack(v_478)) in
        {85}let v_480: symmetricstate = catch-fail((if (not-caught-fail(v_479) && success?(is-true(success?(1-proj-3-tuple(v_479))))) then symmetricstatepack(1-proj-3-tuple(v_479),2-proj-3-tuple(v_479),hash(3-proj-3-tuple(v_479),rs_470)) else fail-any)) in
        {86}let hs_481: handshakestate = (if not-caught-fail(v_476) then (if not-caught-fail(v_478) then (if not-caught-fail(v_480) then handshakestatepack(v_480,s_467,e_468,rs_470,re_471,empty,true) else fail-any) else fail-any) else fail-any) in
        {87}insert statestore(alice,charlie,statepack_a(hs_481))
    ) | (
        {132}get statestore(=alice,=charlie,statepack_a(hs_482: handshakestate)) in
        {88}let v_483: bitstring = catch-fail(handshakestateunpack(hs_482)) in
        {89}let v_484: bitstring = catch-fail((empty,empty,empty)) in
        {90}let v_485: key = catch-fail(dhexp(key_e(alice,charlie),g)) in
        {91}let v_486: keypair = catch-fail((if not-caught-fail(v_485) then keypairpack(v_485,key_e(alice,charlie)) else fail-any)) in
        {92}let v_487: bitstring = catch-fail(getpublickey(v_486)) in
        {93}let v_488: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_483))) in
        {94}let v_489: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_483)) then (if (not-caught-fail(v_488) && success?(is-true(success?(1-proj-3-tuple(v_488))))) then symmetricstatepack(1-proj-3-tuple(v_488),2-proj-3-tuple(v_488),hash(3-proj-3-tuple(v_488),v_487)) else fail-any) else fail-any)) in
        {95}let v_490: bitstring = catch-fail(keypairunpack(v_486)) in
        {96}let v_491: bitstring = catch-fail(symmetricstateunpack(v_489)) in
        {97}let v_492: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_491),(if success?(4-proj-7-tuple(v_483)) then (if (not-caught-fail(v_490) && success?(is-true(success?(1-proj-2-tuple(v_490))))) then dhexp(2-proj-2-tuple(v_490),4-proj-7-tuple(v_483)) else fail-any) else fail-any))) in
        {98}let v_493: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_491),(if success?(4-proj-7-tuple(v_483)) then (if (not-caught-fail(v_490) && success?(is-true(success?(1-proj-2-tuple(v_490))))) then dhexp(2-proj-2-tuple(v_490),4-proj-7-tuple(v_483)) else fail-any) else fail-any))) in
        {99}let v_494: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_491),(if success?(4-proj-7-tuple(v_483)) then (if (not-caught-fail(v_490) && success?(is-true(success?(1-proj-2-tuple(v_490))))) then dhexp(2-proj-2-tuple(v_490),4-proj-7-tuple(v_483)) else fail-any) else fail-any))) in
        {100}let v_495: bitstring = catch-fail((if (success?((if success?(4-proj-7-tuple(v_483)) then (if (not-caught-fail(v_490) && success?(is-true(success?(1-proj-2-tuple(v_490))))) then dhexp(2-proj-2-tuple(v_490),4-proj-7-tuple(v_483)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_491))) then (if not-caught-fail(v_492) then (if not-caught-fail(v_493) then (if not-caught-fail(v_494) then (v_492,v_493,v_494) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {101}let v_496: symmetricstate = catch-fail((if success?((if success?(4-proj-7-tuple(v_483)) then (if (not-caught-fail(v_490) && success?(is-true(success?(1-proj-2-tuple(v_490))))) then dhexp(2-proj-2-tuple(v_490),4-proj-7-tuple(v_483)) else fail-any) else fail-any)) then (if (not-caught-fail(v_491) && success?(is-true(success?(1-proj-3-tuple(v_491))))) then (if (not-caught-fail(v_495) && success?(is-true(success?(1-proj-3-tuple(v_495))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_495)) then cipherstatepack(2-proj-3-tuple(v_495),minnonce) else fail-any),1-proj-3-tuple(v_495),3-proj-3-tuple(v_491)) else fail-any) else fail-any) else fail-any)) in
        {102}let v_497: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_483))) in
        {103}let v_498: bitstring = catch-fail(symmetricstateunpack(v_496)) in
        {104}let v_499: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_498),(if (success?(4-proj-7-tuple(v_483)) && success?(2-proj-7-tuple(v_483))) then (if (not-caught-fail(v_497) && success?(is-true(success?(1-proj-2-tuple(v_497))))) then dhexp(2-proj-2-tuple(v_497),4-proj-7-tuple(v_483)) else fail-any) else fail-any))) in
        {105}let v_500: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_498),(if (success?(4-proj-7-tuple(v_483)) && success?(2-proj-7-tuple(v_483))) then (if (not-caught-fail(v_497) && success?(is-true(success?(1-proj-2-tuple(v_497))))) then dhexp(2-proj-2-tuple(v_497),4-proj-7-tuple(v_483)) else fail-any) else fail-any))) in
        {106}let v_501: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_498),(if (success?(4-proj-7-tuple(v_483)) && success?(2-proj-7-tuple(v_483))) then (if (not-caught-fail(v_497) && success?(is-true(success?(1-proj-2-tuple(v_497))))) then dhexp(2-proj-2-tuple(v_497),4-proj-7-tuple(v_483)) else fail-any) else fail-any))) in
        {107}let v_502: bitstring = catch-fail((if (success?((if (success?(4-proj-7-tuple(v_483)) && success?(2-proj-7-tuple(v_483))) then (if (not-caught-fail(v_497) && success?(is-true(success?(1-proj-2-tuple(v_497))))) then dhexp(2-proj-2-tuple(v_497),4-proj-7-tuple(v_483)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_498))) then (if not-caught-fail(v_499) then (if not-caught-fail(v_500) then (if not-caught-fail(v_501) then (v_499,v_500,v_501) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {108}let v_503: symmetricstate = catch-fail((if success?((if (success?(4-proj-7-tuple(v_483)) && success?(2-proj-7-tuple(v_483))) then (if (not-caught-fail(v_497) && success?(is-true(success?(1-proj-2-tuple(v_497))))) then dhexp(2-proj-2-tuple(v_497),4-proj-7-tuple(v_483)) else fail-any) else fail-any)) then (if (not-caught-fail(v_498) && success?(is-true(success?(1-proj-3-tuple(v_498))))) then (if (not-caught-fail(v_502) && success?(is-true(success?(1-proj-3-tuple(v_502))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_502)) then cipherstatepack(2-proj-3-tuple(v_502),minnonce) else fail-any),1-proj-3-tuple(v_502),3-proj-3-tuple(v_498)) else fail-any) else fail-any) else fail-any)) in
        {109}let v_504: bitstring = catch-fail(symmetricstateunpack(v_503)) in
        {110}let v_505: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_504))) in
        {111}let v_506: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_505),2-proj-2-tuple(v_505),3-proj-3-tuple(v_504),msg_a(alice,charlie))) in
        {112}let v_507: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_504))) in
        {113}let v_508: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_505))) && success?(1-proj-3-tuple(v_504))) then (if (not-caught-fail(v_507) && success?(is-true(success?(1-proj-2-tuple(v_507))))) then cipherstatepack(1-proj-2-tuple(v_507),increment_nonce(2-proj-2-tuple(v_505))) else fail-any) else fail-any)) in
        {114}let v_509: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_504)) && success?(1-proj-3-tuple(v_504))) then (if (not-caught-fail(v_505) && success?(is-true(success?(1-proj-2-tuple(v_505))))) then (if not-caught-fail(v_506) then (if not-caught-fail(v_508) then (v_508,v_506) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {115}let v_510: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_509),2-proj-3-tuple(v_504),3-proj-3-tuple(v_504)))) in
        {116}let v_511: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_509)) && success?(symmetricstatepack(1-proj-2-tuple(v_509),2-proj-3-tuple(v_504),3-proj-3-tuple(v_504)))) then (if (not-caught-fail(v_510) && success?(is-true(success?(1-proj-3-tuple(v_510))))) then symmetricstatepack(1-proj-3-tuple(v_510),2-proj-3-tuple(v_510),hash(3-proj-3-tuple(v_510),2-proj-2-tuple(v_509))) else fail-any) else fail-any)) in
        {117}let v_512: bitstring = catch-fail((if (not-caught-fail(v_504) && success?(is-true(success?(1-proj-3-tuple(v_504))))) then (if (not-caught-fail(v_509) && success?(is-true(success?(1-proj-2-tuple(v_509))))) then (if not-caught-fail(v_511) then (v_511,2-proj-2-tuple(v_509)) else fail-any) else fail-any) else fail-any)) in
        {118}let v_513: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_512),2-proj-7-tuple(v_483),v_486,4-proj-7-tuple(v_483),5-proj-7-tuple(v_483),6-proj-7-tuple(v_483),7-proj-7-tuple(v_483))) in
        {119}let v_514: bitstring = catch-fail(concat3(v_487,2-proj-3-tuple(v_484),2-proj-2-tuple(v_512))) in
        {120}let v_515: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_512))) in
        {121}let v_516: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_515),zero)) in
        {122}let v_517: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_515),zero)) in
        {123}let v_518: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_515),zero)) in
        {124}let v_519: bitstring = catch-fail((if success?(2-proj-3-tuple(v_515)) then (if not-caught-fail(v_516) then (if not-caught-fail(v_517) then (if not-caught-fail(v_518) then (v_516,v_517,v_518) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {125}let v_520: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_519)) then cipherstatepack(1-proj-3-tuple(v_519),minnonce) else fail-any)) in
        {126}let v_521: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_519)) then cipherstatepack(2-proj-3-tuple(v_519),minnonce) else fail-any)) in
        {127}let v_522: bitstring = catch-fail((if success?(1-proj-2-tuple(v_512)) then (if (not-caught-fail(v_515) && success?(is-true(success?(1-proj-3-tuple(v_515))))) then (if (not-caught-fail(v_519) && success?(is-true(success?(1-proj-3-tuple(v_519))))) then (if not-caught-fail(v_520) then (if not-caught-fail(v_521) then (1-proj-2-tuple(v_512),v_520,v_521) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {128}let (hs_523: handshakestate,re_524: key,message_a_525: bitstring,cs1_526: cipherstate,cs2_527: cipherstate) = (if (not-caught-fail(v_483) && success?(is-true(success?(1-proj-7-tuple(v_483))))) then (if (not-caught-fail(v_484) && success?(is-true(success?(1-proj-3-tuple(v_484))))) then (if not-caught-fail(v_486) then (if not-caught-fail(v_487) then (if not-caught-fail(v_489) then (if not-caught-fail(v_496) then (if not-caught-fail(v_503) then (if (not-caught-fail(v_512) && success?(is-true(success?(1-proj-2-tuple(v_512))))) then (if not-caught-fail(v_513) then (if not-caught-fail(v_514) then (if (not-caught-fail(v_522) && success?(is-true(success?(1-proj-3-tuple(v_522))))) then (v_513,5-proj-7-tuple(v_483),v_514,2-proj-3-tuple(v_522),3-proj-3-tuple(v_522)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {129}event SendMsg(alice,charlie,stage_a,msg_a(alice,charlie),true);
        {130}insert statestore(alice,charlie,statepack_b(hs_523));
        {131}out(pub, message_a_525)
    ) | (
        {133}event LeakS(phase0,alice);
        {134}out(pub, key_s(alice))
    ) | (
        {135}phase 1;
        {136}event LeakS(phase1,alice);
        {137}out(pub, key_s(alice))
    )
) | (
    {138}let v_528: key = catch-fail(dhexp(key_s(bob),g)) in
    {139}let s_529: keypair = (if not-caught-fail(v_528) then keypairpack(v_528,key_s(bob)) else fail-any) in
    {140}out(pub, getpublickey(s_529));
    (
        {141}let e_530: keypair = keypairpack(empty,empty) in
        {142}let v_531: key = catch-fail(dhexp(key_s(alice),g)) in
        {143}let rs_532: key = getpublickey((if not-caught-fail(v_531) then keypairpack(v_531,key_s(alice)) else fail-any)) in
        {144}let re_533: key = empty in
        {145}let v_534: bitstring = catch-fail(hash(somename,empty)) in
        {146}let v_535: key = catch-fail(v_534) in
        {147}let v_536: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {148}let v_537: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_534) then (if not-caught-fail(v_535) then (if not-caught-fail(v_536) then symmetricstatepack(v_536,v_535,v_534) else fail-any) else fail-any) else fail-any))) in
        {149}let v_538: symmetricstate = catch-fail((if success?((if not-caught-fail(v_534) then (if not-caught-fail(v_535) then (if not-caught-fail(v_536) then symmetricstatepack(v_536,v_535,v_534) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_537) && success?(is-true(success?(1-proj-3-tuple(v_537))))) then symmetricstatepack(1-proj-3-tuple(v_537),2-proj-3-tuple(v_537),hash(3-proj-3-tuple(v_537),empty)) else fail-any) else fail-any)) in
        {150}let v_539: bitstring = catch-fail(symmetricstateunpack(v_538)) in
        {151}let v_540: symmetricstate = catch-fail((if (not-caught-fail(v_539) && success?(is-true(success?(1-proj-3-tuple(v_539))))) then symmetricstatepack(1-proj-3-tuple(v_539),2-proj-3-tuple(v_539),hash(3-proj-3-tuple(v_539),rs_532)) else fail-any)) in
        {152}let v_541: bitstring = catch-fail(symmetricstateunpack(v_540)) in
        {153}let v_542: symmetricstate = catch-fail((if success?(getpublickey(s_529)) then (if (not-caught-fail(v_541) && success?(is-true(success?(1-proj-3-tuple(v_541))))) then symmetricstatepack(1-proj-3-tuple(v_541),2-proj-3-tuple(v_541),hash(3-proj-3-tuple(v_541),getpublickey(s_529))) else fail-any) else fail-any)) in
        {154}let hs_543: handshakestate = (if not-caught-fail(v_538) then (if not-caught-fail(v_540) then (if not-caught-fail(v_542) then handshakestatepack(v_542,s_529,e_530,rs_532,re_533,empty,false) else fail-any) else fail-any) else fail-any) in
        {155}insert statestore(bob,alice,statepack_a(hs_543))
    ) | (
        {200}get statestore(=bob,=alice,statepack_a(hs_544: handshakestate)) in
        {156}in(pub, message_a_545: bitstring);
        {157}let v_546: bitstring = catch-fail(handshakestateunpack(hs_544)) in
        {158}let v_547: bitstring = catch-fail(deconcat3(message_a_545)) in
        {159}let v_548: bool = catch-fail(true) in
        {160}let v_549: key = catch-fail(1-proj-3-tuple(v_547)) in
        {161}let v_550: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_546))) in
        {162}let v_551: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_546)) then (if (not-caught-fail(v_550) && success?(is-true(success?(1-proj-3-tuple(v_550))))) then symmetricstatepack(1-proj-3-tuple(v_550),2-proj-3-tuple(v_550),hash(3-proj-3-tuple(v_550),v_549)) else fail-any) else fail-any)) in
        {163}let v_552: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_546))) in
        {164}let v_553: bitstring = catch-fail(symmetricstateunpack(v_551)) in
        {165}let v_554: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_553),(if success?(2-proj-7-tuple(v_546)) then (if (not-caught-fail(v_552) && success?(is-true(success?(1-proj-2-tuple(v_552))))) then dhexp(2-proj-2-tuple(v_552),v_549) else fail-any) else fail-any))) in
        {166}let v_555: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_553),(if success?(2-proj-7-tuple(v_546)) then (if (not-caught-fail(v_552) && success?(is-true(success?(1-proj-2-tuple(v_552))))) then dhexp(2-proj-2-tuple(v_552),v_549) else fail-any) else fail-any))) in
        {167}let v_556: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_553),(if success?(2-proj-7-tuple(v_546)) then (if (not-caught-fail(v_552) && success?(is-true(success?(1-proj-2-tuple(v_552))))) then dhexp(2-proj-2-tuple(v_552),v_549) else fail-any) else fail-any))) in
        {168}let v_557: bitstring = catch-fail((if (success?((if success?(2-proj-7-tuple(v_546)) then (if (not-caught-fail(v_552) && success?(is-true(success?(1-proj-2-tuple(v_552))))) then dhexp(2-proj-2-tuple(v_552),v_549) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_553))) then (if not-caught-fail(v_554) then (if not-caught-fail(v_555) then (if not-caught-fail(v_556) then (v_554,v_555,v_556) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {169}let v_558: symmetricstate = catch-fail((if success?((if success?(2-proj-7-tuple(v_546)) then (if (not-caught-fail(v_552) && success?(is-true(success?(1-proj-2-tuple(v_552))))) then dhexp(2-proj-2-tuple(v_552),v_549) else fail-any) else fail-any)) then (if (not-caught-fail(v_553) && success?(is-true(success?(1-proj-3-tuple(v_553))))) then (if (not-caught-fail(v_557) && success?(is-true(success?(1-proj-3-tuple(v_557))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_557)) then cipherstatepack(2-proj-3-tuple(v_557),minnonce) else fail-any),1-proj-3-tuple(v_557),3-proj-3-tuple(v_553)) else fail-any) else fail-any) else fail-any)) in
        {170}let v_559: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_546))) in
        {171}let v_560: bitstring = catch-fail(symmetricstateunpack(v_558)) in
        {172}let v_561: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_560),(if (success?(4-proj-7-tuple(v_546)) && success?(2-proj-7-tuple(v_546))) then (if (not-caught-fail(v_559) && success?(is-true(success?(1-proj-2-tuple(v_559))))) then dhexp(2-proj-2-tuple(v_559),4-proj-7-tuple(v_546)) else fail-any) else fail-any))) in
        {173}let v_562: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_560),(if (success?(4-proj-7-tuple(v_546)) && success?(2-proj-7-tuple(v_546))) then (if (not-caught-fail(v_559) && success?(is-true(success?(1-proj-2-tuple(v_559))))) then dhexp(2-proj-2-tuple(v_559),4-proj-7-tuple(v_546)) else fail-any) else fail-any))) in
        {174}let v_563: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_560),(if (success?(4-proj-7-tuple(v_546)) && success?(2-proj-7-tuple(v_546))) then (if (not-caught-fail(v_559) && success?(is-true(success?(1-proj-2-tuple(v_559))))) then dhexp(2-proj-2-tuple(v_559),4-proj-7-tuple(v_546)) else fail-any) else fail-any))) in
        {175}let v_564: bitstring = catch-fail((if (success?((if (success?(4-proj-7-tuple(v_546)) && success?(2-proj-7-tuple(v_546))) then (if (not-caught-fail(v_559) && success?(is-true(success?(1-proj-2-tuple(v_559))))) then dhexp(2-proj-2-tuple(v_559),4-proj-7-tuple(v_546)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_560))) then (if not-caught-fail(v_561) then (if not-caught-fail(v_562) then (if not-caught-fail(v_563) then (v_561,v_562,v_563) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {176}let v_565: symmetricstate = catch-fail((if success?((if (success?(4-proj-7-tuple(v_546)) && success?(2-proj-7-tuple(v_546))) then (if (not-caught-fail(v_559) && success?(is-true(success?(1-proj-2-tuple(v_559))))) then dhexp(2-proj-2-tuple(v_559),4-proj-7-tuple(v_546)) else fail-any) else fail-any)) then (if (not-caught-fail(v_560) && success?(is-true(success?(1-proj-3-tuple(v_560))))) then (if (not-caught-fail(v_564) && success?(is-true(success?(1-proj-3-tuple(v_564))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_564)) then cipherstatepack(2-proj-3-tuple(v_564),minnonce) else fail-any),1-proj-3-tuple(v_564),3-proj-3-tuple(v_560)) else fail-any) else fail-any) else fail-any)) in
        {177}let v_566: bitstring = catch-fail(symmetricstateunpack(v_565)) in
        {178}let v_567: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_566))) in
        {179}let v_568: aead = catch-fail(decrypt(1-proj-2-tuple(v_567),2-proj-2-tuple(v_567),3-proj-3-tuple(v_566),3-proj-3-tuple(v_547))) in
        {180}let v_569: bitstring = catch-fail(aeadunpack(v_568)) in
        {181}let v_570: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_566))) in
        {182}let v_571: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_567))) && success?(1-proj-3-tuple(v_566))) then (if (not-caught-fail(v_570) && success?(is-true(success?(1-proj-2-tuple(v_570))))) then cipherstatepack(1-proj-2-tuple(v_570),increment_nonce(2-proj-2-tuple(v_567))) else fail-any) else fail-any)) in
        {183}let v_572: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_547)) && (success?(3-proj-3-tuple(v_566)) && success?(1-proj-3-tuple(v_566)))) then (if (not-caught-fail(v_567) && success?(is-true(success?(1-proj-2-tuple(v_567))))) then (if not-caught-fail(v_568) then (if (not-caught-fail(v_569) && success?(is-true(success?(1-proj-3-tuple(v_569))))) then (if not-caught-fail(v_571) then (v_571,3-proj-3-tuple(v_569),1-proj-3-tuple(v_569)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {184}let v_573: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_572),2-proj-3-tuple(v_566),3-proj-3-tuple(v_566)))) in
        {185}let v_574: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_547)) && success?(symmetricstatepack(1-proj-3-tuple(v_572),2-proj-3-tuple(v_566),3-proj-3-tuple(v_566)))) then (if (not-caught-fail(v_573) && success?(is-true(success?(1-proj-3-tuple(v_573))))) then symmetricstatepack(1-proj-3-tuple(v_573),2-proj-3-tuple(v_573),hash(3-proj-3-tuple(v_573),3-proj-3-tuple(v_547))) else fail-any) else fail-any)) in
        {186}let v_575: bitstring = catch-fail((if success?(3-proj-3-tuple(v_547)) then (if (not-caught-fail(v_566) && success?(is-true(success?(1-proj-3-tuple(v_566))))) then (if (not-caught-fail(v_572) && success?(is-true(success?(1-proj-3-tuple(v_572))))) then (if not-caught-fail(v_574) then (v_574,2-proj-3-tuple(v_572),3-proj-3-tuple(v_572)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {187}let v_576: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_575),2-proj-7-tuple(v_546),3-proj-7-tuple(v_546),4-proj-7-tuple(v_546),v_549,6-proj-7-tuple(v_546),7-proj-7-tuple(v_546))) in
        {188}let v_577: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_575))) in
        {189}let v_578: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_577),zero)) in
        {190}let v_579: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_577),zero)) in
        {191}let v_580: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_577),zero)) in
        {192}let v_581: bitstring = catch-fail((if success?(2-proj-3-tuple(v_577)) then (if not-caught-fail(v_578) then (if not-caught-fail(v_579) then (if not-caught-fail(v_580) then (v_578,v_579,v_580) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {193}let v_582: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_581)) then cipherstatepack(1-proj-3-tuple(v_581),minnonce) else fail-any)) in
        {194}let v_583: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_581)) then cipherstatepack(2-proj-3-tuple(v_581),minnonce) else fail-any)) in
        {195}let v_584: bitstring = catch-fail((if success?(1-proj-3-tuple(v_575)) then (if (not-caught-fail(v_577) && success?(is-true(success?(1-proj-3-tuple(v_577))))) then (if (not-caught-fail(v_581) && success?(is-true(success?(1-proj-3-tuple(v_581))))) then (if not-caught-fail(v_582) then (if not-caught-fail(v_583) then (1-proj-3-tuple(v_575),v_582,v_583) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {196}let (hs_585: handshakestate,re_586: key,plaintext_a: bitstring,valid: bool,cs1_587: cipherstate,cs2_588: cipherstate) = (if (not-caught-fail(v_546) && success?(is-true(success?(1-proj-7-tuple(v_546))))) then (if (not-caught-fail(v_547) && success?(is-true(success?(1-proj-3-tuple(v_547))))) then (if not-caught-fail(v_548) then (if not-caught-fail(v_549) then (if not-caught-fail(v_551) then (if not-caught-fail(v_558) then (if not-caught-fail(v_565) then (if (not-caught-fail(v_575) && success?(is-true(success?(1-proj-3-tuple(v_575))))) then (if (v_548 && 3-proj-3-tuple(v_575)) then (if not-caught-fail(v_576) then (if (not-caught-fail(v_584) && success?(is-true(success?(1-proj-3-tuple(v_584))))) then (v_576,getpublickey(3-proj-7-tuple(v_546)),2-proj-3-tuple(v_575),true,2-proj-3-tuple(v_584),3-proj-3-tuple(v_584)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {197}event RecvMsg(bob,alice,stage_a,plaintext_a,valid);
        {198}insert statestore(bob,alice,statepack_b(hs_585));
        {199}event RecvEnd(valid)
    ) | (
        {201}event LeakS(phase0,bob);
        {202}out(pub, key_s(bob))
    ) | (
        {203}phase 1;
        {204}event LeakS(phase1,bob);
        {205}out(pub, key_s(bob))
    )
) | (
    {206}let v_589: key = catch-fail(dhexp(key_s(bob),g)) in
    {207}let s_590: keypair = (if not-caught-fail(v_589) then keypairpack(v_589,key_s(bob)) else fail-any) in
    {208}out(pub, getpublickey(s_590));
    (
        {209}let e_591: keypair = keypairpack(empty,empty) in
        {210}let v_592: key = catch-fail(dhexp(key_s(charlie),g)) in
        {211}let rs_593: key = getpublickey((if not-caught-fail(v_592) then keypairpack(v_592,key_s(charlie)) else fail-any)) in
        {212}let re_594: key = empty in
        {213}let v_595: bitstring = catch-fail(hash(somename,empty)) in
        {214}let v_596: key = catch-fail(v_595) in
        {215}let v_597: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {216}let v_598: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_595) then (if not-caught-fail(v_596) then (if not-caught-fail(v_597) then symmetricstatepack(v_597,v_596,v_595) else fail-any) else fail-any) else fail-any))) in
        {217}let v_599: symmetricstate = catch-fail((if success?((if not-caught-fail(v_595) then (if not-caught-fail(v_596) then (if not-caught-fail(v_597) then symmetricstatepack(v_597,v_596,v_595) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_598) && success?(is-true(success?(1-proj-3-tuple(v_598))))) then symmetricstatepack(1-proj-3-tuple(v_598),2-proj-3-tuple(v_598),hash(3-proj-3-tuple(v_598),empty)) else fail-any) else fail-any)) in
        {218}let v_600: bitstring = catch-fail(symmetricstateunpack(v_599)) in
        {219}let v_601: symmetricstate = catch-fail((if (not-caught-fail(v_600) && success?(is-true(success?(1-proj-3-tuple(v_600))))) then symmetricstatepack(1-proj-3-tuple(v_600),2-proj-3-tuple(v_600),hash(3-proj-3-tuple(v_600),rs_593)) else fail-any)) in
        {220}let v_602: bitstring = catch-fail(symmetricstateunpack(v_601)) in
        {221}let v_603: symmetricstate = catch-fail((if success?(getpublickey(s_590)) then (if (not-caught-fail(v_602) && success?(is-true(success?(1-proj-3-tuple(v_602))))) then symmetricstatepack(1-proj-3-tuple(v_602),2-proj-3-tuple(v_602),hash(3-proj-3-tuple(v_602),getpublickey(s_590))) else fail-any) else fail-any)) in
        {222}let hs_604: handshakestate = (if not-caught-fail(v_599) then (if not-caught-fail(v_601) then (if not-caught-fail(v_603) then handshakestatepack(v_603,s_590,e_591,rs_593,re_594,empty,false) else fail-any) else fail-any) else fail-any) in
        {223}insert statestore(bob,charlie,statepack_a(hs_604))
    ) | (
        {268}get statestore(=bob,=charlie,statepack_a(hs_605: handshakestate)) in
        {224}in(pub, message_a_606: bitstring);
        {225}let v_607: bitstring = catch-fail(handshakestateunpack(hs_605)) in
        {226}let v_608: bitstring = catch-fail(deconcat3(message_a_606)) in
        {227}let v_609: bool = catch-fail(true) in
        {228}let v_610: key = catch-fail(1-proj-3-tuple(v_608)) in
        {229}let v_611: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_607))) in
        {230}let v_612: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_607)) then (if (not-caught-fail(v_611) && success?(is-true(success?(1-proj-3-tuple(v_611))))) then symmetricstatepack(1-proj-3-tuple(v_611),2-proj-3-tuple(v_611),hash(3-proj-3-tuple(v_611),v_610)) else fail-any) else fail-any)) in
        {231}let v_613: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_607))) in
        {232}let v_614: bitstring = catch-fail(symmetricstateunpack(v_612)) in
        {233}let v_615: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_614),(if success?(2-proj-7-tuple(v_607)) then (if (not-caught-fail(v_613) && success?(is-true(success?(1-proj-2-tuple(v_613))))) then dhexp(2-proj-2-tuple(v_613),v_610) else fail-any) else fail-any))) in
        {234}let v_616: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_614),(if success?(2-proj-7-tuple(v_607)) then (if (not-caught-fail(v_613) && success?(is-true(success?(1-proj-2-tuple(v_613))))) then dhexp(2-proj-2-tuple(v_613),v_610) else fail-any) else fail-any))) in
        {235}let v_617: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_614),(if success?(2-proj-7-tuple(v_607)) then (if (not-caught-fail(v_613) && success?(is-true(success?(1-proj-2-tuple(v_613))))) then dhexp(2-proj-2-tuple(v_613),v_610) else fail-any) else fail-any))) in
        {236}let v_618: bitstring = catch-fail((if (success?((if success?(2-proj-7-tuple(v_607)) then (if (not-caught-fail(v_613) && success?(is-true(success?(1-proj-2-tuple(v_613))))) then dhexp(2-proj-2-tuple(v_613),v_610) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_614))) then (if not-caught-fail(v_615) then (if not-caught-fail(v_616) then (if not-caught-fail(v_617) then (v_615,v_616,v_617) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {237}let v_619: symmetricstate = catch-fail((if success?((if success?(2-proj-7-tuple(v_607)) then (if (not-caught-fail(v_613) && success?(is-true(success?(1-proj-2-tuple(v_613))))) then dhexp(2-proj-2-tuple(v_613),v_610) else fail-any) else fail-any)) then (if (not-caught-fail(v_614) && success?(is-true(success?(1-proj-3-tuple(v_614))))) then (if (not-caught-fail(v_618) && success?(is-true(success?(1-proj-3-tuple(v_618))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_618)) then cipherstatepack(2-proj-3-tuple(v_618),minnonce) else fail-any),1-proj-3-tuple(v_618),3-proj-3-tuple(v_614)) else fail-any) else fail-any) else fail-any)) in
        {238}let v_620: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_607))) in
        {239}let v_621: bitstring = catch-fail(symmetricstateunpack(v_619)) in
        {240}let v_622: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_621),(if (success?(4-proj-7-tuple(v_607)) && success?(2-proj-7-tuple(v_607))) then (if (not-caught-fail(v_620) && success?(is-true(success?(1-proj-2-tuple(v_620))))) then dhexp(2-proj-2-tuple(v_620),4-proj-7-tuple(v_607)) else fail-any) else fail-any))) in
        {241}let v_623: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_621),(if (success?(4-proj-7-tuple(v_607)) && success?(2-proj-7-tuple(v_607))) then (if (not-caught-fail(v_620) && success?(is-true(success?(1-proj-2-tuple(v_620))))) then dhexp(2-proj-2-tuple(v_620),4-proj-7-tuple(v_607)) else fail-any) else fail-any))) in
        {242}let v_624: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_621),(if (success?(4-proj-7-tuple(v_607)) && success?(2-proj-7-tuple(v_607))) then (if (not-caught-fail(v_620) && success?(is-true(success?(1-proj-2-tuple(v_620))))) then dhexp(2-proj-2-tuple(v_620),4-proj-7-tuple(v_607)) else fail-any) else fail-any))) in
        {243}let v_625: bitstring = catch-fail((if (success?((if (success?(4-proj-7-tuple(v_607)) && success?(2-proj-7-tuple(v_607))) then (if (not-caught-fail(v_620) && success?(is-true(success?(1-proj-2-tuple(v_620))))) then dhexp(2-proj-2-tuple(v_620),4-proj-7-tuple(v_607)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_621))) then (if not-caught-fail(v_622) then (if not-caught-fail(v_623) then (if not-caught-fail(v_624) then (v_622,v_623,v_624) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {244}let v_626: symmetricstate = catch-fail((if success?((if (success?(4-proj-7-tuple(v_607)) && success?(2-proj-7-tuple(v_607))) then (if (not-caught-fail(v_620) && success?(is-true(success?(1-proj-2-tuple(v_620))))) then dhexp(2-proj-2-tuple(v_620),4-proj-7-tuple(v_607)) else fail-any) else fail-any)) then (if (not-caught-fail(v_621) && success?(is-true(success?(1-proj-3-tuple(v_621))))) then (if (not-caught-fail(v_625) && success?(is-true(success?(1-proj-3-tuple(v_625))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_625)) then cipherstatepack(2-proj-3-tuple(v_625),minnonce) else fail-any),1-proj-3-tuple(v_625),3-proj-3-tuple(v_621)) else fail-any) else fail-any) else fail-any)) in
        {245}let v_627: bitstring = catch-fail(symmetricstateunpack(v_626)) in
        {246}let v_628: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_627))) in
        {247}let v_629: aead = catch-fail(decrypt(1-proj-2-tuple(v_628),2-proj-2-tuple(v_628),3-proj-3-tuple(v_627),3-proj-3-tuple(v_608))) in
        {248}let v_630: bitstring = catch-fail(aeadunpack(v_629)) in
        {249}let v_631: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_627))) in
        {250}let v_632: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_628))) && success?(1-proj-3-tuple(v_627))) then (if (not-caught-fail(v_631) && success?(is-true(success?(1-proj-2-tuple(v_631))))) then cipherstatepack(1-proj-2-tuple(v_631),increment_nonce(2-proj-2-tuple(v_628))) else fail-any) else fail-any)) in
        {251}let v_633: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_608)) && (success?(3-proj-3-tuple(v_627)) && success?(1-proj-3-tuple(v_627)))) then (if (not-caught-fail(v_628) && success?(is-true(success?(1-proj-2-tuple(v_628))))) then (if not-caught-fail(v_629) then (if (not-caught-fail(v_630) && success?(is-true(success?(1-proj-3-tuple(v_630))))) then (if not-caught-fail(v_632) then (v_632,3-proj-3-tuple(v_630),1-proj-3-tuple(v_630)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {252}let v_634: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_633),2-proj-3-tuple(v_627),3-proj-3-tuple(v_627)))) in
        {253}let v_635: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_608)) && success?(symmetricstatepack(1-proj-3-tuple(v_633),2-proj-3-tuple(v_627),3-proj-3-tuple(v_627)))) then (if (not-caught-fail(v_634) && success?(is-true(success?(1-proj-3-tuple(v_634))))) then symmetricstatepack(1-proj-3-tuple(v_634),2-proj-3-tuple(v_634),hash(3-proj-3-tuple(v_634),3-proj-3-tuple(v_608))) else fail-any) else fail-any)) in
        {254}let v_636: bitstring = catch-fail((if success?(3-proj-3-tuple(v_608)) then (if (not-caught-fail(v_627) && success?(is-true(success?(1-proj-3-tuple(v_627))))) then (if (not-caught-fail(v_633) && success?(is-true(success?(1-proj-3-tuple(v_633))))) then (if not-caught-fail(v_635) then (v_635,2-proj-3-tuple(v_633),3-proj-3-tuple(v_633)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {255}let v_637: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_636),2-proj-7-tuple(v_607),3-proj-7-tuple(v_607),4-proj-7-tuple(v_607),v_610,6-proj-7-tuple(v_607),7-proj-7-tuple(v_607))) in
        {256}let v_638: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_636))) in
        {257}let v_639: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_638),zero)) in
        {258}let v_640: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_638),zero)) in
        {259}let v_641: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_638),zero)) in
        {260}let v_642: bitstring = catch-fail((if success?(2-proj-3-tuple(v_638)) then (if not-caught-fail(v_639) then (if not-caught-fail(v_640) then (if not-caught-fail(v_641) then (v_639,v_640,v_641) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {261}let v_643: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_642)) then cipherstatepack(1-proj-3-tuple(v_642),minnonce) else fail-any)) in
        {262}let v_644: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_642)) then cipherstatepack(2-proj-3-tuple(v_642),minnonce) else fail-any)) in
        {263}let v_645: bitstring = catch-fail((if success?(1-proj-3-tuple(v_636)) then (if (not-caught-fail(v_638) && success?(is-true(success?(1-proj-3-tuple(v_638))))) then (if (not-caught-fail(v_642) && success?(is-true(success?(1-proj-3-tuple(v_642))))) then (if not-caught-fail(v_643) then (if not-caught-fail(v_644) then (1-proj-3-tuple(v_636),v_643,v_644) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {264}let (hs_646: handshakestate,re_647: key,plaintext_a_648: bitstring,valid_649: bool,cs1_650: cipherstate,cs2_651: cipherstate) = (if (not-caught-fail(v_607) && success?(is-true(success?(1-proj-7-tuple(v_607))))) then (if (not-caught-fail(v_608) && success?(is-true(success?(1-proj-3-tuple(v_608))))) then (if not-caught-fail(v_609) then (if not-caught-fail(v_610) then (if not-caught-fail(v_612) then (if not-caught-fail(v_619) then (if not-caught-fail(v_626) then (if (not-caught-fail(v_636) && success?(is-true(success?(1-proj-3-tuple(v_636))))) then (if (v_609 && 3-proj-3-tuple(v_636)) then (if not-caught-fail(v_637) then (if (not-caught-fail(v_645) && success?(is-true(success?(1-proj-3-tuple(v_645))))) then (v_637,getpublickey(3-proj-7-tuple(v_607)),2-proj-3-tuple(v_636),true,2-proj-3-tuple(v_645),3-proj-3-tuple(v_645)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {265}event RecvMsg(bob,charlie,stage_a,plaintext_a_648,valid_649);
        {266}insert statestore(bob,charlie,statepack_b(hs_646));
        {267}event RecvEnd(valid_649)
    ) | (
        {269}event LeakS(phase0,bob);
        {270}out(pub, key_s(bob))
    ) | (
        {271}phase 1;
        {272}event LeakS(phase1,bob);
        {273}out(pub, key_s(bob))
    )
) | (
    {274}out(pub, (key_s(charlie),key_e(charlie,alice),key_e(charlie,bob)))
)

-- Query event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)); event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,c_654,stage_a,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,c_654,stage_a,m,true)) || event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)) || event(LeakS(phase0,alice)); not attacker_p1(msg_a(alice,bob)); attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob)); attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice))); attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)); not event(RecvEnd(true))
Completing...
200 rules inserted. The rule base contains 200 rules. 153 rules in the queue.
400 rules inserted. The rule base contains 396 rules. 109 rules in the queue.
600 rules inserted. The rule base contains 578 rules. 55 rules in the queue.
800 rules inserted. The rule base contains 778 rules. 90 rules in the queue.
1000 rules inserted. The rule base contains 978 rules. 143 rules in the queue.
1200 rules inserted. The rule base contains 1121 rules. 202 rules in the queue.
1400 rules inserted. The rule base contains 1226 rules. 183 rules in the queue.
1600 rules inserted. The rule base contains 1318 rules. 159 rules in the queue.
1800 rules inserted. The rule base contains 1280 rules. 126 rules in the queue.
2000 rules inserted. The rule base contains 1268 rules. 85 rules in the queue.
Starting query event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true))
goal reachable: begin(LeakS(phase0,bob)) && attacker(m_626609086) -> end(RecvMsg(bob,alice,stage_a,m_626609086,true))

1. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) may be inserted in a table at insert {155}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false)))).

2. We assume as hypothesis that
attacker(m_626609143).

3. Using the function pub the attacker may obtain pub.
attacker(pub).

4. The message dhexp(key_s(alice),g) may be sent on channel pub at output {4}.
mess(pub,dhexp(key_s(alice),g)).

5. By 3, the attacker may have the channel pub.
By 4, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

6. The message dhexp(key_s(bob),g) may be sent on channel pub at output {140}.
mess(pub,dhexp(key_s(bob),g)).

7. By 3, the attacker may have the channel pub.
By 6, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

8. Using the function empty the attacker may obtain empty.
attacker(empty).

9. Using the function somename the attacker may obtain somename.
attacker(somename).

10. By 9, the attacker may know somename.
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

11. By 10, the attacker may know hash(somename,empty).
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

12. By 11, the attacker may know hash(hash(somename,empty),empty).
By 5, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

13. By 12, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 7, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

14. By 13, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 5, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g))).

15. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

16. The event LeakS(phase0,bob) may be executed at {201}.
So the message key_s(bob) may be sent on channel pub at output {202}.
mess(pub,key_s(bob)).

17. By 3, the attacker may have the channel pub.
By 16, the message key_s(bob) may be sent on this channel.
So the attacker may obtain the message key_s(bob) by listening on this channel.
attacker(key_s(bob)).

18. By 17, the attacker may know key_s(bob).
By 5, the attacker may know dhexp(key_s(alice),g).
Using the function dhexp the attacker may obtain dhexp(key_s(bob),dhexp(key_s(alice),g)).
attacker(dhexp(key_s(bob),dhexp(key_s(alice),g))).

19. By 10, the attacker may know hash(somename,empty).
By 18, the attacker may know dhexp(key_s(bob),dhexp(key_s(alice),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g))).
attacker(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g)))).

20. By 19, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g))).
By 18, the attacker may know dhexp(key_s(bob),dhexp(key_s(alice),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))).
attacker(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g)))).

21. By 20, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))).
By 15, the attacker may know minnonce.
By 14, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)).
By 2, the attacker may know m_626609143.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),m_626609143).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),m_626609143)).

22. The attacker has some term b_626609129.
attacker(b_626609129).

23. By 5, the attacker may know dhexp(key_s(alice),g).
By 22, the attacker may know b_626609129.
By 21, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),m_626609143).
Using the function concat3 the attacker may obtain concat3(dhexp(key_s(alice),g),b_626609129,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),m_626609143)).
attacker(concat3(dhexp(key_s(alice),g),b_626609129,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),m_626609143))).

24. By 3, the attacker may have the channel pub.
By 23, the attacker may have the message concat3(dhexp(key_s(alice),g),b_626609129,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),m_626609143)).
So the attacker may send this message on this channel.
mess(pub,concat3(dhexp(key_s(alice),g),b_626609129,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),m_626609143))).

25. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 1 may be read at get {200}.
The message concat3(dhexp(key_s(alice),g),b_626609129,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),m_626609143)) that may be sent on channel pub by 24 may be received at input {156}.
We have dhexp(key_s(alice),g) <> caught-fail.
So event RecvMsg(bob,alice,stage_a,m_626609143,true) may be executed at {197}.
end(RecvMsg(bob,alice,stage_a,m_626609143,true)).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(pub, (~M_626610420,~M_626610421,~M_626610422)) with ~M_626610420 = key_s(charlie), ~M_626610421 = key_e(charlie,alice), ~M_626610422 = key_e(charlie,bob) at {274} in copy a_626609150

out(pub, ~M_626610553) with ~M_626610553 = dhexp(key_s(bob),g) at {208} in copy a_626609150

insert statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(charlie),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,false))) at {223} in copy a_626609150

out(pub, ~M_626610890) with ~M_626610890 = dhexp(key_s(bob),g) at {140} in copy a_626609150

insert statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) at {155} in copy a_626609150

out(pub, ~M_626611225) with ~M_626611225 = dhexp(key_s(alice),g) at {72} in copy a_626609150

insert statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,true))) at {87} in copy a_626609150

out(pub, ~M_626611560) with ~M_626611560 = dhexp(key_s(alice),g) at {4} in copy a_626609150

insert statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) at {19} in copy a_626609150

out(pub, (~M_626611769,~M_626611770,~M_626611771)) with ~M_626611769 = key_s(charlie), ~M_626611770 = key_e(charlie,alice), ~M_626611771 = key_e(charlie,bob) at {274} in copy a_626609149

out(pub, ~M_626611902) with ~M_626611902 = dhexp(key_s(bob),g) at {208} in copy a_626609149

insert statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(charlie),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,false))) at {223} in copy a_626609149

out(pub, ~M_626612239) with ~M_626612239 = dhexp(key_s(bob),g) at {140} in copy a_626609149

insert statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) at {155} in copy a_626609149

out(pub, ~M_626612574) with ~M_626612574 = dhexp(key_s(alice),g) at {72} in copy a_626609149

insert statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,true))) at {87} in copy a_626609149

out(pub, ~M_626612909) with ~M_626612909 = dhexp(key_s(alice),g) at {4} in copy a_626609149

insert statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) at {19} in copy a_626609149

out(pub, (~M_626613118,~M_626613119,~M_626613120)) with ~M_626613118 = key_s(charlie), ~M_626613119 = key_e(charlie,alice), ~M_626613120 = key_e(charlie,bob) at {274} in copy a_626609148

out(pub, ~M_626613251) with ~M_626613251 = dhexp(key_s(bob),g) at {208} in copy a_626609148

insert statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(charlie),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,false))) at {223} in copy a_626609148

out(pub, ~M_626613588) with ~M_626613588 = dhexp(key_s(bob),g) at {140} in copy a_626609148

insert statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) at {155} in copy a_626609148

out(pub, ~M_626613923) with ~M_626613923 = dhexp(key_s(alice),g) at {72} in copy a_626609148

insert statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,true))) at {87} in copy a_626609148

out(pub, ~M_626614258) with ~M_626614258 = dhexp(key_s(alice),g) at {4} in copy a_626609148

insert statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) at {19} in copy a_626609148

out(pub, (~M_626614467,~M_626614468,~M_626614469)) with ~M_626614467 = key_s(charlie), ~M_626614468 = key_e(charlie,alice), ~M_626614469 = key_e(charlie,bob) at {274} in copy a_626609147

out(pub, ~M_626614600) with ~M_626614600 = dhexp(key_s(bob),g) at {208} in copy a_626609147

insert statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(charlie),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,false))) at {223} in copy a_626609147

out(pub, ~M_626614937) with ~M_626614937 = dhexp(key_s(bob),g) at {140} in copy a_626609147

insert statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) at {155} in copy a_626609147

out(pub, ~M_626615272) with ~M_626615272 = dhexp(key_s(alice),g) at {72} in copy a_626609147

insert statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,true))) at {87} in copy a_626609147

out(pub, ~M_626615607) with ~M_626615607 = dhexp(key_s(alice),g) at {4} in copy a_626609147

insert statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) at {19} in copy a_626609147

out(pub, (~M_626615816,~M_626615817,~M_626615818)) with ~M_626615816 = key_s(charlie), ~M_626615817 = key_e(charlie,alice), ~M_626615818 = key_e(charlie,bob) at {274} in copy a_626609146

out(pub, ~M_626615949) with ~M_626615949 = dhexp(key_s(bob),g) at {208} in copy a_626609146

insert statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(charlie),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,false))) at {223} in copy a_626609146

out(pub, ~M_626616286) with ~M_626616286 = dhexp(key_s(bob),g) at {140} in copy a_626609146

event LeakS(phase0,bob) at {201} in copy a_626609146

out(pub, ~M_626616288) with ~M_626616288 = key_s(bob) at {202} in copy a_626609146

insert statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) at {155} in copy a_626609146

out(pub, ~M_626616623) with ~M_626616623 = dhexp(key_s(alice),g) at {72} in copy a_626609146

insert statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,true))) at {87} in copy a_626609146

out(pub, ~M_626616958) with ~M_626616958 = dhexp(key_s(alice),g) at {4} in copy a_626609146

insert statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) at {19} in copy a_626609146

get statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) at {200} in copy a_626609150

in(pub, concat3(~M_626611225,a_626609145,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(~M_626616288,~M_626611225)),dhexp(~M_626616288,~M_626611225)),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),~M_626611225),~M_626610553),~M_626611225),a_626609144))) with ~M_626611225 = dhexp(key_s(alice),g), encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(~M_626616288,~M_626611225)),dhexp(~M_626616288,~M_626611225)),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),~M_626611225),~M_626610553),~M_626611225),a_626609144) = encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),a_626609144) at {156} in copy a_626609150

event RecvMsg(bob,alice,stage_a,a_626609144,true) at {197} in copy a_626609150 (goal)

The event RecvMsg(bob,alice,stage_a,a_626609144,true) is executed.
A trace has been found.
RESULT event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)) is false.
Starting query event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,c_654,stage_a,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(LeakS(phase0,bob)) && attacker(m_626619167) -> end(RecvMsg(bob,alice,stage_a,m_626619167,true))
goal reachable: begin(LeakS(phase0,alice)) && attacker(m_626619169) -> end(RecvMsg(bob,alice,stage_a,m_626619169,true))
goal reachable: begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(bob,alice,stage_a,msg_a(alice,bob),true))
RESULT event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,c_654,stage_a,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,c_654,stage_a,m,true)) || event(LeakS(phase0,alice))
goal reachable: begin(LeakS(phase0,bob)) && attacker(m_626619177) -> end(RecvMsg(bob,alice,stage_a,m_626619177,true))

1. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) may be inserted in a table at insert {155}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false)))).

2. We assume as hypothesis that
attacker(m_626619235).

3. Using the function pub the attacker may obtain pub.
attacker(pub).

4. The message dhexp(key_s(alice),g) may be sent on channel pub at output {4}.
mess(pub,dhexp(key_s(alice),g)).

5. By 3, the attacker may have the channel pub.
By 4, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

6. The message dhexp(key_s(bob),g) may be sent on channel pub at output {140}.
mess(pub,dhexp(key_s(bob),g)).

7. By 3, the attacker may have the channel pub.
By 6, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

8. Using the function empty the attacker may obtain empty.
attacker(empty).

9. Using the function somename the attacker may obtain somename.
attacker(somename).

10. By 9, the attacker may know somename.
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

11. By 10, the attacker may know hash(somename,empty).
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

12. By 11, the attacker may know hash(hash(somename,empty),empty).
By 5, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

13. By 12, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 7, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

14. By 13, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 5, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g))).

15. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

16. The event LeakS(phase0,bob) may be executed at {201}.
So the message key_s(bob) may be sent on channel pub at output {202}.
mess(pub,key_s(bob)).

17. By 3, the attacker may have the channel pub.
By 16, the message key_s(bob) may be sent on this channel.
So the attacker may obtain the message key_s(bob) by listening on this channel.
attacker(key_s(bob)).

18. By 17, the attacker may know key_s(bob).
By 5, the attacker may know dhexp(key_s(alice),g).
Using the function dhexp the attacker may obtain dhexp(key_s(bob),dhexp(key_s(alice),g)).
attacker(dhexp(key_s(bob),dhexp(key_s(alice),g))).

19. By 10, the attacker may know hash(somename,empty).
By 18, the attacker may know dhexp(key_s(bob),dhexp(key_s(alice),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g))).
attacker(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g)))).

20. By 19, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g))).
By 18, the attacker may know dhexp(key_s(bob),dhexp(key_s(alice),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))).
attacker(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g)))).

21. By 20, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))).
By 15, the attacker may know minnonce.
By 14, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)).
By 2, the attacker may know m_626619235.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),m_626619235).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),m_626619235)).

22. The attacker has some term b_626619221.
attacker(b_626619221).

23. By 5, the attacker may know dhexp(key_s(alice),g).
By 22, the attacker may know b_626619221.
By 21, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),m_626619235).
Using the function concat3 the attacker may obtain concat3(dhexp(key_s(alice),g),b_626619221,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),m_626619235)).
attacker(concat3(dhexp(key_s(alice),g),b_626619221,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),m_626619235))).

24. By 3, the attacker may have the channel pub.
By 23, the attacker may have the message concat3(dhexp(key_s(alice),g),b_626619221,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),m_626619235)).
So the attacker may send this message on this channel.
mess(pub,concat3(dhexp(key_s(alice),g),b_626619221,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),m_626619235))).

25. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 1 may be read at get {200}.
The message concat3(dhexp(key_s(alice),g),b_626619221,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),m_626619235)) that may be sent on channel pub by 24 may be received at input {156}.
We have dhexp(key_s(alice),g) <> caught-fail.
So event RecvMsg(bob,alice,stage_a,m_626619235,true) may be executed at {197}.
end(RecvMsg(bob,alice,stage_a,m_626619235,true)).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(pub, (~M_626620516,~M_626620517,~M_626620518)) with ~M_626620516 = key_s(charlie), ~M_626620517 = key_e(charlie,alice), ~M_626620518 = key_e(charlie,bob) at {274} in copy a_626619242

out(pub, ~M_626620649) with ~M_626620649 = dhexp(key_s(bob),g) at {208} in copy a_626619242

insert statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(charlie),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,false))) at {223} in copy a_626619242

out(pub, ~M_626620986) with ~M_626620986 = dhexp(key_s(bob),g) at {140} in copy a_626619242

insert statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) at {155} in copy a_626619242

out(pub, ~M_626621321) with ~M_626621321 = dhexp(key_s(alice),g) at {72} in copy a_626619242

insert statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,true))) at {87} in copy a_626619242

out(pub, ~M_626621656) with ~M_626621656 = dhexp(key_s(alice),g) at {4} in copy a_626619242

insert statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) at {19} in copy a_626619242

out(pub, (~M_626621865,~M_626621866,~M_626621867)) with ~M_626621865 = key_s(charlie), ~M_626621866 = key_e(charlie,alice), ~M_626621867 = key_e(charlie,bob) at {274} in copy a_626619241

out(pub, ~M_626621998) with ~M_626621998 = dhexp(key_s(bob),g) at {208} in copy a_626619241

insert statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(charlie),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,false))) at {223} in copy a_626619241

out(pub, ~M_626622335) with ~M_626622335 = dhexp(key_s(bob),g) at {140} in copy a_626619241

insert statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) at {155} in copy a_626619241

out(pub, ~M_626622670) with ~M_626622670 = dhexp(key_s(alice),g) at {72} in copy a_626619241

insert statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,true))) at {87} in copy a_626619241

out(pub, ~M_626623005) with ~M_626623005 = dhexp(key_s(alice),g) at {4} in copy a_626619241

insert statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) at {19} in copy a_626619241

out(pub, (~M_626623214,~M_626623215,~M_626623216)) with ~M_626623214 = key_s(charlie), ~M_626623215 = key_e(charlie,alice), ~M_626623216 = key_e(charlie,bob) at {274} in copy a_626619240

out(pub, ~M_626623347) with ~M_626623347 = dhexp(key_s(bob),g) at {208} in copy a_626619240

insert statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(charlie),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,false))) at {223} in copy a_626619240

out(pub, ~M_626623684) with ~M_626623684 = dhexp(key_s(bob),g) at {140} in copy a_626619240

insert statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) at {155} in copy a_626619240

out(pub, ~M_626624019) with ~M_626624019 = dhexp(key_s(alice),g) at {72} in copy a_626619240

insert statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,true))) at {87} in copy a_626619240

out(pub, ~M_626624354) with ~M_626624354 = dhexp(key_s(alice),g) at {4} in copy a_626619240

insert statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) at {19} in copy a_626619240

out(pub, (~M_626624563,~M_626624564,~M_626624565)) with ~M_626624563 = key_s(charlie), ~M_626624564 = key_e(charlie,alice), ~M_626624565 = key_e(charlie,bob) at {274} in copy a_626619239

out(pub, ~M_626624696) with ~M_626624696 = dhexp(key_s(bob),g) at {208} in copy a_626619239

insert statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(charlie),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,false))) at {223} in copy a_626619239

out(pub, ~M_626625033) with ~M_626625033 = dhexp(key_s(bob),g) at {140} in copy a_626619239

insert statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) at {155} in copy a_626619239

out(pub, ~M_626625368) with ~M_626625368 = dhexp(key_s(alice),g) at {72} in copy a_626619239

insert statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,true))) at {87} in copy a_626619239

out(pub, ~M_626625703) with ~M_626625703 = dhexp(key_s(alice),g) at {4} in copy a_626619239

insert statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) at {19} in copy a_626619239

out(pub, (~M_626625912,~M_626625913,~M_626625914)) with ~M_626625912 = key_s(charlie), ~M_626625913 = key_e(charlie,alice), ~M_626625914 = key_e(charlie,bob) at {274} in copy a_626619238

out(pub, ~M_626626045) with ~M_626626045 = dhexp(key_s(bob),g) at {208} in copy a_626619238

insert statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(charlie),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,false))) at {223} in copy a_626619238

out(pub, ~M_626626382) with ~M_626626382 = dhexp(key_s(bob),g) at {140} in copy a_626619238

event LeakS(phase0,bob) at {201} in copy a_626619238

out(pub, ~M_626626384) with ~M_626626384 = key_s(bob) at {202} in copy a_626619238

insert statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) at {155} in copy a_626619238

out(pub, ~M_626626719) with ~M_626626719 = dhexp(key_s(alice),g) at {72} in copy a_626619238

insert statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,true))) at {87} in copy a_626619238

out(pub, ~M_626627054) with ~M_626627054 = dhexp(key_s(alice),g) at {4} in copy a_626619238

insert statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) at {19} in copy a_626619238

get statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) at {200} in copy a_626619242

in(pub, concat3(~M_626621321,a_626619237,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(~M_626626384,~M_626621321)),dhexp(~M_626626384,~M_626621321)),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),~M_626621321),~M_626620649),~M_626621321),a_626619236))) with ~M_626621321 = dhexp(key_s(alice),g), encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(~M_626626384,~M_626621321)),dhexp(~M_626626384,~M_626621321)),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),~M_626621321),~M_626620649),~M_626621321),a_626619236) = encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),a_626619236) at {156} in copy a_626619242

event RecvMsg(bob,alice,stage_a,a_626619236,true) at {197} in copy a_626619242 (goal)

The event RecvMsg(bob,alice,stage_a,a_626619236,true) is executed.
A trace has been found.
RESULT event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,c_654,stage_a,m,true)) || event(LeakS(phase0,alice)) is false.
Starting query event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(LeakS(phase0,bob)) && attacker(m_626629263) -> end(RecvMsg(bob,alice,stage_a,m_626629263,true))
goal reachable: begin(LeakS(phase0,alice)) && attacker(m_626629265) -> end(RecvMsg(bob,alice,stage_a,m_626629265,true))
goal reachable: begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(bob,alice,stage_a,msg_a(alice,bob),true))
RESULT event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)) || event(LeakS(phase0,alice))
goal reachable: begin(LeakS(phase0,bob)) && attacker(m_626629272) -> end(RecvMsg(bob,alice,stage_a,m_626629272,true))

1. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) may be inserted in a table at insert {155}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false)))).

2. We assume as hypothesis that
attacker(m_626629329).

3. Using the function pub the attacker may obtain pub.
attacker(pub).

4. The message dhexp(key_s(alice),g) may be sent on channel pub at output {4}.
mess(pub,dhexp(key_s(alice),g)).

5. By 3, the attacker may have the channel pub.
By 4, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

6. The message dhexp(key_s(bob),g) may be sent on channel pub at output {140}.
mess(pub,dhexp(key_s(bob),g)).

7. By 3, the attacker may have the channel pub.
By 6, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

8. Using the function empty the attacker may obtain empty.
attacker(empty).

9. Using the function somename the attacker may obtain somename.
attacker(somename).

10. By 9, the attacker may know somename.
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

11. By 10, the attacker may know hash(somename,empty).
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

12. By 11, the attacker may know hash(hash(somename,empty),empty).
By 5, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

13. By 12, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 7, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

14. By 13, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 5, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g))).

15. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

16. The event LeakS(phase0,bob) may be executed at {201}.
So the message key_s(bob) may be sent on channel pub at output {202}.
mess(pub,key_s(bob)).

17. By 3, the attacker may have the channel pub.
By 16, the message key_s(bob) may be sent on this channel.
So the attacker may obtain the message key_s(bob) by listening on this channel.
attacker(key_s(bob)).

18. By 17, the attacker may know key_s(bob).
By 5, the attacker may know dhexp(key_s(alice),g).
Using the function dhexp the attacker may obtain dhexp(key_s(bob),dhexp(key_s(alice),g)).
attacker(dhexp(key_s(bob),dhexp(key_s(alice),g))).

19. By 10, the attacker may know hash(somename,empty).
By 18, the attacker may know dhexp(key_s(bob),dhexp(key_s(alice),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g))).
attacker(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g)))).

20. By 19, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g))).
By 18, the attacker may know dhexp(key_s(bob),dhexp(key_s(alice),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))).
attacker(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g)))).

21. By 20, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))).
By 15, the attacker may know minnonce.
By 14, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)).
By 2, the attacker may know m_626629329.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),m_626629329).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),m_626629329)).

22. The attacker has some term b_626629315.
attacker(b_626629315).

23. By 5, the attacker may know dhexp(key_s(alice),g).
By 22, the attacker may know b_626629315.
By 21, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),m_626629329).
Using the function concat3 the attacker may obtain concat3(dhexp(key_s(alice),g),b_626629315,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),m_626629329)).
attacker(concat3(dhexp(key_s(alice),g),b_626629315,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),m_626629329))).

24. By 3, the attacker may have the channel pub.
By 23, the attacker may have the message concat3(dhexp(key_s(alice),g),b_626629315,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),m_626629329)).
So the attacker may send this message on this channel.
mess(pub,concat3(dhexp(key_s(alice),g),b_626629315,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),m_626629329))).

25. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 1 may be read at get {200}.
The message concat3(dhexp(key_s(alice),g),b_626629315,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),m_626629329)) that may be sent on channel pub by 24 may be received at input {156}.
We have dhexp(key_s(alice),g) <> caught-fail.
So event RecvMsg(bob,alice,stage_a,m_626629329,true) may be executed at {197}.
end(RecvMsg(bob,alice,stage_a,m_626629329,true)).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(pub, (~M_626630610,~M_626630611,~M_626630612)) with ~M_626630610 = key_s(charlie), ~M_626630611 = key_e(charlie,alice), ~M_626630612 = key_e(charlie,bob) at {274} in copy a_626629336

out(pub, ~M_626630743) with ~M_626630743 = dhexp(key_s(bob),g) at {208} in copy a_626629336

insert statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(charlie),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,false))) at {223} in copy a_626629336

out(pub, ~M_626631080) with ~M_626631080 = dhexp(key_s(bob),g) at {140} in copy a_626629336

insert statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) at {155} in copy a_626629336

out(pub, ~M_626631415) with ~M_626631415 = dhexp(key_s(alice),g) at {72} in copy a_626629336

insert statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,true))) at {87} in copy a_626629336

out(pub, ~M_626631750) with ~M_626631750 = dhexp(key_s(alice),g) at {4} in copy a_626629336

insert statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) at {19} in copy a_626629336

out(pub, (~M_626631959,~M_626631960,~M_626631961)) with ~M_626631959 = key_s(charlie), ~M_626631960 = key_e(charlie,alice), ~M_626631961 = key_e(charlie,bob) at {274} in copy a_626629335

out(pub, ~M_626632092) with ~M_626632092 = dhexp(key_s(bob),g) at {208} in copy a_626629335

insert statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(charlie),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,false))) at {223} in copy a_626629335

out(pub, ~M_626632429) with ~M_626632429 = dhexp(key_s(bob),g) at {140} in copy a_626629335

insert statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) at {155} in copy a_626629335

out(pub, ~M_626632764) with ~M_626632764 = dhexp(key_s(alice),g) at {72} in copy a_626629335

insert statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,true))) at {87} in copy a_626629335

out(pub, ~M_626633099) with ~M_626633099 = dhexp(key_s(alice),g) at {4} in copy a_626629335

insert statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) at {19} in copy a_626629335

out(pub, (~M_626633308,~M_626633309,~M_626633310)) with ~M_626633308 = key_s(charlie), ~M_626633309 = key_e(charlie,alice), ~M_626633310 = key_e(charlie,bob) at {274} in copy a_626629334

out(pub, ~M_626633441) with ~M_626633441 = dhexp(key_s(bob),g) at {208} in copy a_626629334

insert statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(charlie),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,false))) at {223} in copy a_626629334

out(pub, ~M_626633778) with ~M_626633778 = dhexp(key_s(bob),g) at {140} in copy a_626629334

insert statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) at {155} in copy a_626629334

out(pub, ~M_626634113) with ~M_626634113 = dhexp(key_s(alice),g) at {72} in copy a_626629334

insert statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,true))) at {87} in copy a_626629334

out(pub, ~M_626634448) with ~M_626634448 = dhexp(key_s(alice),g) at {4} in copy a_626629334

insert statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) at {19} in copy a_626629334

out(pub, (~M_626634657,~M_626634658,~M_626634659)) with ~M_626634657 = key_s(charlie), ~M_626634658 = key_e(charlie,alice), ~M_626634659 = key_e(charlie,bob) at {274} in copy a_626629333

out(pub, ~M_626634790) with ~M_626634790 = dhexp(key_s(bob),g) at {208} in copy a_626629333

insert statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(charlie),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,false))) at {223} in copy a_626629333

out(pub, ~M_626635127) with ~M_626635127 = dhexp(key_s(bob),g) at {140} in copy a_626629333

insert statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) at {155} in copy a_626629333

out(pub, ~M_626635462) with ~M_626635462 = dhexp(key_s(alice),g) at {72} in copy a_626629333

insert statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,true))) at {87} in copy a_626629333

out(pub, ~M_626635797) with ~M_626635797 = dhexp(key_s(alice),g) at {4} in copy a_626629333

insert statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) at {19} in copy a_626629333

out(pub, (~M_626636006,~M_626636007,~M_626636008)) with ~M_626636006 = key_s(charlie), ~M_626636007 = key_e(charlie,alice), ~M_626636008 = key_e(charlie,bob) at {274} in copy a_626629332

out(pub, ~M_626636139) with ~M_626636139 = dhexp(key_s(bob),g) at {208} in copy a_626629332

insert statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(charlie),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,false))) at {223} in copy a_626629332

out(pub, ~M_626636476) with ~M_626636476 = dhexp(key_s(bob),g) at {140} in copy a_626629332

event LeakS(phase0,bob) at {201} in copy a_626629332

out(pub, ~M_626636478) with ~M_626636478 = key_s(bob) at {202} in copy a_626629332

insert statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) at {155} in copy a_626629332

out(pub, ~M_626636813) with ~M_626636813 = dhexp(key_s(alice),g) at {72} in copy a_626629332

insert statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,true))) at {87} in copy a_626629332

out(pub, ~M_626637148) with ~M_626637148 = dhexp(key_s(alice),g) at {4} in copy a_626629332

insert statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) at {19} in copy a_626629332

get statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) at {200} in copy a_626629336

in(pub, concat3(~M_626631415,a_626629331,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(~M_626636478,~M_626631415)),dhexp(~M_626636478,~M_626631415)),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),~M_626631415),~M_626630743),~M_626631415),a_626629330))) with ~M_626631415 = dhexp(key_s(alice),g), encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(~M_626636478,~M_626631415)),dhexp(~M_626636478,~M_626631415)),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),~M_626631415),~M_626630743),~M_626631415),a_626629330) = encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),a_626629330) at {156} in copy a_626629336

event RecvMsg(bob,alice,stage_a,a_626629330,true) at {197} in copy a_626629336 (goal)

The event RecvMsg(bob,alice,stage_a,a_626629330,true) is executed.
A trace has been found.
RESULT event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)) || event(LeakS(phase0,alice)) is false.
Starting query not attacker_p1(msg_a(alice,bob))
goal reachable: begin(LeakS(phase1,bob)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> attacker_p1(msg_a(alice,bob))

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {19}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

3. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 2 may be read at get {64}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {61}.
So the message concat3(dhexp(key_e(alice,bob),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob))) may be sent on channel pub at output {63}.
mess(pub,concat3(dhexp(key_e(alice,bob),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(dhexp(key_e(alice,bob),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e(alice,bob),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob))) by listening on this channel.
attacker(concat3(dhexp(key_e(alice,bob),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob)))).

5. By 4, the attacker may know concat3(dhexp(key_e(alice,bob),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob)).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob))).

6. By 5, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob)).
So the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob)) in phase 1.
attacker_p1(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob))).

7. By 4, the attacker may know concat3(dhexp(key_e(alice,bob),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_e(alice,bob),g).
attacker(dhexp(key_e(alice,bob),g)).

8. The message dhexp(key_s(bob),g) may be sent on channel pub at output {140}.
mess(pub,dhexp(key_s(bob),g)).

9. By 1, the attacker may have the channel pub.
By 8, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

10. The message dhexp(key_s(alice),g) may be sent on channel pub at output {4}.
mess(pub,dhexp(key_s(alice),g)).

11. By 1, the attacker may have the channel pub.
By 10, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

12. Using the function empty the attacker may obtain empty.
attacker(empty).

13. Using the function somename the attacker may obtain somename.
attacker(somename).

14. By 13, the attacker may know somename.
By 12, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

15. By 14, the attacker may know hash(somename,empty).
By 12, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

16. By 15, the attacker may know hash(hash(somename,empty),empty).
By 11, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

17. By 16, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 9, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

18. By 17, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 7, the attacker may know dhexp(key_e(alice,bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g))).

19. By 18, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)).
So the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)) in phase 1.
attacker_p1(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g))).

20. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

21. By 11, the attacker may know dhexp(key_s(alice),g).
So the attacker may know dhexp(key_s(alice),g) in phase 1.
attacker_p1(dhexp(key_s(alice),g)).

22. Using the function pub the attacker may obtain pub in phase 1.
attacker_p1(pub).

23. The event LeakS(phase1,bob) may be executed at {204}.
So the message key_s(bob) may be sent on channel pub in phase 1 at output {205}.
mess_p1(pub,key_s(bob)).

24. By 22, the attacker may have the channel pub in phase 1.
By 23, the message key_s(bob) in phase 1 may be sent on this channel.
So the attacker may obtain the message key_s(bob) in phase 1 by listening on this channel.
attacker_p1(key_s(bob)).

25. By 24, the attacker may know key_s(bob) in phase 1.
By 21, the attacker may know dhexp(key_s(alice),g) in phase 1.
Using the function dhexp the attacker may obtain dhexp(key_s(alice),dhexp(key_s(bob),g)) in phase 1.
attacker_p1(dhexp(key_s(alice),dhexp(key_s(bob),g))).

26. By 7, the attacker may know dhexp(key_e(alice,bob),g).
So the attacker may know dhexp(key_e(alice,bob),g) in phase 1.
attacker_p1(dhexp(key_e(alice,bob),g)).

27. By 24, the attacker may know key_s(bob) in phase 1.
By 26, the attacker may know dhexp(key_e(alice,bob),g) in phase 1.
Using the function dhexp the attacker may obtain dhexp(key_e(alice,bob),dhexp(key_s(bob),g)) in phase 1.
attacker_p1(dhexp(key_e(alice,bob),dhexp(key_s(bob),g))).

28. By 14, the attacker may know hash(somename,empty).
So the attacker may know hash(somename,empty) in phase 1.
attacker_p1(hash(somename,empty)).

29. By 28, the attacker may know hash(somename,empty) in phase 1.
By 27, the attacker may know dhexp(key_e(alice,bob),dhexp(key_s(bob),g)) in phase 1.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))) in phase 1.
attacker_p1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g)))).

30. By 29, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))) in phase 1.
By 25, the attacker may know dhexp(key_s(alice),dhexp(key_s(bob),g)) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g)))).

31. By 30, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))) in phase 1.
By 20, the attacker may know minnonce in phase 1.
By 19, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)) in phase 1.
By 6, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob))).

32. By 31, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob) in phase 1.
attacker_p1(msg_a(alice,bob)).


Could not find a trace corresponding to this derivation.
RESULT not attacker_p1(msg_a(alice,bob)) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob))
goal reachable: begin(LeakS(phase1,bob)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> attacker_p1(msg_a(alice,bob))
goal reachable: begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> attacker_p1(msg_a(alice,bob))
RESULT attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob)) is true.
Starting query attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice)))
goal reachable: begin(LeakS(phase1,bob)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> attacker_p1(msg_a(alice,bob))

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {19}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

3. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 2 may be read at get {64}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {61}.
So the message concat3(dhexp(key_e(alice,bob),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob))) may be sent on channel pub at output {63}.
mess(pub,concat3(dhexp(key_e(alice,bob),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(dhexp(key_e(alice,bob),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e(alice,bob),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob))) by listening on this channel.
attacker(concat3(dhexp(key_e(alice,bob),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob)))).

5. By 4, the attacker may know concat3(dhexp(key_e(alice,bob),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob)).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob))).

6. By 5, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob)).
So the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob)) in phase 1.
attacker_p1(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob))).

7. By 4, the attacker may know concat3(dhexp(key_e(alice,bob),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_e(alice,bob),g).
attacker(dhexp(key_e(alice,bob),g)).

8. The message dhexp(key_s(bob),g) may be sent on channel pub at output {140}.
mess(pub,dhexp(key_s(bob),g)).

9. By 1, the attacker may have the channel pub.
By 8, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

10. The message dhexp(key_s(alice),g) may be sent on channel pub at output {4}.
mess(pub,dhexp(key_s(alice),g)).

11. By 1, the attacker may have the channel pub.
By 10, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

12. Using the function empty the attacker may obtain empty.
attacker(empty).

13. Using the function somename the attacker may obtain somename.
attacker(somename).

14. By 13, the attacker may know somename.
By 12, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

15. By 14, the attacker may know hash(somename,empty).
By 12, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

16. By 15, the attacker may know hash(hash(somename,empty),empty).
By 11, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

17. By 16, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 9, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

18. By 17, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 7, the attacker may know dhexp(key_e(alice,bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g))).

19. By 18, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)).
So the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)) in phase 1.
attacker_p1(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g))).

20. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

21. By 11, the attacker may know dhexp(key_s(alice),g).
So the attacker may know dhexp(key_s(alice),g) in phase 1.
attacker_p1(dhexp(key_s(alice),g)).

22. Using the function pub the attacker may obtain pub in phase 1.
attacker_p1(pub).

23. The event LeakS(phase1,bob) may be executed at {204}.
So the message key_s(bob) may be sent on channel pub in phase 1 at output {205}.
mess_p1(pub,key_s(bob)).

24. By 22, the attacker may have the channel pub in phase 1.
By 23, the message key_s(bob) in phase 1 may be sent on this channel.
So the attacker may obtain the message key_s(bob) in phase 1 by listening on this channel.
attacker_p1(key_s(bob)).

25. By 24, the attacker may know key_s(bob) in phase 1.
By 21, the attacker may know dhexp(key_s(alice),g) in phase 1.
Using the function dhexp the attacker may obtain dhexp(key_s(alice),dhexp(key_s(bob),g)) in phase 1.
attacker_p1(dhexp(key_s(alice),dhexp(key_s(bob),g))).

26. By 7, the attacker may know dhexp(key_e(alice,bob),g).
So the attacker may know dhexp(key_e(alice,bob),g) in phase 1.
attacker_p1(dhexp(key_e(alice,bob),g)).

27. By 24, the attacker may know key_s(bob) in phase 1.
By 26, the attacker may know dhexp(key_e(alice,bob),g) in phase 1.
Using the function dhexp the attacker may obtain dhexp(key_e(alice,bob),dhexp(key_s(bob),g)) in phase 1.
attacker_p1(dhexp(key_e(alice,bob),dhexp(key_s(bob),g))).

28. By 14, the attacker may know hash(somename,empty).
So the attacker may know hash(somename,empty) in phase 1.
attacker_p1(hash(somename,empty)).

29. By 28, the attacker may know hash(somename,empty) in phase 1.
By 27, the attacker may know dhexp(key_e(alice,bob),dhexp(key_s(bob),g)) in phase 1.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))) in phase 1.
attacker_p1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g)))).

30. By 29, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))) in phase 1.
By 25, the attacker may know dhexp(key_s(alice),dhexp(key_s(bob),g)) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g)))).

31. By 30, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))) in phase 1.
By 20, the attacker may know minnonce in phase 1.
By 19, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)) in phase 1.
By 6, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob))).

32. By 31, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob) in phase 1.
attacker_p1(msg_a(alice,bob)).


Could not find a trace corresponding to this derivation.
RESULT attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice))) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob))
goal reachable: begin(LeakS(phase1,bob)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> attacker_p1(msg_a(alice,bob))

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {19}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

3. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 2 may be read at get {64}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {61}.
So the message concat3(dhexp(key_e(alice,bob),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob))) may be sent on channel pub at output {63}.
mess(pub,concat3(dhexp(key_e(alice,bob),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(dhexp(key_e(alice,bob),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e(alice,bob),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob))) by listening on this channel.
attacker(concat3(dhexp(key_e(alice,bob),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob)))).

5. By 4, the attacker may know concat3(dhexp(key_e(alice,bob),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob)).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob))).

6. By 5, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob)).
So the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob)) in phase 1.
attacker_p1(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob))).

7. By 4, the attacker may know concat3(dhexp(key_e(alice,bob),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_e(alice,bob),g).
attacker(dhexp(key_e(alice,bob),g)).

8. The message dhexp(key_s(bob),g) may be sent on channel pub at output {140}.
mess(pub,dhexp(key_s(bob),g)).

9. By 1, the attacker may have the channel pub.
By 8, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

10. The message dhexp(key_s(alice),g) may be sent on channel pub at output {4}.
mess(pub,dhexp(key_s(alice),g)).

11. By 1, the attacker may have the channel pub.
By 10, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

12. Using the function empty the attacker may obtain empty.
attacker(empty).

13. Using the function somename the attacker may obtain somename.
attacker(somename).

14. By 13, the attacker may know somename.
By 12, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

15. By 14, the attacker may know hash(somename,empty).
By 12, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

16. By 15, the attacker may know hash(hash(somename,empty),empty).
By 11, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

17. By 16, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 9, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

18. By 17, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 7, the attacker may know dhexp(key_e(alice,bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g))).

19. By 18, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)).
So the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)) in phase 1.
attacker_p1(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g))).

20. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

21. By 11, the attacker may know dhexp(key_s(alice),g).
So the attacker may know dhexp(key_s(alice),g) in phase 1.
attacker_p1(dhexp(key_s(alice),g)).

22. Using the function pub the attacker may obtain pub in phase 1.
attacker_p1(pub).

23. The event LeakS(phase1,bob) may be executed at {204}.
So the message key_s(bob) may be sent on channel pub in phase 1 at output {205}.
mess_p1(pub,key_s(bob)).

24. By 22, the attacker may have the channel pub in phase 1.
By 23, the message key_s(bob) in phase 1 may be sent on this channel.
So the attacker may obtain the message key_s(bob) in phase 1 by listening on this channel.
attacker_p1(key_s(bob)).

25. By 24, the attacker may know key_s(bob) in phase 1.
By 21, the attacker may know dhexp(key_s(alice),g) in phase 1.
Using the function dhexp the attacker may obtain dhexp(key_s(alice),dhexp(key_s(bob),g)) in phase 1.
attacker_p1(dhexp(key_s(alice),dhexp(key_s(bob),g))).

26. By 7, the attacker may know dhexp(key_e(alice,bob),g).
So the attacker may know dhexp(key_e(alice,bob),g) in phase 1.
attacker_p1(dhexp(key_e(alice,bob),g)).

27. By 24, the attacker may know key_s(bob) in phase 1.
By 26, the attacker may know dhexp(key_e(alice,bob),g) in phase 1.
Using the function dhexp the attacker may obtain dhexp(key_e(alice,bob),dhexp(key_s(bob),g)) in phase 1.
attacker_p1(dhexp(key_e(alice,bob),dhexp(key_s(bob),g))).

28. By 14, the attacker may know hash(somename,empty).
So the attacker may know hash(somename,empty) in phase 1.
attacker_p1(hash(somename,empty)).

29. By 28, the attacker may know hash(somename,empty) in phase 1.
By 27, the attacker may know dhexp(key_e(alice,bob),dhexp(key_s(bob),g)) in phase 1.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))) in phase 1.
attacker_p1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g)))).

30. By 29, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))) in phase 1.
By 25, the attacker may know dhexp(key_s(alice),dhexp(key_s(bob),g)) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g)))).

31. By 30, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))) in phase 1.
By 20, the attacker may know minnonce in phase 1.
By 19, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)) in phase 1.
By 6, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob))).

32. By 31, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob),g)),msg_a(alice,bob)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob) in phase 1.
attacker_p1(msg_a(alice,bob)).


Could not find a trace corresponding to this derivation.
RESULT attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) cannot be proved.
Starting query not event(RecvEnd(true))
goal reachable: end(RecvEnd(true))

1. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(charlie),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,false))) may be inserted in a table at insert {223}.
table(statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(charlie),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,false)))).

2. The attacker has some term plaintext_a_626651306.
attacker(plaintext_a_626651306).

3. Using the function g the attacker may obtain g.
attacker(g).

4. Using the function pub the attacker may obtain pub.
attacker(pub).

5. The message (key_s(charlie),key_e(charlie,alice),key_e(charlie,bob)) may be sent on channel pub at output {274}.
mess(pub,(key_s(charlie),key_e(charlie,alice),key_e(charlie,bob))).

6. By 4, the attacker may have the channel pub.
By 5, the message (key_s(charlie),key_e(charlie,alice),key_e(charlie,bob)) may be sent on this channel.
So the attacker may obtain the message (key_s(charlie),key_e(charlie,alice),key_e(charlie,bob)) by listening on this channel.
attacker((key_s(charlie),key_e(charlie,alice),key_e(charlie,bob))).

7. By 6, the attacker may know (key_s(charlie),key_e(charlie,alice),key_e(charlie,bob)).
Using the function 1-proj-3-tuple the attacker may obtain key_s(charlie).
attacker(key_s(charlie)).

8. By 7, the attacker may know key_s(charlie).
By 3, the attacker may know g.
Using the function dhexp the attacker may obtain dhexp(key_s(charlie),g).
attacker(dhexp(key_s(charlie),g)).

9. The message dhexp(key_s(bob),g) may be sent on channel pub at output {140}.
mess(pub,dhexp(key_s(bob),g)).

10. By 4, the attacker may have the channel pub.
By 9, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

11. Using the function empty the attacker may obtain empty.
attacker(empty).

12. Using the function somename the attacker may obtain somename.
attacker(somename).

13. By 12, the attacker may know somename.
By 11, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

14. By 13, the attacker may know hash(somename,empty).
By 11, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

15. By 14, the attacker may know hash(hash(somename,empty),empty).
By 8, the attacker may know dhexp(key_s(charlie),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(charlie),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(charlie),g))).

16. By 15, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(charlie),g)).
By 10, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(charlie),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(charlie),g)),dhexp(key_s(bob),g))).

17. By 16, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(charlie),g)),dhexp(key_s(bob),g)).
By 8, the attacker may know dhexp(key_s(charlie),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(charlie),g)),dhexp(key_s(bob),g)),dhexp(key_s(charlie),g)).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(charlie),g)),dhexp(key_s(bob),g)),dhexp(key_s(charlie),g))).

18. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

19. By 7, the attacker may know key_s(charlie).
By 10, the attacker may know dhexp(key_s(bob),g).
Using the function dhexp the attacker may obtain dhexp(key_s(bob),dhexp(key_s(charlie),g)).
attacker(dhexp(key_s(bob),dhexp(key_s(charlie),g))).

20. By 13, the attacker may know hash(somename,empty).
By 19, the attacker may know dhexp(key_s(bob),dhexp(key_s(charlie),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(charlie),g))).
attacker(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(charlie),g)))).

21. By 20, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(charlie),g))).
By 19, the attacker may know dhexp(key_s(bob),dhexp(key_s(charlie),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(charlie),g))),dhexp(key_s(bob),dhexp(key_s(charlie),g))).
attacker(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(charlie),g))),dhexp(key_s(bob),dhexp(key_s(charlie),g)))).

22. By 21, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(charlie),g))),dhexp(key_s(bob),dhexp(key_s(charlie),g))).
By 18, the attacker may know minnonce.
By 17, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(charlie),g)),dhexp(key_s(bob),g)),dhexp(key_s(charlie),g)).
By 2, the attacker may know plaintext_a_626651306.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(charlie),g))),dhexp(key_s(bob),dhexp(key_s(charlie),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(charlie),g)),dhexp(key_s(bob),g)),dhexp(key_s(charlie),g)),plaintext_a_626651306).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(charlie),g))),dhexp(key_s(bob),dhexp(key_s(charlie),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(charlie),g)),dhexp(key_s(bob),g)),dhexp(key_s(charlie),g)),plaintext_a_626651306)).

23. The attacker has some term b_626651301.
attacker(b_626651301).

24. By 8, the attacker may know dhexp(key_s(charlie),g).
By 23, the attacker may know b_626651301.
By 22, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(charlie),g))),dhexp(key_s(bob),dhexp(key_s(charlie),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(charlie),g)),dhexp(key_s(bob),g)),dhexp(key_s(charlie),g)),plaintext_a_626651306).
Using the function concat3 the attacker may obtain concat3(dhexp(key_s(charlie),g),b_626651301,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(charlie),g))),dhexp(key_s(bob),dhexp(key_s(charlie),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(charlie),g)),dhexp(key_s(bob),g)),dhexp(key_s(charlie),g)),plaintext_a_626651306)).
attacker(concat3(dhexp(key_s(charlie),g),b_626651301,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(charlie),g))),dhexp(key_s(bob),dhexp(key_s(charlie),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(charlie),g)),dhexp(key_s(bob),g)),dhexp(key_s(charlie),g)),plaintext_a_626651306))).

25. By 4, the attacker may have the channel pub.
By 24, the attacker may have the message concat3(dhexp(key_s(charlie),g),b_626651301,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(charlie),g))),dhexp(key_s(bob),dhexp(key_s(charlie),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(charlie),g)),dhexp(key_s(bob),g)),dhexp(key_s(charlie),g)),plaintext_a_626651306)).
So the attacker may send this message on this channel.
mess(pub,concat3(dhexp(key_s(charlie),g),b_626651301,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(charlie),g))),dhexp(key_s(bob),dhexp(key_s(charlie),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(charlie),g)),dhexp(key_s(bob),g)),dhexp(key_s(charlie),g)),plaintext_a_626651306))).

26. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(charlie),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,false))) that may be in a table by 1 may be read at get {268}.
The message concat3(dhexp(key_s(charlie),g),b_626651301,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(charlie),g))),dhexp(key_s(bob),dhexp(key_s(charlie),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(charlie),g)),dhexp(key_s(bob),g)),dhexp(key_s(charlie),g)),plaintext_a_626651306)) that may be sent on channel pub by 25 may be received at input {224}.
We have dhexp(key_s(charlie),g) <> caught-fail.
So event RecvEnd(true) may be executed at {267}.
end(RecvEnd(true)).


A more detailed output of the traces is available with
  set traceDisplay = long.

out(pub, (~M_626652350,~M_626652351,~M_626652352)) with ~M_626652350 = key_s(charlie), ~M_626652351 = key_e(charlie,alice), ~M_626652352 = key_e(charlie,bob) at {274} in copy a_626651320

out(pub, ~M_626652483) with ~M_626652483 = dhexp(key_s(bob),g) at {208} in copy a_626651320

insert statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(charlie),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,false))) at {223} in copy a_626651320

out(pub, ~M_626652820) with ~M_626652820 = dhexp(key_s(bob),g) at {140} in copy a_626651320

insert statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) at {155} in copy a_626651320

out(pub, ~M_626653155) with ~M_626653155 = dhexp(key_s(alice),g) at {72} in copy a_626651320

insert statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,true))) at {87} in copy a_626651320

out(pub, ~M_626653490) with ~M_626653490 = dhexp(key_s(alice),g) at {4} in copy a_626651320

insert statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) at {19} in copy a_626651320

out(pub, (~M_626653699,~M_626653700,~M_626653701)) with ~M_626653699 = key_s(charlie), ~M_626653700 = key_e(charlie,alice), ~M_626653701 = key_e(charlie,bob) at {274} in copy a_626651319

out(pub, ~M_626653832) with ~M_626653832 = dhexp(key_s(bob),g) at {208} in copy a_626651319

insert statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(charlie),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,false))) at {223} in copy a_626651319

out(pub, ~M_626654169) with ~M_626654169 = dhexp(key_s(bob),g) at {140} in copy a_626651319

insert statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) at {155} in copy a_626651319

out(pub, ~M_626654504) with ~M_626654504 = dhexp(key_s(alice),g) at {72} in copy a_626651319

insert statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,true))) at {87} in copy a_626651319

out(pub, ~M_626654839) with ~M_626654839 = dhexp(key_s(alice),g) at {4} in copy a_626651319

insert statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) at {19} in copy a_626651319

out(pub, (~M_626655048,~M_626655049,~M_626655050)) with ~M_626655048 = key_s(charlie), ~M_626655049 = key_e(charlie,alice), ~M_626655050 = key_e(charlie,bob) at {274} in copy a_626651318

out(pub, ~M_626655181) with ~M_626655181 = dhexp(key_s(bob),g) at {208} in copy a_626651318

insert statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(charlie),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,false))) at {223} in copy a_626651318

out(pub, ~M_626655518) with ~M_626655518 = dhexp(key_s(bob),g) at {140} in copy a_626651318

insert statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) at {155} in copy a_626651318

out(pub, ~M_626655853) with ~M_626655853 = dhexp(key_s(alice),g) at {72} in copy a_626651318

insert statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,true))) at {87} in copy a_626651318

out(pub, ~M_626656188) with ~M_626656188 = dhexp(key_s(alice),g) at {4} in copy a_626651318

insert statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) at {19} in copy a_626651318

out(pub, (~M_626656397,~M_626656398,~M_626656399)) with ~M_626656397 = key_s(charlie), ~M_626656398 = key_e(charlie,alice), ~M_626656399 = key_e(charlie,bob) at {274} in copy a_626651317

out(pub, ~M_626656530) with ~M_626656530 = dhexp(key_s(bob),g) at {208} in copy a_626651317

insert statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(charlie),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,false))) at {223} in copy a_626651317

out(pub, ~M_626656867) with ~M_626656867 = dhexp(key_s(bob),g) at {140} in copy a_626651317

insert statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) at {155} in copy a_626651317

out(pub, ~M_626657202) with ~M_626657202 = dhexp(key_s(alice),g) at {72} in copy a_626651317

insert statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,true))) at {87} in copy a_626651317

out(pub, ~M_626657537) with ~M_626657537 = dhexp(key_s(alice),g) at {4} in copy a_626651317

insert statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) at {19} in copy a_626651317

get statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(charlie),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,false))) at {268} in copy a_626651320

in(pub, concat3(dhexp(~M_626652350,g),a_626651315,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(~M_626652350,~M_626652483)),dhexp(~M_626652350,~M_626652483)),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(~M_626652350,g)),~M_626652483),dhexp(~M_626652350,g)),a_626651316))) with dhexp(~M_626652350,g) = dhexp(key_s(charlie),g), encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(~M_626652350,~M_626652483)),dhexp(~M_626652350,~M_626652483)),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(~M_626652350,g)),~M_626652483),dhexp(~M_626652350,g)),a_626651316) = encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(charlie),g))),dhexp(key_s(bob),dhexp(key_s(charlie),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(charlie),g)),dhexp(key_s(bob),g)),dhexp(key_s(charlie),g)),a_626651316) at {224} in copy a_626651320

event RecvMsg(bob,charlie,stage_a,a_626651316,true) at {265} in copy a_626651320

insert statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(charlie),g))),dhexp(key_s(bob),dhexp(key_s(charlie),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(charlie),g))),dhexp(key_s(bob),dhexp(key_s(charlie),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(charlie),g)),dhexp(key_s(bob),g)),dhexp(key_s(charlie),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_s(charlie),g))),dhexp(key_s(bob),dhexp(key_s(charlie),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(charlie),g)),dhexp(key_s(bob),g)),dhexp(key_s(charlie),g)),a_626651316))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(charlie),g),dhexp(key_s(charlie),g),empty,false))) at {266} in copy a_626651320

event RecvEnd(true) at {267} in copy a_626651320 (goal)

The event RecvEnd(true) is executed.
A trace has been found.
RESULT not event(RecvEnd(true)) is false.
