File "KK1.noise.active.pv", line 240, characters 7-8:
Warning: identifier ck rebound.
File "KK1.noise.active.pv", line 249, characters 7-8:
Warning: identifier ck rebound.
File "KK1.noise.active.pv", line 250, characters 7-8:
Warning: identifier cs rebound.
File "KK1.noise.active.pv", line 250, character 36:
Warning: identifier h rebound.
File "KK1.noise.active.pv", line 259, characters 7-8:
Warning: identifier cs rebound.
File "KK1.noise.active.pv", line 260, characters 6-7:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 265, characters 7-8:
Warning: identifier cs rebound.
File "KK1.noise.active.pv", line 266, characters 6-7:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 280, characters 6-7:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 281, characters 6-7:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 286, characters 6-7:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 287, characters 6-7:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 294, character 6:
Warning: identifier e rebound.
File "KK1.noise.active.pv", line 295, characters 6-7:
Warning: identifier ne rebound.
File "KK1.noise.active.pv", line 296, characters 6-7:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 298, characters 7-8:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 298, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "KK1.noise.active.pv", line 299, characters 6-7:
Warning: identifier hs rebound.
File "KK1.noise.active.pv", line 307, character 6:
Warning: identifier e rebound.
File "KK1.noise.active.pv", line 308, characters 6-7:
Warning: identifier ne rebound.
File "KK1.noise.active.pv", line 309, characters 6-7:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 311, characters 6-7:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 312, characters 6-7:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 313, characters 6-7:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 314, characters 7-8:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 314, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "KK1.noise.active.pv", line 315, characters 6-7:
Warning: identifier hs rebound.
File "KK1.noise.active.pv", line 322, characters 7-8:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 322, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "KK1.noise.active.pv", line 323, characters 6-7:
Warning: identifier hs rebound.
File "KK1.noise.active.pv", line 330, characters 7-8:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 330, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "KK1.noise.active.pv", line 331, characters 6-7:
Warning: identifier hs rebound.
File "KK1.noise.active.pv", line 340, characters 6-7:
Warning: identifier re rebound.
File "KK1.noise.active.pv", line 341, characters 6-7:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 343, characters 7-8:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 345, characters 7-8:
Warning: identifier hs rebound.
File "KK1.noise.active.pv", line 353, characters 6-7:
Warning: identifier re rebound.
File "KK1.noise.active.pv", line 354, characters 6-7:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 356, characters 6-7:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 357, characters 6-7:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 358, characters 6-7:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 359, characters 7-8:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 361, characters 7-8:
Warning: identifier hs rebound.
File "KK1.noise.active.pv", line 369, characters 7-8:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 371, characters 7-8:
Warning: identifier hs rebound.
File "KK1.noise.active.pv", line 379, characters 7-8:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 381, characters 7-8:
Warning: identifier hs rebound.
File "KK1.noise.active.pv", line 529, characters 8-9:
Warning: identifier hs rebound.
File "KK1.noise.active.pv", line 379, characters 7-8:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 381, characters 7-8:
Warning: identifier hs rebound.
File "KK1.noise.active.pv", line 265, characters 7-8:
Warning: identifier cs rebound.
File "KK1.noise.active.pv", line 266, characters 6-7:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 521, characters 8-9:
Warning: identifier hs rebound.
File "KK1.noise.active.pv", line 322, characters 7-8:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 322, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "KK1.noise.active.pv", line 323, characters 6-7:
Warning: identifier hs rebound.
File "KK1.noise.active.pv", line 259, characters 7-8:
Warning: identifier cs rebound.
File "KK1.noise.active.pv", line 260, characters 6-7:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 514, characters 8-9:
Warning: identifier hs rebound.
File "KK1.noise.active.pv", line 353, characters 6-7:
Warning: identifier re rebound.
File "KK1.noise.active.pv", line 354, characters 6-7:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 356, characters 6-7:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 357, characters 6-7:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 358, characters 6-7:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 359, characters 7-8:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 361, characters 7-8:
Warning: identifier hs rebound.
File "KK1.noise.active.pv", line 240, characters 7-8:
Warning: identifier ck rebound.
File "KK1.noise.active.pv", line 240, characters 7-8:
Warning: identifier ck rebound.
File "KK1.noise.active.pv", line 240, characters 7-8:
Warning: identifier ck rebound.
File "KK1.noise.active.pv", line 265, characters 7-8:
Warning: identifier cs rebound.
File "KK1.noise.active.pv", line 266, characters 6-7:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 506, characters 8-9:
Warning: identifier hs rebound.
File "KK1.noise.active.pv", line 294, character 6:
Warning: identifier e rebound.
File "KK1.noise.active.pv", line 295, characters 6-7:
Warning: identifier ne rebound.
File "KK1.noise.active.pv", line 296, characters 6-7:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 298, characters 7-8:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 298, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "KK1.noise.active.pv", line 299, characters 6-7:
Warning: identifier hs rebound.
File "KK1.noise.active.pv", line 259, characters 7-8:
Warning: identifier cs rebound.
File "KK1.noise.active.pv", line 260, characters 6-7:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 280, characters 6-7:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 281, characters 6-7:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 579, characters 8-9:
Warning: identifier hs rebound.
File "KK1.noise.active.pv", line 330, characters 7-8:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 330, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "KK1.noise.active.pv", line 331, characters 6-7:
Warning: identifier hs rebound.
File "KK1.noise.active.pv", line 259, characters 7-8:
Warning: identifier cs rebound.
File "KK1.noise.active.pv", line 260, characters 6-7:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 572, characters 8-9:
Warning: identifier hs rebound.
File "KK1.noise.active.pv", line 369, characters 7-8:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 371, characters 7-8:
Warning: identifier hs rebound.
File "KK1.noise.active.pv", line 265, characters 7-8:
Warning: identifier cs rebound.
File "KK1.noise.active.pv", line 266, characters 6-7:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 564, characters 8-9:
Warning: identifier hs rebound.
File "KK1.noise.active.pv", line 307, character 6:
Warning: identifier e rebound.
File "KK1.noise.active.pv", line 308, characters 6-7:
Warning: identifier ne rebound.
File "KK1.noise.active.pv", line 309, characters 6-7:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 311, characters 6-7:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 312, characters 6-7:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 313, characters 6-7:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 314, characters 7-8:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 314, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "KK1.noise.active.pv", line 315, characters 6-7:
Warning: identifier hs rebound.
File "KK1.noise.active.pv", line 240, characters 7-8:
Warning: identifier ck rebound.
File "KK1.noise.active.pv", line 240, characters 7-8:
Warning: identifier ck rebound.
File "KK1.noise.active.pv", line 240, characters 7-8:
Warning: identifier ck rebound.
File "KK1.noise.active.pv", line 259, characters 7-8:
Warning: identifier cs rebound.
File "KK1.noise.active.pv", line 260, characters 6-7:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 557, characters 8-9:
Warning: identifier hs rebound.
File "KK1.noise.active.pv", line 340, characters 6-7:
Warning: identifier re rebound.
File "KK1.noise.active.pv", line 341, characters 6-7:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 343, characters 7-8:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 345, characters 7-8:
Warning: identifier hs rebound.
File "KK1.noise.active.pv", line 265, characters 7-8:
Warning: identifier cs rebound.
File "KK1.noise.active.pv", line 266, characters 6-7:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 286, characters 6-7:
Warning: identifier ss rebound.
File "KK1.noise.active.pv", line 287, characters 6-7:
Warning: identifier ss rebound.
Linear part:
dhexp(b_49,dhexp(a_48,g)) = dhexp(a_48,dhexp(b_49,g))
Completing equations...
Completed equations:
dhexp(b_49,dhexp(a_48,g)) = dhexp(a_48,dhexp(b_49,g))
Convergent part:
Completing equations...
Completed equations:
Process:
{1}out(pub, key_s(charlie));
{2}!
(
    {3}let them: principal = bob in
    {4}let me: principal = alice in
    {5}let v_470: key = catch-fail(dhexp(key_s(me),g)) in
    {6}let s_471: keypair = (if not-caught-fail(v_470) then keypairpack(v_470,key_s(me)) else fail-any) in
    {7}out(pub, getpublickey(s_471));
    (
        {8}let e_472: keypair = keypairpack(empty,empty) in
        {9}let v_473: key = catch-fail(dhexp(key_s(them),g)) in
        {10}let rs_474: key = getpublickey((if not-caught-fail(v_473) then keypairpack(v_473,key_s(them)) else fail-any)) in
        {11}let re_475: key = empty in
        {12}let v_476: bitstring = catch-fail(hash(somename,empty)) in
        {13}let v_477: key = catch-fail(v_476) in
        {14}let v_478: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {15}let v_479: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_476) then (if not-caught-fail(v_477) then (if not-caught-fail(v_478) then symmetricstatepack(v_478,v_477,v_476) else fail-any) else fail-any) else fail-any))) in
        {16}let v_480: symmetricstate = catch-fail((if success?((if not-caught-fail(v_476) then (if not-caught-fail(v_477) then (if not-caught-fail(v_478) then symmetricstatepack(v_478,v_477,v_476) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_479) && success?(is-true(success?(1-proj-3-tuple(v_479))))) then symmetricstatepack(1-proj-3-tuple(v_479),2-proj-3-tuple(v_479),hash(3-proj-3-tuple(v_479),empty)) else fail-any) else fail-any)) in
        {17}let v_481: bitstring = catch-fail(symmetricstateunpack(v_480)) in
        {18}let v_482: symmetricstate = catch-fail((if success?(getpublickey(s_471)) then (if (not-caught-fail(v_481) && success?(is-true(success?(1-proj-3-tuple(v_481))))) then symmetricstatepack(1-proj-3-tuple(v_481),2-proj-3-tuple(v_481),hash(3-proj-3-tuple(v_481),getpublickey(s_471))) else fail-any) else fail-any)) in
        {19}let v_483: bitstring = catch-fail(symmetricstateunpack(v_482)) in
        {20}let v_484: symmetricstate = catch-fail((if (not-caught-fail(v_483) && success?(is-true(success?(1-proj-3-tuple(v_483))))) then symmetricstatepack(1-proj-3-tuple(v_483),2-proj-3-tuple(v_483),hash(3-proj-3-tuple(v_483),rs_474)) else fail-any)) in
        {21}let hs: handshakestate = (if not-caught-fail(v_480) then (if not-caught-fail(v_482) then (if not-caught-fail(v_484) then handshakestatepack(v_484,s_471,e_472,rs_474,re_475,empty,true) else fail-any) else fail-any) else fail-any) in
        {22}insert statestore(me,them,statepack_a(hs))
    ) | (
        {46}get statestore(=me,=them,statepack_a(hs_485: handshakestate)) in
        {23}let v_486: bitstring = catch-fail(handshakestateunpack(hs_485)) in
        {24}let v_487: bitstring = catch-fail((empty,empty,empty)) in
        {25}new key_e[me,them]: key;
        {26}let v_488: key = catch-fail(dhexp(key_e,g)) in
        {27}let v_489: keypair = catch-fail((if not-caught-fail(v_488) then keypairpack(v_488,key_e) else fail-any)) in
        {28}let v_490: bitstring = catch-fail(getpublickey(v_489)) in
        {29}let v_491: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_486))) in
        {30}let v_492: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_486)) then (if (not-caught-fail(v_491) && success?(is-true(success?(1-proj-3-tuple(v_491))))) then symmetricstatepack(1-proj-3-tuple(v_491),2-proj-3-tuple(v_491),hash(3-proj-3-tuple(v_491),v_490)) else fail-any) else fail-any)) in
        {31}let v_493: bitstring = catch-fail(symmetricstateunpack(v_492)) in
        {32}let v_494: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_493))) in
        {33}let v_495: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_494),2-proj-2-tuple(v_494),3-proj-3-tuple(v_493),msg_a(me,them))) in
        {34}let v_496: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_493))) in
        {35}let v_497: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_494))) && success?(1-proj-3-tuple(v_493))) then (if (not-caught-fail(v_496) && success?(is-true(success?(1-proj-2-tuple(v_496))))) then cipherstatepack(1-proj-2-tuple(v_496),increment_nonce(2-proj-2-tuple(v_494))) else fail-any) else fail-any)) in
        {36}let v_498: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_493)) && success?(1-proj-3-tuple(v_493))) then (if (not-caught-fail(v_494) && success?(is-true(success?(1-proj-2-tuple(v_494))))) then (if not-caught-fail(v_495) then (if not-caught-fail(v_497) then (v_497,v_495) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {37}let v_499: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_498),2-proj-3-tuple(v_493),3-proj-3-tuple(v_493)))) in
        {38}let v_500: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_498)) && success?(symmetricstatepack(1-proj-2-tuple(v_498),2-proj-3-tuple(v_493),3-proj-3-tuple(v_493)))) then (if (not-caught-fail(v_499) && success?(is-true(success?(1-proj-3-tuple(v_499))))) then symmetricstatepack(1-proj-3-tuple(v_499),2-proj-3-tuple(v_499),hash(3-proj-3-tuple(v_499),2-proj-2-tuple(v_498))) else fail-any) else fail-any)) in
        {39}let v_501: bitstring = catch-fail((if (not-caught-fail(v_493) && success?(is-true(success?(1-proj-3-tuple(v_493))))) then (if (not-caught-fail(v_498) && success?(is-true(success?(1-proj-2-tuple(v_498))))) then (if not-caught-fail(v_500) then (v_500,2-proj-2-tuple(v_498)) else fail-any) else fail-any) else fail-any)) in
        {40}let v_502: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_501),2-proj-7-tuple(v_486),v_489,4-proj-7-tuple(v_486),5-proj-7-tuple(v_486),6-proj-7-tuple(v_486),7-proj-7-tuple(v_486))) in
        {41}let v_503: bitstring = catch-fail(concat3(v_490,2-proj-3-tuple(v_487),2-proj-2-tuple(v_501))) in
        {42}let (hs_504: handshakestate,re_505: key,message_a: bitstring) = (if (not-caught-fail(v_486) && success?(is-true(success?(1-proj-7-tuple(v_486))))) then (if (not-caught-fail(v_487) && success?(is-true(success?(1-proj-3-tuple(v_487))))) then (if not-caught-fail(v_489) then (if not-caught-fail(v_490) then (if not-caught-fail(v_492) then (if (not-caught-fail(v_501) && success?(is-true(success?(1-proj-2-tuple(v_501))))) then (if not-caught-fail(v_502) then (if not-caught-fail(v_503) then (v_502,5-proj-7-tuple(v_486),v_503) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {43}event SendMsg(me,them,stage_a,msg_a(me,them),true);
        {44}insert statestore(me,them,statepack_b(hs_504));
        {45}out(pub, message_a)
    ) | (
        {89}get statestore(=me,=them,statepack_b(hs_506: handshakestate)) in
        {47}in(pub, message_b: bitstring);
        {48}let v_507: bitstring = catch-fail(handshakestateunpack(hs_506)) in
        {49}let v_508: bitstring = catch-fail(deconcat3(message_b)) in
        {50}let v_509: bool = catch-fail(true) in
        {51}let v_510: key = catch-fail(1-proj-3-tuple(v_508)) in
        {52}let v_511: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_507))) in
        {53}let v_512: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_507)) then (if (not-caught-fail(v_511) && success?(is-true(success?(1-proj-3-tuple(v_511))))) then symmetricstatepack(1-proj-3-tuple(v_511),2-proj-3-tuple(v_511),hash(3-proj-3-tuple(v_511),v_510)) else fail-any) else fail-any)) in
        {54}let v_513: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_507))) in
        {55}let v_514: bitstring = catch-fail(symmetricstateunpack(v_512)) in
        {56}let v_515: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_514),(if success?(3-proj-7-tuple(v_507)) then (if (not-caught-fail(v_513) && success?(is-true(success?(1-proj-2-tuple(v_513))))) then dhexp(2-proj-2-tuple(v_513),v_510) else fail-any) else fail-any))) in
        {57}let v_516: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_514),(if success?(3-proj-7-tuple(v_507)) then (if (not-caught-fail(v_513) && success?(is-true(success?(1-proj-2-tuple(v_513))))) then dhexp(2-proj-2-tuple(v_513),v_510) else fail-any) else fail-any))) in
        {58}let v_517: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_514),(if success?(3-proj-7-tuple(v_507)) then (if (not-caught-fail(v_513) && success?(is-true(success?(1-proj-2-tuple(v_513))))) then dhexp(2-proj-2-tuple(v_513),v_510) else fail-any) else fail-any))) in
        {59}let v_518: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_507)) then (if (not-caught-fail(v_513) && success?(is-true(success?(1-proj-2-tuple(v_513))))) then dhexp(2-proj-2-tuple(v_513),v_510) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_514))) then (if not-caught-fail(v_515) then (if not-caught-fail(v_516) then (if not-caught-fail(v_517) then (v_515,v_516,v_517) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {60}let v_519: symmetricstate = catch-fail((if success?((if success?(3-proj-7-tuple(v_507)) then (if (not-caught-fail(v_513) && success?(is-true(success?(1-proj-2-tuple(v_513))))) then dhexp(2-proj-2-tuple(v_513),v_510) else fail-any) else fail-any)) then (if (not-caught-fail(v_514) && success?(is-true(success?(1-proj-3-tuple(v_514))))) then (if (not-caught-fail(v_518) && success?(is-true(success?(1-proj-3-tuple(v_518))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_518)) then cipherstatepack(2-proj-3-tuple(v_518),minnonce) else fail-any),1-proj-3-tuple(v_518),3-proj-3-tuple(v_514)) else fail-any) else fail-any) else fail-any)) in
        {61}let v_520: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_507))) in
        {62}let v_521: bitstring = catch-fail(symmetricstateunpack(v_519)) in
        {63}let v_522: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_521),(if success?(2-proj-7-tuple(v_507)) then (if (not-caught-fail(v_520) && success?(is-true(success?(1-proj-2-tuple(v_520))))) then dhexp(2-proj-2-tuple(v_520),v_510) else fail-any) else fail-any))) in
        {64}let v_523: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_521),(if success?(2-proj-7-tuple(v_507)) then (if (not-caught-fail(v_520) && success?(is-true(success?(1-proj-2-tuple(v_520))))) then dhexp(2-proj-2-tuple(v_520),v_510) else fail-any) else fail-any))) in
        {65}let v_524: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_521),(if success?(2-proj-7-tuple(v_507)) then (if (not-caught-fail(v_520) && success?(is-true(success?(1-proj-2-tuple(v_520))))) then dhexp(2-proj-2-tuple(v_520),v_510) else fail-any) else fail-any))) in
        {66}let v_525: bitstring = catch-fail((if (success?((if success?(2-proj-7-tuple(v_507)) then (if (not-caught-fail(v_520) && success?(is-true(success?(1-proj-2-tuple(v_520))))) then dhexp(2-proj-2-tuple(v_520),v_510) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_521))) then (if not-caught-fail(v_522) then (if not-caught-fail(v_523) then (if not-caught-fail(v_524) then (v_522,v_523,v_524) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {67}let v_526: symmetricstate = catch-fail((if success?((if success?(2-proj-7-tuple(v_507)) then (if (not-caught-fail(v_520) && success?(is-true(success?(1-proj-2-tuple(v_520))))) then dhexp(2-proj-2-tuple(v_520),v_510) else fail-any) else fail-any)) then (if (not-caught-fail(v_521) && success?(is-true(success?(1-proj-3-tuple(v_521))))) then (if (not-caught-fail(v_525) && success?(is-true(success?(1-proj-3-tuple(v_525))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_525)) then cipherstatepack(2-proj-3-tuple(v_525),minnonce) else fail-any),1-proj-3-tuple(v_525),3-proj-3-tuple(v_521)) else fail-any) else fail-any) else fail-any)) in
        {68}let v_527: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_507))) in
        {69}let v_528: bitstring = catch-fail(symmetricstateunpack(v_526)) in
        {70}let v_529: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_528),(if (success?(4-proj-7-tuple(v_507)) && success?(3-proj-7-tuple(v_507))) then (if (not-caught-fail(v_527) && success?(is-true(success?(1-proj-2-tuple(v_527))))) then dhexp(2-proj-2-tuple(v_527),4-proj-7-tuple(v_507)) else fail-any) else fail-any))) in
        {71}let v_530: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_528),(if (success?(4-proj-7-tuple(v_507)) && success?(3-proj-7-tuple(v_507))) then (if (not-caught-fail(v_527) && success?(is-true(success?(1-proj-2-tuple(v_527))))) then dhexp(2-proj-2-tuple(v_527),4-proj-7-tuple(v_507)) else fail-any) else fail-any))) in
        {72}let v_531: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_528),(if (success?(4-proj-7-tuple(v_507)) && success?(3-proj-7-tuple(v_507))) then (if (not-caught-fail(v_527) && success?(is-true(success?(1-proj-2-tuple(v_527))))) then dhexp(2-proj-2-tuple(v_527),4-proj-7-tuple(v_507)) else fail-any) else fail-any))) in
        {73}let v_532: bitstring = catch-fail((if (success?((if (success?(4-proj-7-tuple(v_507)) && success?(3-proj-7-tuple(v_507))) then (if (not-caught-fail(v_527) && success?(is-true(success?(1-proj-2-tuple(v_527))))) then dhexp(2-proj-2-tuple(v_527),4-proj-7-tuple(v_507)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_528))) then (if not-caught-fail(v_529) then (if not-caught-fail(v_530) then (if not-caught-fail(v_531) then (v_529,v_530,v_531) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {74}let v_533: symmetricstate = catch-fail((if success?((if (success?(4-proj-7-tuple(v_507)) && success?(3-proj-7-tuple(v_507))) then (if (not-caught-fail(v_527) && success?(is-true(success?(1-proj-2-tuple(v_527))))) then dhexp(2-proj-2-tuple(v_527),4-proj-7-tuple(v_507)) else fail-any) else fail-any)) then (if (not-caught-fail(v_528) && success?(is-true(success?(1-proj-3-tuple(v_528))))) then (if (not-caught-fail(v_532) && success?(is-true(success?(1-proj-3-tuple(v_532))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_532)) then cipherstatepack(2-proj-3-tuple(v_532),minnonce) else fail-any),1-proj-3-tuple(v_532),3-proj-3-tuple(v_528)) else fail-any) else fail-any) else fail-any)) in
        {75}let v_534: bitstring = catch-fail(symmetricstateunpack(v_533)) in
        {76}let v_535: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_534))) in
        {77}let v_536: aead = catch-fail(decrypt(1-proj-2-tuple(v_535),2-proj-2-tuple(v_535),3-proj-3-tuple(v_534),3-proj-3-tuple(v_508))) in
        {78}let v_537: bitstring = catch-fail(aeadunpack(v_536)) in
        {79}let v_538: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_534))) in
        {80}let v_539: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_535))) && success?(1-proj-3-tuple(v_534))) then (if (not-caught-fail(v_538) && success?(is-true(success?(1-proj-2-tuple(v_538))))) then cipherstatepack(1-proj-2-tuple(v_538),increment_nonce(2-proj-2-tuple(v_535))) else fail-any) else fail-any)) in
        {81}let v_540: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_508)) && (success?(3-proj-3-tuple(v_534)) && success?(1-proj-3-tuple(v_534)))) then (if (not-caught-fail(v_535) && success?(is-true(success?(1-proj-2-tuple(v_535))))) then (if not-caught-fail(v_536) then (if (not-caught-fail(v_537) && success?(is-true(success?(1-proj-3-tuple(v_537))))) then (if not-caught-fail(v_539) then (v_539,3-proj-3-tuple(v_537),1-proj-3-tuple(v_537)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {82}let v_541: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_540),2-proj-3-tuple(v_534),3-proj-3-tuple(v_534)))) in
        {83}let v_542: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_508)) && success?(symmetricstatepack(1-proj-3-tuple(v_540),2-proj-3-tuple(v_534),3-proj-3-tuple(v_534)))) then (if (not-caught-fail(v_541) && success?(is-true(success?(1-proj-3-tuple(v_541))))) then symmetricstatepack(1-proj-3-tuple(v_541),2-proj-3-tuple(v_541),hash(3-proj-3-tuple(v_541),3-proj-3-tuple(v_508))) else fail-any) else fail-any)) in
        {84}let v_543: bitstring = catch-fail((if success?(3-proj-3-tuple(v_508)) then (if (not-caught-fail(v_534) && success?(is-true(success?(1-proj-3-tuple(v_534))))) then (if (not-caught-fail(v_540) && success?(is-true(success?(1-proj-3-tuple(v_540))))) then (if not-caught-fail(v_542) then (v_542,2-proj-3-tuple(v_540),3-proj-3-tuple(v_540)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {85}let v_544: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_543),2-proj-7-tuple(v_507),3-proj-7-tuple(v_507),4-proj-7-tuple(v_507),v_510,6-proj-7-tuple(v_507),7-proj-7-tuple(v_507))) in
        {86}let (hs_545: handshakestate,re_546: key,plaintext_b: bitstring,valid: bool) = (if (not-caught-fail(v_507) && success?(is-true(success?(1-proj-7-tuple(v_507))))) then (if (not-caught-fail(v_508) && success?(is-true(success?(1-proj-3-tuple(v_508))))) then (if not-caught-fail(v_509) then (if not-caught-fail(v_510) then (if not-caught-fail(v_512) then (if not-caught-fail(v_519) then (if not-caught-fail(v_526) then (if not-caught-fail(v_533) then (if (not-caught-fail(v_543) && success?(is-true(success?(1-proj-3-tuple(v_543))))) then (if (v_509 && 3-proj-3-tuple(v_543)) then (if not-caught-fail(v_544) then (v_544,getpublickey(3-proj-7-tuple(v_507)),2-proj-3-tuple(v_543),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {87}event RecvMsg(me,them,stage_b,plaintext_b,valid);
        {88}insert statestore(me,them,statepack_c(hs_545))
    ) | (
        {107}get statestore(=me,=them,statepack_c(hs_547: handshakestate)) in
        {90}let v_548: bitstring = catch-fail(handshakestateunpack(hs_547)) in
        {91}let v_549: bitstring = catch-fail((empty,empty,empty)) in
        {92}let v_550: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_548))) in
        {93}let v_551: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_550))) in
        {94}let v_552: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_551),2-proj-2-tuple(v_551),3-proj-3-tuple(v_550),msg_c(me,them))) in
        {95}let v_553: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_550))) in
        {96}let v_554: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_551))) && success?(1-proj-3-tuple(v_550))) then (if (not-caught-fail(v_553) && success?(is-true(success?(1-proj-2-tuple(v_553))))) then cipherstatepack(1-proj-2-tuple(v_553),increment_nonce(2-proj-2-tuple(v_551))) else fail-any) else fail-any)) in
        {97}let v_555: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_550)) && success?(1-proj-3-tuple(v_550))) then (if (not-caught-fail(v_551) && success?(is-true(success?(1-proj-2-tuple(v_551))))) then (if not-caught-fail(v_552) then (if not-caught-fail(v_554) then (v_554,v_552) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {98}let v_556: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_555),2-proj-3-tuple(v_550),3-proj-3-tuple(v_550)))) in
        {99}let v_557: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_555)) && success?(symmetricstatepack(1-proj-2-tuple(v_555),2-proj-3-tuple(v_550),3-proj-3-tuple(v_550)))) then (if (not-caught-fail(v_556) && success?(is-true(success?(1-proj-3-tuple(v_556))))) then symmetricstatepack(1-proj-3-tuple(v_556),2-proj-3-tuple(v_556),hash(3-proj-3-tuple(v_556),2-proj-2-tuple(v_555))) else fail-any) else fail-any)) in
        {100}let v_558: bitstring = catch-fail((if success?(1-proj-7-tuple(v_548)) then (if (not-caught-fail(v_550) && success?(is-true(success?(1-proj-3-tuple(v_550))))) then (if (not-caught-fail(v_555) && success?(is-true(success?(1-proj-2-tuple(v_555))))) then (if not-caught-fail(v_557) then (v_557,2-proj-2-tuple(v_555)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {101}let v_559: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_558),2-proj-7-tuple(v_548),3-proj-7-tuple(v_548),4-proj-7-tuple(v_548),5-proj-7-tuple(v_548),6-proj-7-tuple(v_548),7-proj-7-tuple(v_548))) in
        {102}let v_560: bitstring = catch-fail(concat3(1-proj-3-tuple(v_549),2-proj-3-tuple(v_549),2-proj-2-tuple(v_558))) in
        {103}let (hs_561: handshakestate,re_562: key,message_c: bitstring) = (if (not-caught-fail(v_548) && success?(is-true(success?(1-proj-7-tuple(v_548))))) then (if (not-caught-fail(v_549) && success?(is-true(success?(1-proj-3-tuple(v_549))))) then (if (not-caught-fail(v_558) && success?(is-true(success?(1-proj-2-tuple(v_558))))) then (if not-caught-fail(v_559) then (if not-caught-fail(v_560) then (v_559,5-proj-7-tuple(v_548),v_560) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {104}event SendMsg(me,them,stage_c,msg_c(me,them),true);
        {105}insert statestore(me,them,statepack_d(hs_561));
        {106}out(pub, message_c)
    ) | (
        {135}get statestore(=me,=them,statepack_d(hs_563: handshakestate)) in
        {108}in(pub, message_d: bitstring);
        {109}let v_564: bitstring = catch-fail(handshakestateunpack(hs_563)) in
        {110}let v_565: bitstring = catch-fail(deconcat3(message_d)) in
        {111}let v_566: bool = catch-fail(true) in
        {112}let v_567: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_564))) in
        {113}let v_568: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_567))) in
        {114}let v_569: aead = catch-fail(decrypt(1-proj-2-tuple(v_568),2-proj-2-tuple(v_568),3-proj-3-tuple(v_567),3-proj-3-tuple(v_565))) in
        {115}let v_570: bitstring = catch-fail(aeadunpack(v_569)) in
        {116}let v_571: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_567))) in
        {117}let v_572: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_568))) && success?(1-proj-3-tuple(v_567))) then (if (not-caught-fail(v_571) && success?(is-true(success?(1-proj-2-tuple(v_571))))) then cipherstatepack(1-proj-2-tuple(v_571),increment_nonce(2-proj-2-tuple(v_568))) else fail-any) else fail-any)) in
        {118}let v_573: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_565)) && (success?(3-proj-3-tuple(v_567)) && success?(1-proj-3-tuple(v_567)))) then (if (not-caught-fail(v_568) && success?(is-true(success?(1-proj-2-tuple(v_568))))) then (if not-caught-fail(v_569) then (if (not-caught-fail(v_570) && success?(is-true(success?(1-proj-3-tuple(v_570))))) then (if not-caught-fail(v_572) then (v_572,3-proj-3-tuple(v_570),1-proj-3-tuple(v_570)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {119}let v_574: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_573),2-proj-3-tuple(v_567),3-proj-3-tuple(v_567)))) in
        {120}let v_575: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_565)) && success?(symmetricstatepack(1-proj-3-tuple(v_573),2-proj-3-tuple(v_567),3-proj-3-tuple(v_567)))) then (if (not-caught-fail(v_574) && success?(is-true(success?(1-proj-3-tuple(v_574))))) then symmetricstatepack(1-proj-3-tuple(v_574),2-proj-3-tuple(v_574),hash(3-proj-3-tuple(v_574),3-proj-3-tuple(v_565))) else fail-any) else fail-any)) in
        {121}let v_576: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_565)) && success?(1-proj-7-tuple(v_564))) then (if (not-caught-fail(v_567) && success?(is-true(success?(1-proj-3-tuple(v_567))))) then (if (not-caught-fail(v_573) && success?(is-true(success?(1-proj-3-tuple(v_573))))) then (if not-caught-fail(v_575) then (v_575,2-proj-3-tuple(v_573),3-proj-3-tuple(v_573)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {122}let v_577: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_576),2-proj-7-tuple(v_564),3-proj-7-tuple(v_564),4-proj-7-tuple(v_564),5-proj-7-tuple(v_564),6-proj-7-tuple(v_564),7-proj-7-tuple(v_564))) in
        {123}let v_578: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_576))) in
        {124}let v_579: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_578),zero)) in
        {125}let v_580: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_578),zero)) in
        {126}let v_581: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_578),zero)) in
        {127}let v_582: bitstring = catch-fail((if success?(2-proj-3-tuple(v_578)) then (if not-caught-fail(v_579) then (if not-caught-fail(v_580) then (if not-caught-fail(v_581) then (v_579,v_580,v_581) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {128}let v_583: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_582)) then cipherstatepack(1-proj-3-tuple(v_582),minnonce) else fail-any)) in
        {129}let v_584: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_582)) then cipherstatepack(2-proj-3-tuple(v_582),minnonce) else fail-any)) in
        {130}let v_585: bitstring = catch-fail((if success?(1-proj-3-tuple(v_576)) then (if (not-caught-fail(v_578) && success?(is-true(success?(1-proj-3-tuple(v_578))))) then (if (not-caught-fail(v_582) && success?(is-true(success?(1-proj-3-tuple(v_582))))) then (if not-caught-fail(v_583) then (if not-caught-fail(v_584) then (1-proj-3-tuple(v_576),v_583,v_584) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {131}let (hs_586: handshakestate,re_587: key,plaintext_d: bitstring,valid_588: bool,cs1: cipherstate,cs2: cipherstate) = (if (not-caught-fail(v_564) && success?(is-true(success?(1-proj-7-tuple(v_564))))) then (if (not-caught-fail(v_565) && success?(is-true(success?(1-proj-3-tuple(v_565))))) then (if not-caught-fail(v_566) then (if (not-caught-fail(v_576) && success?(is-true(success?(1-proj-3-tuple(v_576))))) then (if (v_566 && 3-proj-3-tuple(v_576)) then (if not-caught-fail(v_577) then (if (not-caught-fail(v_585) && success?(is-true(success?(1-proj-3-tuple(v_585))))) then (v_577,getpublickey(3-proj-7-tuple(v_564)),2-proj-3-tuple(v_576),true,2-proj-3-tuple(v_585),3-proj-3-tuple(v_585)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {132}event RecvMsg(me,them,stage_d,plaintext_d,valid_588);
        {133}insert statestore(me,them,statepack_e(hs_586));
        {134}event RecvEnd(valid_588)
    ) | (
        {136}event LeakS(phase0,me);
        {137}out(pub, key_s(me))
    ) | (
        {138}phase 1;
        {139}event LeakS(phase1,me);
        {140}out(pub, key_s(me))
    )
) | (
    {141}let them_589: principal = charlie in
    {142}let me_590: principal = alice in
    {143}let v_591: key = catch-fail(dhexp(key_s(me_590),g)) in
    {144}let s_592: keypair = (if not-caught-fail(v_591) then keypairpack(v_591,key_s(me_590)) else fail-any) in
    {145}out(pub, getpublickey(s_592));
    (
        {146}let e_593: keypair = keypairpack(empty,empty) in
        {147}let v_594: key = catch-fail(dhexp(key_s(them_589),g)) in
        {148}let rs_595: key = getpublickey((if not-caught-fail(v_594) then keypairpack(v_594,key_s(them_589)) else fail-any)) in
        {149}let re_596: key = empty in
        {150}let v_597: bitstring = catch-fail(hash(somename,empty)) in
        {151}let v_598: key = catch-fail(v_597) in
        {152}let v_599: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {153}let v_600: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_597) then (if not-caught-fail(v_598) then (if not-caught-fail(v_599) then symmetricstatepack(v_599,v_598,v_597) else fail-any) else fail-any) else fail-any))) in
        {154}let v_601: symmetricstate = catch-fail((if success?((if not-caught-fail(v_597) then (if not-caught-fail(v_598) then (if not-caught-fail(v_599) then symmetricstatepack(v_599,v_598,v_597) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_600) && success?(is-true(success?(1-proj-3-tuple(v_600))))) then symmetricstatepack(1-proj-3-tuple(v_600),2-proj-3-tuple(v_600),hash(3-proj-3-tuple(v_600),empty)) else fail-any) else fail-any)) in
        {155}let v_602: bitstring = catch-fail(symmetricstateunpack(v_601)) in
        {156}let v_603: symmetricstate = catch-fail((if success?(getpublickey(s_592)) then (if (not-caught-fail(v_602) && success?(is-true(success?(1-proj-3-tuple(v_602))))) then symmetricstatepack(1-proj-3-tuple(v_602),2-proj-3-tuple(v_602),hash(3-proj-3-tuple(v_602),getpublickey(s_592))) else fail-any) else fail-any)) in
        {157}let v_604: bitstring = catch-fail(symmetricstateunpack(v_603)) in
        {158}let v_605: symmetricstate = catch-fail((if (not-caught-fail(v_604) && success?(is-true(success?(1-proj-3-tuple(v_604))))) then symmetricstatepack(1-proj-3-tuple(v_604),2-proj-3-tuple(v_604),hash(3-proj-3-tuple(v_604),rs_595)) else fail-any)) in
        {159}let hs_606: handshakestate = (if not-caught-fail(v_601) then (if not-caught-fail(v_603) then (if not-caught-fail(v_605) then handshakestatepack(v_605,s_592,e_593,rs_595,re_596,empty,true) else fail-any) else fail-any) else fail-any) in
        {160}insert statestore(me_590,them_589,statepack_a(hs_606))
    ) | (
        {184}get statestore(=me_590,=them_589,statepack_a(hs_607: handshakestate)) in
        {161}let v_608: bitstring = catch-fail(handshakestateunpack(hs_607)) in
        {162}let v_609: bitstring = catch-fail((empty,empty,empty)) in
        {163}new key_e_610[me_590,them_589]: key;
        {164}let v_611: key = catch-fail(dhexp(key_e_610,g)) in
        {165}let v_612: keypair = catch-fail((if not-caught-fail(v_611) then keypairpack(v_611,key_e_610) else fail-any)) in
        {166}let v_613: bitstring = catch-fail(getpublickey(v_612)) in
        {167}let v_614: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_608))) in
        {168}let v_615: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_608)) then (if (not-caught-fail(v_614) && success?(is-true(success?(1-proj-3-tuple(v_614))))) then symmetricstatepack(1-proj-3-tuple(v_614),2-proj-3-tuple(v_614),hash(3-proj-3-tuple(v_614),v_613)) else fail-any) else fail-any)) in
        {169}let v_616: bitstring = catch-fail(symmetricstateunpack(v_615)) in
        {170}let v_617: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_616))) in
        {171}let v_618: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_617),2-proj-2-tuple(v_617),3-proj-3-tuple(v_616),msg_a(me_590,them_589))) in
        {172}let v_619: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_616))) in
        {173}let v_620: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_617))) && success?(1-proj-3-tuple(v_616))) then (if (not-caught-fail(v_619) && success?(is-true(success?(1-proj-2-tuple(v_619))))) then cipherstatepack(1-proj-2-tuple(v_619),increment_nonce(2-proj-2-tuple(v_617))) else fail-any) else fail-any)) in
        {174}let v_621: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_616)) && success?(1-proj-3-tuple(v_616))) then (if (not-caught-fail(v_617) && success?(is-true(success?(1-proj-2-tuple(v_617))))) then (if not-caught-fail(v_618) then (if not-caught-fail(v_620) then (v_620,v_618) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {175}let v_622: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_621),2-proj-3-tuple(v_616),3-proj-3-tuple(v_616)))) in
        {176}let v_623: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_621)) && success?(symmetricstatepack(1-proj-2-tuple(v_621),2-proj-3-tuple(v_616),3-proj-3-tuple(v_616)))) then (if (not-caught-fail(v_622) && success?(is-true(success?(1-proj-3-tuple(v_622))))) then symmetricstatepack(1-proj-3-tuple(v_622),2-proj-3-tuple(v_622),hash(3-proj-3-tuple(v_622),2-proj-2-tuple(v_621))) else fail-any) else fail-any)) in
        {177}let v_624: bitstring = catch-fail((if (not-caught-fail(v_616) && success?(is-true(success?(1-proj-3-tuple(v_616))))) then (if (not-caught-fail(v_621) && success?(is-true(success?(1-proj-2-tuple(v_621))))) then (if not-caught-fail(v_623) then (v_623,2-proj-2-tuple(v_621)) else fail-any) else fail-any) else fail-any)) in
        {178}let v_625: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_624),2-proj-7-tuple(v_608),v_612,4-proj-7-tuple(v_608),5-proj-7-tuple(v_608),6-proj-7-tuple(v_608),7-proj-7-tuple(v_608))) in
        {179}let v_626: bitstring = catch-fail(concat3(v_613,2-proj-3-tuple(v_609),2-proj-2-tuple(v_624))) in
        {180}let (hs_627: handshakestate,re_628: key,message_a_629: bitstring) = (if (not-caught-fail(v_608) && success?(is-true(success?(1-proj-7-tuple(v_608))))) then (if (not-caught-fail(v_609) && success?(is-true(success?(1-proj-3-tuple(v_609))))) then (if not-caught-fail(v_612) then (if not-caught-fail(v_613) then (if not-caught-fail(v_615) then (if (not-caught-fail(v_624) && success?(is-true(success?(1-proj-2-tuple(v_624))))) then (if not-caught-fail(v_625) then (if not-caught-fail(v_626) then (v_625,5-proj-7-tuple(v_608),v_626) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {181}event SendMsg(me_590,them_589,stage_a,msg_a(me_590,them_589),true);
        {182}insert statestore(me_590,them_589,statepack_b(hs_627));
        {183}out(pub, message_a_629)
    ) | (
        {227}get statestore(=me_590,=them_589,statepack_b(hs_630: handshakestate)) in
        {185}in(pub, message_b_631: bitstring);
        {186}let v_632: bitstring = catch-fail(handshakestateunpack(hs_630)) in
        {187}let v_633: bitstring = catch-fail(deconcat3(message_b_631)) in
        {188}let v_634: bool = catch-fail(true) in
        {189}let v_635: key = catch-fail(1-proj-3-tuple(v_633)) in
        {190}let v_636: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_632))) in
        {191}let v_637: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_632)) then (if (not-caught-fail(v_636) && success?(is-true(success?(1-proj-3-tuple(v_636))))) then symmetricstatepack(1-proj-3-tuple(v_636),2-proj-3-tuple(v_636),hash(3-proj-3-tuple(v_636),v_635)) else fail-any) else fail-any)) in
        {192}let v_638: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_632))) in
        {193}let v_639: bitstring = catch-fail(symmetricstateunpack(v_637)) in
        {194}let v_640: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_639),(if success?(3-proj-7-tuple(v_632)) then (if (not-caught-fail(v_638) && success?(is-true(success?(1-proj-2-tuple(v_638))))) then dhexp(2-proj-2-tuple(v_638),v_635) else fail-any) else fail-any))) in
        {195}let v_641: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_639),(if success?(3-proj-7-tuple(v_632)) then (if (not-caught-fail(v_638) && success?(is-true(success?(1-proj-2-tuple(v_638))))) then dhexp(2-proj-2-tuple(v_638),v_635) else fail-any) else fail-any))) in
        {196}let v_642: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_639),(if success?(3-proj-7-tuple(v_632)) then (if (not-caught-fail(v_638) && success?(is-true(success?(1-proj-2-tuple(v_638))))) then dhexp(2-proj-2-tuple(v_638),v_635) else fail-any) else fail-any))) in
        {197}let v_643: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_632)) then (if (not-caught-fail(v_638) && success?(is-true(success?(1-proj-2-tuple(v_638))))) then dhexp(2-proj-2-tuple(v_638),v_635) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_639))) then (if not-caught-fail(v_640) then (if not-caught-fail(v_641) then (if not-caught-fail(v_642) then (v_640,v_641,v_642) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {198}let v_644: symmetricstate = catch-fail((if success?((if success?(3-proj-7-tuple(v_632)) then (if (not-caught-fail(v_638) && success?(is-true(success?(1-proj-2-tuple(v_638))))) then dhexp(2-proj-2-tuple(v_638),v_635) else fail-any) else fail-any)) then (if (not-caught-fail(v_639) && success?(is-true(success?(1-proj-3-tuple(v_639))))) then (if (not-caught-fail(v_643) && success?(is-true(success?(1-proj-3-tuple(v_643))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_643)) then cipherstatepack(2-proj-3-tuple(v_643),minnonce) else fail-any),1-proj-3-tuple(v_643),3-proj-3-tuple(v_639)) else fail-any) else fail-any) else fail-any)) in
        {199}let v_645: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_632))) in
        {200}let v_646: bitstring = catch-fail(symmetricstateunpack(v_644)) in
        {201}let v_647: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_646),(if success?(2-proj-7-tuple(v_632)) then (if (not-caught-fail(v_645) && success?(is-true(success?(1-proj-2-tuple(v_645))))) then dhexp(2-proj-2-tuple(v_645),v_635) else fail-any) else fail-any))) in
        {202}let v_648: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_646),(if success?(2-proj-7-tuple(v_632)) then (if (not-caught-fail(v_645) && success?(is-true(success?(1-proj-2-tuple(v_645))))) then dhexp(2-proj-2-tuple(v_645),v_635) else fail-any) else fail-any))) in
        {203}let v_649: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_646),(if success?(2-proj-7-tuple(v_632)) then (if (not-caught-fail(v_645) && success?(is-true(success?(1-proj-2-tuple(v_645))))) then dhexp(2-proj-2-tuple(v_645),v_635) else fail-any) else fail-any))) in
        {204}let v_650: bitstring = catch-fail((if (success?((if success?(2-proj-7-tuple(v_632)) then (if (not-caught-fail(v_645) && success?(is-true(success?(1-proj-2-tuple(v_645))))) then dhexp(2-proj-2-tuple(v_645),v_635) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_646))) then (if not-caught-fail(v_647) then (if not-caught-fail(v_648) then (if not-caught-fail(v_649) then (v_647,v_648,v_649) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {205}let v_651: symmetricstate = catch-fail((if success?((if success?(2-proj-7-tuple(v_632)) then (if (not-caught-fail(v_645) && success?(is-true(success?(1-proj-2-tuple(v_645))))) then dhexp(2-proj-2-tuple(v_645),v_635) else fail-any) else fail-any)) then (if (not-caught-fail(v_646) && success?(is-true(success?(1-proj-3-tuple(v_646))))) then (if (not-caught-fail(v_650) && success?(is-true(success?(1-proj-3-tuple(v_650))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_650)) then cipherstatepack(2-proj-3-tuple(v_650),minnonce) else fail-any),1-proj-3-tuple(v_650),3-proj-3-tuple(v_646)) else fail-any) else fail-any) else fail-any)) in
        {206}let v_652: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_632))) in
        {207}let v_653: bitstring = catch-fail(symmetricstateunpack(v_651)) in
        {208}let v_654: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_653),(if (success?(4-proj-7-tuple(v_632)) && success?(3-proj-7-tuple(v_632))) then (if (not-caught-fail(v_652) && success?(is-true(success?(1-proj-2-tuple(v_652))))) then dhexp(2-proj-2-tuple(v_652),4-proj-7-tuple(v_632)) else fail-any) else fail-any))) in
        {209}let v_655: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_653),(if (success?(4-proj-7-tuple(v_632)) && success?(3-proj-7-tuple(v_632))) then (if (not-caught-fail(v_652) && success?(is-true(success?(1-proj-2-tuple(v_652))))) then dhexp(2-proj-2-tuple(v_652),4-proj-7-tuple(v_632)) else fail-any) else fail-any))) in
        {210}let v_656: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_653),(if (success?(4-proj-7-tuple(v_632)) && success?(3-proj-7-tuple(v_632))) then (if (not-caught-fail(v_652) && success?(is-true(success?(1-proj-2-tuple(v_652))))) then dhexp(2-proj-2-tuple(v_652),4-proj-7-tuple(v_632)) else fail-any) else fail-any))) in
        {211}let v_657: bitstring = catch-fail((if (success?((if (success?(4-proj-7-tuple(v_632)) && success?(3-proj-7-tuple(v_632))) then (if (not-caught-fail(v_652) && success?(is-true(success?(1-proj-2-tuple(v_652))))) then dhexp(2-proj-2-tuple(v_652),4-proj-7-tuple(v_632)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_653))) then (if not-caught-fail(v_654) then (if not-caught-fail(v_655) then (if not-caught-fail(v_656) then (v_654,v_655,v_656) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {212}let v_658: symmetricstate = catch-fail((if success?((if (success?(4-proj-7-tuple(v_632)) && success?(3-proj-7-tuple(v_632))) then (if (not-caught-fail(v_652) && success?(is-true(success?(1-proj-2-tuple(v_652))))) then dhexp(2-proj-2-tuple(v_652),4-proj-7-tuple(v_632)) else fail-any) else fail-any)) then (if (not-caught-fail(v_653) && success?(is-true(success?(1-proj-3-tuple(v_653))))) then (if (not-caught-fail(v_657) && success?(is-true(success?(1-proj-3-tuple(v_657))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_657)) then cipherstatepack(2-proj-3-tuple(v_657),minnonce) else fail-any),1-proj-3-tuple(v_657),3-proj-3-tuple(v_653)) else fail-any) else fail-any) else fail-any)) in
        {213}let v_659: bitstring = catch-fail(symmetricstateunpack(v_658)) in
        {214}let v_660: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_659))) in
        {215}let v_661: aead = catch-fail(decrypt(1-proj-2-tuple(v_660),2-proj-2-tuple(v_660),3-proj-3-tuple(v_659),3-proj-3-tuple(v_633))) in
        {216}let v_662: bitstring = catch-fail(aeadunpack(v_661)) in
        {217}let v_663: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_659))) in
        {218}let v_664: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_660))) && success?(1-proj-3-tuple(v_659))) then (if (not-caught-fail(v_663) && success?(is-true(success?(1-proj-2-tuple(v_663))))) then cipherstatepack(1-proj-2-tuple(v_663),increment_nonce(2-proj-2-tuple(v_660))) else fail-any) else fail-any)) in
        {219}let v_665: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_633)) && (success?(3-proj-3-tuple(v_659)) && success?(1-proj-3-tuple(v_659)))) then (if (not-caught-fail(v_660) && success?(is-true(success?(1-proj-2-tuple(v_660))))) then (if not-caught-fail(v_661) then (if (not-caught-fail(v_662) && success?(is-true(success?(1-proj-3-tuple(v_662))))) then (if not-caught-fail(v_664) then (v_664,3-proj-3-tuple(v_662),1-proj-3-tuple(v_662)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {220}let v_666: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_665),2-proj-3-tuple(v_659),3-proj-3-tuple(v_659)))) in
        {221}let v_667: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_633)) && success?(symmetricstatepack(1-proj-3-tuple(v_665),2-proj-3-tuple(v_659),3-proj-3-tuple(v_659)))) then (if (not-caught-fail(v_666) && success?(is-true(success?(1-proj-3-tuple(v_666))))) then symmetricstatepack(1-proj-3-tuple(v_666),2-proj-3-tuple(v_666),hash(3-proj-3-tuple(v_666),3-proj-3-tuple(v_633))) else fail-any) else fail-any)) in
        {222}let v_668: bitstring = catch-fail((if success?(3-proj-3-tuple(v_633)) then (if (not-caught-fail(v_659) && success?(is-true(success?(1-proj-3-tuple(v_659))))) then (if (not-caught-fail(v_665) && success?(is-true(success?(1-proj-3-tuple(v_665))))) then (if not-caught-fail(v_667) then (v_667,2-proj-3-tuple(v_665),3-proj-3-tuple(v_665)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {223}let v_669: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_668),2-proj-7-tuple(v_632),3-proj-7-tuple(v_632),4-proj-7-tuple(v_632),v_635,6-proj-7-tuple(v_632),7-proj-7-tuple(v_632))) in
        {224}let (hs_670: handshakestate,re_671: key,plaintext_b_672: bitstring,valid_673: bool) = (if (not-caught-fail(v_632) && success?(is-true(success?(1-proj-7-tuple(v_632))))) then (if (not-caught-fail(v_633) && success?(is-true(success?(1-proj-3-tuple(v_633))))) then (if not-caught-fail(v_634) then (if not-caught-fail(v_635) then (if not-caught-fail(v_637) then (if not-caught-fail(v_644) then (if not-caught-fail(v_651) then (if not-caught-fail(v_658) then (if (not-caught-fail(v_668) && success?(is-true(success?(1-proj-3-tuple(v_668))))) then (if (v_634 && 3-proj-3-tuple(v_668)) then (if not-caught-fail(v_669) then (v_669,getpublickey(3-proj-7-tuple(v_632)),2-proj-3-tuple(v_668),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {225}event RecvMsg(me_590,them_589,stage_b,plaintext_b_672,valid_673);
        {226}insert statestore(me_590,them_589,statepack_c(hs_670))
    ) | (
        {245}get statestore(=me_590,=them_589,statepack_c(hs_674: handshakestate)) in
        {228}let v_675: bitstring = catch-fail(handshakestateunpack(hs_674)) in
        {229}let v_676: bitstring = catch-fail((empty,empty,empty)) in
        {230}let v_677: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_675))) in
        {231}let v_678: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_677))) in
        {232}let v_679: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_678),2-proj-2-tuple(v_678),3-proj-3-tuple(v_677),msg_c(me_590,them_589))) in
        {233}let v_680: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_677))) in
        {234}let v_681: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_678))) && success?(1-proj-3-tuple(v_677))) then (if (not-caught-fail(v_680) && success?(is-true(success?(1-proj-2-tuple(v_680))))) then cipherstatepack(1-proj-2-tuple(v_680),increment_nonce(2-proj-2-tuple(v_678))) else fail-any) else fail-any)) in
        {235}let v_682: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_677)) && success?(1-proj-3-tuple(v_677))) then (if (not-caught-fail(v_678) && success?(is-true(success?(1-proj-2-tuple(v_678))))) then (if not-caught-fail(v_679) then (if not-caught-fail(v_681) then (v_681,v_679) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {236}let v_683: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_682),2-proj-3-tuple(v_677),3-proj-3-tuple(v_677)))) in
        {237}let v_684: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_682)) && success?(symmetricstatepack(1-proj-2-tuple(v_682),2-proj-3-tuple(v_677),3-proj-3-tuple(v_677)))) then (if (not-caught-fail(v_683) && success?(is-true(success?(1-proj-3-tuple(v_683))))) then symmetricstatepack(1-proj-3-tuple(v_683),2-proj-3-tuple(v_683),hash(3-proj-3-tuple(v_683),2-proj-2-tuple(v_682))) else fail-any) else fail-any)) in
        {238}let v_685: bitstring = catch-fail((if success?(1-proj-7-tuple(v_675)) then (if (not-caught-fail(v_677) && success?(is-true(success?(1-proj-3-tuple(v_677))))) then (if (not-caught-fail(v_682) && success?(is-true(success?(1-proj-2-tuple(v_682))))) then (if not-caught-fail(v_684) then (v_684,2-proj-2-tuple(v_682)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {239}let v_686: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_685),2-proj-7-tuple(v_675),3-proj-7-tuple(v_675),4-proj-7-tuple(v_675),5-proj-7-tuple(v_675),6-proj-7-tuple(v_675),7-proj-7-tuple(v_675))) in
        {240}let v_687: bitstring = catch-fail(concat3(1-proj-3-tuple(v_676),2-proj-3-tuple(v_676),2-proj-2-tuple(v_685))) in
        {241}let (hs_688: handshakestate,re_689: key,message_c_690: bitstring) = (if (not-caught-fail(v_675) && success?(is-true(success?(1-proj-7-tuple(v_675))))) then (if (not-caught-fail(v_676) && success?(is-true(success?(1-proj-3-tuple(v_676))))) then (if (not-caught-fail(v_685) && success?(is-true(success?(1-proj-2-tuple(v_685))))) then (if not-caught-fail(v_686) then (if not-caught-fail(v_687) then (v_686,5-proj-7-tuple(v_675),v_687) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {242}event SendMsg(me_590,them_589,stage_c,msg_c(me_590,them_589),true);
        {243}insert statestore(me_590,them_589,statepack_d(hs_688));
        {244}out(pub, message_c_690)
    ) | (
        {273}get statestore(=me_590,=them_589,statepack_d(hs_691: handshakestate)) in
        {246}in(pub, message_d_692: bitstring);
        {247}let v_693: bitstring = catch-fail(handshakestateunpack(hs_691)) in
        {248}let v_694: bitstring = catch-fail(deconcat3(message_d_692)) in
        {249}let v_695: bool = catch-fail(true) in
        {250}let v_696: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_693))) in
        {251}let v_697: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_696))) in
        {252}let v_698: aead = catch-fail(decrypt(1-proj-2-tuple(v_697),2-proj-2-tuple(v_697),3-proj-3-tuple(v_696),3-proj-3-tuple(v_694))) in
        {253}let v_699: bitstring = catch-fail(aeadunpack(v_698)) in
        {254}let v_700: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_696))) in
        {255}let v_701: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_697))) && success?(1-proj-3-tuple(v_696))) then (if (not-caught-fail(v_700) && success?(is-true(success?(1-proj-2-tuple(v_700))))) then cipherstatepack(1-proj-2-tuple(v_700),increment_nonce(2-proj-2-tuple(v_697))) else fail-any) else fail-any)) in
        {256}let v_702: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_694)) && (success?(3-proj-3-tuple(v_696)) && success?(1-proj-3-tuple(v_696)))) then (if (not-caught-fail(v_697) && success?(is-true(success?(1-proj-2-tuple(v_697))))) then (if not-caught-fail(v_698) then (if (not-caught-fail(v_699) && success?(is-true(success?(1-proj-3-tuple(v_699))))) then (if not-caught-fail(v_701) then (v_701,3-proj-3-tuple(v_699),1-proj-3-tuple(v_699)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {257}let v_703: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_702),2-proj-3-tuple(v_696),3-proj-3-tuple(v_696)))) in
        {258}let v_704: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_694)) && success?(symmetricstatepack(1-proj-3-tuple(v_702),2-proj-3-tuple(v_696),3-proj-3-tuple(v_696)))) then (if (not-caught-fail(v_703) && success?(is-true(success?(1-proj-3-tuple(v_703))))) then symmetricstatepack(1-proj-3-tuple(v_703),2-proj-3-tuple(v_703),hash(3-proj-3-tuple(v_703),3-proj-3-tuple(v_694))) else fail-any) else fail-any)) in
        {259}let v_705: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_694)) && success?(1-proj-7-tuple(v_693))) then (if (not-caught-fail(v_696) && success?(is-true(success?(1-proj-3-tuple(v_696))))) then (if (not-caught-fail(v_702) && success?(is-true(success?(1-proj-3-tuple(v_702))))) then (if not-caught-fail(v_704) then (v_704,2-proj-3-tuple(v_702),3-proj-3-tuple(v_702)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {260}let v_706: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_705),2-proj-7-tuple(v_693),3-proj-7-tuple(v_693),4-proj-7-tuple(v_693),5-proj-7-tuple(v_693),6-proj-7-tuple(v_693),7-proj-7-tuple(v_693))) in
        {261}let v_707: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_705))) in
        {262}let v_708: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_707),zero)) in
        {263}let v_709: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_707),zero)) in
        {264}let v_710: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_707),zero)) in
        {265}let v_711: bitstring = catch-fail((if success?(2-proj-3-tuple(v_707)) then (if not-caught-fail(v_708) then (if not-caught-fail(v_709) then (if not-caught-fail(v_710) then (v_708,v_709,v_710) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {266}let v_712: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_711)) then cipherstatepack(1-proj-3-tuple(v_711),minnonce) else fail-any)) in
        {267}let v_713: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_711)) then cipherstatepack(2-proj-3-tuple(v_711),minnonce) else fail-any)) in
        {268}let v_714: bitstring = catch-fail((if success?(1-proj-3-tuple(v_705)) then (if (not-caught-fail(v_707) && success?(is-true(success?(1-proj-3-tuple(v_707))))) then (if (not-caught-fail(v_711) && success?(is-true(success?(1-proj-3-tuple(v_711))))) then (if not-caught-fail(v_712) then (if not-caught-fail(v_713) then (1-proj-3-tuple(v_705),v_712,v_713) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {269}let (hs_715: handshakestate,re_716: key,plaintext_d_717: bitstring,valid_718: bool,cs1_719: cipherstate,cs2_720: cipherstate) = (if (not-caught-fail(v_693) && success?(is-true(success?(1-proj-7-tuple(v_693))))) then (if (not-caught-fail(v_694) && success?(is-true(success?(1-proj-3-tuple(v_694))))) then (if not-caught-fail(v_695) then (if (not-caught-fail(v_705) && success?(is-true(success?(1-proj-3-tuple(v_705))))) then (if (v_695 && 3-proj-3-tuple(v_705)) then (if not-caught-fail(v_706) then (if (not-caught-fail(v_714) && success?(is-true(success?(1-proj-3-tuple(v_714))))) then (v_706,getpublickey(3-proj-7-tuple(v_693)),2-proj-3-tuple(v_705),true,2-proj-3-tuple(v_714),3-proj-3-tuple(v_714)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {270}event RecvMsg(me_590,them_589,stage_d,plaintext_d_717,valid_718);
        {271}insert statestore(me_590,them_589,statepack_e(hs_715));
        {272}event RecvEnd(valid_718)
    ) | (
        {274}event LeakS(phase0,me_590);
        {275}out(pub, key_s(me_590))
    ) | (
        {276}phase 1;
        {277}event LeakS(phase1,me_590);
        {278}out(pub, key_s(me_590))
    )
) | (
    {279}let them_721: principal = alice in
    {280}let me_722: principal = bob in
    {281}let v_723: key = catch-fail(dhexp(key_s(me_722),g)) in
    {282}let s_724: keypair = (if not-caught-fail(v_723) then keypairpack(v_723,key_s(me_722)) else fail-any) in
    {283}out(pub, getpublickey(s_724));
    (
        {284}let e_725: keypair = keypairpack(empty,empty) in
        {285}let v_726: key = catch-fail(dhexp(key_s(them_721),g)) in
        {286}let rs_727: key = getpublickey((if not-caught-fail(v_726) then keypairpack(v_726,key_s(them_721)) else fail-any)) in
        {287}let re_728: key = empty in
        {288}let v_729: bitstring = catch-fail(hash(somename,empty)) in
        {289}let v_730: key = catch-fail(v_729) in
        {290}let v_731: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {291}let v_732: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_729) then (if not-caught-fail(v_730) then (if not-caught-fail(v_731) then symmetricstatepack(v_731,v_730,v_729) else fail-any) else fail-any) else fail-any))) in
        {292}let v_733: symmetricstate = catch-fail((if success?((if not-caught-fail(v_729) then (if not-caught-fail(v_730) then (if not-caught-fail(v_731) then symmetricstatepack(v_731,v_730,v_729) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_732) && success?(is-true(success?(1-proj-3-tuple(v_732))))) then symmetricstatepack(1-proj-3-tuple(v_732),2-proj-3-tuple(v_732),hash(3-proj-3-tuple(v_732),empty)) else fail-any) else fail-any)) in
        {293}let v_734: bitstring = catch-fail(symmetricstateunpack(v_733)) in
        {294}let v_735: symmetricstate = catch-fail((if (not-caught-fail(v_734) && success?(is-true(success?(1-proj-3-tuple(v_734))))) then symmetricstatepack(1-proj-3-tuple(v_734),2-proj-3-tuple(v_734),hash(3-proj-3-tuple(v_734),rs_727)) else fail-any)) in
        {295}let v_736: bitstring = catch-fail(symmetricstateunpack(v_735)) in
        {296}let v_737: symmetricstate = catch-fail((if success?(getpublickey(s_724)) then (if (not-caught-fail(v_736) && success?(is-true(success?(1-proj-3-tuple(v_736))))) then symmetricstatepack(1-proj-3-tuple(v_736),2-proj-3-tuple(v_736),hash(3-proj-3-tuple(v_736),getpublickey(s_724))) else fail-any) else fail-any)) in
        {297}let hs_738: handshakestate = (if not-caught-fail(v_733) then (if not-caught-fail(v_735) then (if not-caught-fail(v_737) then handshakestatepack(v_737,s_724,e_725,rs_727,re_728,empty,false) else fail-any) else fail-any) else fail-any) in
        {298}insert statestore(me_722,them_721,statepack_a(hs_738))
    ) | (
        {320}get statestore(=me_722,=them_721,statepack_a(hs_739: handshakestate)) in
        {299}in(pub, message_a_740: bitstring);
        {300}let v_741: bitstring = catch-fail(handshakestateunpack(hs_739)) in
        {301}let v_742: bitstring = catch-fail(deconcat3(message_a_740)) in
        {302}let v_743: bool = catch-fail(true) in
        {303}let v_744: key = catch-fail(1-proj-3-tuple(v_742)) in
        {304}let v_745: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_741))) in
        {305}let v_746: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_741)) then (if (not-caught-fail(v_745) && success?(is-true(success?(1-proj-3-tuple(v_745))))) then symmetricstatepack(1-proj-3-tuple(v_745),2-proj-3-tuple(v_745),hash(3-proj-3-tuple(v_745),v_744)) else fail-any) else fail-any)) in
        {306}let v_747: bitstring = catch-fail(symmetricstateunpack(v_746)) in
        {307}let v_748: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_747))) in
        {308}let v_749: aead = catch-fail(decrypt(1-proj-2-tuple(v_748),2-proj-2-tuple(v_748),3-proj-3-tuple(v_747),3-proj-3-tuple(v_742))) in
        {309}let v_750: bitstring = catch-fail(aeadunpack(v_749)) in
        {310}let v_751: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_747))) in
        {311}let v_752: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_748))) && success?(1-proj-3-tuple(v_747))) then (if (not-caught-fail(v_751) && success?(is-true(success?(1-proj-2-tuple(v_751))))) then cipherstatepack(1-proj-2-tuple(v_751),increment_nonce(2-proj-2-tuple(v_748))) else fail-any) else fail-any)) in
        {312}let v_753: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_742)) && (success?(3-proj-3-tuple(v_747)) && success?(1-proj-3-tuple(v_747)))) then (if (not-caught-fail(v_748) && success?(is-true(success?(1-proj-2-tuple(v_748))))) then (if not-caught-fail(v_749) then (if (not-caught-fail(v_750) && success?(is-true(success?(1-proj-3-tuple(v_750))))) then (if not-caught-fail(v_752) then (v_752,3-proj-3-tuple(v_750),1-proj-3-tuple(v_750)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {313}let v_754: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_753),2-proj-3-tuple(v_747),3-proj-3-tuple(v_747)))) in
        {314}let v_755: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_742)) && success?(symmetricstatepack(1-proj-3-tuple(v_753),2-proj-3-tuple(v_747),3-proj-3-tuple(v_747)))) then (if (not-caught-fail(v_754) && success?(is-true(success?(1-proj-3-tuple(v_754))))) then symmetricstatepack(1-proj-3-tuple(v_754),2-proj-3-tuple(v_754),hash(3-proj-3-tuple(v_754),3-proj-3-tuple(v_742))) else fail-any) else fail-any)) in
        {315}let v_756: bitstring = catch-fail((if success?(3-proj-3-tuple(v_742)) then (if (not-caught-fail(v_747) && success?(is-true(success?(1-proj-3-tuple(v_747))))) then (if (not-caught-fail(v_753) && success?(is-true(success?(1-proj-3-tuple(v_753))))) then (if not-caught-fail(v_755) then (v_755,2-proj-3-tuple(v_753),3-proj-3-tuple(v_753)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {316}let v_757: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_756),2-proj-7-tuple(v_741),3-proj-7-tuple(v_741),4-proj-7-tuple(v_741),v_744,6-proj-7-tuple(v_741),7-proj-7-tuple(v_741))) in
        {317}let (hs_758: handshakestate,re_759: key,plaintext_a: bitstring,valid_760: bool) = (if (not-caught-fail(v_741) && success?(is-true(success?(1-proj-7-tuple(v_741))))) then (if (not-caught-fail(v_742) && success?(is-true(success?(1-proj-3-tuple(v_742))))) then (if not-caught-fail(v_743) then (if not-caught-fail(v_744) then (if not-caught-fail(v_746) then (if (not-caught-fail(v_756) && success?(is-true(success?(1-proj-3-tuple(v_756))))) then (if (v_743 && 3-proj-3-tuple(v_756)) then (if not-caught-fail(v_757) then (v_757,getpublickey(3-proj-7-tuple(v_741)),2-proj-3-tuple(v_756),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {318}event RecvMsg(me_722,them_721,stage_a,plaintext_a,valid_760);
        {319}insert statestore(me_722,them_721,statepack_b(hs_758))
    ) | (
        {365}get statestore(=me_722,=them_721,statepack_b(hs_761: handshakestate)) in
        {321}let v_762: bitstring = catch-fail(handshakestateunpack(hs_761)) in
        {322}let v_763: bitstring = catch-fail((empty,empty,empty)) in
        {323}new key_e_764[me_722,them_721]: key;
        {324}let v_765: key = catch-fail(dhexp(key_e_764,g)) in
        {325}let v_766: keypair = catch-fail((if not-caught-fail(v_765) then keypairpack(v_765,key_e_764) else fail-any)) in
        {326}let v_767: bitstring = catch-fail(getpublickey(v_766)) in
        {327}let v_768: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_762))) in
        {328}let v_769: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_762)) then (if (not-caught-fail(v_768) && success?(is-true(success?(1-proj-3-tuple(v_768))))) then symmetricstatepack(1-proj-3-tuple(v_768),2-proj-3-tuple(v_768),hash(3-proj-3-tuple(v_768),v_767)) else fail-any) else fail-any)) in
        {329}let v_770: bitstring = catch-fail(keypairunpack(v_766)) in
        {330}let v_771: bitstring = catch-fail(symmetricstateunpack(v_769)) in
        {331}let v_772: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_771),(if success?(5-proj-7-tuple(v_762)) then (if (not-caught-fail(v_770) && success?(is-true(success?(1-proj-2-tuple(v_770))))) then dhexp(2-proj-2-tuple(v_770),5-proj-7-tuple(v_762)) else fail-any) else fail-any))) in
        {332}let v_773: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_771),(if success?(5-proj-7-tuple(v_762)) then (if (not-caught-fail(v_770) && success?(is-true(success?(1-proj-2-tuple(v_770))))) then dhexp(2-proj-2-tuple(v_770),5-proj-7-tuple(v_762)) else fail-any) else fail-any))) in
        {333}let v_774: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_771),(if success?(5-proj-7-tuple(v_762)) then (if (not-caught-fail(v_770) && success?(is-true(success?(1-proj-2-tuple(v_770))))) then dhexp(2-proj-2-tuple(v_770),5-proj-7-tuple(v_762)) else fail-any) else fail-any))) in
        {334}let v_775: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_762)) then (if (not-caught-fail(v_770) && success?(is-true(success?(1-proj-2-tuple(v_770))))) then dhexp(2-proj-2-tuple(v_770),5-proj-7-tuple(v_762)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_771))) then (if not-caught-fail(v_772) then (if not-caught-fail(v_773) then (if not-caught-fail(v_774) then (v_772,v_773,v_774) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {335}let v_776: symmetricstate = catch-fail((if success?((if success?(5-proj-7-tuple(v_762)) then (if (not-caught-fail(v_770) && success?(is-true(success?(1-proj-2-tuple(v_770))))) then dhexp(2-proj-2-tuple(v_770),5-proj-7-tuple(v_762)) else fail-any) else fail-any)) then (if (not-caught-fail(v_771) && success?(is-true(success?(1-proj-3-tuple(v_771))))) then (if (not-caught-fail(v_775) && success?(is-true(success?(1-proj-3-tuple(v_775))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_775)) then cipherstatepack(2-proj-3-tuple(v_775),minnonce) else fail-any),1-proj-3-tuple(v_775),3-proj-3-tuple(v_771)) else fail-any) else fail-any) else fail-any)) in
        {336}let v_777: bitstring = catch-fail(keypairunpack(v_766)) in
        {337}let v_778: bitstring = catch-fail(symmetricstateunpack(v_776)) in
        {338}let v_779: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_778),(if success?(4-proj-7-tuple(v_762)) then (if (not-caught-fail(v_777) && success?(is-true(success?(1-proj-2-tuple(v_777))))) then dhexp(2-proj-2-tuple(v_777),4-proj-7-tuple(v_762)) else fail-any) else fail-any))) in
        {339}let v_780: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_778),(if success?(4-proj-7-tuple(v_762)) then (if (not-caught-fail(v_777) && success?(is-true(success?(1-proj-2-tuple(v_777))))) then dhexp(2-proj-2-tuple(v_777),4-proj-7-tuple(v_762)) else fail-any) else fail-any))) in
        {340}let v_781: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_778),(if success?(4-proj-7-tuple(v_762)) then (if (not-caught-fail(v_777) && success?(is-true(success?(1-proj-2-tuple(v_777))))) then dhexp(2-proj-2-tuple(v_777),4-proj-7-tuple(v_762)) else fail-any) else fail-any))) in
        {341}let v_782: bitstring = catch-fail((if (success?((if success?(4-proj-7-tuple(v_762)) then (if (not-caught-fail(v_777) && success?(is-true(success?(1-proj-2-tuple(v_777))))) then dhexp(2-proj-2-tuple(v_777),4-proj-7-tuple(v_762)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_778))) then (if not-caught-fail(v_779) then (if not-caught-fail(v_780) then (if not-caught-fail(v_781) then (v_779,v_780,v_781) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {342}let v_783: symmetricstate = catch-fail((if success?((if success?(4-proj-7-tuple(v_762)) then (if (not-caught-fail(v_777) && success?(is-true(success?(1-proj-2-tuple(v_777))))) then dhexp(2-proj-2-tuple(v_777),4-proj-7-tuple(v_762)) else fail-any) else fail-any)) then (if (not-caught-fail(v_778) && success?(is-true(success?(1-proj-3-tuple(v_778))))) then (if (not-caught-fail(v_782) && success?(is-true(success?(1-proj-3-tuple(v_782))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_782)) then cipherstatepack(2-proj-3-tuple(v_782),minnonce) else fail-any),1-proj-3-tuple(v_782),3-proj-3-tuple(v_778)) else fail-any) else fail-any) else fail-any)) in
        {343}let v_784: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_762))) in
        {344}let v_785: bitstring = catch-fail(symmetricstateunpack(v_783)) in
        {345}let v_786: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_785),(if (success?(5-proj-7-tuple(v_762)) && success?(2-proj-7-tuple(v_762))) then (if (not-caught-fail(v_784) && success?(is-true(success?(1-proj-2-tuple(v_784))))) then dhexp(2-proj-2-tuple(v_784),5-proj-7-tuple(v_762)) else fail-any) else fail-any))) in
        {346}let v_787: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_785),(if (success?(5-proj-7-tuple(v_762)) && success?(2-proj-7-tuple(v_762))) then (if (not-caught-fail(v_784) && success?(is-true(success?(1-proj-2-tuple(v_784))))) then dhexp(2-proj-2-tuple(v_784),5-proj-7-tuple(v_762)) else fail-any) else fail-any))) in
        {347}let v_788: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_785),(if (success?(5-proj-7-tuple(v_762)) && success?(2-proj-7-tuple(v_762))) then (if (not-caught-fail(v_784) && success?(is-true(success?(1-proj-2-tuple(v_784))))) then dhexp(2-proj-2-tuple(v_784),5-proj-7-tuple(v_762)) else fail-any) else fail-any))) in
        {348}let v_789: bitstring = catch-fail((if (success?((if (success?(5-proj-7-tuple(v_762)) && success?(2-proj-7-tuple(v_762))) then (if (not-caught-fail(v_784) && success?(is-true(success?(1-proj-2-tuple(v_784))))) then dhexp(2-proj-2-tuple(v_784),5-proj-7-tuple(v_762)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_785))) then (if not-caught-fail(v_786) then (if not-caught-fail(v_787) then (if not-caught-fail(v_788) then (v_786,v_787,v_788) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {349}let v_790: symmetricstate = catch-fail((if success?((if (success?(5-proj-7-tuple(v_762)) && success?(2-proj-7-tuple(v_762))) then (if (not-caught-fail(v_784) && success?(is-true(success?(1-proj-2-tuple(v_784))))) then dhexp(2-proj-2-tuple(v_784),5-proj-7-tuple(v_762)) else fail-any) else fail-any)) then (if (not-caught-fail(v_785) && success?(is-true(success?(1-proj-3-tuple(v_785))))) then (if (not-caught-fail(v_789) && success?(is-true(success?(1-proj-3-tuple(v_789))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_789)) then cipherstatepack(2-proj-3-tuple(v_789),minnonce) else fail-any),1-proj-3-tuple(v_789),3-proj-3-tuple(v_785)) else fail-any) else fail-any) else fail-any)) in
        {350}let v_791: bitstring = catch-fail(symmetricstateunpack(v_790)) in
        {351}let v_792: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_791))) in
        {352}let v_793: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_792),2-proj-2-tuple(v_792),3-proj-3-tuple(v_791),msg_b(me_722,them_721))) in
        {353}let v_794: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_791))) in
        {354}let v_795: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_792))) && success?(1-proj-3-tuple(v_791))) then (if (not-caught-fail(v_794) && success?(is-true(success?(1-proj-2-tuple(v_794))))) then cipherstatepack(1-proj-2-tuple(v_794),increment_nonce(2-proj-2-tuple(v_792))) else fail-any) else fail-any)) in
        {355}let v_796: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_791)) && success?(1-proj-3-tuple(v_791))) then (if (not-caught-fail(v_792) && success?(is-true(success?(1-proj-2-tuple(v_792))))) then (if not-caught-fail(v_793) then (if not-caught-fail(v_795) then (v_795,v_793) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {356}let v_797: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_796),2-proj-3-tuple(v_791),3-proj-3-tuple(v_791)))) in
        {357}let v_798: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_796)) && success?(symmetricstatepack(1-proj-2-tuple(v_796),2-proj-3-tuple(v_791),3-proj-3-tuple(v_791)))) then (if (not-caught-fail(v_797) && success?(is-true(success?(1-proj-3-tuple(v_797))))) then symmetricstatepack(1-proj-3-tuple(v_797),2-proj-3-tuple(v_797),hash(3-proj-3-tuple(v_797),2-proj-2-tuple(v_796))) else fail-any) else fail-any)) in
        {358}let v_799: bitstring = catch-fail((if (not-caught-fail(v_791) && success?(is-true(success?(1-proj-3-tuple(v_791))))) then (if (not-caught-fail(v_796) && success?(is-true(success?(1-proj-2-tuple(v_796))))) then (if not-caught-fail(v_798) then (v_798,2-proj-2-tuple(v_796)) else fail-any) else fail-any) else fail-any)) in
        {359}let v_800: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_799),2-proj-7-tuple(v_762),v_766,4-proj-7-tuple(v_762),5-proj-7-tuple(v_762),6-proj-7-tuple(v_762),7-proj-7-tuple(v_762))) in
        {360}let v_801: bitstring = catch-fail(concat3(v_767,2-proj-3-tuple(v_763),2-proj-2-tuple(v_799))) in
        {361}let (hs_802: handshakestate,re_803: key,message_b_804: bitstring) = (if (not-caught-fail(v_762) && success?(is-true(success?(1-proj-7-tuple(v_762))))) then (if (not-caught-fail(v_763) && success?(is-true(success?(1-proj-3-tuple(v_763))))) then (if not-caught-fail(v_766) then (if not-caught-fail(v_767) then (if not-caught-fail(v_769) then (if not-caught-fail(v_776) then (if not-caught-fail(v_783) then (if not-caught-fail(v_790) then (if (not-caught-fail(v_799) && success?(is-true(success?(1-proj-2-tuple(v_799))))) then (if not-caught-fail(v_800) then (if not-caught-fail(v_801) then (v_800,5-proj-7-tuple(v_762),v_801) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {362}event SendMsg(me_722,them_721,stage_b,msg_b(me_722,them_721),true);
        {363}insert statestore(me_722,them_721,statepack_c(hs_802));
        {364}out(pub, message_b_804)
    ) | (
        {384}get statestore(=me_722,=them_721,statepack_c(hs_805: handshakestate)) in
        {366}in(pub, message_c_806: bitstring);
        {367}let v_807: bitstring = catch-fail(handshakestateunpack(hs_805)) in
        {368}let v_808: bitstring = catch-fail(deconcat3(message_c_806)) in
        {369}let v_809: bool = catch-fail(true) in
        {370}let v_810: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_807))) in
        {371}let v_811: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_810))) in
        {372}let v_812: aead = catch-fail(decrypt(1-proj-2-tuple(v_811),2-proj-2-tuple(v_811),3-proj-3-tuple(v_810),3-proj-3-tuple(v_808))) in
        {373}let v_813: bitstring = catch-fail(aeadunpack(v_812)) in
        {374}let v_814: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_810))) in
        {375}let v_815: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_811))) && success?(1-proj-3-tuple(v_810))) then (if (not-caught-fail(v_814) && success?(is-true(success?(1-proj-2-tuple(v_814))))) then cipherstatepack(1-proj-2-tuple(v_814),increment_nonce(2-proj-2-tuple(v_811))) else fail-any) else fail-any)) in
        {376}let v_816: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_808)) && (success?(3-proj-3-tuple(v_810)) && success?(1-proj-3-tuple(v_810)))) then (if (not-caught-fail(v_811) && success?(is-true(success?(1-proj-2-tuple(v_811))))) then (if not-caught-fail(v_812) then (if (not-caught-fail(v_813) && success?(is-true(success?(1-proj-3-tuple(v_813))))) then (if not-caught-fail(v_815) then (v_815,3-proj-3-tuple(v_813),1-proj-3-tuple(v_813)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {377}let v_817: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_816),2-proj-3-tuple(v_810),3-proj-3-tuple(v_810)))) in
        {378}let v_818: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_808)) && success?(symmetricstatepack(1-proj-3-tuple(v_816),2-proj-3-tuple(v_810),3-proj-3-tuple(v_810)))) then (if (not-caught-fail(v_817) && success?(is-true(success?(1-proj-3-tuple(v_817))))) then symmetricstatepack(1-proj-3-tuple(v_817),2-proj-3-tuple(v_817),hash(3-proj-3-tuple(v_817),3-proj-3-tuple(v_808))) else fail-any) else fail-any)) in
        {379}let v_819: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_808)) && success?(1-proj-7-tuple(v_807))) then (if (not-caught-fail(v_810) && success?(is-true(success?(1-proj-3-tuple(v_810))))) then (if (not-caught-fail(v_816) && success?(is-true(success?(1-proj-3-tuple(v_816))))) then (if not-caught-fail(v_818) then (v_818,2-proj-3-tuple(v_816),3-proj-3-tuple(v_816)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {380}let v_820: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_819),2-proj-7-tuple(v_807),3-proj-7-tuple(v_807),4-proj-7-tuple(v_807),5-proj-7-tuple(v_807),6-proj-7-tuple(v_807),7-proj-7-tuple(v_807))) in
        {381}let (hs_821: handshakestate,re_822: key,plaintext_c: bitstring,valid_823: bool) = (if (not-caught-fail(v_807) && success?(is-true(success?(1-proj-7-tuple(v_807))))) then (if (not-caught-fail(v_808) && success?(is-true(success?(1-proj-3-tuple(v_808))))) then (if not-caught-fail(v_809) then (if (not-caught-fail(v_819) && success?(is-true(success?(1-proj-3-tuple(v_819))))) then (if (v_809 && 3-proj-3-tuple(v_819)) then (if not-caught-fail(v_820) then (v_820,getpublickey(3-proj-7-tuple(v_807)),2-proj-3-tuple(v_819),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {382}event RecvMsg(me_722,them_721,stage_c,plaintext_c,valid_823);
        {383}insert statestore(me_722,them_721,statepack_d(hs_821))
    ) | (
        {410}get statestore(=me_722,=them_721,statepack_d(hs_824: handshakestate)) in
        {385}let v_825: bitstring = catch-fail(handshakestateunpack(hs_824)) in
        {386}let v_826: bitstring = catch-fail((empty,empty,empty)) in
        {387}let v_827: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_825))) in
        {388}let v_828: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_827))) in
        {389}let v_829: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_828),2-proj-2-tuple(v_828),3-proj-3-tuple(v_827),msg_d(me_722,them_721))) in
        {390}let v_830: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_827))) in
        {391}let v_831: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_828))) && success?(1-proj-3-tuple(v_827))) then (if (not-caught-fail(v_830) && success?(is-true(success?(1-proj-2-tuple(v_830))))) then cipherstatepack(1-proj-2-tuple(v_830),increment_nonce(2-proj-2-tuple(v_828))) else fail-any) else fail-any)) in
        {392}let v_832: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_827)) && success?(1-proj-3-tuple(v_827))) then (if (not-caught-fail(v_828) && success?(is-true(success?(1-proj-2-tuple(v_828))))) then (if not-caught-fail(v_829) then (if not-caught-fail(v_831) then (v_831,v_829) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {393}let v_833: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_832),2-proj-3-tuple(v_827),3-proj-3-tuple(v_827)))) in
        {394}let v_834: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_832)) && success?(symmetricstatepack(1-proj-2-tuple(v_832),2-proj-3-tuple(v_827),3-proj-3-tuple(v_827)))) then (if (not-caught-fail(v_833) && success?(is-true(success?(1-proj-3-tuple(v_833))))) then symmetricstatepack(1-proj-3-tuple(v_833),2-proj-3-tuple(v_833),hash(3-proj-3-tuple(v_833),2-proj-2-tuple(v_832))) else fail-any) else fail-any)) in
        {395}let v_835: bitstring = catch-fail((if success?(1-proj-7-tuple(v_825)) then (if (not-caught-fail(v_827) && success?(is-true(success?(1-proj-3-tuple(v_827))))) then (if (not-caught-fail(v_832) && success?(is-true(success?(1-proj-2-tuple(v_832))))) then (if not-caught-fail(v_834) then (v_834,2-proj-2-tuple(v_832)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {396}let v_836: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_835),2-proj-7-tuple(v_825),3-proj-7-tuple(v_825),4-proj-7-tuple(v_825),5-proj-7-tuple(v_825),6-proj-7-tuple(v_825),7-proj-7-tuple(v_825))) in
        {397}let v_837: bitstring = catch-fail(concat3(1-proj-3-tuple(v_826),2-proj-3-tuple(v_826),2-proj-2-tuple(v_835))) in
        {398}let v_838: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_835))) in
        {399}let v_839: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_838),zero)) in
        {400}let v_840: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_838),zero)) in
        {401}let v_841: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_838),zero)) in
        {402}let v_842: bitstring = catch-fail((if success?(2-proj-3-tuple(v_838)) then (if not-caught-fail(v_839) then (if not-caught-fail(v_840) then (if not-caught-fail(v_841) then (v_839,v_840,v_841) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {403}let v_843: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_842)) then cipherstatepack(1-proj-3-tuple(v_842),minnonce) else fail-any)) in
        {404}let v_844: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_842)) then cipherstatepack(2-proj-3-tuple(v_842),minnonce) else fail-any)) in
        {405}let v_845: bitstring = catch-fail((if success?(1-proj-2-tuple(v_835)) then (if (not-caught-fail(v_838) && success?(is-true(success?(1-proj-3-tuple(v_838))))) then (if (not-caught-fail(v_842) && success?(is-true(success?(1-proj-3-tuple(v_842))))) then (if not-caught-fail(v_843) then (if not-caught-fail(v_844) then (1-proj-2-tuple(v_835),v_843,v_844) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {406}let (hs_846: handshakestate,re_847: key,message_d_848: bitstring,cs1_849: cipherstate,cs2_850: cipherstate) = (if (not-caught-fail(v_825) && success?(is-true(success?(1-proj-7-tuple(v_825))))) then (if (not-caught-fail(v_826) && success?(is-true(success?(1-proj-3-tuple(v_826))))) then (if (not-caught-fail(v_835) && success?(is-true(success?(1-proj-2-tuple(v_835))))) then (if not-caught-fail(v_836) then (if not-caught-fail(v_837) then (if (not-caught-fail(v_845) && success?(is-true(success?(1-proj-3-tuple(v_845))))) then (v_836,5-proj-7-tuple(v_825),v_837,2-proj-3-tuple(v_845),3-proj-3-tuple(v_845)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {407}event SendMsg(me_722,them_721,stage_d,msg_d(me_722,them_721),true);
        {408}insert statestore(me_722,them_721,statepack_e(hs_846));
        {409}out(pub, message_d_848)
    ) | (
        {411}event LeakS(phase0,me_722);
        {412}out(pub, key_s(me_722))
    ) | (
        {413}phase 1;
        {414}event LeakS(phase1,me_722);
        {415}out(pub, key_s(me_722))
    )
) | (
    {416}let them_851: principal = charlie in
    {417}let me_852: principal = bob in
    {418}let v_853: key = catch-fail(dhexp(key_s(me_852),g)) in
    {419}let s_854: keypair = (if not-caught-fail(v_853) then keypairpack(v_853,key_s(me_852)) else fail-any) in
    {420}out(pub, getpublickey(s_854));
    (
        {421}let e_855: keypair = keypairpack(empty,empty) in
        {422}let v_856: key = catch-fail(dhexp(key_s(them_851),g)) in
        {423}let rs_857: key = getpublickey((if not-caught-fail(v_856) then keypairpack(v_856,key_s(them_851)) else fail-any)) in
        {424}let re_858: key = empty in
        {425}let v_859: bitstring = catch-fail(hash(somename,empty)) in
        {426}let v_860: key = catch-fail(v_859) in
        {427}let v_861: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {428}let v_862: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_859) then (if not-caught-fail(v_860) then (if not-caught-fail(v_861) then symmetricstatepack(v_861,v_860,v_859) else fail-any) else fail-any) else fail-any))) in
        {429}let v_863: symmetricstate = catch-fail((if success?((if not-caught-fail(v_859) then (if not-caught-fail(v_860) then (if not-caught-fail(v_861) then symmetricstatepack(v_861,v_860,v_859) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_862) && success?(is-true(success?(1-proj-3-tuple(v_862))))) then symmetricstatepack(1-proj-3-tuple(v_862),2-proj-3-tuple(v_862),hash(3-proj-3-tuple(v_862),empty)) else fail-any) else fail-any)) in
        {430}let v_864: bitstring = catch-fail(symmetricstateunpack(v_863)) in
        {431}let v_865: symmetricstate = catch-fail((if (not-caught-fail(v_864) && success?(is-true(success?(1-proj-3-tuple(v_864))))) then symmetricstatepack(1-proj-3-tuple(v_864),2-proj-3-tuple(v_864),hash(3-proj-3-tuple(v_864),rs_857)) else fail-any)) in
        {432}let v_866: bitstring = catch-fail(symmetricstateunpack(v_865)) in
        {433}let v_867: symmetricstate = catch-fail((if success?(getpublickey(s_854)) then (if (not-caught-fail(v_866) && success?(is-true(success?(1-proj-3-tuple(v_866))))) then symmetricstatepack(1-proj-3-tuple(v_866),2-proj-3-tuple(v_866),hash(3-proj-3-tuple(v_866),getpublickey(s_854))) else fail-any) else fail-any)) in
        {434}let hs_868: handshakestate = (if not-caught-fail(v_863) then (if not-caught-fail(v_865) then (if not-caught-fail(v_867) then handshakestatepack(v_867,s_854,e_855,rs_857,re_858,empty,false) else fail-any) else fail-any) else fail-any) in
        {435}insert statestore(me_852,them_851,statepack_a(hs_868))
    ) | (
        {457}get statestore(=me_852,=them_851,statepack_a(hs_869: handshakestate)) in
        {436}in(pub, message_a_870: bitstring);
        {437}let v_871: bitstring = catch-fail(handshakestateunpack(hs_869)) in
        {438}let v_872: bitstring = catch-fail(deconcat3(message_a_870)) in
        {439}let v_873: bool = catch-fail(true) in
        {440}let v_874: key = catch-fail(1-proj-3-tuple(v_872)) in
        {441}let v_875: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_871))) in
        {442}let v_876: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_871)) then (if (not-caught-fail(v_875) && success?(is-true(success?(1-proj-3-tuple(v_875))))) then symmetricstatepack(1-proj-3-tuple(v_875),2-proj-3-tuple(v_875),hash(3-proj-3-tuple(v_875),v_874)) else fail-any) else fail-any)) in
        {443}let v_877: bitstring = catch-fail(symmetricstateunpack(v_876)) in
        {444}let v_878: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_877))) in
        {445}let v_879: aead = catch-fail(decrypt(1-proj-2-tuple(v_878),2-proj-2-tuple(v_878),3-proj-3-tuple(v_877),3-proj-3-tuple(v_872))) in
        {446}let v_880: bitstring = catch-fail(aeadunpack(v_879)) in
        {447}let v_881: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_877))) in
        {448}let v_882: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_878))) && success?(1-proj-3-tuple(v_877))) then (if (not-caught-fail(v_881) && success?(is-true(success?(1-proj-2-tuple(v_881))))) then cipherstatepack(1-proj-2-tuple(v_881),increment_nonce(2-proj-2-tuple(v_878))) else fail-any) else fail-any)) in
        {449}let v_883: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_872)) && (success?(3-proj-3-tuple(v_877)) && success?(1-proj-3-tuple(v_877)))) then (if (not-caught-fail(v_878) && success?(is-true(success?(1-proj-2-tuple(v_878))))) then (if not-caught-fail(v_879) then (if (not-caught-fail(v_880) && success?(is-true(success?(1-proj-3-tuple(v_880))))) then (if not-caught-fail(v_882) then (v_882,3-proj-3-tuple(v_880),1-proj-3-tuple(v_880)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {450}let v_884: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_883),2-proj-3-tuple(v_877),3-proj-3-tuple(v_877)))) in
        {451}let v_885: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_872)) && success?(symmetricstatepack(1-proj-3-tuple(v_883),2-proj-3-tuple(v_877),3-proj-3-tuple(v_877)))) then (if (not-caught-fail(v_884) && success?(is-true(success?(1-proj-3-tuple(v_884))))) then symmetricstatepack(1-proj-3-tuple(v_884),2-proj-3-tuple(v_884),hash(3-proj-3-tuple(v_884),3-proj-3-tuple(v_872))) else fail-any) else fail-any)) in
        {452}let v_886: bitstring = catch-fail((if success?(3-proj-3-tuple(v_872)) then (if (not-caught-fail(v_877) && success?(is-true(success?(1-proj-3-tuple(v_877))))) then (if (not-caught-fail(v_883) && success?(is-true(success?(1-proj-3-tuple(v_883))))) then (if not-caught-fail(v_885) then (v_885,2-proj-3-tuple(v_883),3-proj-3-tuple(v_883)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {453}let v_887: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_886),2-proj-7-tuple(v_871),3-proj-7-tuple(v_871),4-proj-7-tuple(v_871),v_874,6-proj-7-tuple(v_871),7-proj-7-tuple(v_871))) in
        {454}let (hs_888: handshakestate,re_889: key,plaintext_a_890: bitstring,valid_891: bool) = (if (not-caught-fail(v_871) && success?(is-true(success?(1-proj-7-tuple(v_871))))) then (if (not-caught-fail(v_872) && success?(is-true(success?(1-proj-3-tuple(v_872))))) then (if not-caught-fail(v_873) then (if not-caught-fail(v_874) then (if not-caught-fail(v_876) then (if (not-caught-fail(v_886) && success?(is-true(success?(1-proj-3-tuple(v_886))))) then (if (v_873 && 3-proj-3-tuple(v_886)) then (if not-caught-fail(v_887) then (v_887,getpublickey(3-proj-7-tuple(v_871)),2-proj-3-tuple(v_886),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {455}event RecvMsg(me_852,them_851,stage_a,plaintext_a_890,valid_891);
        {456}insert statestore(me_852,them_851,statepack_b(hs_888))
    ) | (
        {502}get statestore(=me_852,=them_851,statepack_b(hs_892: handshakestate)) in
        {458}let v_893: bitstring = catch-fail(handshakestateunpack(hs_892)) in
        {459}let v_894: bitstring = catch-fail((empty,empty,empty)) in
        {460}new key_e_895[me_852,them_851]: key;
        {461}let v_896: key = catch-fail(dhexp(key_e_895,g)) in
        {462}let v_897: keypair = catch-fail((if not-caught-fail(v_896) then keypairpack(v_896,key_e_895) else fail-any)) in
        {463}let v_898: bitstring = catch-fail(getpublickey(v_897)) in
        {464}let v_899: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_893))) in
        {465}let v_900: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_893)) then (if (not-caught-fail(v_899) && success?(is-true(success?(1-proj-3-tuple(v_899))))) then symmetricstatepack(1-proj-3-tuple(v_899),2-proj-3-tuple(v_899),hash(3-proj-3-tuple(v_899),v_898)) else fail-any) else fail-any)) in
        {466}let v_901: bitstring = catch-fail(keypairunpack(v_897)) in
        {467}let v_902: bitstring = catch-fail(symmetricstateunpack(v_900)) in
        {468}let v_903: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_902),(if success?(5-proj-7-tuple(v_893)) then (if (not-caught-fail(v_901) && success?(is-true(success?(1-proj-2-tuple(v_901))))) then dhexp(2-proj-2-tuple(v_901),5-proj-7-tuple(v_893)) else fail-any) else fail-any))) in
        {469}let v_904: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_902),(if success?(5-proj-7-tuple(v_893)) then (if (not-caught-fail(v_901) && success?(is-true(success?(1-proj-2-tuple(v_901))))) then dhexp(2-proj-2-tuple(v_901),5-proj-7-tuple(v_893)) else fail-any) else fail-any))) in
        {470}let v_905: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_902),(if success?(5-proj-7-tuple(v_893)) then (if (not-caught-fail(v_901) && success?(is-true(success?(1-proj-2-tuple(v_901))))) then dhexp(2-proj-2-tuple(v_901),5-proj-7-tuple(v_893)) else fail-any) else fail-any))) in
        {471}let v_906: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_893)) then (if (not-caught-fail(v_901) && success?(is-true(success?(1-proj-2-tuple(v_901))))) then dhexp(2-proj-2-tuple(v_901),5-proj-7-tuple(v_893)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_902))) then (if not-caught-fail(v_903) then (if not-caught-fail(v_904) then (if not-caught-fail(v_905) then (v_903,v_904,v_905) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {472}let v_907: symmetricstate = catch-fail((if success?((if success?(5-proj-7-tuple(v_893)) then (if (not-caught-fail(v_901) && success?(is-true(success?(1-proj-2-tuple(v_901))))) then dhexp(2-proj-2-tuple(v_901),5-proj-7-tuple(v_893)) else fail-any) else fail-any)) then (if (not-caught-fail(v_902) && success?(is-true(success?(1-proj-3-tuple(v_902))))) then (if (not-caught-fail(v_906) && success?(is-true(success?(1-proj-3-tuple(v_906))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_906)) then cipherstatepack(2-proj-3-tuple(v_906),minnonce) else fail-any),1-proj-3-tuple(v_906),3-proj-3-tuple(v_902)) else fail-any) else fail-any) else fail-any)) in
        {473}let v_908: bitstring = catch-fail(keypairunpack(v_897)) in
        {474}let v_909: bitstring = catch-fail(symmetricstateunpack(v_907)) in
        {475}let v_910: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_909),(if success?(4-proj-7-tuple(v_893)) then (if (not-caught-fail(v_908) && success?(is-true(success?(1-proj-2-tuple(v_908))))) then dhexp(2-proj-2-tuple(v_908),4-proj-7-tuple(v_893)) else fail-any) else fail-any))) in
        {476}let v_911: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_909),(if success?(4-proj-7-tuple(v_893)) then (if (not-caught-fail(v_908) && success?(is-true(success?(1-proj-2-tuple(v_908))))) then dhexp(2-proj-2-tuple(v_908),4-proj-7-tuple(v_893)) else fail-any) else fail-any))) in
        {477}let v_912: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_909),(if success?(4-proj-7-tuple(v_893)) then (if (not-caught-fail(v_908) && success?(is-true(success?(1-proj-2-tuple(v_908))))) then dhexp(2-proj-2-tuple(v_908),4-proj-7-tuple(v_893)) else fail-any) else fail-any))) in
        {478}let v_913: bitstring = catch-fail((if (success?((if success?(4-proj-7-tuple(v_893)) then (if (not-caught-fail(v_908) && success?(is-true(success?(1-proj-2-tuple(v_908))))) then dhexp(2-proj-2-tuple(v_908),4-proj-7-tuple(v_893)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_909))) then (if not-caught-fail(v_910) then (if not-caught-fail(v_911) then (if not-caught-fail(v_912) then (v_910,v_911,v_912) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {479}let v_914: symmetricstate = catch-fail((if success?((if success?(4-proj-7-tuple(v_893)) then (if (not-caught-fail(v_908) && success?(is-true(success?(1-proj-2-tuple(v_908))))) then dhexp(2-proj-2-tuple(v_908),4-proj-7-tuple(v_893)) else fail-any) else fail-any)) then (if (not-caught-fail(v_909) && success?(is-true(success?(1-proj-3-tuple(v_909))))) then (if (not-caught-fail(v_913) && success?(is-true(success?(1-proj-3-tuple(v_913))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_913)) then cipherstatepack(2-proj-3-tuple(v_913),minnonce) else fail-any),1-proj-3-tuple(v_913),3-proj-3-tuple(v_909)) else fail-any) else fail-any) else fail-any)) in
        {480}let v_915: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_893))) in
        {481}let v_916: bitstring = catch-fail(symmetricstateunpack(v_914)) in
        {482}let v_917: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_916),(if (success?(5-proj-7-tuple(v_893)) && success?(2-proj-7-tuple(v_893))) then (if (not-caught-fail(v_915) && success?(is-true(success?(1-proj-2-tuple(v_915))))) then dhexp(2-proj-2-tuple(v_915),5-proj-7-tuple(v_893)) else fail-any) else fail-any))) in
        {483}let v_918: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_916),(if (success?(5-proj-7-tuple(v_893)) && success?(2-proj-7-tuple(v_893))) then (if (not-caught-fail(v_915) && success?(is-true(success?(1-proj-2-tuple(v_915))))) then dhexp(2-proj-2-tuple(v_915),5-proj-7-tuple(v_893)) else fail-any) else fail-any))) in
        {484}let v_919: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_916),(if (success?(5-proj-7-tuple(v_893)) && success?(2-proj-7-tuple(v_893))) then (if (not-caught-fail(v_915) && success?(is-true(success?(1-proj-2-tuple(v_915))))) then dhexp(2-proj-2-tuple(v_915),5-proj-7-tuple(v_893)) else fail-any) else fail-any))) in
        {485}let v_920: bitstring = catch-fail((if (success?((if (success?(5-proj-7-tuple(v_893)) && success?(2-proj-7-tuple(v_893))) then (if (not-caught-fail(v_915) && success?(is-true(success?(1-proj-2-tuple(v_915))))) then dhexp(2-proj-2-tuple(v_915),5-proj-7-tuple(v_893)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_916))) then (if not-caught-fail(v_917) then (if not-caught-fail(v_918) then (if not-caught-fail(v_919) then (v_917,v_918,v_919) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {486}let v_921: symmetricstate = catch-fail((if success?((if (success?(5-proj-7-tuple(v_893)) && success?(2-proj-7-tuple(v_893))) then (if (not-caught-fail(v_915) && success?(is-true(success?(1-proj-2-tuple(v_915))))) then dhexp(2-proj-2-tuple(v_915),5-proj-7-tuple(v_893)) else fail-any) else fail-any)) then (if (not-caught-fail(v_916) && success?(is-true(success?(1-proj-3-tuple(v_916))))) then (if (not-caught-fail(v_920) && success?(is-true(success?(1-proj-3-tuple(v_920))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_920)) then cipherstatepack(2-proj-3-tuple(v_920),minnonce) else fail-any),1-proj-3-tuple(v_920),3-proj-3-tuple(v_916)) else fail-any) else fail-any) else fail-any)) in
        {487}let v_922: bitstring = catch-fail(symmetricstateunpack(v_921)) in
        {488}let v_923: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_922))) in
        {489}let v_924: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_923),2-proj-2-tuple(v_923),3-proj-3-tuple(v_922),msg_b(me_852,them_851))) in
        {490}let v_925: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_922))) in
        {491}let v_926: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_923))) && success?(1-proj-3-tuple(v_922))) then (if (not-caught-fail(v_925) && success?(is-true(success?(1-proj-2-tuple(v_925))))) then cipherstatepack(1-proj-2-tuple(v_925),increment_nonce(2-proj-2-tuple(v_923))) else fail-any) else fail-any)) in
        {492}let v_927: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_922)) && success?(1-proj-3-tuple(v_922))) then (if (not-caught-fail(v_923) && success?(is-true(success?(1-proj-2-tuple(v_923))))) then (if not-caught-fail(v_924) then (if not-caught-fail(v_926) then (v_926,v_924) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {493}let v_928: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_927),2-proj-3-tuple(v_922),3-proj-3-tuple(v_922)))) in
        {494}let v_929: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_927)) && success?(symmetricstatepack(1-proj-2-tuple(v_927),2-proj-3-tuple(v_922),3-proj-3-tuple(v_922)))) then (if (not-caught-fail(v_928) && success?(is-true(success?(1-proj-3-tuple(v_928))))) then symmetricstatepack(1-proj-3-tuple(v_928),2-proj-3-tuple(v_928),hash(3-proj-3-tuple(v_928),2-proj-2-tuple(v_927))) else fail-any) else fail-any)) in
        {495}let v_930: bitstring = catch-fail((if (not-caught-fail(v_922) && success?(is-true(success?(1-proj-3-tuple(v_922))))) then (if (not-caught-fail(v_927) && success?(is-true(success?(1-proj-2-tuple(v_927))))) then (if not-caught-fail(v_929) then (v_929,2-proj-2-tuple(v_927)) else fail-any) else fail-any) else fail-any)) in
        {496}let v_931: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_930),2-proj-7-tuple(v_893),v_897,4-proj-7-tuple(v_893),5-proj-7-tuple(v_893),6-proj-7-tuple(v_893),7-proj-7-tuple(v_893))) in
        {497}let v_932: bitstring = catch-fail(concat3(v_898,2-proj-3-tuple(v_894),2-proj-2-tuple(v_930))) in
        {498}let (hs_933: handshakestate,re_934: key,message_b_935: bitstring) = (if (not-caught-fail(v_893) && success?(is-true(success?(1-proj-7-tuple(v_893))))) then (if (not-caught-fail(v_894) && success?(is-true(success?(1-proj-3-tuple(v_894))))) then (if not-caught-fail(v_897) then (if not-caught-fail(v_898) then (if not-caught-fail(v_900) then (if not-caught-fail(v_907) then (if not-caught-fail(v_914) then (if not-caught-fail(v_921) then (if (not-caught-fail(v_930) && success?(is-true(success?(1-proj-2-tuple(v_930))))) then (if not-caught-fail(v_931) then (if not-caught-fail(v_932) then (v_931,5-proj-7-tuple(v_893),v_932) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {499}event SendMsg(me_852,them_851,stage_b,msg_b(me_852,them_851),true);
        {500}insert statestore(me_852,them_851,statepack_c(hs_933));
        {501}out(pub, message_b_935)
    ) | (
        {521}get statestore(=me_852,=them_851,statepack_c(hs_936: handshakestate)) in
        {503}in(pub, message_c_937: bitstring);
        {504}let v_938: bitstring = catch-fail(handshakestateunpack(hs_936)) in
        {505}let v_939: bitstring = catch-fail(deconcat3(message_c_937)) in
        {506}let v_940: bool = catch-fail(true) in
        {507}let v_941: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_938))) in
        {508}let v_942: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_941))) in
        {509}let v_943: aead = catch-fail(decrypt(1-proj-2-tuple(v_942),2-proj-2-tuple(v_942),3-proj-3-tuple(v_941),3-proj-3-tuple(v_939))) in
        {510}let v_944: bitstring = catch-fail(aeadunpack(v_943)) in
        {511}let v_945: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_941))) in
        {512}let v_946: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_942))) && success?(1-proj-3-tuple(v_941))) then (if (not-caught-fail(v_945) && success?(is-true(success?(1-proj-2-tuple(v_945))))) then cipherstatepack(1-proj-2-tuple(v_945),increment_nonce(2-proj-2-tuple(v_942))) else fail-any) else fail-any)) in
        {513}let v_947: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_939)) && (success?(3-proj-3-tuple(v_941)) && success?(1-proj-3-tuple(v_941)))) then (if (not-caught-fail(v_942) && success?(is-true(success?(1-proj-2-tuple(v_942))))) then (if not-caught-fail(v_943) then (if (not-caught-fail(v_944) && success?(is-true(success?(1-proj-3-tuple(v_944))))) then (if not-caught-fail(v_946) then (v_946,3-proj-3-tuple(v_944),1-proj-3-tuple(v_944)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {514}let v_948: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_947),2-proj-3-tuple(v_941),3-proj-3-tuple(v_941)))) in
        {515}let v_949: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_939)) && success?(symmetricstatepack(1-proj-3-tuple(v_947),2-proj-3-tuple(v_941),3-proj-3-tuple(v_941)))) then (if (not-caught-fail(v_948) && success?(is-true(success?(1-proj-3-tuple(v_948))))) then symmetricstatepack(1-proj-3-tuple(v_948),2-proj-3-tuple(v_948),hash(3-proj-3-tuple(v_948),3-proj-3-tuple(v_939))) else fail-any) else fail-any)) in
        {516}let v_950: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_939)) && success?(1-proj-7-tuple(v_938))) then (if (not-caught-fail(v_941) && success?(is-true(success?(1-proj-3-tuple(v_941))))) then (if (not-caught-fail(v_947) && success?(is-true(success?(1-proj-3-tuple(v_947))))) then (if not-caught-fail(v_949) then (v_949,2-proj-3-tuple(v_947),3-proj-3-tuple(v_947)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {517}let v_951: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_950),2-proj-7-tuple(v_938),3-proj-7-tuple(v_938),4-proj-7-tuple(v_938),5-proj-7-tuple(v_938),6-proj-7-tuple(v_938),7-proj-7-tuple(v_938))) in
        {518}let (hs_952: handshakestate,re_953: key,plaintext_c_954: bitstring,valid_955: bool) = (if (not-caught-fail(v_938) && success?(is-true(success?(1-proj-7-tuple(v_938))))) then (if (not-caught-fail(v_939) && success?(is-true(success?(1-proj-3-tuple(v_939))))) then (if not-caught-fail(v_940) then (if (not-caught-fail(v_950) && success?(is-true(success?(1-proj-3-tuple(v_950))))) then (if (v_940 && 3-proj-3-tuple(v_950)) then (if not-caught-fail(v_951) then (v_951,getpublickey(3-proj-7-tuple(v_938)),2-proj-3-tuple(v_950),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {519}event RecvMsg(me_852,them_851,stage_c,plaintext_c_954,valid_955);
        {520}insert statestore(me_852,them_851,statepack_d(hs_952))
    ) | (
        {547}get statestore(=me_852,=them_851,statepack_d(hs_956: handshakestate)) in
        {522}let v_957: bitstring = catch-fail(handshakestateunpack(hs_956)) in
        {523}let v_958: bitstring = catch-fail((empty,empty,empty)) in
        {524}let v_959: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_957))) in
        {525}let v_960: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_959))) in
        {526}let v_961: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_960),2-proj-2-tuple(v_960),3-proj-3-tuple(v_959),msg_d(me_852,them_851))) in
        {527}let v_962: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_959))) in
        {528}let v_963: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_960))) && success?(1-proj-3-tuple(v_959))) then (if (not-caught-fail(v_962) && success?(is-true(success?(1-proj-2-tuple(v_962))))) then cipherstatepack(1-proj-2-tuple(v_962),increment_nonce(2-proj-2-tuple(v_960))) else fail-any) else fail-any)) in
        {529}let v_964: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_959)) && success?(1-proj-3-tuple(v_959))) then (if (not-caught-fail(v_960) && success?(is-true(success?(1-proj-2-tuple(v_960))))) then (if not-caught-fail(v_961) then (if not-caught-fail(v_963) then (v_963,v_961) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {530}let v_965: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_964),2-proj-3-tuple(v_959),3-proj-3-tuple(v_959)))) in
        {531}let v_966: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_964)) && success?(symmetricstatepack(1-proj-2-tuple(v_964),2-proj-3-tuple(v_959),3-proj-3-tuple(v_959)))) then (if (not-caught-fail(v_965) && success?(is-true(success?(1-proj-3-tuple(v_965))))) then symmetricstatepack(1-proj-3-tuple(v_965),2-proj-3-tuple(v_965),hash(3-proj-3-tuple(v_965),2-proj-2-tuple(v_964))) else fail-any) else fail-any)) in
        {532}let v_967: bitstring = catch-fail((if success?(1-proj-7-tuple(v_957)) then (if (not-caught-fail(v_959) && success?(is-true(success?(1-proj-3-tuple(v_959))))) then (if (not-caught-fail(v_964) && success?(is-true(success?(1-proj-2-tuple(v_964))))) then (if not-caught-fail(v_966) then (v_966,2-proj-2-tuple(v_964)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {533}let v_968: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_967),2-proj-7-tuple(v_957),3-proj-7-tuple(v_957),4-proj-7-tuple(v_957),5-proj-7-tuple(v_957),6-proj-7-tuple(v_957),7-proj-7-tuple(v_957))) in
        {534}let v_969: bitstring = catch-fail(concat3(1-proj-3-tuple(v_958),2-proj-3-tuple(v_958),2-proj-2-tuple(v_967))) in
        {535}let v_970: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_967))) in
        {536}let v_971: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_970),zero)) in
        {537}let v_972: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_970),zero)) in
        {538}let v_973: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_970),zero)) in
        {539}let v_974: bitstring = catch-fail((if success?(2-proj-3-tuple(v_970)) then (if not-caught-fail(v_971) then (if not-caught-fail(v_972) then (if not-caught-fail(v_973) then (v_971,v_972,v_973) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {540}let v_975: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_974)) then cipherstatepack(1-proj-3-tuple(v_974),minnonce) else fail-any)) in
        {541}let v_976: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_974)) then cipherstatepack(2-proj-3-tuple(v_974),minnonce) else fail-any)) in
        {542}let v_977: bitstring = catch-fail((if success?(1-proj-2-tuple(v_967)) then (if (not-caught-fail(v_970) && success?(is-true(success?(1-proj-3-tuple(v_970))))) then (if (not-caught-fail(v_974) && success?(is-true(success?(1-proj-3-tuple(v_974))))) then (if not-caught-fail(v_975) then (if not-caught-fail(v_976) then (1-proj-2-tuple(v_967),v_975,v_976) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {543}let (hs_978: handshakestate,re_979: key,message_d_980: bitstring,cs1_981: cipherstate,cs2_982: cipherstate) = (if (not-caught-fail(v_957) && success?(is-true(success?(1-proj-7-tuple(v_957))))) then (if (not-caught-fail(v_958) && success?(is-true(success?(1-proj-3-tuple(v_958))))) then (if (not-caught-fail(v_967) && success?(is-true(success?(1-proj-2-tuple(v_967))))) then (if not-caught-fail(v_968) then (if not-caught-fail(v_969) then (if (not-caught-fail(v_977) && success?(is-true(success?(1-proj-3-tuple(v_977))))) then (v_968,5-proj-7-tuple(v_957),v_969,2-proj-3-tuple(v_977),3-proj-3-tuple(v_977)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {544}event SendMsg(me_852,them_851,stage_d,msg_d(me_852,them_851),true);
        {545}insert statestore(me_852,them_851,statepack_e(hs_978));
        {546}out(pub, message_d_980)
    ) | (
        {548}event LeakS(phase0,me_852);
        {549}out(pub, key_s(me_852))
    ) | (
        {550}phase 1;
        {551}event LeakS(phase1,me_852);
        {552}out(pub, key_s(me_852))
    )
)

-- Query event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)); event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,c_1063,stage_a,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,c_1063,stage_a,m,true)) || event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)) || event(LeakS(phase0,alice)); not attacker_p1(msg_a(alice,bob)); attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob)); attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice))); attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true)); event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,c_1063,stage_b,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,c_1063,stage_b,m,true)) || event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true)) || event(LeakS(phase0,bob)); not attacker_p1(msg_b(bob,alice)); attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice)); attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob))); attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true)); event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,c_1063,stage_c,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,c_1063,stage_c,m,true)) || event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true)) || event(LeakS(phase0,alice)); not attacker_p1(msg_c(alice,bob)); attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob)); attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice))); attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true)); event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,c_1063,stage_d,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,c_1063,stage_d,m,true)) || event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true)) || event(LeakS(phase0,bob)); not attacker_p1(msg_d(bob,alice)); attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice)); attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob))); attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice))
Completing...
200 rules inserted. The rule base contains 200 rules. 197 rules in the queue.
400 rules inserted. The rule base contains 400 rules. 68 rules in the queue.
600 rules inserted. The rule base contains 589 rules. 106 rules in the queue.
800 rules inserted. The rule base contains 767 rules. 110 rules in the queue.
1000 rules inserted. The rule base contains 943 rules. 171 rules in the queue.
1200 rules inserted. The rule base contains 1096 rules. 193 rules in the queue.
1400 rules inserted. The rule base contains 1287 rules. 211 rules in the queue.
1600 rules inserted. The rule base contains 1449 rules. 225 rules in the queue.
1800 rules inserted. The rule base contains 1572 rules. 224 rules in the queue.
2000 rules inserted. The rule base contains 1675 rules. 234 rules in the queue.
2200 rules inserted. The rule base contains 1825 rules. 288 rules in the queue.
2400 rules inserted. The rule base contains 1965 rules. 493 rules in the queue.
2600 rules inserted. The rule base contains 2150 rules. 701 rules in the queue.
2800 rules inserted. The rule base contains 2281 rules. 878 rules in the queue.
3000 rules inserted. The rule base contains 2464 rules. 928 rules in the queue.
3200 rules inserted. The rule base contains 2643 rules. 803 rules in the queue.
3400 rules inserted. The rule base contains 2808 rules. 853 rules in the queue.
3600 rules inserted. The rule base contains 2884 rules. 971 rules in the queue.
3800 rules inserted. The rule base contains 3004 rules. 995 rules in the queue.
4000 rules inserted. The rule base contains 3197 rules. 1033 rules in the queue.
4200 rules inserted. The rule base contains 3321 rules. 1103 rules in the queue.
4400 rules inserted. The rule base contains 3504 rules. 1036 rules in the queue.
4600 rules inserted. The rule base contains 3526 rules. 1022 rules in the queue.
4800 rules inserted. The rule base contains 3637 rules. 1050 rules in the queue.
5000 rules inserted. The rule base contains 3810 rules. 1083 rules in the queue.
5200 rules inserted. The rule base contains 3966 rules. 1014 rules in the queue.
5400 rules inserted. The rule base contains 4162 rules. 1164 rules in the queue.
5600 rules inserted. The rule base contains 4197 rules. 1152 rules in the queue.
5800 rules inserted. The rule base contains 4348 rules. 1212 rules in the queue.
6000 rules inserted. The rule base contains 4514 rules. 1200 rules in the queue.
6200 rules inserted. The rule base contains 4605 rules. 1236 rules in the queue.
6400 rules inserted. The rule base contains 4790 rules. 1252 rules in the queue.
6600 rules inserted. The rule base contains 4946 rules. 1193 rules in the queue.
6800 rules inserted. The rule base contains 4994 rules. 1185 rules in the queue.
7000 rules inserted. The rule base contains 5163 rules. 1200 rules in the queue.
7200 rules inserted. The rule base contains 5354 rules. 1180 rules in the queue.
7400 rules inserted. The rule base contains 5519 rules. 1205 rules in the queue.
7600 rules inserted. The rule base contains 5652 rules. 1239 rules in the queue.
7800 rules inserted. The rule base contains 5775 rules. 1234 rules in the queue.
8000 rules inserted. The rule base contains 5804 rules. 1210 rules in the queue.
8200 rules inserted. The rule base contains 5971 rules. 1229 rules in the queue.
8400 rules inserted. The rule base contains 6149 rules. 1270 rules in the queue.
8600 rules inserted. The rule base contains 6241 rules. 1310 rules in the queue.
8800 rules inserted. The rule base contains 6437 rules. 1340 rules in the queue.
9000 rules inserted. The rule base contains 6606 rules. 1332 rules in the queue.
9200 rules inserted. The rule base contains 6724 rules. 1288 rules in the queue.
9400 rules inserted. The rule base contains 6843 rules. 1318 rules in the queue.
9600 rules inserted. The rule base contains 7004 rules. 1322 rules in the queue.
9800 rules inserted. The rule base contains 7147 rules. 1334 rules in the queue.
10000 rules inserted. The rule base contains 7295 rules. 1365 rules in the queue.
10200 rules inserted. The rule base contains 7431 rules. 1423 rules in the queue.
10400 rules inserted. The rule base contains 7540 rules. 1444 rules in the queue.
10600 rules inserted. The rule base contains 7656 rules. 1436 rules in the queue.
10800 rules inserted. The rule base contains 7766 rules. 1445 rules in the queue.
11000 rules inserted. The rule base contains 7882 rules. 1463 rules in the queue.
11200 rules inserted. The rule base contains 7946 rules. 1494 rules in the queue.
11400 rules inserted. The rule base contains 8104 rules. 1511 rules in the queue.
11600 rules inserted. The rule base contains 8271 rules. 1529 rules in the queue.
11800 rules inserted. The rule base contains 8390 rules. 1545 rules in the queue.
12000 rules inserted. The rule base contains 8518 rules. 1578 rules in the queue.
12200 rules inserted. The rule base contains 8669 rules. 1584 rules in the queue.
12400 rules inserted. The rule base contains 8869 rules. 1597 rules in the queue.
12600 rules inserted. The rule base contains 8996 rules. 1604 rules in the queue.
12800 rules inserted. The rule base contains 9143 rules. 1617 rules in the queue.
13000 rules inserted. The rule base contains 9263 rules. 1636 rules in the queue.
13200 rules inserted. The rule base contains 9405 rules. 1662 rules in the queue.
13400 rules inserted. The rule base contains 9543 rules. 1722 rules in the queue.
13600 rules inserted. The rule base contains 9681 rules. 1727 rules in the queue.
13800 rules inserted. The rule base contains 9863 rules. 1739 rules in the queue.
14000 rules inserted. The rule base contains 10062 rules. 1759 rules in the queue.
14200 rules inserted. The rule base contains 10101 rules. 1768 rules in the queue.
14400 rules inserted. The rule base contains 10295 rules. 1786 rules in the queue.
14600 rules inserted. The rule base contains 10493 rules. 1799 rules in the queue.
14800 rules inserted. The rule base contains 10671 rules. 1797 rules in the queue.
15000 rules inserted. The rule base contains 10854 rules. 1825 rules in the queue.
15200 rules inserted. The rule base contains 10968 rules. 1835 rules in the queue.
15400 rules inserted. The rule base contains 11122 rules. 1814 rules in the queue.
15600 rules inserted. The rule base contains 11322 rules. 1854 rules in the queue.
15800 rules inserted. The rule base contains 11515 rules. 1874 rules in the queue.
16000 rules inserted. The rule base contains 11628 rules. 1905 rules in the queue.
16200 rules inserted. The rule base contains 11828 rules. 1943 rules in the queue.
16400 rules inserted. The rule base contains 11997 rules. 1963 rules in the queue.
16600 rules inserted. The rule base contains 12155 rules. 1977 rules in the queue.
16800 rules inserted. The rule base contains 12303 rules. 1937 rules in the queue.
17000 rules inserted. The rule base contains 12428 rules. 1902 rules in the queue.
17200 rules inserted. The rule base contains 12601 rules. 1905 rules in the queue.
17400 rules inserted. The rule base contains 12801 rules. 1942 rules in the queue.
17600 rules inserted. The rule base contains 13001 rules. 1956 rules in the queue.
17800 rules inserted. The rule base contains 13086 rules. 1989 rules in the queue.
18000 rules inserted. The rule base contains 13279 rules. 2015 rules in the queue.
18200 rules inserted. The rule base contains 13479 rules. 2057 rules in the queue.
18400 rules inserted. The rule base contains 13679 rules. 2080 rules in the queue.
18600 rules inserted. The rule base contains 13864 rules. 2125 rules in the queue.
18800 rules inserted. The rule base contains 13967 rules. 2134 rules in the queue.
19000 rules inserted. The rule base contains 14097 rules. 2135 rules in the queue.
19200 rules inserted. The rule base contains 14277 rules. 2190 rules in the queue.
19400 rules inserted. The rule base contains 14477 rules. 2255 rules in the queue.
19600 rules inserted. The rule base contains 14591 rules. 2304 rules in the queue.
19800 rules inserted. The rule base contains 14742 rules. 2339 rules in the queue.
20000 rules inserted. The rule base contains 14942 rules. 2391 rules in the queue.
20200 rules inserted. The rule base contains 15142 rules. 2441 rules in the queue.
20400 rules inserted. The rule base contains 15342 rules. 2472 rules in the queue.
20600 rules inserted. The rule base contains 15538 rules. 2503 rules in the queue.
20800 rules inserted. The rule base contains 15677 rules. 2514 rules in the queue.
21000 rules inserted. The rule base contains 15770 rules. 2514 rules in the queue.
21200 rules inserted. The rule base contains 15915 rules. 2579 rules in the queue.
21400 rules inserted. The rule base contains 16087 rules. 2622 rules in the queue.
21600 rules inserted. The rule base contains 16270 rules. 2659 rules in the queue.
21800 rules inserted. The rule base contains 16360 rules. 2706 rules in the queue.
22000 rules inserted. The rule base contains 16481 rules. 2701 rules in the queue.
22200 rules inserted. The rule base contains 16680 rules. 2811 rules in the queue.
22400 rules inserted. The rule base contains 16857 rules. 2864 rules in the queue.
22600 rules inserted. The rule base contains 17047 rules. 2910 rules in the queue.
22800 rules inserted. The rule base contains 17245 rules. 2957 rules in the queue.
23000 rules inserted. The rule base contains 17395 rules. 2986 rules in the queue.
23200 rules inserted. The rule base contains 17485 rules. 2988 rules in the queue.
23400 rules inserted. The rule base contains 17597 rules. 2967 rules in the queue.
23600 rules inserted. The rule base contains 17703 rules. 2896 rules in the queue.
23800 rules inserted. The rule base contains 17787 rules. 2803 rules in the queue.
24000 rules inserted. The rule base contains 17904 rules. 2741 rules in the queue.
24200 rules inserted. The rule base contains 18039 rules. 2783 rules in the queue.
24400 rules inserted. The rule base contains 18107 rules. 2748 rules in the queue.
24600 rules inserted. The rule base contains 18284 rules. 2888 rules in the queue.
24800 rules inserted. The rule base contains 18477 rules. 3036 rules in the queue.
25000 rules inserted. The rule base contains 18661 rules. 3092 rules in the queue.
25200 rules inserted. The rule base contains 18848 rules. 3118 rules in the queue.
25400 rules inserted. The rule base contains 19048 rules. 3152 rules in the queue.
25600 rules inserted. The rule base contains 19202 rules. 3133 rules in the queue.
25800 rules inserted. The rule base contains 19381 rules. 3142 rules in the queue.
26000 rules inserted. The rule base contains 19468 rules. 3102 rules in the queue.
26200 rules inserted. The rule base contains 19511 rules. 2968 rules in the queue.
26400 rules inserted. The rule base contains 19514 rules. 2868 rules in the queue.
26600 rules inserted. The rule base contains 19689 rules. 2962 rules in the queue.
26800 rules inserted. The rule base contains 19842 rules. 2911 rules in the queue.
27000 rules inserted. The rule base contains 19898 rules. 2841 rules in the queue.
27200 rules inserted. The rule base contains 20073 rules. 2857 rules in the queue.
27400 rules inserted. The rule base contains 20226 rules. 2857 rules in the queue.
27600 rules inserted. The rule base contains 20313 rules. 2781 rules in the queue.
27800 rules inserted. The rule base contains 20411 rules. 2646 rules in the queue.
28000 rules inserted. The rule base contains 20529 rules. 2586 rules in the queue.
28200 rules inserted. The rule base contains 20727 rules. 2638 rules in the queue.
28400 rules inserted. The rule base contains 20847 rules. 2584 rules in the queue.
28600 rules inserted. The rule base contains 20945 rules. 2598 rules in the queue.
28800 rules inserted. The rule base contains 21072 rules. 2501 rules in the queue.
29000 rules inserted. The rule base contains 21097 rules. 2442 rules in the queue.
29200 rules inserted. The rule base contains 21194 rules. 2385 rules in the queue.
29400 rules inserted. The rule base contains 21206 rules. 2240 rules in the queue.
29600 rules inserted. The rule base contains 21321 rules. 2226 rules in the queue.
29800 rules inserted. The rule base contains 21333 rules. 2037 rules in the queue.
30000 rules inserted. The rule base contains 21332 rules. 1857 rules in the queue.
30200 rules inserted. The rule base contains 21351 rules. 1743 rules in the queue.
30400 rules inserted. The rule base contains 21551 rules. 1697 rules in the queue.
30600 rules inserted. The rule base contains 21627 rules. 1544 rules in the queue.
30800 rules inserted. The rule base contains 21788 rules. 1560 rules in the queue.
31000 rules inserted. The rule base contains 21794 rules. 1461 rules in the queue.
31200 rules inserted. The rule base contains 21815 rules. 1371 rules in the queue.
31400 rules inserted. The rule base contains 21877 rules. 1289 rules in the queue.
31600 rules inserted. The rule base contains 21881 rules. 1185 rules in the queue.
31800 rules inserted. The rule base contains 21811 rules. 1068 rules in the queue.
32000 rules inserted. The rule base contains 21861 rules. 917 rules in the queue.
32200 rules inserted. The rule base contains 21939 rules. 909 rules in the queue.
32400 rules inserted. The rule base contains 21938 rules. 868 rules in the queue.
32600 rules inserted. The rule base contains 21853 rules. 709 rules in the queue.
32800 rules inserted. The rule base contains 21447 rules. 652 rules in the queue.
33000 rules inserted. The rule base contains 21538 rules. 663 rules in the queue.
33200 rules inserted. The rule base contains 21457 rules. 623 rules in the queue.
33400 rules inserted. The rule base contains 21481 rules. 585 rules in the queue.
33600 rules inserted. The rule base contains 21650 rules. 591 rules in the queue.
33800 rules inserted. The rule base contains 21694 rules. 538 rules in the queue.
34000 rules inserted. The rule base contains 16385 rules. 547 rules in the queue.
34200 rules inserted. The rule base contains 16541 rules. 582 rules in the queue.
34400 rules inserted. The rule base contains 16101 rules. 539 rules in the queue.
34600 rules inserted. The rule base contains 16301 rules. 566 rules in the queue.
34800 rules inserted. The rule base contains 16458 rules. 583 rules in the queue.
35000 rules inserted. The rule base contains 16561 rules. 558 rules in the queue.
35200 rules inserted. The rule base contains 16760 rules. 594 rules in the queue.
35400 rules inserted. The rule base contains 16913 rules. 620 rules in the queue.
35600 rules inserted. The rule base contains 16906 rules. 623 rules in the queue.
35800 rules inserted. The rule base contains 17098 rules. 621 rules in the queue.
36000 rules inserted. The rule base contains 17271 rules. 627 rules in the queue.
36200 rules inserted. The rule base contains 17322 rules. 603 rules in the queue.
36400 rules inserted. The rule base contains 17515 rules. 596 rules in the queue.
36600 rules inserted. The rule base contains 17698 rules. 592 rules in the queue.
36800 rules inserted. The rule base contains 17819 rules. 621 rules in the queue.
37000 rules inserted. The rule base contains 17989 rules. 659 rules in the queue.
37200 rules inserted. The rule base contains 18162 rules. 657 rules in the queue.
37400 rules inserted. The rule base contains 18263 rules. 658 rules in the queue.
37600 rules inserted. The rule base contains 18356 rules. 659 rules in the queue.
37800 rules inserted. The rule base contains 18492 rules. 644 rules in the queue.
38000 rules inserted. The rule base contains 18531 rules. 494 rules in the queue.
38200 rules inserted. The rule base contains 18594 rules. 411 rules in the queue.
38400 rules inserted. The rule base contains 18470 rules. 325 rules in the queue.
38600 rules inserted. The rule base contains 18425 rules. 264 rules in the queue.
38800 rules inserted. The rule base contains 18494 rules. 263 rules in the queue.
39000 rules inserted. The rule base contains 15936 rules. 253 rules in the queue.
39200 rules inserted. The rule base contains 15680 rules. 256 rules in the queue.
39400 rules inserted. The rule base contains 15857 rules. 288 rules in the queue.
39600 rules inserted. The rule base contains 15999 rules. 293 rules in the queue.
39800 rules inserted. The rule base contains 16136 rules. 297 rules in the queue.
40000 rules inserted. The rule base contains 16139 rules. 311 rules in the queue.
40200 rules inserted. The rule base contains 15910 rules. 325 rules in the queue.
40400 rules inserted. The rule base contains 16042 rules. 364 rules in the queue.
40600 rules inserted. The rule base contains 16033 rules. 394 rules in the queue.
40800 rules inserted. The rule base contains 16166 rules. 430 rules in the queue.
41000 rules inserted. The rule base contains 16287 rules. 450 rules in the queue.
41200 rules inserted. The rule base contains 16460 rules. 472 rules in the queue.
41400 rules inserted. The rule base contains 16631 rules. 489 rules in the queue.
41600 rules inserted. The rule base contains 16825 rules. 495 rules in the queue.
41800 rules inserted. The rule base contains 16981 rules. 490 rules in the queue.
42000 rules inserted. The rule base contains 17177 rules. 502 rules in the queue.
42200 rules inserted. The rule base contains 17362 rules. 525 rules in the queue.
42400 rules inserted. The rule base contains 17561 rules. 536 rules in the queue.
42600 rules inserted. The rule base contains 17752 rules. 545 rules in the queue.
42800 rules inserted. The rule base contains 17948 rules. 560 rules in the queue.
43000 rules inserted. The rule base contains 18139 rules. 560 rules in the queue.
43200 rules inserted. The rule base contains 18312 rules. 573 rules in the queue.
43400 rules inserted. The rule base contains 18499 rules. 605 rules in the queue.
43600 rules inserted. The rule base contains 18666 rules. 600 rules in the queue.
43800 rules inserted. The rule base contains 18841 rules. 599 rules in the queue.
44000 rules inserted. The rule base contains 19009 rules. 618 rules in the queue.
44200 rules inserted. The rule base contains 19141 rules. 617 rules in the queue.
44400 rules inserted. The rule base contains 19307 rules. 606 rules in the queue.
44600 rules inserted. The rule base contains 19435 rules. 590 rules in the queue.
44800 rules inserted. The rule base contains 19450 rules. 382 rules in the queue.
45000 rules inserted. The rule base contains 19599 rules. 391 rules in the queue.
45200 rules inserted. The rule base contains 19501 rules. 356 rules in the queue.
45400 rules inserted. The rule base contains 19471 rules. 150 rules in the queue.
45600 rules inserted. The rule base contains 17064 rules. 59 rules in the queue.
Starting query event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true))
goal reachable: attacker(m_14826374978) -> end(RecvMsg(bob,alice,stage_a,m_14826374978,true))

1. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) may be inserted in a table at insert {298}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false)))).

2. We assume as hypothesis that
attacker(m_14826375021).

3. The attacker has some term a_14826375006.
attacker(a_14826375006).

4. Using the function pub the attacker may obtain pub.
attacker(pub).

5. The message dhexp(key_s(bob),g) may be sent on channel pub at output {283}.
mess(pub,dhexp(key_s(bob),g)).

6. By 4, the attacker may have the channel pub.
By 5, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

7. The message dhexp(key_s(alice),g) may be sent on channel pub at output {7}.
mess(pub,dhexp(key_s(alice),g)).

8. By 4, the attacker may have the channel pub.
By 7, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

9. Using the function empty the attacker may obtain empty.
attacker(empty).

10. Using the function somename the attacker may obtain somename.
attacker(somename).

11. By 10, the attacker may know somename.
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

12. By 11, the attacker may know hash(somename,empty).
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

13. By 12, the attacker may know hash(hash(somename,empty),empty).
By 8, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

14. By 13, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

15. By 14, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 3, the attacker may know a_14826375006.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375006).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375006)).

16. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

17. By 9, the attacker may know empty.
By 16, the attacker may know minnonce.
By 15, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375006).
By 2, the attacker may know m_14826375021.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375006),m_14826375021).
attacker(encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375006),m_14826375021)).

18. The attacker has some term b_14826375007.
attacker(b_14826375007).

19. By 3, the attacker may know a_14826375006.
By 18, the attacker may know b_14826375007.
By 17, the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375006),m_14826375021).
Using the function concat3 the attacker may obtain concat3(a_14826375006,b_14826375007,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375006),m_14826375021)).
attacker(concat3(a_14826375006,b_14826375007,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375006),m_14826375021))).

20. By 4, the attacker may have the channel pub.
By 19, the attacker may have the message concat3(a_14826375006,b_14826375007,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375006),m_14826375021)).
So the attacker may send this message on this channel.
mess(pub,concat3(a_14826375006,b_14826375007,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375006),m_14826375021))).

21. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 1 may be read at get {320}.
The message concat3(a_14826375006,b_14826375007,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375006),m_14826375021)) that may be sent on channel pub by 20 may be received at input {299}.
We have a_14826375006 <> caught-fail.
So event RecvMsg(bob,alice,stage_a,m_14826375021,true) may be executed at {318}.
end(RecvMsg(bob,alice,stage_a,m_14826375021,true)).


RESULT event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)) cannot be proved.
Starting query event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,c_1063,stage_a,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: attacker(m_14826375023) -> end(RecvMsg(bob,alice,stage_a,m_14826375023,true))

1. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) may be inserted in a table at insert {298}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false)))).

2. We assume as hypothesis that
attacker(m_14826375067).

3. The attacker has some term a_14826375052.
attacker(a_14826375052).

4. Using the function pub the attacker may obtain pub.
attacker(pub).

5. The message dhexp(key_s(bob),g) may be sent on channel pub at output {283}.
mess(pub,dhexp(key_s(bob),g)).

6. By 4, the attacker may have the channel pub.
By 5, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

7. The message dhexp(key_s(alice),g) may be sent on channel pub at output {7}.
mess(pub,dhexp(key_s(alice),g)).

8. By 4, the attacker may have the channel pub.
By 7, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

9. Using the function empty the attacker may obtain empty.
attacker(empty).

10. Using the function somename the attacker may obtain somename.
attacker(somename).

11. By 10, the attacker may know somename.
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

12. By 11, the attacker may know hash(somename,empty).
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

13. By 12, the attacker may know hash(hash(somename,empty),empty).
By 8, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

14. By 13, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

15. By 14, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 3, the attacker may know a_14826375052.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375052).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375052)).

16. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

17. By 9, the attacker may know empty.
By 16, the attacker may know minnonce.
By 15, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375052).
By 2, the attacker may know m_14826375067.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375052),m_14826375067).
attacker(encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375052),m_14826375067)).

18. The attacker has some term b_14826375053.
attacker(b_14826375053).

19. By 3, the attacker may know a_14826375052.
By 18, the attacker may know b_14826375053.
By 17, the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375052),m_14826375067).
Using the function concat3 the attacker may obtain concat3(a_14826375052,b_14826375053,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375052),m_14826375067)).
attacker(concat3(a_14826375052,b_14826375053,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375052),m_14826375067))).

20. By 4, the attacker may have the channel pub.
By 19, the attacker may have the message concat3(a_14826375052,b_14826375053,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375052),m_14826375067)).
So the attacker may send this message on this channel.
mess(pub,concat3(a_14826375052,b_14826375053,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375052),m_14826375067))).

21. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 1 may be read at get {320}.
The message concat3(a_14826375052,b_14826375053,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375052),m_14826375067)) that may be sent on channel pub by 20 may be received at input {299}.
We have a_14826375052 <> caught-fail.
So event RecvMsg(bob,alice,stage_a,m_14826375067,true) may be executed at {318}.
end(RecvMsg(bob,alice,stage_a,m_14826375067,true)).


RESULT event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,c_1063,stage_a,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) cannot be proved.
Starting query event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,c_1063,stage_a,m,true)) || event(LeakS(phase0,alice))
goal reachable: attacker(m_14826375069) -> end(RecvMsg(bob,alice,stage_a,m_14826375069,true))

1. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) may be inserted in a table at insert {298}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false)))).

2. We assume as hypothesis that
attacker(m_14826375113).

3. The attacker has some term a_14826375098.
attacker(a_14826375098).

4. Using the function pub the attacker may obtain pub.
attacker(pub).

5. The message dhexp(key_s(bob),g) may be sent on channel pub at output {283}.
mess(pub,dhexp(key_s(bob),g)).

6. By 4, the attacker may have the channel pub.
By 5, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

7. The message dhexp(key_s(alice),g) may be sent on channel pub at output {7}.
mess(pub,dhexp(key_s(alice),g)).

8. By 4, the attacker may have the channel pub.
By 7, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

9. Using the function empty the attacker may obtain empty.
attacker(empty).

10. Using the function somename the attacker may obtain somename.
attacker(somename).

11. By 10, the attacker may know somename.
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

12. By 11, the attacker may know hash(somename,empty).
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

13. By 12, the attacker may know hash(hash(somename,empty),empty).
By 8, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

14. By 13, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

15. By 14, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 3, the attacker may know a_14826375098.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375098).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375098)).

16. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

17. By 9, the attacker may know empty.
By 16, the attacker may know minnonce.
By 15, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375098).
By 2, the attacker may know m_14826375113.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375098),m_14826375113).
attacker(encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375098),m_14826375113)).

18. The attacker has some term b_14826375099.
attacker(b_14826375099).

19. By 3, the attacker may know a_14826375098.
By 18, the attacker may know b_14826375099.
By 17, the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375098),m_14826375113).
Using the function concat3 the attacker may obtain concat3(a_14826375098,b_14826375099,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375098),m_14826375113)).
attacker(concat3(a_14826375098,b_14826375099,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375098),m_14826375113))).

20. By 4, the attacker may have the channel pub.
By 19, the attacker may have the message concat3(a_14826375098,b_14826375099,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375098),m_14826375113)).
So the attacker may send this message on this channel.
mess(pub,concat3(a_14826375098,b_14826375099,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375098),m_14826375113))).

21. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 1 may be read at get {320}.
The message concat3(a_14826375098,b_14826375099,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375098),m_14826375113)) that may be sent on channel pub by 20 may be received at input {299}.
We have a_14826375098 <> caught-fail.
So event RecvMsg(bob,alice,stage_a,m_14826375113,true) may be executed at {318}.
end(RecvMsg(bob,alice,stage_a,m_14826375113,true)).


RESULT event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,c_1063,stage_a,m,true)) || event(LeakS(phase0,alice)) cannot be proved.
Starting query event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: attacker(m_14826375115) -> end(RecvMsg(bob,alice,stage_a,m_14826375115,true))

1. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) may be inserted in a table at insert {298}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false)))).

2. We assume as hypothesis that
attacker(m_14826375158).

3. The attacker has some term a_14826375143.
attacker(a_14826375143).

4. Using the function pub the attacker may obtain pub.
attacker(pub).

5. The message dhexp(key_s(bob),g) may be sent on channel pub at output {283}.
mess(pub,dhexp(key_s(bob),g)).

6. By 4, the attacker may have the channel pub.
By 5, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

7. The message dhexp(key_s(alice),g) may be sent on channel pub at output {7}.
mess(pub,dhexp(key_s(alice),g)).

8. By 4, the attacker may have the channel pub.
By 7, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

9. Using the function empty the attacker may obtain empty.
attacker(empty).

10. Using the function somename the attacker may obtain somename.
attacker(somename).

11. By 10, the attacker may know somename.
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

12. By 11, the attacker may know hash(somename,empty).
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

13. By 12, the attacker may know hash(hash(somename,empty),empty).
By 8, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

14. By 13, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

15. By 14, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 3, the attacker may know a_14826375143.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375143).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375143)).

16. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

17. By 9, the attacker may know empty.
By 16, the attacker may know minnonce.
By 15, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375143).
By 2, the attacker may know m_14826375158.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375143),m_14826375158).
attacker(encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375143),m_14826375158)).

18. The attacker has some term b_14826375144.
attacker(b_14826375144).

19. By 3, the attacker may know a_14826375143.
By 18, the attacker may know b_14826375144.
By 17, the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375143),m_14826375158).
Using the function concat3 the attacker may obtain concat3(a_14826375143,b_14826375144,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375143),m_14826375158)).
attacker(concat3(a_14826375143,b_14826375144,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375143),m_14826375158))).

20. By 4, the attacker may have the channel pub.
By 19, the attacker may have the message concat3(a_14826375143,b_14826375144,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375143),m_14826375158)).
So the attacker may send this message on this channel.
mess(pub,concat3(a_14826375143,b_14826375144,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375143),m_14826375158))).

21. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 1 may be read at get {320}.
The message concat3(a_14826375143,b_14826375144,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375143),m_14826375158)) that may be sent on channel pub by 20 may be received at input {299}.
We have a_14826375143 <> caught-fail.
So event RecvMsg(bob,alice,stage_a,m_14826375158,true) may be executed at {318}.
end(RecvMsg(bob,alice,stage_a,m_14826375158,true)).


RESULT event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) cannot be proved.
Starting query event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)) || event(LeakS(phase0,alice))
goal reachable: attacker(m_14826375160) -> end(RecvMsg(bob,alice,stage_a,m_14826375160,true))

1. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) may be inserted in a table at insert {298}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false)))).

2. We assume as hypothesis that
attacker(m_14826375203).

3. The attacker has some term a_14826375188.
attacker(a_14826375188).

4. Using the function pub the attacker may obtain pub.
attacker(pub).

5. The message dhexp(key_s(bob),g) may be sent on channel pub at output {283}.
mess(pub,dhexp(key_s(bob),g)).

6. By 4, the attacker may have the channel pub.
By 5, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

7. The message dhexp(key_s(alice),g) may be sent on channel pub at output {7}.
mess(pub,dhexp(key_s(alice),g)).

8. By 4, the attacker may have the channel pub.
By 7, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

9. Using the function empty the attacker may obtain empty.
attacker(empty).

10. Using the function somename the attacker may obtain somename.
attacker(somename).

11. By 10, the attacker may know somename.
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

12. By 11, the attacker may know hash(somename,empty).
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

13. By 12, the attacker may know hash(hash(somename,empty),empty).
By 8, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

14. By 13, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

15. By 14, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 3, the attacker may know a_14826375188.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375188).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375188)).

16. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

17. By 9, the attacker may know empty.
By 16, the attacker may know minnonce.
By 15, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375188).
By 2, the attacker may know m_14826375203.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375188),m_14826375203).
attacker(encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375188),m_14826375203)).

18. The attacker has some term b_14826375189.
attacker(b_14826375189).

19. By 3, the attacker may know a_14826375188.
By 18, the attacker may know b_14826375189.
By 17, the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375188),m_14826375203).
Using the function concat3 the attacker may obtain concat3(a_14826375188,b_14826375189,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375188),m_14826375203)).
attacker(concat3(a_14826375188,b_14826375189,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375188),m_14826375203))).

20. By 4, the attacker may have the channel pub.
By 19, the attacker may have the message concat3(a_14826375188,b_14826375189,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375188),m_14826375203)).
So the attacker may send this message on this channel.
mess(pub,concat3(a_14826375188,b_14826375189,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375188),m_14826375203))).

21. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 1 may be read at get {320}.
The message concat3(a_14826375188,b_14826375189,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),a_14826375188),m_14826375203)) that may be sent on channel pub by 20 may be received at input {299}.
We have a_14826375188 <> caught-fail.
So event RecvMsg(bob,alice,stage_a,m_14826375203,true) may be executed at {318}.
end(RecvMsg(bob,alice,stage_a,m_14826375203,true)).


RESULT event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)) || event(LeakS(phase0,alice)) cannot be proved.
Starting query not attacker_p1(msg_a(alice,bob))
goal reachable: begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> attacker_p1(msg_a(alice,bob))
Abbreviations:
key_14826375263 = key_e[me = alice,them = bob,!1 = @sid_14826375249]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {22}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

3. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 2 may be read at get {46}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {43}.
So the message concat3(dhexp(key_14826375263,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375263,g)),msg_a(alice,bob))) may be sent on channel pub at output {45}.
mess(pub,concat3(dhexp(key_14826375263,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375263,g)),msg_a(alice,bob)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(dhexp(key_14826375263,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375263,g)),msg_a(alice,bob))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_14826375263,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375263,g)),msg_a(alice,bob))) by listening on this channel.
attacker(concat3(dhexp(key_14826375263,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375263,g)),msg_a(alice,bob)))).

5. By 4, the attacker may know concat3(dhexp(key_14826375263,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375263,g)),msg_a(alice,bob))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375263,g)),msg_a(alice,bob)).
attacker(encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375263,g)),msg_a(alice,bob))).

6. By 5, the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375263,g)),msg_a(alice,bob)).
So the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375263,g)),msg_a(alice,bob)) in phase 1.
attacker_p1(encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375263,g)),msg_a(alice,bob))).

7. By 4, the attacker may know concat3(dhexp(key_14826375263,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375263,g)),msg_a(alice,bob))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_14826375263,g).
attacker(dhexp(key_14826375263,g)).

8. The message dhexp(key_s(bob),g) may be sent on channel pub at output {283}.
mess(pub,dhexp(key_s(bob),g)).

9. By 1, the attacker may have the channel pub.
By 8, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

10. The message dhexp(key_s(alice),g) may be sent on channel pub at output {7}.
mess(pub,dhexp(key_s(alice),g)).

11. By 1, the attacker may have the channel pub.
By 10, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

12. Using the function empty the attacker may obtain empty.
attacker(empty).

13. Using the function somename the attacker may obtain somename.
attacker(somename).

14. By 13, the attacker may know somename.
By 12, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

15. By 14, the attacker may know hash(somename,empty).
By 12, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

16. By 15, the attacker may know hash(hash(somename,empty),empty).
By 11, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

17. By 16, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 9, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

18. By 17, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 7, the attacker may know dhexp(key_14826375263,g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375263,g)).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375263,g))).

19. By 18, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375263,g)).
So the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375263,g)) in phase 1.
attacker_p1(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375263,g))).

20. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

21. Using the function empty the attacker may obtain empty in phase 1.
attacker_p1(empty).

22. By 21, the attacker may know empty in phase 1.
By 20, the attacker may know minnonce in phase 1.
By 19, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375263,g)) in phase 1.
By 6, the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375263,g)),msg_a(alice,bob)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375263,g)),msg_a(alice,bob)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375263,g)),msg_a(alice,bob))).

23. By 22, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375263,g)),msg_a(alice,bob)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob) in phase 1.
attacker_p1(msg_a(alice,bob)).


RESULT not attacker_p1(msg_a(alice,bob)) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob))
goal reachable: begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> attacker_p1(msg_a(alice,bob))
Abbreviations:
key_14826375323 = key_e[me = alice,them = bob,!1 = @sid_14826375309]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {22}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

3. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 2 may be read at get {46}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {43}.
So the message concat3(dhexp(key_14826375323,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375323,g)),msg_a(alice,bob))) may be sent on channel pub at output {45}.
mess(pub,concat3(dhexp(key_14826375323,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375323,g)),msg_a(alice,bob)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(dhexp(key_14826375323,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375323,g)),msg_a(alice,bob))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_14826375323,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375323,g)),msg_a(alice,bob))) by listening on this channel.
attacker(concat3(dhexp(key_14826375323,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375323,g)),msg_a(alice,bob)))).

5. By 4, the attacker may know concat3(dhexp(key_14826375323,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375323,g)),msg_a(alice,bob))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375323,g)),msg_a(alice,bob)).
attacker(encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375323,g)),msg_a(alice,bob))).

6. By 5, the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375323,g)),msg_a(alice,bob)).
So the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375323,g)),msg_a(alice,bob)) in phase 1.
attacker_p1(encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375323,g)),msg_a(alice,bob))).

7. By 4, the attacker may know concat3(dhexp(key_14826375323,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375323,g)),msg_a(alice,bob))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_14826375323,g).
attacker(dhexp(key_14826375323,g)).

8. The message dhexp(key_s(bob),g) may be sent on channel pub at output {283}.
mess(pub,dhexp(key_s(bob),g)).

9. By 1, the attacker may have the channel pub.
By 8, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

10. The message dhexp(key_s(alice),g) may be sent on channel pub at output {7}.
mess(pub,dhexp(key_s(alice),g)).

11. By 1, the attacker may have the channel pub.
By 10, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

12. Using the function empty the attacker may obtain empty.
attacker(empty).

13. Using the function somename the attacker may obtain somename.
attacker(somename).

14. By 13, the attacker may know somename.
By 12, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

15. By 14, the attacker may know hash(somename,empty).
By 12, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

16. By 15, the attacker may know hash(hash(somename,empty),empty).
By 11, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

17. By 16, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 9, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

18. By 17, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 7, the attacker may know dhexp(key_14826375323,g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375323,g)).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375323,g))).

19. By 18, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375323,g)).
So the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375323,g)) in phase 1.
attacker_p1(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375323,g))).

20. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

21. Using the function empty the attacker may obtain empty in phase 1.
attacker_p1(empty).

22. By 21, the attacker may know empty in phase 1.
By 20, the attacker may know minnonce in phase 1.
By 19, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375323,g)) in phase 1.
By 6, the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375323,g)),msg_a(alice,bob)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375323,g)),msg_a(alice,bob)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375323,g)),msg_a(alice,bob))).

23. By 22, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375323,g)),msg_a(alice,bob)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob) in phase 1.
attacker_p1(msg_a(alice,bob)).


RESULT attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob)) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice)))
goal reachable: begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> attacker_p1(msg_a(alice,bob))
Abbreviations:
key_14826375384 = key_e[me = alice,them = bob,!1 = @sid_14826375370]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {22}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

3. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 2 may be read at get {46}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {43}.
So the message concat3(dhexp(key_14826375384,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375384,g)),msg_a(alice,bob))) may be sent on channel pub at output {45}.
mess(pub,concat3(dhexp(key_14826375384,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375384,g)),msg_a(alice,bob)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(dhexp(key_14826375384,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375384,g)),msg_a(alice,bob))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_14826375384,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375384,g)),msg_a(alice,bob))) by listening on this channel.
attacker(concat3(dhexp(key_14826375384,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375384,g)),msg_a(alice,bob)))).

5. By 4, the attacker may know concat3(dhexp(key_14826375384,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375384,g)),msg_a(alice,bob))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375384,g)),msg_a(alice,bob)).
attacker(encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375384,g)),msg_a(alice,bob))).

6. By 5, the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375384,g)),msg_a(alice,bob)).
So the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375384,g)),msg_a(alice,bob)) in phase 1.
attacker_p1(encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375384,g)),msg_a(alice,bob))).

7. By 4, the attacker may know concat3(dhexp(key_14826375384,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375384,g)),msg_a(alice,bob))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_14826375384,g).
attacker(dhexp(key_14826375384,g)).

8. The message dhexp(key_s(bob),g) may be sent on channel pub at output {283}.
mess(pub,dhexp(key_s(bob),g)).

9. By 1, the attacker may have the channel pub.
By 8, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

10. The message dhexp(key_s(alice),g) may be sent on channel pub at output {7}.
mess(pub,dhexp(key_s(alice),g)).

11. By 1, the attacker may have the channel pub.
By 10, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

12. Using the function empty the attacker may obtain empty.
attacker(empty).

13. Using the function somename the attacker may obtain somename.
attacker(somename).

14. By 13, the attacker may know somename.
By 12, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

15. By 14, the attacker may know hash(somename,empty).
By 12, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

16. By 15, the attacker may know hash(hash(somename,empty),empty).
By 11, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

17. By 16, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 9, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

18. By 17, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 7, the attacker may know dhexp(key_14826375384,g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375384,g)).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375384,g))).

19. By 18, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375384,g)).
So the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375384,g)) in phase 1.
attacker_p1(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375384,g))).

20. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

21. Using the function empty the attacker may obtain empty in phase 1.
attacker_p1(empty).

22. By 21, the attacker may know empty in phase 1.
By 20, the attacker may know minnonce in phase 1.
By 19, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375384,g)) in phase 1.
By 6, the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375384,g)),msg_a(alice,bob)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375384,g)),msg_a(alice,bob)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375384,g)),msg_a(alice,bob))).

23. By 22, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375384,g)),msg_a(alice,bob)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob) in phase 1.
attacker_p1(msg_a(alice,bob)).


RESULT attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice))) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> attacker_p1(msg_a(alice,bob))
Abbreviations:
key_14826375444 = key_e[me = alice,them = bob,!1 = @sid_14826375430]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {22}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

3. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 2 may be read at get {46}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {43}.
So the message concat3(dhexp(key_14826375444,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375444,g)),msg_a(alice,bob))) may be sent on channel pub at output {45}.
mess(pub,concat3(dhexp(key_14826375444,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375444,g)),msg_a(alice,bob)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(dhexp(key_14826375444,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375444,g)),msg_a(alice,bob))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_14826375444,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375444,g)),msg_a(alice,bob))) by listening on this channel.
attacker(concat3(dhexp(key_14826375444,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375444,g)),msg_a(alice,bob)))).

5. By 4, the attacker may know concat3(dhexp(key_14826375444,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375444,g)),msg_a(alice,bob))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375444,g)),msg_a(alice,bob)).
attacker(encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375444,g)),msg_a(alice,bob))).

6. By 5, the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375444,g)),msg_a(alice,bob)).
So the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375444,g)),msg_a(alice,bob)) in phase 1.
attacker_p1(encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375444,g)),msg_a(alice,bob))).

7. By 4, the attacker may know concat3(dhexp(key_14826375444,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375444,g)),msg_a(alice,bob))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_14826375444,g).
attacker(dhexp(key_14826375444,g)).

8. The message dhexp(key_s(bob),g) may be sent on channel pub at output {283}.
mess(pub,dhexp(key_s(bob),g)).

9. By 1, the attacker may have the channel pub.
By 8, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

10. The message dhexp(key_s(alice),g) may be sent on channel pub at output {7}.
mess(pub,dhexp(key_s(alice),g)).

11. By 1, the attacker may have the channel pub.
By 10, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

12. Using the function empty the attacker may obtain empty.
attacker(empty).

13. Using the function somename the attacker may obtain somename.
attacker(somename).

14. By 13, the attacker may know somename.
By 12, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

15. By 14, the attacker may know hash(somename,empty).
By 12, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

16. By 15, the attacker may know hash(hash(somename,empty),empty).
By 11, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

17. By 16, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 9, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

18. By 17, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 7, the attacker may know dhexp(key_14826375444,g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375444,g)).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375444,g))).

19. By 18, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375444,g)).
So the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375444,g)) in phase 1.
attacker_p1(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375444,g))).

20. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

21. Using the function empty the attacker may obtain empty in phase 1.
attacker_p1(empty).

22. By 21, the attacker may know empty in phase 1.
By 20, the attacker may know minnonce in phase 1.
By 19, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375444,g)) in phase 1.
By 6, the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375444,g)),msg_a(alice,bob)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375444,g)),msg_a(alice,bob)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375444,g)),msg_a(alice,bob))).

23. By 22, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375444,g)),msg_a(alice,bob)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob) in phase 1.
attacker_p1(msg_a(alice,bob)).


RESULT attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true))
goal reachable: begin(LeakS(phase0,bob)) && attacker(m_14826375446) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_b,m_14826375446,true))
Abbreviations:
key_14826375585 = key_e[me = alice,them = bob,!1 = @sid_14826375559]

1. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {22}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 1 may be read at get {46}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {43}.
So the entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_14826375585,g),key_14826375585),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {44}.
table(statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_14826375585,g),key_14826375585),dhexp(key_s(bob),g),empty,empty,true)))).

3. We assume as hypothesis that
attacker(m_14826375584).

4. Using the function g the attacker may obtain g.
attacker(g).

5. Using the function pub the attacker may obtain pub.
attacker(pub).

6. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {22}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

7. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 6 may be read at get {46}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {43}.
So the message concat3(dhexp(key_14826375585,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)),msg_a(alice,bob))) may be sent on channel pub at output {45}.
mess(pub,concat3(dhexp(key_14826375585,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)),msg_a(alice,bob)))).

8. By 5, the attacker may have the channel pub.
By 7, the message concat3(dhexp(key_14826375585,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)),msg_a(alice,bob))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_14826375585,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)),msg_a(alice,bob))) by listening on this channel.
attacker(concat3(dhexp(key_14826375585,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)),msg_a(alice,bob)))).

9. By 8, the attacker may know concat3(dhexp(key_14826375585,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)),msg_a(alice,bob))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)),msg_a(alice,bob)).
attacker(encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)),msg_a(alice,bob))).

10. By 8, the attacker may know concat3(dhexp(key_14826375585,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)),msg_a(alice,bob))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_14826375585,g).
attacker(dhexp(key_14826375585,g)).

11. The message dhexp(key_s(bob),g) may be sent on channel pub at output {283}.
mess(pub,dhexp(key_s(bob),g)).

12. By 5, the attacker may have the channel pub.
By 11, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

13. The message dhexp(key_s(alice),g) may be sent on channel pub at output {7}.
mess(pub,dhexp(key_s(alice),g)).

14. By 5, the attacker may have the channel pub.
By 13, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

15. Using the function empty the attacker may obtain empty.
attacker(empty).

16. Using the function somename the attacker may obtain somename.
attacker(somename).

17. By 16, the attacker may know somename.
By 15, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

18. By 17, the attacker may know hash(somename,empty).
By 15, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

19. By 18, the attacker may know hash(hash(somename,empty),empty).
By 14, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

20. By 19, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 12, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

21. By 20, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 10, the attacker may know dhexp(key_14826375585,g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g))).

22. By 21, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)).
By 9, the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)),msg_a(alice,bob)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)),msg_a(alice,bob))).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)),msg_a(alice,bob)))).

23. By 22, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)),msg_a(alice,bob))).
By 4, the attacker may know g.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)),msg_a(alice,bob))),g).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)),msg_a(alice,bob))),g)).

24. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

25. The event LeakS(phase0,bob) may be executed at {411}.
So the message key_s(bob) may be sent on channel pub at output {412}.
mess(pub,key_s(bob)).

26. By 5, the attacker may have the channel pub.
By 25, the message key_s(bob) may be sent on this channel.
So the attacker may obtain the message key_s(bob) by listening on this channel.
attacker(key_s(bob)).

27. By 26, the attacker may know key_s(bob).
By 10, the attacker may know dhexp(key_14826375585,g).
Using the function dhexp the attacker may obtain dhexp(key_14826375585,dhexp(key_s(bob),g)).
attacker(dhexp(key_14826375585,dhexp(key_s(bob),g))).

28. By 17, the attacker may know hash(somename,empty).
By 10, the attacker may know dhexp(key_14826375585,g).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),dhexp(key_14826375585,g)).
attacker(hmac_hash1(hash(somename,empty),dhexp(key_14826375585,g))).

29. By 28, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_14826375585,g)).
By 14, the attacker may know dhexp(key_s(alice),g).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826375585,g)),dhexp(key_s(alice),g)).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826375585,g)),dhexp(key_s(alice),g))).

30. By 29, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826375585,g)),dhexp(key_s(alice),g)).
By 27, the attacker may know dhexp(key_14826375585,dhexp(key_s(bob),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826375585,g)),dhexp(key_s(alice),g)),dhexp(key_14826375585,dhexp(key_s(bob),g))).
attacker(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826375585,g)),dhexp(key_s(alice),g)),dhexp(key_14826375585,dhexp(key_s(bob),g)))).

31. By 30, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826375585,g)),dhexp(key_s(alice),g)),dhexp(key_14826375585,dhexp(key_s(bob),g))).
By 24, the attacker may know minnonce.
By 23, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)),msg_a(alice,bob))),g).
By 3, the attacker may know m_14826375584.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826375585,g)),dhexp(key_s(alice),g)),dhexp(key_14826375585,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)),msg_a(alice,bob))),g),m_14826375584).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826375585,g)),dhexp(key_s(alice),g)),dhexp(key_14826375585,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)),msg_a(alice,bob))),g),m_14826375584)).

32. The attacker has some term b_14826375570.
attacker(b_14826375570).

33. By 4, the attacker may know g.
By 32, the attacker may know b_14826375570.
By 31, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826375585,g)),dhexp(key_s(alice),g)),dhexp(key_14826375585,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)),msg_a(alice,bob))),g),m_14826375584).
Using the function concat3 the attacker may obtain concat3(g,b_14826375570,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826375585,g)),dhexp(key_s(alice),g)),dhexp(key_14826375585,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)),msg_a(alice,bob))),g),m_14826375584)).
attacker(concat3(g,b_14826375570,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826375585,g)),dhexp(key_s(alice),g)),dhexp(key_14826375585,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)),msg_a(alice,bob))),g),m_14826375584))).

34. By 5, the attacker may have the channel pub.
By 33, the attacker may have the message concat3(g,b_14826375570,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826375585,g)),dhexp(key_s(alice),g)),dhexp(key_14826375585,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)),msg_a(alice,bob))),g),m_14826375584)).
So the attacker may send this message on this channel.
mess(pub,concat3(g,b_14826375570,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826375585,g)),dhexp(key_s(alice),g)),dhexp(key_14826375585,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)),msg_a(alice,bob))),g),m_14826375584))).

35. The entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_14826375585,g),key_14826375585),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 2 may be read at get {89}.
The message concat3(g,b_14826375570,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826375585,g)),dhexp(key_s(alice),g)),dhexp(key_14826375585,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826375585,g)),msg_a(alice,bob))),g),m_14826375584)) that may be sent on channel pub by 34 may be received at input {47}.
We have g <> caught-fail.
So event RecvMsg(alice,bob,stage_b,m_14826375584,true) may be executed at {87}.
end(RecvMsg(alice,bob,stage_b,m_14826375584,true)).


RESULT event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,c_1063,stage_b,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: begin(LeakS(phase0,bob)) && attacker(m_14826375587) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_b,m_14826375587,true))
goal reachable: begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_b,msg_b(bob,alice),true))
RESULT event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,c_1063,stage_b,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,c_1063,stage_b,m,true)) || event(LeakS(phase0,bob))
goal reachable: begin(LeakS(phase0,bob)) && attacker(m_14826375592) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_b,m_14826375592,true))
goal reachable: begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_b,msg_b(bob,alice),true))
RESULT event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,c_1063,stage_b,m,true)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: begin(LeakS(phase0,bob)) && attacker(m_14826375597) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_b,m_14826375597,true))
goal reachable: begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_b,msg_b(bob,alice),true))
RESULT event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true)) || event(LeakS(phase0,bob))
goal reachable: begin(LeakS(phase0,bob)) && attacker(m_14826375601) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_b,m_14826375601,true))
goal reachable: begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_b,msg_b(bob,alice),true))
RESULT event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true)) || event(LeakS(phase0,bob)) is true.
Starting query not attacker_p1(msg_b(bob,alice))
goal reachable: begin(LeakS(phase1,alice)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) -> attacker_p1(msg_b(bob,alice))
Abbreviations:
key_e_14826375887 = key_e_764[me_722 = bob,them_721 = alice,!1 = @sid_14826375873]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) may be inserted in a table at insert {298}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false)))).

3. The attacker has some term plaintext_a_14826375853.
attacker(plaintext_a_14826375853).

4. The message dhexp(key_s(alice),g) may be sent on channel pub at output {7}.
mess(pub,dhexp(key_s(alice),g)).

5. By 1, the attacker may have the channel pub.
By 4, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

6. The message dhexp(key_s(bob),g) may be sent on channel pub at output {283}.
mess(pub,dhexp(key_s(bob),g)).

7. By 1, the attacker may have the channel pub.
By 6, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

8. Using the function empty the attacker may obtain empty.
attacker(empty).

9. Using the function somename the attacker may obtain somename.
attacker(somename).

10. By 9, the attacker may know somename.
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

11. By 10, the attacker may know hash(somename,empty).
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

12. By 11, the attacker may know hash(hash(somename,empty),empty).
By 5, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

13. By 12, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 7, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

14. By 13, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 5, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g))).

15. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

16. By 8, the attacker may know empty.
By 15, the attacker may know minnonce.
By 14, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)).
By 3, the attacker may know plaintext_a_14826375853.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826375853).
attacker(encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826375853)).

17. The attacker has some term b_14826375849.
attacker(b_14826375849).

18. By 5, the attacker may know dhexp(key_s(alice),g).
By 17, the attacker may know b_14826375849.
By 16, the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826375853).
Using the function concat3 the attacker may obtain concat3(dhexp(key_s(alice),g),b_14826375849,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826375853)).
attacker(concat3(dhexp(key_s(alice),g),b_14826375849,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826375853))).

19. By 1, the attacker may have the channel pub.
By 18, the attacker may have the message concat3(dhexp(key_s(alice),g),b_14826375849,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826375853)).
So the attacker may send this message on this channel.
mess(pub,concat3(dhexp(key_s(alice),g),b_14826375849,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826375853))).

20. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 2 may be read at get {320}.
The message concat3(dhexp(key_s(alice),g),b_14826375849,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826375853)) that may be sent on channel pub by 19 may be received at input {299}.
We have dhexp(key_s(alice),g) <> caught-fail.
So the entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826375853))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),dhexp(key_s(alice),g),empty,false))) may be inserted in a table at insert {319}.
table(statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826375853))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),dhexp(key_s(alice),g),empty,false)))).

21. The entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826375853))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),dhexp(key_s(alice),g),empty,false))) that may be in a table by 20 may be read at get {365}.
The event SendMsg(bob,alice,stage_b,msg_b(bob,alice),true) may be executed at {362}.
So the message concat3(dhexp(key_e_14826375887,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826375887,dhexp(key_s(alice),g))),dhexp(key_e_14826375887,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826375853)),dhexp(key_e_14826375887,g)),msg_b(bob,alice))) may be sent on channel pub at output {364}.
mess(pub,concat3(dhexp(key_e_14826375887,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826375887,dhexp(key_s(alice),g))),dhexp(key_e_14826375887,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826375853)),dhexp(key_e_14826375887,g)),msg_b(bob,alice)))).

22. By 1, the attacker may have the channel pub.
By 21, the message concat3(dhexp(key_e_14826375887,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826375887,dhexp(key_s(alice),g))),dhexp(key_e_14826375887,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826375853)),dhexp(key_e_14826375887,g)),msg_b(bob,alice))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e_14826375887,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826375887,dhexp(key_s(alice),g))),dhexp(key_e_14826375887,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826375853)),dhexp(key_e_14826375887,g)),msg_b(bob,alice))) by listening on this channel.
attacker(concat3(dhexp(key_e_14826375887,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826375887,dhexp(key_s(alice),g))),dhexp(key_e_14826375887,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826375853)),dhexp(key_e_14826375887,g)),msg_b(bob,alice)))).

23. By 22, the attacker may know concat3(dhexp(key_e_14826375887,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826375887,dhexp(key_s(alice),g))),dhexp(key_e_14826375887,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826375853)),dhexp(key_e_14826375887,g)),msg_b(bob,alice))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826375887,dhexp(key_s(alice),g))),dhexp(key_e_14826375887,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826375853)),dhexp(key_e_14826375887,g)),msg_b(bob,alice)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826375887,dhexp(key_s(alice),g))),dhexp(key_e_14826375887,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826375853)),dhexp(key_e_14826375887,g)),msg_b(bob,alice))).

24. By 23, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826375887,dhexp(key_s(alice),g))),dhexp(key_e_14826375887,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826375853)),dhexp(key_e_14826375887,g)),msg_b(bob,alice)).
So the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826375887,dhexp(key_s(alice),g))),dhexp(key_e_14826375887,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826375853)),dhexp(key_e_14826375887,g)),msg_b(bob,alice)) in phase 1.
attacker_p1(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826375887,dhexp(key_s(alice),g))),dhexp(key_e_14826375887,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826375853)),dhexp(key_e_14826375887,g)),msg_b(bob,alice))).

25. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) may be inserted in a table at insert {298}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false)))).

26. The attacker has some term plaintext_a_14826375713.
attacker(plaintext_a_14826375713).

27. The attacker has some term re_14826375730.
attacker(re_14826375730).

28. By 13, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 27, the attacker may know re_14826375730.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826375730).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826375730)).

29. By 8, the attacker may know empty.
By 15, the attacker may know minnonce.
By 28, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826375730).
By 26, the attacker may know plaintext_a_14826375713.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826375730),plaintext_a_14826375713).
attacker(encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826375730),plaintext_a_14826375713)).

30. The attacker has some term b_14826375709.
attacker(b_14826375709).

31. By 27, the attacker may know re_14826375730.
By 30, the attacker may know b_14826375709.
By 29, the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826375730),plaintext_a_14826375713).
Using the function concat3 the attacker may obtain concat3(re_14826375730,b_14826375709,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826375730),plaintext_a_14826375713)).
attacker(concat3(re_14826375730,b_14826375709,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826375730),plaintext_a_14826375713))).

32. By 1, the attacker may have the channel pub.
By 31, the attacker may have the message concat3(re_14826375730,b_14826375709,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826375730),plaintext_a_14826375713)).
So the attacker may send this message on this channel.
mess(pub,concat3(re_14826375730,b_14826375709,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826375730),plaintext_a_14826375713))).

33. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 25 may be read at get {320}.
The message concat3(re_14826375730,b_14826375709,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826375730),plaintext_a_14826375713)) that may be sent on channel pub by 32 may be received at input {299}.
We have re_14826375730 <> caught-fail.
So the entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826375730),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826375730),plaintext_a_14826375713))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),re_14826375730,empty,false))) may be inserted in a table at insert {319}.
table(statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826375730),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826375730),plaintext_a_14826375713))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),re_14826375730,empty,false)))).

34. The entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826375730),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826375730),plaintext_a_14826375713))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),re_14826375730,empty,false))) that may be in a table by 33 may be read at get {365}.
The event SendMsg(bob,alice,stage_b,msg_b(bob,alice),true) may be executed at {362}.
So the message concat3(dhexp(key_e_14826375887,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826375887,re_14826375730)),dhexp(key_s(alice),dhexp(key_e_14826375887,g))),dhexp(key_s(bob),re_14826375730)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826375730),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826375730),plaintext_a_14826375713)),dhexp(key_e_14826375887,g)),msg_b(bob,alice))) may be sent on channel pub at output {364}.
mess(pub,concat3(dhexp(key_e_14826375887,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826375887,re_14826375730)),dhexp(key_s(alice),dhexp(key_e_14826375887,g))),dhexp(key_s(bob),re_14826375730)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826375730),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826375730),plaintext_a_14826375713)),dhexp(key_e_14826375887,g)),msg_b(bob,alice)))).

35. By 1, the attacker may have the channel pub.
By 34, the message concat3(dhexp(key_e_14826375887,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826375887,re_14826375730)),dhexp(key_s(alice),dhexp(key_e_14826375887,g))),dhexp(key_s(bob),re_14826375730)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826375730),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826375730),plaintext_a_14826375713)),dhexp(key_e_14826375887,g)),msg_b(bob,alice))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e_14826375887,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826375887,re_14826375730)),dhexp(key_s(alice),dhexp(key_e_14826375887,g))),dhexp(key_s(bob),re_14826375730)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826375730),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826375730),plaintext_a_14826375713)),dhexp(key_e_14826375887,g)),msg_b(bob,alice))) by listening on this channel.
attacker(concat3(dhexp(key_e_14826375887,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826375887,re_14826375730)),dhexp(key_s(alice),dhexp(key_e_14826375887,g))),dhexp(key_s(bob),re_14826375730)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826375730),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826375730),plaintext_a_14826375713)),dhexp(key_e_14826375887,g)),msg_b(bob,alice)))).

36. By 35, the attacker may know concat3(dhexp(key_e_14826375887,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826375887,re_14826375730)),dhexp(key_s(alice),dhexp(key_e_14826375887,g))),dhexp(key_s(bob),re_14826375730)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826375730),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826375730),plaintext_a_14826375713)),dhexp(key_e_14826375887,g)),msg_b(bob,alice))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_e_14826375887,g).
attacker(dhexp(key_e_14826375887,g)).

37. By 14, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)).
By 16, the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826375853).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826375853)).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826375853))).

38. By 37, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826375853)).
By 36, the attacker may know dhexp(key_e_14826375887,g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826375853)),dhexp(key_e_14826375887,g)).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826375853)),dhexp(key_e_14826375887,g))).

39. By 38, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826375853)),dhexp(key_e_14826375887,g)).
So the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826375853)),dhexp(key_e_14826375887,g)) in phase 1.
attacker_p1(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826375853)),dhexp(key_e_14826375887,g))).

40. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

41. By 7, the attacker may know dhexp(key_s(bob),g).
So the attacker may know dhexp(key_s(bob),g) in phase 1.
attacker_p1(dhexp(key_s(bob),g)).

42. Using the function pub the attacker may obtain pub in phase 1.
attacker_p1(pub).

43. The event LeakS(phase1,alice) may be executed at {139}.
So the message key_s(alice) may be sent on channel pub in phase 1 at output {140}.
mess_p1(pub,key_s(alice)).

44. By 42, the attacker may have the channel pub in phase 1.
By 43, the message key_s(alice) in phase 1 may be sent on this channel.
So the attacker may obtain the message key_s(alice) in phase 1 by listening on this channel.
attacker_p1(key_s(alice)).

45. By 44, the attacker may know key_s(alice) in phase 1.
By 41, the attacker may know dhexp(key_s(bob),g) in phase 1.
Using the function dhexp the attacker may obtain dhexp(key_s(bob),dhexp(key_s(alice),g)) in phase 1.
attacker_p1(dhexp(key_s(bob),dhexp(key_s(alice),g))).

46. By 36, the attacker may know dhexp(key_e_14826375887,g).
So the attacker may know dhexp(key_e_14826375887,g) in phase 1.
attacker_p1(dhexp(key_e_14826375887,g)).

47. By 44, the attacker may know key_s(alice) in phase 1.
By 46, the attacker may know dhexp(key_e_14826375887,g) in phase 1.
Using the function dhexp the attacker may obtain dhexp(key_e_14826375887,dhexp(key_s(alice),g)) in phase 1.
attacker_p1(dhexp(key_e_14826375887,dhexp(key_s(alice),g))).

48. By 10, the attacker may know hash(somename,empty).
So the attacker may know hash(somename,empty) in phase 1.
attacker_p1(hash(somename,empty)).

49. By 48, the attacker may know hash(somename,empty) in phase 1.
By 47, the attacker may know dhexp(key_e_14826375887,dhexp(key_s(alice),g)) in phase 1.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),dhexp(key_e_14826375887,dhexp(key_s(alice),g))) in phase 1.
attacker_p1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826375887,dhexp(key_s(alice),g)))).

50. By 49, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_e_14826375887,dhexp(key_s(alice),g))) in phase 1.
By 47, the attacker may know dhexp(key_e_14826375887,dhexp(key_s(alice),g)) in phase 1.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826375887,dhexp(key_s(alice),g))),dhexp(key_e_14826375887,dhexp(key_s(alice),g))) in phase 1.
attacker_p1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826375887,dhexp(key_s(alice),g))),dhexp(key_e_14826375887,dhexp(key_s(alice),g)))).

51. By 50, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826375887,dhexp(key_s(alice),g))),dhexp(key_e_14826375887,dhexp(key_s(alice),g))) in phase 1.
By 45, the attacker may know dhexp(key_s(bob),dhexp(key_s(alice),g)) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826375887,dhexp(key_s(alice),g))),dhexp(key_e_14826375887,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826375887,dhexp(key_s(alice),g))),dhexp(key_e_14826375887,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g)))).

52. By 51, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826375887,dhexp(key_s(alice),g))),dhexp(key_e_14826375887,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))) in phase 1.
By 40, the attacker may know minnonce in phase 1.
By 39, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826375853)),dhexp(key_e_14826375887,g)) in phase 1.
By 24, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826375887,dhexp(key_s(alice),g))),dhexp(key_e_14826375887,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826375853)),dhexp(key_e_14826375887,g)),msg_b(bob,alice)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826375853)),dhexp(key_e_14826375887,g)),msg_b(bob,alice)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826375853)),dhexp(key_e_14826375887,g)),msg_b(bob,alice))).

53. By 52, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826375853)),dhexp(key_e_14826375887,g)),msg_b(bob,alice)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_b(bob,alice) in phase 1.
attacker_p1(msg_b(bob,alice)).


RESULT not attacker_p1(msg_b(bob,alice)) cannot be proved.
Starting query attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice))
goal reachable: begin(LeakS(phase1,alice)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) -> attacker_p1(msg_b(bob,alice))
goal reachable: begin(LeakS(phase0,alice)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) -> attacker_p1(msg_b(bob,alice))
RESULT attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice)) is true.
Starting query attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob)))
goal reachable: begin(LeakS(phase1,alice)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) -> attacker_p1(msg_b(bob,alice))
Abbreviations:
key_e_14826376172 = key_e_764[me_722 = bob,them_721 = alice,!1 = @sid_14826376158]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) may be inserted in a table at insert {298}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false)))).

3. The attacker has some term plaintext_a_14826376138.
attacker(plaintext_a_14826376138).

4. The message dhexp(key_s(alice),g) may be sent on channel pub at output {7}.
mess(pub,dhexp(key_s(alice),g)).

5. By 1, the attacker may have the channel pub.
By 4, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

6. The message dhexp(key_s(bob),g) may be sent on channel pub at output {283}.
mess(pub,dhexp(key_s(bob),g)).

7. By 1, the attacker may have the channel pub.
By 6, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

8. Using the function empty the attacker may obtain empty.
attacker(empty).

9. Using the function somename the attacker may obtain somename.
attacker(somename).

10. By 9, the attacker may know somename.
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

11. By 10, the attacker may know hash(somename,empty).
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

12. By 11, the attacker may know hash(hash(somename,empty),empty).
By 5, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

13. By 12, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 7, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

14. By 13, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 5, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g))).

15. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

16. By 8, the attacker may know empty.
By 15, the attacker may know minnonce.
By 14, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)).
By 3, the attacker may know plaintext_a_14826376138.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376138).
attacker(encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376138)).

17. The attacker has some term b_14826376134.
attacker(b_14826376134).

18. By 5, the attacker may know dhexp(key_s(alice),g).
By 17, the attacker may know b_14826376134.
By 16, the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376138).
Using the function concat3 the attacker may obtain concat3(dhexp(key_s(alice),g),b_14826376134,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376138)).
attacker(concat3(dhexp(key_s(alice),g),b_14826376134,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376138))).

19. By 1, the attacker may have the channel pub.
By 18, the attacker may have the message concat3(dhexp(key_s(alice),g),b_14826376134,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376138)).
So the attacker may send this message on this channel.
mess(pub,concat3(dhexp(key_s(alice),g),b_14826376134,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376138))).

20. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 2 may be read at get {320}.
The message concat3(dhexp(key_s(alice),g),b_14826376134,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376138)) that may be sent on channel pub by 19 may be received at input {299}.
We have dhexp(key_s(alice),g) <> caught-fail.
So the entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376138))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),dhexp(key_s(alice),g),empty,false))) may be inserted in a table at insert {319}.
table(statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376138))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),dhexp(key_s(alice),g),empty,false)))).

21. The entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376138))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),dhexp(key_s(alice),g),empty,false))) that may be in a table by 20 may be read at get {365}.
The event SendMsg(bob,alice,stage_b,msg_b(bob,alice),true) may be executed at {362}.
So the message concat3(dhexp(key_e_14826376172,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376172,dhexp(key_s(alice),g))),dhexp(key_e_14826376172,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376138)),dhexp(key_e_14826376172,g)),msg_b(bob,alice))) may be sent on channel pub at output {364}.
mess(pub,concat3(dhexp(key_e_14826376172,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376172,dhexp(key_s(alice),g))),dhexp(key_e_14826376172,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376138)),dhexp(key_e_14826376172,g)),msg_b(bob,alice)))).

22. By 1, the attacker may have the channel pub.
By 21, the message concat3(dhexp(key_e_14826376172,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376172,dhexp(key_s(alice),g))),dhexp(key_e_14826376172,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376138)),dhexp(key_e_14826376172,g)),msg_b(bob,alice))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e_14826376172,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376172,dhexp(key_s(alice),g))),dhexp(key_e_14826376172,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376138)),dhexp(key_e_14826376172,g)),msg_b(bob,alice))) by listening on this channel.
attacker(concat3(dhexp(key_e_14826376172,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376172,dhexp(key_s(alice),g))),dhexp(key_e_14826376172,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376138)),dhexp(key_e_14826376172,g)),msg_b(bob,alice)))).

23. By 22, the attacker may know concat3(dhexp(key_e_14826376172,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376172,dhexp(key_s(alice),g))),dhexp(key_e_14826376172,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376138)),dhexp(key_e_14826376172,g)),msg_b(bob,alice))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376172,dhexp(key_s(alice),g))),dhexp(key_e_14826376172,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376138)),dhexp(key_e_14826376172,g)),msg_b(bob,alice)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376172,dhexp(key_s(alice),g))),dhexp(key_e_14826376172,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376138)),dhexp(key_e_14826376172,g)),msg_b(bob,alice))).

24. By 23, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376172,dhexp(key_s(alice),g))),dhexp(key_e_14826376172,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376138)),dhexp(key_e_14826376172,g)),msg_b(bob,alice)).
So the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376172,dhexp(key_s(alice),g))),dhexp(key_e_14826376172,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376138)),dhexp(key_e_14826376172,g)),msg_b(bob,alice)) in phase 1.
attacker_p1(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376172,dhexp(key_s(alice),g))),dhexp(key_e_14826376172,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376138)),dhexp(key_e_14826376172,g)),msg_b(bob,alice))).

25. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) may be inserted in a table at insert {298}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false)))).

26. The attacker has some term plaintext_a_14826375998.
attacker(plaintext_a_14826375998).

27. The attacker has some term re_14826376015.
attacker(re_14826376015).

28. By 13, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 27, the attacker may know re_14826376015.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376015).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376015)).

29. By 8, the attacker may know empty.
By 15, the attacker may know minnonce.
By 28, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376015).
By 26, the attacker may know plaintext_a_14826375998.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376015),plaintext_a_14826375998).
attacker(encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376015),plaintext_a_14826375998)).

30. The attacker has some term b_14826375994.
attacker(b_14826375994).

31. By 27, the attacker may know re_14826376015.
By 30, the attacker may know b_14826375994.
By 29, the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376015),plaintext_a_14826375998).
Using the function concat3 the attacker may obtain concat3(re_14826376015,b_14826375994,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376015),plaintext_a_14826375998)).
attacker(concat3(re_14826376015,b_14826375994,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376015),plaintext_a_14826375998))).

32. By 1, the attacker may have the channel pub.
By 31, the attacker may have the message concat3(re_14826376015,b_14826375994,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376015),plaintext_a_14826375998)).
So the attacker may send this message on this channel.
mess(pub,concat3(re_14826376015,b_14826375994,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376015),plaintext_a_14826375998))).

33. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 25 may be read at get {320}.
The message concat3(re_14826376015,b_14826375994,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376015),plaintext_a_14826375998)) that may be sent on channel pub by 32 may be received at input {299}.
We have re_14826376015 <> caught-fail.
So the entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376015),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376015),plaintext_a_14826375998))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),re_14826376015,empty,false))) may be inserted in a table at insert {319}.
table(statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376015),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376015),plaintext_a_14826375998))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),re_14826376015,empty,false)))).

34. The entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376015),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376015),plaintext_a_14826375998))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),re_14826376015,empty,false))) that may be in a table by 33 may be read at get {365}.
The event SendMsg(bob,alice,stage_b,msg_b(bob,alice),true) may be executed at {362}.
So the message concat3(dhexp(key_e_14826376172,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376172,re_14826376015)),dhexp(key_s(alice),dhexp(key_e_14826376172,g))),dhexp(key_s(bob),re_14826376015)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376015),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376015),plaintext_a_14826375998)),dhexp(key_e_14826376172,g)),msg_b(bob,alice))) may be sent on channel pub at output {364}.
mess(pub,concat3(dhexp(key_e_14826376172,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376172,re_14826376015)),dhexp(key_s(alice),dhexp(key_e_14826376172,g))),dhexp(key_s(bob),re_14826376015)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376015),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376015),plaintext_a_14826375998)),dhexp(key_e_14826376172,g)),msg_b(bob,alice)))).

35. By 1, the attacker may have the channel pub.
By 34, the message concat3(dhexp(key_e_14826376172,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376172,re_14826376015)),dhexp(key_s(alice),dhexp(key_e_14826376172,g))),dhexp(key_s(bob),re_14826376015)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376015),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376015),plaintext_a_14826375998)),dhexp(key_e_14826376172,g)),msg_b(bob,alice))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e_14826376172,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376172,re_14826376015)),dhexp(key_s(alice),dhexp(key_e_14826376172,g))),dhexp(key_s(bob),re_14826376015)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376015),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376015),plaintext_a_14826375998)),dhexp(key_e_14826376172,g)),msg_b(bob,alice))) by listening on this channel.
attacker(concat3(dhexp(key_e_14826376172,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376172,re_14826376015)),dhexp(key_s(alice),dhexp(key_e_14826376172,g))),dhexp(key_s(bob),re_14826376015)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376015),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376015),plaintext_a_14826375998)),dhexp(key_e_14826376172,g)),msg_b(bob,alice)))).

36. By 35, the attacker may know concat3(dhexp(key_e_14826376172,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376172,re_14826376015)),dhexp(key_s(alice),dhexp(key_e_14826376172,g))),dhexp(key_s(bob),re_14826376015)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376015),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376015),plaintext_a_14826375998)),dhexp(key_e_14826376172,g)),msg_b(bob,alice))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_e_14826376172,g).
attacker(dhexp(key_e_14826376172,g)).

37. By 14, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)).
By 16, the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376138).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376138)).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376138))).

38. By 37, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376138)).
By 36, the attacker may know dhexp(key_e_14826376172,g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376138)),dhexp(key_e_14826376172,g)).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376138)),dhexp(key_e_14826376172,g))).

39. By 38, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376138)),dhexp(key_e_14826376172,g)).
So the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376138)),dhexp(key_e_14826376172,g)) in phase 1.
attacker_p1(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376138)),dhexp(key_e_14826376172,g))).

40. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

41. By 7, the attacker may know dhexp(key_s(bob),g).
So the attacker may know dhexp(key_s(bob),g) in phase 1.
attacker_p1(dhexp(key_s(bob),g)).

42. Using the function pub the attacker may obtain pub in phase 1.
attacker_p1(pub).

43. The event LeakS(phase1,alice) may be executed at {139}.
So the message key_s(alice) may be sent on channel pub in phase 1 at output {140}.
mess_p1(pub,key_s(alice)).

44. By 42, the attacker may have the channel pub in phase 1.
By 43, the message key_s(alice) in phase 1 may be sent on this channel.
So the attacker may obtain the message key_s(alice) in phase 1 by listening on this channel.
attacker_p1(key_s(alice)).

45. By 44, the attacker may know key_s(alice) in phase 1.
By 41, the attacker may know dhexp(key_s(bob),g) in phase 1.
Using the function dhexp the attacker may obtain dhexp(key_s(bob),dhexp(key_s(alice),g)) in phase 1.
attacker_p1(dhexp(key_s(bob),dhexp(key_s(alice),g))).

46. By 36, the attacker may know dhexp(key_e_14826376172,g).
So the attacker may know dhexp(key_e_14826376172,g) in phase 1.
attacker_p1(dhexp(key_e_14826376172,g)).

47. By 44, the attacker may know key_s(alice) in phase 1.
By 46, the attacker may know dhexp(key_e_14826376172,g) in phase 1.
Using the function dhexp the attacker may obtain dhexp(key_e_14826376172,dhexp(key_s(alice),g)) in phase 1.
attacker_p1(dhexp(key_e_14826376172,dhexp(key_s(alice),g))).

48. By 10, the attacker may know hash(somename,empty).
So the attacker may know hash(somename,empty) in phase 1.
attacker_p1(hash(somename,empty)).

49. By 48, the attacker may know hash(somename,empty) in phase 1.
By 47, the attacker may know dhexp(key_e_14826376172,dhexp(key_s(alice),g)) in phase 1.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),dhexp(key_e_14826376172,dhexp(key_s(alice),g))) in phase 1.
attacker_p1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376172,dhexp(key_s(alice),g)))).

50. By 49, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_e_14826376172,dhexp(key_s(alice),g))) in phase 1.
By 47, the attacker may know dhexp(key_e_14826376172,dhexp(key_s(alice),g)) in phase 1.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376172,dhexp(key_s(alice),g))),dhexp(key_e_14826376172,dhexp(key_s(alice),g))) in phase 1.
attacker_p1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376172,dhexp(key_s(alice),g))),dhexp(key_e_14826376172,dhexp(key_s(alice),g)))).

51. By 50, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376172,dhexp(key_s(alice),g))),dhexp(key_e_14826376172,dhexp(key_s(alice),g))) in phase 1.
By 45, the attacker may know dhexp(key_s(bob),dhexp(key_s(alice),g)) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376172,dhexp(key_s(alice),g))),dhexp(key_e_14826376172,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376172,dhexp(key_s(alice),g))),dhexp(key_e_14826376172,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g)))).

52. By 51, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376172,dhexp(key_s(alice),g))),dhexp(key_e_14826376172,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))) in phase 1.
By 40, the attacker may know minnonce in phase 1.
By 39, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376138)),dhexp(key_e_14826376172,g)) in phase 1.
By 24, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376172,dhexp(key_s(alice),g))),dhexp(key_e_14826376172,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376138)),dhexp(key_e_14826376172,g)),msg_b(bob,alice)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376138)),dhexp(key_e_14826376172,g)),msg_b(bob,alice)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376138)),dhexp(key_e_14826376172,g)),msg_b(bob,alice))).

53. By 52, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376138)),dhexp(key_e_14826376172,g)),msg_b(bob,alice)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_b(bob,alice) in phase 1.
attacker_p1(msg_b(bob,alice)).


RESULT attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob))) cannot be proved.
Starting query attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice))
goal reachable: begin(LeakS(phase1,alice)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) -> attacker_p1(msg_b(bob,alice))
Abbreviations:
key_e_14826376456 = key_e_764[me_722 = bob,them_721 = alice,!1 = @sid_14826376442]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) may be inserted in a table at insert {298}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false)))).

3. The attacker has some term plaintext_a_14826376422.
attacker(plaintext_a_14826376422).

4. The message dhexp(key_s(alice),g) may be sent on channel pub at output {7}.
mess(pub,dhexp(key_s(alice),g)).

5. By 1, the attacker may have the channel pub.
By 4, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

6. The message dhexp(key_s(bob),g) may be sent on channel pub at output {283}.
mess(pub,dhexp(key_s(bob),g)).

7. By 1, the attacker may have the channel pub.
By 6, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

8. Using the function empty the attacker may obtain empty.
attacker(empty).

9. Using the function somename the attacker may obtain somename.
attacker(somename).

10. By 9, the attacker may know somename.
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

11. By 10, the attacker may know hash(somename,empty).
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

12. By 11, the attacker may know hash(hash(somename,empty),empty).
By 5, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

13. By 12, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 7, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

14. By 13, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 5, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g))).

15. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

16. By 8, the attacker may know empty.
By 15, the attacker may know minnonce.
By 14, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)).
By 3, the attacker may know plaintext_a_14826376422.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376422).
attacker(encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376422)).

17. The attacker has some term b_14826376418.
attacker(b_14826376418).

18. By 5, the attacker may know dhexp(key_s(alice),g).
By 17, the attacker may know b_14826376418.
By 16, the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376422).
Using the function concat3 the attacker may obtain concat3(dhexp(key_s(alice),g),b_14826376418,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376422)).
attacker(concat3(dhexp(key_s(alice),g),b_14826376418,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376422))).

19. By 1, the attacker may have the channel pub.
By 18, the attacker may have the message concat3(dhexp(key_s(alice),g),b_14826376418,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376422)).
So the attacker may send this message on this channel.
mess(pub,concat3(dhexp(key_s(alice),g),b_14826376418,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376422))).

20. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 2 may be read at get {320}.
The message concat3(dhexp(key_s(alice),g),b_14826376418,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376422)) that may be sent on channel pub by 19 may be received at input {299}.
We have dhexp(key_s(alice),g) <> caught-fail.
So the entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376422))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),dhexp(key_s(alice),g),empty,false))) may be inserted in a table at insert {319}.
table(statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376422))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),dhexp(key_s(alice),g),empty,false)))).

21. The entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376422))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),dhexp(key_s(alice),g),empty,false))) that may be in a table by 20 may be read at get {365}.
The event SendMsg(bob,alice,stage_b,msg_b(bob,alice),true) may be executed at {362}.
So the message concat3(dhexp(key_e_14826376456,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376456,dhexp(key_s(alice),g))),dhexp(key_e_14826376456,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376422)),dhexp(key_e_14826376456,g)),msg_b(bob,alice))) may be sent on channel pub at output {364}.
mess(pub,concat3(dhexp(key_e_14826376456,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376456,dhexp(key_s(alice),g))),dhexp(key_e_14826376456,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376422)),dhexp(key_e_14826376456,g)),msg_b(bob,alice)))).

22. By 1, the attacker may have the channel pub.
By 21, the message concat3(dhexp(key_e_14826376456,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376456,dhexp(key_s(alice),g))),dhexp(key_e_14826376456,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376422)),dhexp(key_e_14826376456,g)),msg_b(bob,alice))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e_14826376456,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376456,dhexp(key_s(alice),g))),dhexp(key_e_14826376456,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376422)),dhexp(key_e_14826376456,g)),msg_b(bob,alice))) by listening on this channel.
attacker(concat3(dhexp(key_e_14826376456,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376456,dhexp(key_s(alice),g))),dhexp(key_e_14826376456,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376422)),dhexp(key_e_14826376456,g)),msg_b(bob,alice)))).

23. By 22, the attacker may know concat3(dhexp(key_e_14826376456,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376456,dhexp(key_s(alice),g))),dhexp(key_e_14826376456,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376422)),dhexp(key_e_14826376456,g)),msg_b(bob,alice))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376456,dhexp(key_s(alice),g))),dhexp(key_e_14826376456,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376422)),dhexp(key_e_14826376456,g)),msg_b(bob,alice)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376456,dhexp(key_s(alice),g))),dhexp(key_e_14826376456,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376422)),dhexp(key_e_14826376456,g)),msg_b(bob,alice))).

24. By 23, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376456,dhexp(key_s(alice),g))),dhexp(key_e_14826376456,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376422)),dhexp(key_e_14826376456,g)),msg_b(bob,alice)).
So the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376456,dhexp(key_s(alice),g))),dhexp(key_e_14826376456,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376422)),dhexp(key_e_14826376456,g)),msg_b(bob,alice)) in phase 1.
attacker_p1(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376456,dhexp(key_s(alice),g))),dhexp(key_e_14826376456,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376422)),dhexp(key_e_14826376456,g)),msg_b(bob,alice))).

25. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) may be inserted in a table at insert {298}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false)))).

26. The attacker has some term plaintext_a_14826376282.
attacker(plaintext_a_14826376282).

27. The attacker has some term re_14826376299.
attacker(re_14826376299).

28. By 13, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 27, the attacker may know re_14826376299.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376299).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376299)).

29. By 8, the attacker may know empty.
By 15, the attacker may know minnonce.
By 28, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376299).
By 26, the attacker may know plaintext_a_14826376282.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376299),plaintext_a_14826376282).
attacker(encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376299),plaintext_a_14826376282)).

30. The attacker has some term b_14826376278.
attacker(b_14826376278).

31. By 27, the attacker may know re_14826376299.
By 30, the attacker may know b_14826376278.
By 29, the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376299),plaintext_a_14826376282).
Using the function concat3 the attacker may obtain concat3(re_14826376299,b_14826376278,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376299),plaintext_a_14826376282)).
attacker(concat3(re_14826376299,b_14826376278,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376299),plaintext_a_14826376282))).

32. By 1, the attacker may have the channel pub.
By 31, the attacker may have the message concat3(re_14826376299,b_14826376278,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376299),plaintext_a_14826376282)).
So the attacker may send this message on this channel.
mess(pub,concat3(re_14826376299,b_14826376278,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376299),plaintext_a_14826376282))).

33. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 25 may be read at get {320}.
The message concat3(re_14826376299,b_14826376278,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376299),plaintext_a_14826376282)) that may be sent on channel pub by 32 may be received at input {299}.
We have re_14826376299 <> caught-fail.
So the entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376299),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376299),plaintext_a_14826376282))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),re_14826376299,empty,false))) may be inserted in a table at insert {319}.
table(statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376299),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376299),plaintext_a_14826376282))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),re_14826376299,empty,false)))).

34. The entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376299),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376299),plaintext_a_14826376282))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),re_14826376299,empty,false))) that may be in a table by 33 may be read at get {365}.
The event SendMsg(bob,alice,stage_b,msg_b(bob,alice),true) may be executed at {362}.
So the message concat3(dhexp(key_e_14826376456,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376456,re_14826376299)),dhexp(key_s(alice),dhexp(key_e_14826376456,g))),dhexp(key_s(bob),re_14826376299)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376299),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376299),plaintext_a_14826376282)),dhexp(key_e_14826376456,g)),msg_b(bob,alice))) may be sent on channel pub at output {364}.
mess(pub,concat3(dhexp(key_e_14826376456,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376456,re_14826376299)),dhexp(key_s(alice),dhexp(key_e_14826376456,g))),dhexp(key_s(bob),re_14826376299)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376299),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376299),plaintext_a_14826376282)),dhexp(key_e_14826376456,g)),msg_b(bob,alice)))).

35. By 1, the attacker may have the channel pub.
By 34, the message concat3(dhexp(key_e_14826376456,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376456,re_14826376299)),dhexp(key_s(alice),dhexp(key_e_14826376456,g))),dhexp(key_s(bob),re_14826376299)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376299),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376299),plaintext_a_14826376282)),dhexp(key_e_14826376456,g)),msg_b(bob,alice))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e_14826376456,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376456,re_14826376299)),dhexp(key_s(alice),dhexp(key_e_14826376456,g))),dhexp(key_s(bob),re_14826376299)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376299),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376299),plaintext_a_14826376282)),dhexp(key_e_14826376456,g)),msg_b(bob,alice))) by listening on this channel.
attacker(concat3(dhexp(key_e_14826376456,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376456,re_14826376299)),dhexp(key_s(alice),dhexp(key_e_14826376456,g))),dhexp(key_s(bob),re_14826376299)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376299),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376299),plaintext_a_14826376282)),dhexp(key_e_14826376456,g)),msg_b(bob,alice)))).

36. By 35, the attacker may know concat3(dhexp(key_e_14826376456,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376456,re_14826376299)),dhexp(key_s(alice),dhexp(key_e_14826376456,g))),dhexp(key_s(bob),re_14826376299)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376299),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376299),plaintext_a_14826376282)),dhexp(key_e_14826376456,g)),msg_b(bob,alice))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_e_14826376456,g).
attacker(dhexp(key_e_14826376456,g)).

37. By 14, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)).
By 16, the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376422).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376422)).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376422))).

38. By 37, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376422)).
By 36, the attacker may know dhexp(key_e_14826376456,g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376422)),dhexp(key_e_14826376456,g)).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376422)),dhexp(key_e_14826376456,g))).

39. By 38, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376422)),dhexp(key_e_14826376456,g)).
So the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376422)),dhexp(key_e_14826376456,g)) in phase 1.
attacker_p1(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376422)),dhexp(key_e_14826376456,g))).

40. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

41. By 7, the attacker may know dhexp(key_s(bob),g).
So the attacker may know dhexp(key_s(bob),g) in phase 1.
attacker_p1(dhexp(key_s(bob),g)).

42. Using the function pub the attacker may obtain pub in phase 1.
attacker_p1(pub).

43. The event LeakS(phase1,alice) may be executed at {139}.
So the message key_s(alice) may be sent on channel pub in phase 1 at output {140}.
mess_p1(pub,key_s(alice)).

44. By 42, the attacker may have the channel pub in phase 1.
By 43, the message key_s(alice) in phase 1 may be sent on this channel.
So the attacker may obtain the message key_s(alice) in phase 1 by listening on this channel.
attacker_p1(key_s(alice)).

45. By 44, the attacker may know key_s(alice) in phase 1.
By 41, the attacker may know dhexp(key_s(bob),g) in phase 1.
Using the function dhexp the attacker may obtain dhexp(key_s(bob),dhexp(key_s(alice),g)) in phase 1.
attacker_p1(dhexp(key_s(bob),dhexp(key_s(alice),g))).

46. By 36, the attacker may know dhexp(key_e_14826376456,g).
So the attacker may know dhexp(key_e_14826376456,g) in phase 1.
attacker_p1(dhexp(key_e_14826376456,g)).

47. By 44, the attacker may know key_s(alice) in phase 1.
By 46, the attacker may know dhexp(key_e_14826376456,g) in phase 1.
Using the function dhexp the attacker may obtain dhexp(key_e_14826376456,dhexp(key_s(alice),g)) in phase 1.
attacker_p1(dhexp(key_e_14826376456,dhexp(key_s(alice),g))).

48. By 10, the attacker may know hash(somename,empty).
So the attacker may know hash(somename,empty) in phase 1.
attacker_p1(hash(somename,empty)).

49. By 48, the attacker may know hash(somename,empty) in phase 1.
By 47, the attacker may know dhexp(key_e_14826376456,dhexp(key_s(alice),g)) in phase 1.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),dhexp(key_e_14826376456,dhexp(key_s(alice),g))) in phase 1.
attacker_p1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376456,dhexp(key_s(alice),g)))).

50. By 49, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_e_14826376456,dhexp(key_s(alice),g))) in phase 1.
By 47, the attacker may know dhexp(key_e_14826376456,dhexp(key_s(alice),g)) in phase 1.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376456,dhexp(key_s(alice),g))),dhexp(key_e_14826376456,dhexp(key_s(alice),g))) in phase 1.
attacker_p1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376456,dhexp(key_s(alice),g))),dhexp(key_e_14826376456,dhexp(key_s(alice),g)))).

51. By 50, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376456,dhexp(key_s(alice),g))),dhexp(key_e_14826376456,dhexp(key_s(alice),g))) in phase 1.
By 45, the attacker may know dhexp(key_s(bob),dhexp(key_s(alice),g)) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376456,dhexp(key_s(alice),g))),dhexp(key_e_14826376456,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376456,dhexp(key_s(alice),g))),dhexp(key_e_14826376456,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g)))).

52. By 51, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376456,dhexp(key_s(alice),g))),dhexp(key_e_14826376456,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))) in phase 1.
By 40, the attacker may know minnonce in phase 1.
By 39, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376422)),dhexp(key_e_14826376456,g)) in phase 1.
By 24, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376456,dhexp(key_s(alice),g))),dhexp(key_e_14826376456,dhexp(key_s(alice),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376422)),dhexp(key_e_14826376456,g)),msg_b(bob,alice)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376422)),dhexp(key_e_14826376456,g)),msg_b(bob,alice)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376422)),dhexp(key_e_14826376456,g)),msg_b(bob,alice))).

53. By 52, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_s(alice),g)),plaintext_a_14826376422)),dhexp(key_e_14826376456,g)),msg_b(bob,alice)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_b(bob,alice) in phase 1.
attacker_p1(msg_b(bob,alice)).


RESULT attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)) cannot be proved.
Starting query event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true))
goal reachable: begin(LeakS(phase0,alice)) && attacker(m_14826376458) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) -> end(RecvMsg(bob,alice,stage_c,m_14826376458,true))
Abbreviations:
key_e_14826376747 = key_e_764[me_722 = bob,them_721 = alice,!1 = @sid_14826376730]

1. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) may be inserted in a table at insert {298}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false)))).

2. The attacker has some term plaintext_a_14826376710.
attacker(plaintext_a_14826376710).

3. Using the function g the attacker may obtain g.
attacker(g).

4. Using the function pub the attacker may obtain pub.
attacker(pub).

5. The message dhexp(key_s(bob),g) may be sent on channel pub at output {283}.
mess(pub,dhexp(key_s(bob),g)).

6. By 4, the attacker may have the channel pub.
By 5, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

7. The message dhexp(key_s(alice),g) may be sent on channel pub at output {7}.
mess(pub,dhexp(key_s(alice),g)).

8. By 4, the attacker may have the channel pub.
By 7, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

9. Using the function empty the attacker may obtain empty.
attacker(empty).

10. Using the function somename the attacker may obtain somename.
attacker(somename).

11. By 10, the attacker may know somename.
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

12. By 11, the attacker may know hash(somename,empty).
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

13. By 12, the attacker may know hash(hash(somename,empty),empty).
By 8, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

14. By 13, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

15. By 14, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 3, the attacker may know g.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g)).

16. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

17. By 9, the attacker may know empty.
By 16, the attacker may know minnonce.
By 15, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
By 2, the attacker may know plaintext_a_14826376710.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710).
attacker(encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)).

18. The attacker has some term b_14826376706.
attacker(b_14826376706).

19. By 3, the attacker may know g.
By 18, the attacker may know b_14826376706.
By 17, the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710).
Using the function concat3 the attacker may obtain concat3(g,b_14826376706,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)).
attacker(concat3(g,b_14826376706,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710))).

20. By 4, the attacker may have the channel pub.
By 19, the attacker may have the message concat3(g,b_14826376706,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)).
So the attacker may send this message on this channel.
mess(pub,concat3(g,b_14826376706,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710))).

21. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 1 may be read at get {320}.
The message concat3(g,b_14826376706,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)) that may be sent on channel pub by 20 may be received at input {299}.
We have g <> caught-fail.
So the entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) may be inserted in a table at insert {319}.
table(statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false)))).

22. The entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) that may be in a table by 21 may be read at get {365}.
The event SendMsg(bob,alice,stage_b,msg_b(bob,alice),true) may be executed at {362}.
So the entry statestore(bob,alice,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),g)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)),dhexp(key_e_14826376747,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)),dhexp(key_e_14826376747,g)),msg_b(bob,alice)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_14826376747,g),key_e_14826376747),dhexp(key_s(alice),g),g,empty,false))) may be inserted in a table at insert {363}.
table(statestore(bob,alice,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),g)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)),dhexp(key_e_14826376747,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)),dhexp(key_e_14826376747,g)),msg_b(bob,alice)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_14826376747,g),key_e_14826376747),dhexp(key_s(alice),g),g,empty,false)))).

23. We assume as hypothesis that
attacker(m_14826376746).

24. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) may be inserted in a table at insert {298}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false)))).

25. The attacker has some term b_14826376638.
attacker(b_14826376638).

26. By 3, the attacker may know g.
By 25, the attacker may know b_14826376638.
By 17, the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710).
Using the function concat3 the attacker may obtain concat3(g,b_14826376638,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)).
attacker(concat3(g,b_14826376638,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710))).

27. By 4, the attacker may have the channel pub.
By 26, the attacker may have the message concat3(g,b_14826376638,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)).
So the attacker may send this message on this channel.
mess(pub,concat3(g,b_14826376638,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710))).

28. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 24 may be read at get {320}.
The message concat3(g,b_14826376638,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)) that may be sent on channel pub by 27 may be received at input {299}.
We have g <> caught-fail.
So the entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) may be inserted in a table at insert {319}.
table(statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false)))).

29. The entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) that may be in a table by 28 may be read at get {365}.
The event SendMsg(bob,alice,stage_b,msg_b(bob,alice),true) may be executed at {362}.
So the message concat3(dhexp(key_e_14826376747,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)),dhexp(key_e_14826376747,g)),msg_b(bob,alice))) may be sent on channel pub at output {364}.
mess(pub,concat3(dhexp(key_e_14826376747,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)),dhexp(key_e_14826376747,g)),msg_b(bob,alice)))).

30. By 4, the attacker may have the channel pub.
By 29, the message concat3(dhexp(key_e_14826376747,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)),dhexp(key_e_14826376747,g)),msg_b(bob,alice))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e_14826376747,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)),dhexp(key_e_14826376747,g)),msg_b(bob,alice))) by listening on this channel.
attacker(concat3(dhexp(key_e_14826376747,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)),dhexp(key_e_14826376747,g)),msg_b(bob,alice)))).

31. By 30, the attacker may know concat3(dhexp(key_e_14826376747,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)),dhexp(key_e_14826376747,g)),msg_b(bob,alice))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)),dhexp(key_e_14826376747,g)),msg_b(bob,alice)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)),dhexp(key_e_14826376747,g)),msg_b(bob,alice))).

32. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) may be inserted in a table at insert {298}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false)))).

33. The attacker has some term plaintext_a_14826376561.
attacker(plaintext_a_14826376561).

34. The attacker has some term re_14826376578.
attacker(re_14826376578).

35. By 14, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 34, the attacker may know re_14826376578.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376578).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376578)).

36. By 9, the attacker may know empty.
By 16, the attacker may know minnonce.
By 35, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376578).
By 33, the attacker may know plaintext_a_14826376561.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376578),plaintext_a_14826376561).
attacker(encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376578),plaintext_a_14826376561)).

37. The attacker has some term b_14826376557.
attacker(b_14826376557).

38. By 34, the attacker may know re_14826376578.
By 37, the attacker may know b_14826376557.
By 36, the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376578),plaintext_a_14826376561).
Using the function concat3 the attacker may obtain concat3(re_14826376578,b_14826376557,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376578),plaintext_a_14826376561)).
attacker(concat3(re_14826376578,b_14826376557,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376578),plaintext_a_14826376561))).

39. By 4, the attacker may have the channel pub.
By 38, the attacker may have the message concat3(re_14826376578,b_14826376557,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376578),plaintext_a_14826376561)).
So the attacker may send this message on this channel.
mess(pub,concat3(re_14826376578,b_14826376557,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376578),plaintext_a_14826376561))).

40. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 32 may be read at get {320}.
The message concat3(re_14826376578,b_14826376557,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376578),plaintext_a_14826376561)) that may be sent on channel pub by 39 may be received at input {299}.
We have re_14826376578 <> caught-fail.
So the entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376578),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376578),plaintext_a_14826376561))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),re_14826376578,empty,false))) may be inserted in a table at insert {319}.
table(statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376578),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376578),plaintext_a_14826376561))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),re_14826376578,empty,false)))).

41. The entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376578),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376578),plaintext_a_14826376561))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),re_14826376578,empty,false))) that may be in a table by 40 may be read at get {365}.
The event SendMsg(bob,alice,stage_b,msg_b(bob,alice),true) may be executed at {362}.
So the message concat3(dhexp(key_e_14826376747,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,re_14826376578)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),re_14826376578)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376578),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376578),plaintext_a_14826376561)),dhexp(key_e_14826376747,g)),msg_b(bob,alice))) may be sent on channel pub at output {364}.
mess(pub,concat3(dhexp(key_e_14826376747,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,re_14826376578)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),re_14826376578)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376578),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376578),plaintext_a_14826376561)),dhexp(key_e_14826376747,g)),msg_b(bob,alice)))).

42. By 4, the attacker may have the channel pub.
By 41, the message concat3(dhexp(key_e_14826376747,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,re_14826376578)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),re_14826376578)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376578),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376578),plaintext_a_14826376561)),dhexp(key_e_14826376747,g)),msg_b(bob,alice))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e_14826376747,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,re_14826376578)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),re_14826376578)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376578),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376578),plaintext_a_14826376561)),dhexp(key_e_14826376747,g)),msg_b(bob,alice))) by listening on this channel.
attacker(concat3(dhexp(key_e_14826376747,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,re_14826376578)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),re_14826376578)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376578),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376578),plaintext_a_14826376561)),dhexp(key_e_14826376747,g)),msg_b(bob,alice)))).

43. By 42, the attacker may know concat3(dhexp(key_e_14826376747,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,re_14826376578)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),re_14826376578)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376578),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826376578),plaintext_a_14826376561)),dhexp(key_e_14826376747,g)),msg_b(bob,alice))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_e_14826376747,g).
attacker(dhexp(key_e_14826376747,g)).

44. By 15, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
By 17, the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710))).

45. By 44, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)).
By 43, the attacker may know dhexp(key_e_14826376747,g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)),dhexp(key_e_14826376747,g)).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)),dhexp(key_e_14826376747,g))).

46. By 45, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)),dhexp(key_e_14826376747,g)).
By 31, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)),dhexp(key_e_14826376747,g)),msg_b(bob,alice)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)),dhexp(key_e_14826376747,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)),dhexp(key_e_14826376747,g)),msg_b(bob,alice))).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)),dhexp(key_e_14826376747,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)),dhexp(key_e_14826376747,g)),msg_b(bob,alice)))).

47. By 16, the attacker may know minnonce.
Using the function increment_nonce the attacker may obtain increment_nonce(minnonce).
attacker(increment_nonce(minnonce)).

48. The event LeakS(phase0,alice) may be executed at {136}.
So the message key_s(alice) may be sent on channel pub at output {137}.
mess(pub,key_s(alice)).

49. By 4, the attacker may have the channel pub.
By 48, the message key_s(alice) may be sent on this channel.
So the attacker may obtain the message key_s(alice) by listening on this channel.
attacker(key_s(alice)).

50. By 49, the attacker may know key_s(alice).
By 43, the attacker may know dhexp(key_e_14826376747,g).
Using the function dhexp the attacker may obtain dhexp(key_s(alice),dhexp(key_e_14826376747,g)).
attacker(dhexp(key_s(alice),dhexp(key_e_14826376747,g))).

51. By 11, the attacker may know hash(somename,empty).
By 43, the attacker may know dhexp(key_e_14826376747,g).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)).
attacker(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g))).

52. By 51, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)).
By 50, the attacker may know dhexp(key_s(alice),dhexp(key_e_14826376747,g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)),dhexp(key_s(alice),dhexp(key_e_14826376747,g)))).

53. By 52, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),g)).
attacker(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),g))).

54. By 53, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),g)).
By 47, the attacker may know increment_nonce(minnonce).
By 46, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)),dhexp(key_e_14826376747,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)),dhexp(key_e_14826376747,g)),msg_b(bob,alice))).
By 23, the attacker may know m_14826376746.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)),dhexp(key_e_14826376747,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)),dhexp(key_e_14826376747,g)),msg_b(bob,alice))),m_14826376746).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)),dhexp(key_e_14826376747,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)),dhexp(key_e_14826376747,g)),msg_b(bob,alice))),m_14826376746)).

55. The attacker has some term b_14826376732.
attacker(b_14826376732).

56. The attacker has some term a_14826376731.
attacker(a_14826376731).

57. By 56, the attacker may know a_14826376731.
By 55, the attacker may know b_14826376732.
By 54, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)),dhexp(key_e_14826376747,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)),dhexp(key_e_14826376747,g)),msg_b(bob,alice))),m_14826376746).
Using the function concat3 the attacker may obtain concat3(a_14826376731,b_14826376732,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)),dhexp(key_e_14826376747,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)),dhexp(key_e_14826376747,g)),msg_b(bob,alice))),m_14826376746)).
attacker(concat3(a_14826376731,b_14826376732,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)),dhexp(key_e_14826376747,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)),dhexp(key_e_14826376747,g)),msg_b(bob,alice))),m_14826376746))).

58. By 4, the attacker may have the channel pub.
By 57, the attacker may have the message concat3(a_14826376731,b_14826376732,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)),dhexp(key_e_14826376747,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)),dhexp(key_e_14826376747,g)),msg_b(bob,alice))),m_14826376746)).
So the attacker may send this message on this channel.
mess(pub,concat3(a_14826376731,b_14826376732,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)),dhexp(key_e_14826376747,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)),dhexp(key_e_14826376747,g)),msg_b(bob,alice))),m_14826376746))).

59. The entry statestore(bob,alice,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),g)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)),dhexp(key_e_14826376747,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)),dhexp(key_e_14826376747,g)),msg_b(bob,alice)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_14826376747,g),key_e_14826376747),dhexp(key_s(alice),g),g,empty,false))) that may be in a table by 22 may be read at get {384}.
The message concat3(a_14826376731,b_14826376732,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)),dhexp(key_e_14826376747,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826376747,g)),dhexp(key_s(alice),dhexp(key_e_14826376747,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826376710)),dhexp(key_e_14826376747,g)),msg_b(bob,alice))),m_14826376746)) that may be sent on channel pub by 58 may be received at input {366}.
So event RecvMsg(bob,alice,stage_c,m_14826376746,true) may be executed at {382}.
end(RecvMsg(bob,alice,stage_c,m_14826376746,true)).


RESULT event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true)) cannot be proved.
Starting query event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,c_1063,stage_c,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(LeakS(phase0,alice)) && attacker(m_14826376749) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) -> end(RecvMsg(bob,alice,stage_c,m_14826376749,true))
goal reachable: begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(bob,alice,stage_c,msg_c(alice,bob),true))
RESULT event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,c_1063,stage_c,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,c_1063,stage_c,m,true)) || event(LeakS(phase0,alice))
goal reachable: begin(LeakS(phase0,alice)) && attacker(m_14826376754) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) -> end(RecvMsg(bob,alice,stage_c,m_14826376754,true))
goal reachable: begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(bob,alice,stage_c,msg_c(alice,bob),true))
RESULT event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,c_1063,stage_c,m,true)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(LeakS(phase0,alice)) && attacker(m_14826376759) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) -> end(RecvMsg(bob,alice,stage_c,m_14826376759,true))
goal reachable: begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(bob,alice,stage_c,msg_c(alice,bob),true))
RESULT event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true)) || event(LeakS(phase0,alice))
goal reachable: begin(LeakS(phase0,alice)) && attacker(m_14826376763) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) -> end(RecvMsg(bob,alice,stage_c,m_14826376763,true))
goal reachable: begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(bob,alice,stage_c,msg_c(alice,bob),true))
RESULT event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true)) || event(LeakS(phase0,alice)) is true.
Starting query not attacker_p1(msg_c(alice,bob))
goal reachable: begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> attacker_p1(msg_c(alice,bob))
Abbreviations:
key_14826377016 = key_e[me = alice,them = bob,!1 = @sid_14826376967]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {22}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

3. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 2 may be read at get {46}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {43}.
So the entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_14826377016,g),key_14826377016),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {44}.
table(statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_14826377016,g),key_14826377016),dhexp(key_s(bob),g),empty,empty,true)))).

4. The attacker has some term plaintext_b_14826376984.
attacker(plaintext_b_14826376984).

5. Using the function g the attacker may obtain g.
attacker(g).

6. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {22}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

7. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 6 may be read at get {46}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {43}.
So the message concat3(dhexp(key_14826377016,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))) may be sent on channel pub at output {45}.
mess(pub,concat3(dhexp(key_14826377016,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob)))).

8. By 1, the attacker may have the channel pub.
By 7, the message concat3(dhexp(key_14826377016,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_14826377016,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))) by listening on this channel.
attacker(concat3(dhexp(key_14826377016,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob)))).

9. By 8, the attacker may know concat3(dhexp(key_14826377016,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob)).
attacker(encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))).

10. By 8, the attacker may know concat3(dhexp(key_14826377016,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_14826377016,g).
attacker(dhexp(key_14826377016,g)).

11. The message dhexp(key_s(bob),g) may be sent on channel pub at output {283}.
mess(pub,dhexp(key_s(bob),g)).

12. By 1, the attacker may have the channel pub.
By 11, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

13. The message dhexp(key_s(alice),g) may be sent on channel pub at output {7}.
mess(pub,dhexp(key_s(alice),g)).

14. By 1, the attacker may have the channel pub.
By 13, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

15. Using the function empty the attacker may obtain empty.
attacker(empty).

16. Using the function somename the attacker may obtain somename.
attacker(somename).

17. By 16, the attacker may know somename.
By 15, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

18. By 17, the attacker may know hash(somename,empty).
By 15, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

19. By 18, the attacker may know hash(hash(somename,empty),empty).
By 14, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

20. By 19, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 12, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

21. By 20, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 10, the attacker may know dhexp(key_14826377016,g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g))).

22. By 21, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)).
By 9, the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob)))).

23. By 22, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))).
By 5, the attacker may know g.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g)).

24. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

25. The event LeakS(phase0,bob) may be executed at {411}.
So the message key_s(bob) may be sent on channel pub at output {412}.
mess(pub,key_s(bob)).

26. By 1, the attacker may have the channel pub.
By 25, the message key_s(bob) may be sent on this channel.
So the attacker may obtain the message key_s(bob) by listening on this channel.
attacker(key_s(bob)).

27. By 26, the attacker may know key_s(bob).
By 10, the attacker may know dhexp(key_14826377016,g).
Using the function dhexp the attacker may obtain dhexp(key_14826377016,dhexp(key_s(bob),g)).
attacker(dhexp(key_14826377016,dhexp(key_s(bob),g))).

28. By 17, the attacker may know hash(somename,empty).
By 10, the attacker may know dhexp(key_14826377016,g).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)).
attacker(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g))).

29. By 28, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)).
By 14, the attacker may know dhexp(key_s(alice),g).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g))).

30. By 29, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)).
By 27, the attacker may know dhexp(key_14826377016,dhexp(key_s(bob),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))).
attacker(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g)))).

31. By 30, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))).
By 24, the attacker may know minnonce.
By 23, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g).
By 4, the attacker may know plaintext_b_14826376984.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),plaintext_b_14826376984).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),plaintext_b_14826376984)).

32. The attacker has some term b_14826376978.
attacker(b_14826376978).

33. By 5, the attacker may know g.
By 32, the attacker may know b_14826376978.
By 31, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),plaintext_b_14826376984).
Using the function concat3 the attacker may obtain concat3(g,b_14826376978,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),plaintext_b_14826376984)).
attacker(concat3(g,b_14826376978,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),plaintext_b_14826376984))).

34. By 1, the attacker may have the channel pub.
By 33, the attacker may have the message concat3(g,b_14826376978,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),plaintext_b_14826376984)).
So the attacker may send this message on this channel.
mess(pub,concat3(g,b_14826376978,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),plaintext_b_14826376984))).

35. The entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_14826377016,g),key_14826377016),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 3 may be read at get {89}.
The message concat3(g,b_14826376978,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),plaintext_b_14826376984)) that may be sent on channel pub by 34 may be received at input {47}.
We have g <> caught-fail.
So the entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),plaintext_b_14826376984))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_14826377016,g),key_14826377016),dhexp(key_s(bob),g),g,empty,true))) may be inserted in a table at insert {88}.
table(statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),plaintext_b_14826376984))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_14826377016,g),key_14826377016),dhexp(key_s(bob),g),g,empty,true)))).

36. The entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),plaintext_b_14826376984))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_14826377016,g),key_14826377016),dhexp(key_s(bob),g),g,empty,true))) that may be in a table by 35 may be read at get {107}.
The event SendMsg(alice,bob,stage_c,msg_c(alice,bob),true) may be executed at {104}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),plaintext_b_14826376984)),msg_c(alice,bob))) may be sent on channel pub at output {106}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),plaintext_b_14826376984)),msg_c(alice,bob)))).

37. By 1, the attacker may have the channel pub.
By 36, the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),plaintext_b_14826376984)),msg_c(alice,bob))) may be sent on this channel.
So the attacker may obtain the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),plaintext_b_14826376984)),msg_c(alice,bob))) by listening on this channel.
attacker(concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),plaintext_b_14826376984)),msg_c(alice,bob)))).

38. By 37, the attacker may know concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),plaintext_b_14826376984)),msg_c(alice,bob))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),plaintext_b_14826376984)),msg_c(alice,bob)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),plaintext_b_14826376984)),msg_c(alice,bob))).

39. By 38, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),plaintext_b_14826376984)),msg_c(alice,bob)).
So the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),plaintext_b_14826376984)),msg_c(alice,bob)) in phase 1.
attacker_p1(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),plaintext_b_14826376984)),msg_c(alice,bob))).

40. By 23, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g).
By 31, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),plaintext_b_14826376984).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),plaintext_b_14826376984)).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),plaintext_b_14826376984))).

41. By 40, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),plaintext_b_14826376984)).
So the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),plaintext_b_14826376984)) in phase 1.
attacker_p1(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),plaintext_b_14826376984))).

42. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

43. By 42, the attacker may know minnonce in phase 1.
Using the function increment_nonce the attacker may obtain increment_nonce(minnonce) in phase 1.
attacker_p1(increment_nonce(minnonce)).

44. By 30, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))).
So the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g)))).

45. By 44, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))) in phase 1.
By 43, the attacker may know increment_nonce(minnonce) in phase 1.
By 41, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),plaintext_b_14826376984)) in phase 1.
By 39, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),plaintext_b_14826376984)),msg_c(alice,bob)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),plaintext_b_14826376984)),msg_c(alice,bob)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),plaintext_b_14826376984)),msg_c(alice,bob))).

46. By 45, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377016,g)),dhexp(key_s(alice),g)),dhexp(key_14826377016,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377016,g)),msg_a(alice,bob))),g),plaintext_b_14826376984)),msg_c(alice,bob)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_c(alice,bob) in phase 1.
attacker_p1(msg_c(alice,bob)).


RESULT not attacker_p1(msg_c(alice,bob)) cannot be proved.
Starting query attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob))
goal reachable: begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> attacker_p1(msg_c(alice,bob))
RESULT attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob)) is true.
Starting query attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice)))
goal reachable: begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> attacker_p1(msg_c(alice,bob))
RESULT attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice))) is true.
Starting query attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> attacker_p1(msg_c(alice,bob))
RESULT attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true))
goal reachable: attacker(m_14826377019) && begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_d,m_14826377019,true))
Abbreviations:
key_14826377436 = key_e[me = alice,them = bob,!1 = @sid_14826377384]

1. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {22}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 1 may be read at get {46}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {43}.
So the entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_14826377436,g),key_14826377436),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {44}.
table(statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_14826377436,g),key_14826377436),dhexp(key_s(bob),g),empty,empty,true)))).

3. The attacker has some term plaintext_b_14826377401.
attacker(plaintext_b_14826377401).

4. Using the function g the attacker may obtain g.
attacker(g).

5. Using the function pub the attacker may obtain pub.
attacker(pub).

6. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {22}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

7. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 6 may be read at get {46}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {43}.
So the message concat3(dhexp(key_14826377436,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))) may be sent on channel pub at output {45}.
mess(pub,concat3(dhexp(key_14826377436,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob)))).

8. By 5, the attacker may have the channel pub.
By 7, the message concat3(dhexp(key_14826377436,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_14826377436,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))) by listening on this channel.
attacker(concat3(dhexp(key_14826377436,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob)))).

9. By 8, the attacker may know concat3(dhexp(key_14826377436,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob)).
attacker(encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))).

10. By 8, the attacker may know concat3(dhexp(key_14826377436,g),empty,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_14826377436,g).
attacker(dhexp(key_14826377436,g)).

11. The message dhexp(key_s(bob),g) may be sent on channel pub at output {283}.
mess(pub,dhexp(key_s(bob),g)).

12. By 5, the attacker may have the channel pub.
By 11, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

13. The message dhexp(key_s(alice),g) may be sent on channel pub at output {7}.
mess(pub,dhexp(key_s(alice),g)).

14. By 5, the attacker may have the channel pub.
By 13, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

15. Using the function empty the attacker may obtain empty.
attacker(empty).

16. Using the function somename the attacker may obtain somename.
attacker(somename).

17. By 16, the attacker may know somename.
By 15, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

18. By 17, the attacker may know hash(somename,empty).
By 15, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

19. By 18, the attacker may know hash(hash(somename,empty),empty).
By 14, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

20. By 19, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 12, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

21. By 20, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 10, the attacker may know dhexp(key_14826377436,g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g))).

22. By 21, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)).
By 9, the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob)))).

23. By 22, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))).
By 4, the attacker may know g.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g)).

24. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

25. The event LeakS(phase0,bob) may be executed at {411}.
So the message key_s(bob) may be sent on channel pub at output {412}.
mess(pub,key_s(bob)).

26. By 5, the attacker may have the channel pub.
By 25, the message key_s(bob) may be sent on this channel.
So the attacker may obtain the message key_s(bob) by listening on this channel.
attacker(key_s(bob)).

27. By 26, the attacker may know key_s(bob).
By 10, the attacker may know dhexp(key_14826377436,g).
Using the function dhexp the attacker may obtain dhexp(key_14826377436,dhexp(key_s(bob),g)).
attacker(dhexp(key_14826377436,dhexp(key_s(bob),g))).

28. By 17, the attacker may know hash(somename,empty).
By 10, the attacker may know dhexp(key_14826377436,g).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)).
attacker(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g))).

29. By 28, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)).
By 14, the attacker may know dhexp(key_s(alice),g).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g))).

30. By 29, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)).
By 27, the attacker may know dhexp(key_14826377436,dhexp(key_s(bob),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))).
attacker(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g)))).

31. By 30, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))).
By 24, the attacker may know minnonce.
By 23, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g).
By 3, the attacker may know plaintext_b_14826377401.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)).

32. The attacker has some term b_14826377395.
attacker(b_14826377395).

33. By 4, the attacker may know g.
By 32, the attacker may know b_14826377395.
By 31, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401).
Using the function concat3 the attacker may obtain concat3(g,b_14826377395,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)).
attacker(concat3(g,b_14826377395,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401))).

34. By 5, the attacker may have the channel pub.
By 33, the attacker may have the message concat3(g,b_14826377395,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)).
So the attacker may send this message on this channel.
mess(pub,concat3(g,b_14826377395,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401))).

35. The entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_14826377436,g),key_14826377436),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 2 may be read at get {89}.
The message concat3(g,b_14826377395,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)) that may be sent on channel pub by 34 may be received at input {47}.
We have g <> caught-fail.
So the entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_14826377436,g),key_14826377436),dhexp(key_s(bob),g),g,empty,true))) may be inserted in a table at insert {88}.
table(statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_14826377436,g),key_14826377436),dhexp(key_s(bob),g),g,empty,true)))).

36. The entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_14826377436,g),key_14826377436),dhexp(key_s(bob),g),g,empty,true))) that may be in a table by 35 may be read at get {107}.
The event SendMsg(alice,bob,stage_c,msg_c(alice,bob),true) may be executed at {104}.
So the entry statestore(alice,bob,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)),msg_c(alice,bob)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_14826377436,g),key_14826377436),dhexp(key_s(bob),g),g,empty,true))) may be inserted in a table at insert {105}.
table(statestore(alice,bob,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)),msg_c(alice,bob)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_14826377436,g),key_14826377436),dhexp(key_s(bob),g),g,empty,true)))).

37. We assume as hypothesis that
attacker(m_14826377435).

38. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {22}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

39. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 38 may be read at get {46}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {43}.
So the entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_14826377436,g),key_14826377436),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {44}.
table(statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_14826377436,g),key_14826377436),dhexp(key_s(bob),g),empty,empty,true)))).

40. The attacker has some term b_14826377233.
attacker(b_14826377233).

41. By 4, the attacker may know g.
By 40, the attacker may know b_14826377233.
By 31, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401).
Using the function concat3 the attacker may obtain concat3(g,b_14826377233,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)).
attacker(concat3(g,b_14826377233,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401))).

42. By 5, the attacker may have the channel pub.
By 41, the attacker may have the message concat3(g,b_14826377233,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)).
So the attacker may send this message on this channel.
mess(pub,concat3(g,b_14826377233,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401))).

43. The entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_14826377436,g),key_14826377436),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 39 may be read at get {89}.
The message concat3(g,b_14826377233,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)) that may be sent on channel pub by 42 may be received at input {47}.
We have g <> caught-fail.
So the entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_14826377436,g),key_14826377436),dhexp(key_s(bob),g),g,empty,true))) may be inserted in a table at insert {88}.
table(statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_14826377436,g),key_14826377436),dhexp(key_s(bob),g),g,empty,true)))).

44. The entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_14826377436,g),key_14826377436),dhexp(key_s(bob),g),g,empty,true))) that may be in a table by 43 may be read at get {107}.
The event SendMsg(alice,bob,stage_c,msg_c(alice,bob),true) may be executed at {104}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)),msg_c(alice,bob))) may be sent on channel pub at output {106}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)),msg_c(alice,bob)))).

45. By 5, the attacker may have the channel pub.
By 44, the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)),msg_c(alice,bob))) may be sent on this channel.
So the attacker may obtain the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)),msg_c(alice,bob))) by listening on this channel.
attacker(concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)),msg_c(alice,bob)))).

46. By 45, the attacker may know concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)),msg_c(alice,bob))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)),msg_c(alice,bob)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)),msg_c(alice,bob))).

47. By 23, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g).
By 31, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401))).

48. By 47, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)).
By 46, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)),msg_c(alice,bob)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)),msg_c(alice,bob))).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)),msg_c(alice,bob)))).

49. By 24, the attacker may know minnonce.
Using the function increment_nonce the attacker may obtain increment_nonce(minnonce).
attacker(increment_nonce(minnonce)).

50. By 49, the attacker may know increment_nonce(minnonce).
Using the function increment_nonce the attacker may obtain increment_nonce(increment_nonce(minnonce)).
attacker(increment_nonce(increment_nonce(minnonce))).

51. By 30, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))).
By 50, the attacker may know increment_nonce(increment_nonce(minnonce)).
By 48, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)),msg_c(alice,bob))).
By 37, the attacker may know m_14826377435.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)),msg_c(alice,bob))),m_14826377435).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)),msg_c(alice,bob))),m_14826377435)).

52. The attacker has some term b_14826377421.
attacker(b_14826377421).

53. The attacker has some term a_14826377420.
attacker(a_14826377420).

54. By 53, the attacker may know a_14826377420.
By 52, the attacker may know b_14826377421.
By 51, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)),msg_c(alice,bob))),m_14826377435).
Using the function concat3 the attacker may obtain concat3(a_14826377420,b_14826377421,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)),msg_c(alice,bob))),m_14826377435)).
attacker(concat3(a_14826377420,b_14826377421,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)),msg_c(alice,bob))),m_14826377435))).

55. By 5, the attacker may have the channel pub.
By 54, the attacker may have the message concat3(a_14826377420,b_14826377421,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)),msg_c(alice,bob))),m_14826377435)).
So the attacker may send this message on this channel.
mess(pub,concat3(a_14826377420,b_14826377421,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)),msg_c(alice,bob))),m_14826377435))).

56. The entry statestore(alice,bob,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)),msg_c(alice,bob)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_14826377436,g),key_14826377436),dhexp(key_s(bob),g),g,empty,true))) that may be in a table by 36 may be read at get {135}.
The message concat3(a_14826377420,b_14826377421,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_14826377436,g)),dhexp(key_s(alice),g)),dhexp(key_14826377436,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_14826377436,g)),msg_a(alice,bob))),g),plaintext_b_14826377401)),msg_c(alice,bob))),m_14826377435)) that may be sent on channel pub by 55 may be received at input {108}.
So event RecvMsg(alice,bob,stage_d,m_14826377435,true) may be executed at {132}.
end(RecvMsg(alice,bob,stage_d,m_14826377435,true)).


RESULT event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,c_1063,stage_d,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: attacker(m_14826377438) && begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_d,m_14826377438,true))
goal reachable: begin(SendMsg(bob,alice,stage_d,msg_d(bob,alice),true)) && begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_d,msg_d(bob,alice),true))
RESULT event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,c_1063,stage_d,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,c_1063,stage_d,m,true)) || event(LeakS(phase0,bob))
goal reachable: attacker(m_14826377443) && begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_d,m_14826377443,true))
goal reachable: begin(SendMsg(bob,alice,stage_d,msg_d(bob,alice),true)) && begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_d,msg_d(bob,alice),true))
RESULT event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,c_1063,stage_d,m,true)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: attacker(m_14826377448) && begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_d,m_14826377448,true))
goal reachable: begin(SendMsg(bob,alice,stage_d,msg_d(bob,alice),true)) && begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_d,msg_d(bob,alice),true))
RESULT event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true)) || event(LeakS(phase0,bob))
goal reachable: attacker(m_14826377452) && begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_d,m_14826377452,true))
goal reachable: begin(SendMsg(bob,alice,stage_d,msg_d(bob,alice),true)) && begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_d,msg_d(bob,alice),true))
RESULT event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true)) || event(LeakS(phase0,bob)) is true.
Starting query not attacker_p1(msg_d(bob,alice))
goal reachable: begin(SendMsg(bob,alice,stage_d,msg_d(bob,alice),true)) && begin(LeakS(phase0,alice)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) -> attacker_p1(msg_d(bob,alice))
Abbreviations:
key_e_14826377926 = key_e_764[me_722 = bob,them_721 = alice,!1 = @sid_14826377886]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) may be inserted in a table at insert {298}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false)))).

3. The attacker has some term plaintext_a_14826377866.
attacker(plaintext_a_14826377866).

4. Using the function g the attacker may obtain g.
attacker(g).

5. The message dhexp(key_s(bob),g) may be sent on channel pub at output {283}.
mess(pub,dhexp(key_s(bob),g)).

6. By 1, the attacker may have the channel pub.
By 5, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

7. The message dhexp(key_s(alice),g) may be sent on channel pub at output {7}.
mess(pub,dhexp(key_s(alice),g)).

8. By 1, the attacker may have the channel pub.
By 7, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

9. Using the function empty the attacker may obtain empty.
attacker(empty).

10. Using the function somename the attacker may obtain somename.
attacker(somename).

11. By 10, the attacker may know somename.
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

12. By 11, the attacker may know hash(somename,empty).
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

13. By 12, the attacker may know hash(hash(somename,empty),empty).
By 8, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

14. By 13, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

15. By 14, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 4, the attacker may know g.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g)).

16. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

17. By 9, the attacker may know empty.
By 16, the attacker may know minnonce.
By 15, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
By 3, the attacker may know plaintext_a_14826377866.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866).
attacker(encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)).

18. The attacker has some term b_14826377862.
attacker(b_14826377862).

19. By 4, the attacker may know g.
By 18, the attacker may know b_14826377862.
By 17, the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866).
Using the function concat3 the attacker may obtain concat3(g,b_14826377862,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)).
attacker(concat3(g,b_14826377862,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866))).

20. By 1, the attacker may have the channel pub.
By 19, the attacker may have the message concat3(g,b_14826377862,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)).
So the attacker may send this message on this channel.
mess(pub,concat3(g,b_14826377862,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866))).

21. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 2 may be read at get {320}.
The message concat3(g,b_14826377862,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)) that may be sent on channel pub by 20 may be received at input {299}.
We have g <> caught-fail.
So the entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) may be inserted in a table at insert {319}.
table(statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false)))).

22. The entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) that may be in a table by 21 may be read at get {365}.
The event SendMsg(bob,alice,stage_b,msg_b(bob,alice),true) may be executed at {362}.
So the entry statestore(bob,alice,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_14826377926,g),key_e_14826377926),dhexp(key_s(alice),g),g,empty,false))) may be inserted in a table at insert {363}.
table(statestore(bob,alice,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_14826377926,g),key_e_14826377926),dhexp(key_s(alice),g),g,empty,false)))).

23. The attacker has some term plaintext_c_14826377892.
attacker(plaintext_c_14826377892).

24. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) may be inserted in a table at insert {298}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false)))).

25. The attacker has some term b_14826377794.
attacker(b_14826377794).

26. By 4, the attacker may know g.
By 25, the attacker may know b_14826377794.
By 17, the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866).
Using the function concat3 the attacker may obtain concat3(g,b_14826377794,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)).
attacker(concat3(g,b_14826377794,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866))).

27. By 1, the attacker may have the channel pub.
By 26, the attacker may have the message concat3(g,b_14826377794,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)).
So the attacker may send this message on this channel.
mess(pub,concat3(g,b_14826377794,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866))).

28. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 24 may be read at get {320}.
The message concat3(g,b_14826377794,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)) that may be sent on channel pub by 27 may be received at input {299}.
We have g <> caught-fail.
So the entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) may be inserted in a table at insert {319}.
table(statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false)))).

29. The entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) that may be in a table by 28 may be read at get {365}.
The event SendMsg(bob,alice,stage_b,msg_b(bob,alice),true) may be executed at {362}.
So the message concat3(dhexp(key_e_14826377926,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))) may be sent on channel pub at output {364}.
mess(pub,concat3(dhexp(key_e_14826377926,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice)))).

30. By 1, the attacker may have the channel pub.
By 29, the message concat3(dhexp(key_e_14826377926,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e_14826377926,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))) by listening on this channel.
attacker(concat3(dhexp(key_e_14826377926,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice)))).

31. By 30, the attacker may know concat3(dhexp(key_e_14826377926,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))).

32. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) may be inserted in a table at insert {298}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false)))).

33. The attacker has some term plaintext_a_14826377717.
attacker(plaintext_a_14826377717).

34. The attacker has some term re_14826377734.
attacker(re_14826377734).

35. By 14, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 34, the attacker may know re_14826377734.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826377734).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826377734)).

36. By 9, the attacker may know empty.
By 16, the attacker may know minnonce.
By 35, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826377734).
By 33, the attacker may know plaintext_a_14826377717.
Using the function encrypt the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826377734),plaintext_a_14826377717).
attacker(encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826377734),plaintext_a_14826377717)).

37. The attacker has some term b_14826377713.
attacker(b_14826377713).

38. By 34, the attacker may know re_14826377734.
By 37, the attacker may know b_14826377713.
By 36, the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826377734),plaintext_a_14826377717).
Using the function concat3 the attacker may obtain concat3(re_14826377734,b_14826377713,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826377734),plaintext_a_14826377717)).
attacker(concat3(re_14826377734,b_14826377713,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826377734),plaintext_a_14826377717))).

39. By 1, the attacker may have the channel pub.
By 38, the attacker may have the message concat3(re_14826377734,b_14826377713,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826377734),plaintext_a_14826377717)).
So the attacker may send this message on this channel.
mess(pub,concat3(re_14826377734,b_14826377713,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826377734),plaintext_a_14826377717))).

40. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 32 may be read at get {320}.
The message concat3(re_14826377734,b_14826377713,encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826377734),plaintext_a_14826377717)) that may be sent on channel pub by 39 may be received at input {299}.
We have re_14826377734 <> caught-fail.
So the entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826377734),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826377734),plaintext_a_14826377717))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),re_14826377734,empty,false))) may be inserted in a table at insert {319}.
table(statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826377734),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826377734),plaintext_a_14826377717))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),re_14826377734,empty,false)))).

41. The entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826377734),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826377734),plaintext_a_14826377717))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),re_14826377734,empty,false))) that may be in a table by 40 may be read at get {365}.
The event SendMsg(bob,alice,stage_b,msg_b(bob,alice),true) may be executed at {362}.
So the message concat3(dhexp(key_e_14826377926,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,re_14826377734)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),re_14826377734)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826377734),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826377734),plaintext_a_14826377717)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))) may be sent on channel pub at output {364}.
mess(pub,concat3(dhexp(key_e_14826377926,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,re_14826377734)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),re_14826377734)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826377734),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826377734),plaintext_a_14826377717)),dhexp(key_e_14826377926,g)),msg_b(bob,alice)))).

42. By 1, the attacker may have the channel pub.
By 41, the message concat3(dhexp(key_e_14826377926,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,re_14826377734)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),re_14826377734)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826377734),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826377734),plaintext_a_14826377717)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e_14826377926,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,re_14826377734)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),re_14826377734)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826377734),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826377734),plaintext_a_14826377717)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))) by listening on this channel.
attacker(concat3(dhexp(key_e_14826377926,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,re_14826377734)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),re_14826377734)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826377734),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826377734),plaintext_a_14826377717)),dhexp(key_e_14826377926,g)),msg_b(bob,alice)))).

43. By 42, the attacker may know concat3(dhexp(key_e_14826377926,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,re_14826377734)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),re_14826377734)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826377734),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),re_14826377734),plaintext_a_14826377717)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_e_14826377926,g).
attacker(dhexp(key_e_14826377926,g)).

44. By 15, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
By 17, the attacker may know encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866))).

45. By 44, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)).
By 43, the attacker may know dhexp(key_e_14826377926,g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g))).

46. By 45, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)).
By 31, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice)))).

47. By 16, the attacker may know minnonce.
Using the function increment_nonce the attacker may obtain increment_nonce(minnonce).
attacker(increment_nonce(minnonce)).

48. The event LeakS(phase0,alice) may be executed at {136}.
So the message key_s(alice) may be sent on channel pub at output {137}.
mess(pub,key_s(alice)).

49. By 1, the attacker may have the channel pub.
By 48, the message key_s(alice) may be sent on this channel.
So the attacker may obtain the message key_s(alice) by listening on this channel.
attacker(key_s(alice)).

50. By 49, the attacker may know key_s(alice).
By 43, the attacker may know dhexp(key_e_14826377926,g).
Using the function dhexp the attacker may obtain dhexp(key_s(alice),dhexp(key_e_14826377926,g)).
attacker(dhexp(key_s(alice),dhexp(key_e_14826377926,g))).

51. By 11, the attacker may know hash(somename,empty).
By 43, the attacker may know dhexp(key_e_14826377926,g).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)).
attacker(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g))).

52. By 51, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)).
By 50, the attacker may know dhexp(key_s(alice),dhexp(key_e_14826377926,g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g)))).

53. By 52, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)).
attacker(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g))).

54. By 53, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)).
By 47, the attacker may know increment_nonce(minnonce).
By 46, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))).
By 23, the attacker may know plaintext_c_14826377892.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),plaintext_c_14826377892).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),plaintext_c_14826377892)).

55. The attacker has some term b_14826377888.
attacker(b_14826377888).

56. The attacker has some term a_14826377887.
attacker(a_14826377887).

57. By 56, the attacker may know a_14826377887.
By 55, the attacker may know b_14826377888.
By 54, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),plaintext_c_14826377892).
Using the function concat3 the attacker may obtain concat3(a_14826377887,b_14826377888,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),plaintext_c_14826377892)).
attacker(concat3(a_14826377887,b_14826377888,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),plaintext_c_14826377892))).

58. By 1, the attacker may have the channel pub.
By 57, the attacker may have the message concat3(a_14826377887,b_14826377888,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),plaintext_c_14826377892)).
So the attacker may send this message on this channel.
mess(pub,concat3(a_14826377887,b_14826377888,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),plaintext_c_14826377892))).

59. The entry statestore(bob,alice,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_14826377926,g),key_e_14826377926),dhexp(key_s(alice),g),g,empty,false))) that may be in a table by 22 may be read at get {384}.
The message concat3(a_14826377887,b_14826377888,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),plaintext_c_14826377892)) that may be sent on channel pub by 58 may be received at input {366}.
So the entry statestore(bob,alice,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),plaintext_c_14826377892))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_14826377926,g),key_e_14826377926),dhexp(key_s(alice),g),g,empty,false))) may be inserted in a table at insert {383}.
table(statestore(bob,alice,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),plaintext_c_14826377892))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_14826377926,g),key_e_14826377926),dhexp(key_s(alice),g),g,empty,false)))).

60. The entry statestore(bob,alice,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),plaintext_c_14826377892))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_14826377926,g),key_e_14826377926),dhexp(key_s(alice),g),g,empty,false))) that may be in a table by 59 may be read at get {410}.
The event SendMsg(bob,alice,stage_d,msg_d(bob,alice),true) may be executed at {407}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),plaintext_c_14826377892)),msg_d(bob,alice))) may be sent on channel pub at output {409}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),plaintext_c_14826377892)),msg_d(bob,alice)))).

61. By 1, the attacker may have the channel pub.
By 60, the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),plaintext_c_14826377892)),msg_d(bob,alice))) may be sent on this channel.
So the attacker may obtain the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),plaintext_c_14826377892)),msg_d(bob,alice))) by listening on this channel.
attacker(concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),plaintext_c_14826377892)),msg_d(bob,alice)))).

62. By 61, the attacker may know concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),plaintext_c_14826377892)),msg_d(bob,alice))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),plaintext_c_14826377892)),msg_d(bob,alice)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),plaintext_c_14826377892)),msg_d(bob,alice))).

63. By 62, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),plaintext_c_14826377892)),msg_d(bob,alice)).
So the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),plaintext_c_14826377892)),msg_d(bob,alice)) in phase 1.
attacker_p1(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),plaintext_c_14826377892)),msg_d(bob,alice))).

64. By 46, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))).
By 54, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),plaintext_c_14826377892).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),plaintext_c_14826377892)).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),plaintext_c_14826377892))).

65. By 64, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),plaintext_c_14826377892)).
So the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),plaintext_c_14826377892)) in phase 1.
attacker_p1(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),plaintext_c_14826377892))).

66. By 47, the attacker may know increment_nonce(minnonce).
Using the function increment_nonce the attacker may obtain increment_nonce(increment_nonce(minnonce)).
attacker(increment_nonce(increment_nonce(minnonce))).

67. By 66, the attacker may know increment_nonce(increment_nonce(minnonce)).
So the attacker may know increment_nonce(increment_nonce(minnonce)) in phase 1.
attacker_p1(increment_nonce(increment_nonce(minnonce))).

68. By 53, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)).
So the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g))).

69. By 68, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)) in phase 1.
By 67, the attacker may know increment_nonce(increment_nonce(minnonce)) in phase 1.
By 65, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),plaintext_c_14826377892)) in phase 1.
By 63, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),plaintext_c_14826377892)),msg_d(bob,alice)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),plaintext_c_14826377892)),msg_d(bob,alice)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),plaintext_c_14826377892)),msg_d(bob,alice))).

70. By 69, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e_14826377926,g)),dhexp(key_s(alice),dhexp(key_e_14826377926,g))),dhexp(key_s(bob),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(empty,minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_14826377866)),dhexp(key_e_14826377926,g)),msg_b(bob,alice))),plaintext_c_14826377892)),msg_d(bob,alice)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_d(bob,alice) in phase 1.
attacker_p1(msg_d(bob,alice)).


RESULT not attacker_p1(msg_d(bob,alice)) cannot be proved.
Starting query attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice))
goal reachable: begin(SendMsg(bob,alice,stage_d,msg_d(bob,alice),true)) && begin(LeakS(phase0,alice)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) -> attacker_p1(msg_d(bob,alice))
RESULT attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice)) is true.
Starting query attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob)))
goal reachable: begin(SendMsg(bob,alice,stage_d,msg_d(bob,alice),true)) && begin(LeakS(phase0,alice)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) -> attacker_p1(msg_d(bob,alice))
RESULT attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob))) is true.
Starting query attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(bob,alice,stage_d,msg_d(bob,alice),true)) && begin(LeakS(phase0,alice)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) -> attacker_p1(msg_d(bob,alice))
RESULT attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice)) is true.
