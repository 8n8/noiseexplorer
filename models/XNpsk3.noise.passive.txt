File "XNpsk3.noise.passive.pv", line 229, characters 7-8:
Warning: identifier ck rebound.
File "XNpsk3.noise.passive.pv", line 238, characters 7-8:
Warning: identifier ck rebound.
File "XNpsk3.noise.passive.pv", line 239, characters 7-8:
Warning: identifier cs rebound.
File "XNpsk3.noise.passive.pv", line 239, character 36:
Warning: identifier h rebound.
File "XNpsk3.noise.passive.pv", line 248, characters 7-8:
Warning: identifier cs rebound.
File "XNpsk3.noise.passive.pv", line 249, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 254, characters 7-8:
Warning: identifier cs rebound.
File "XNpsk3.noise.passive.pv", line 255, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 278, character 6:
Warning: identifier e rebound.
File "XNpsk3.noise.passive.pv", line 279, characters 6-7:
Warning: identifier ne rebound.
File "XNpsk3.noise.passive.pv", line 280, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 281, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 282, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 282, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "XNpsk3.noise.passive.pv", line 283, characters 6-7:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 290, character 6:
Warning: identifier e rebound.
File "XNpsk3.noise.passive.pv", line 291, characters 6-7:
Warning: identifier ne rebound.
File "XNpsk3.noise.passive.pv", line 292, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 293, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 294, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 295, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 295, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "XNpsk3.noise.passive.pv", line 296, characters 6-7:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 303, character 6:
Warning: identifier s rebound.
File "XNpsk3.noise.passive.pv", line 304, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 304, characters 26-36:
Warning: identifier ciphertext1 rebound.
File "XNpsk3.noise.passive.pv", line 305, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 306, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 307, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 307, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "XNpsk3.noise.passive.pv", line 308, characters 6-7:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 316, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 316, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "XNpsk3.noise.passive.pv", line 317, characters 6-7:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 324, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 324, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "XNpsk3.noise.passive.pv", line 325, characters 6-7:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 333, characters 6-7:
Warning: identifier re rebound.
File "XNpsk3.noise.passive.pv", line 334, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 335, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 336, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 338, characters 7-8:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 346, characters 6-7:
Warning: identifier re rebound.
File "XNpsk3.noise.passive.pv", line 347, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 348, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 349, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 350, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 352, characters 7-8:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 360, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 360, characters 48-53:
Warning: identifier valid1 rebound.
File "XNpsk3.noise.passive.pv", line 361, characters 6-7:
Warning: identifier rs rebound.
File "XNpsk3.noise.passive.pv", line 362, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 363, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 364, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 366, characters 7-8:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 375, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 377, characters 7-8:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 385, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 387, characters 7-8:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 570, characters 7-8:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 571, characters 8-9:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 324, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 324, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "XNpsk3.noise.passive.pv", line 325, characters 6-7:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 248, characters 7-8:
Warning: identifier cs rebound.
File "XNpsk3.noise.passive.pv", line 249, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 562, characters 7-8:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 564, characters 8-9:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 375, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 377, characters 7-8:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 254, characters 7-8:
Warning: identifier cs rebound.
File "XNpsk3.noise.passive.pv", line 255, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 556, characters 8-9:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 303, character 6:
Warning: identifier s rebound.
File "XNpsk3.noise.passive.pv", line 304, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 304, characters 26-36:
Warning: identifier ciphertext1 rebound.
File "XNpsk3.noise.passive.pv", line 305, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 306, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 307, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 307, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "XNpsk3.noise.passive.pv", line 308, characters 6-7:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 248, characters 7-8:
Warning: identifier cs rebound.
File "XNpsk3.noise.passive.pv", line 249, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 229, characters 7-8:
Warning: identifier ck rebound.
File "XNpsk3.noise.passive.pv", line 238, characters 7-8:
Warning: identifier ck rebound.
File "XNpsk3.noise.passive.pv", line 239, characters 7-8:
Warning: identifier cs rebound.
File "XNpsk3.noise.passive.pv", line 239, character 36:
Warning: identifier h rebound.
File "XNpsk3.noise.passive.pv", line 248, characters 7-8:
Warning: identifier cs rebound.
File "XNpsk3.noise.passive.pv", line 249, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 550, characters 8-9:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 346, characters 6-7:
Warning: identifier re rebound.
File "XNpsk3.noise.passive.pv", line 347, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 348, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 349, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 350, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 352, characters 7-8:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 229, characters 7-8:
Warning: identifier ck rebound.
File "XNpsk3.noise.passive.pv", line 229, characters 7-8:
Warning: identifier ck rebound.
File "XNpsk3.noise.passive.pv", line 254, characters 7-8:
Warning: identifier cs rebound.
File "XNpsk3.noise.passive.pv", line 255, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 543, characters 8-9:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 278, character 6:
Warning: identifier e rebound.
File "XNpsk3.noise.passive.pv", line 279, characters 6-7:
Warning: identifier ne rebound.
File "XNpsk3.noise.passive.pv", line 280, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 281, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 282, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 282, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "XNpsk3.noise.passive.pv", line 283, characters 6-7:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 229, characters 7-8:
Warning: identifier ck rebound.
File "XNpsk3.noise.passive.pv", line 248, characters 7-8:
Warning: identifier cs rebound.
File "XNpsk3.noise.passive.pv", line 249, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 629, characters 7-8:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 631, characters 8-9:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 385, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 387, characters 7-8:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 254, characters 7-8:
Warning: identifier cs rebound.
File "XNpsk3.noise.passive.pv", line 255, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 622, characters 7-8:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 623, characters 8-9:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 316, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 316, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "XNpsk3.noise.passive.pv", line 317, characters 6-7:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 248, characters 7-8:
Warning: identifier cs rebound.
File "XNpsk3.noise.passive.pv", line 249, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 616, characters 8-9:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 360, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 360, characters 48-53:
Warning: identifier valid1 rebound.
File "XNpsk3.noise.passive.pv", line 361, characters 6-7:
Warning: identifier rs rebound.
File "XNpsk3.noise.passive.pv", line 362, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 363, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 364, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 366, characters 7-8:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 254, characters 7-8:
Warning: identifier cs rebound.
File "XNpsk3.noise.passive.pv", line 255, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 229, characters 7-8:
Warning: identifier ck rebound.
File "XNpsk3.noise.passive.pv", line 238, characters 7-8:
Warning: identifier ck rebound.
File "XNpsk3.noise.passive.pv", line 239, characters 7-8:
Warning: identifier cs rebound.
File "XNpsk3.noise.passive.pv", line 239, character 36:
Warning: identifier h rebound.
File "XNpsk3.noise.passive.pv", line 254, characters 7-8:
Warning: identifier cs rebound.
File "XNpsk3.noise.passive.pv", line 255, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 609, characters 8-9:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 290, character 6:
Warning: identifier e rebound.
File "XNpsk3.noise.passive.pv", line 291, characters 6-7:
Warning: identifier ne rebound.
File "XNpsk3.noise.passive.pv", line 292, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 293, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 294, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 295, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 295, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "XNpsk3.noise.passive.pv", line 296, characters 6-7:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 229, characters 7-8:
Warning: identifier ck rebound.
File "XNpsk3.noise.passive.pv", line 229, characters 7-8:
Warning: identifier ck rebound.
File "XNpsk3.noise.passive.pv", line 248, characters 7-8:
Warning: identifier cs rebound.
File "XNpsk3.noise.passive.pv", line 249, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 603, characters 8-9:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 333, characters 6-7:
Warning: identifier re rebound.
File "XNpsk3.noise.passive.pv", line 334, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 335, characters 6-7:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 336, characters 7-8:
Warning: identifier ss rebound.
File "XNpsk3.noise.passive.pv", line 338, characters 7-8:
Warning: identifier hs rebound.
File "XNpsk3.noise.passive.pv", line 229, characters 7-8:
Warning: identifier ck rebound.
File "XNpsk3.noise.passive.pv", line 254, characters 7-8:
Warning: identifier cs rebound.
File "XNpsk3.noise.passive.pv", line 255, characters 6-7:
Warning: identifier ss rebound.
Linear part:
dhexp_real(b_76,dhexp_real(a_75,g)) = dhexp_real(a_75,dhexp_real(b_76,g))
Completing equations...
Completed equations:
dhexp_real(b_76,dhexp_real(a_75,g)) = dhexp_real(a_75,dhexp_real(b_76,g))
Convergent part:
Completing equations...
Completed equations:
Process:
{1}out(pub, key_s(charlie));
{2}!
{3}new sid: sessionid;
(
    {4}let s_587: keypair = keypairpack(empty,empty) in
    {5}out(pub, getpublickey(s_587));
    (
        {6}let e_588: keypair = keypairpack(empty,empty) in
        {7}let rs_589: key = empty in
        {8}let re_590: key = empty in
        {9}let v_591: bitstring = catch-fail(hash(somename,empty)) in
        {10}let v_592: key = catch-fail(v_591) in
        {11}let v_593: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {12}let v_594: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_591) then (if not-caught-fail(v_592) then (if not-caught-fail(v_593) then symmetricstatepack(v_593,v_592,v_591) else fail-any) else fail-any) else fail-any))) in
        {13}let v_595: symmetricstate = catch-fail((if success?((if not-caught-fail(v_591) then (if not-caught-fail(v_592) then (if not-caught-fail(v_593) then symmetricstatepack(v_593,v_592,v_591) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_594) && success?(is-true(success?(1-proj-3-tuple(v_594))))) then symmetricstatepack(1-proj-3-tuple(v_594),2-proj-3-tuple(v_594),hash(3-proj-3-tuple(v_594),empty)) else fail-any) else fail-any)) in
        {14}let hs: handshakestate = (if not-caught-fail(v_595) then handshakestatepack(v_595,s_587,e_588,rs_589,re_590,key_psk(alice,bob),true) else fail-any) in
        {15}insert statestore(alice,bob,sid,statepack_a(hs))
    ) | (
        {44}get statestore(=alice,=bob,=sid,statepack_a(hs_596: handshakestate)) in
        {16}let v_597: bitstring = catch-fail(handshakestateunpack(hs_596)) in
        {17}let v_598: bitstring = catch-fail((empty,empty,empty)) in
        {18}let v_599: key = catch-fail(dhexp(key_e(alice,bob,sid),validkey(g))) in
        {19}let v_600: keypair = catch-fail((if not-caught-fail(v_599) then keypairpack(validkey(v_599),key_e(alice,bob,sid)) else fail-any)) in
        {20}let v_601: bitstring = catch-fail(getpublickey(v_600)) in
        {21}let v_602: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_597))) in
        {22}let v_603: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_597)) then (if (not-caught-fail(v_602) && success?(is-true(success?(1-proj-3-tuple(v_602))))) then symmetricstatepack(1-proj-3-tuple(v_602),2-proj-3-tuple(v_602),hash(3-proj-3-tuple(v_602),v_601)) else fail-any) else fail-any)) in
        {23}let v_604: bitstring = catch-fail(symmetricstateunpack(v_603)) in
        {24}let v_605: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_604),getpublickey(v_600))) in
        {25}let v_606: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_604),getpublickey(v_600))) in
        {26}let v_607: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_604),getpublickey(v_600))) in
        {27}let v_608: bitstring = catch-fail((if (success?(getpublickey(v_600)) && success?(2-proj-3-tuple(v_604))) then (if not-caught-fail(v_605) then (if not-caught-fail(v_606) then (if not-caught-fail(v_607) then (v_605,v_606,v_607) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {28}let v_609: symmetricstate = catch-fail((if success?(getpublickey(v_600)) then (if (not-caught-fail(v_604) && success?(is-true(success?(1-proj-3-tuple(v_604))))) then (if (not-caught-fail(v_608) && success?(is-true(success?(1-proj-3-tuple(v_608))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_608)) then cipherstatepack(2-proj-3-tuple(v_608),minnonce) else fail-any),1-proj-3-tuple(v_608),3-proj-3-tuple(v_604)) else fail-any) else fail-any) else fail-any)) in
        {29}let v_610: bitstring = catch-fail(symmetricstateunpack(v_609)) in
        {30}let v_611: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_610))) in
        {31}let v_612: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_611),2-proj-2-tuple(v_611),3-proj-3-tuple(v_610),msg_a(alice,bob,sid))) in
        {32}let v_613: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_610))) in
        {33}let v_614: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_611))) && success?(1-proj-3-tuple(v_610))) then (if (not-caught-fail(v_613) && success?(is-true(success?(1-proj-2-tuple(v_613))))) then cipherstatepack(1-proj-2-tuple(v_613),increment_nonce(2-proj-2-tuple(v_611))) else fail-any) else fail-any)) in
        {34}let v_615: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_610)) && success?(1-proj-3-tuple(v_610))) then (if (not-caught-fail(v_611) && success?(is-true(success?(1-proj-2-tuple(v_611))))) then (if not-caught-fail(v_612) then (if not-caught-fail(v_614) then (v_614,v_612) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {35}let v_616: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_615),2-proj-3-tuple(v_610),3-proj-3-tuple(v_610)))) in
        {36}let v_617: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_615)) && success?(symmetricstatepack(1-proj-2-tuple(v_615),2-proj-3-tuple(v_610),3-proj-3-tuple(v_610)))) then (if (not-caught-fail(v_616) && success?(is-true(success?(1-proj-3-tuple(v_616))))) then symmetricstatepack(1-proj-3-tuple(v_616),2-proj-3-tuple(v_616),hash(3-proj-3-tuple(v_616),2-proj-2-tuple(v_615))) else fail-any) else fail-any)) in
        {37}let v_618: bitstring = catch-fail((if (not-caught-fail(v_610) && success?(is-true(success?(1-proj-3-tuple(v_610))))) then (if (not-caught-fail(v_615) && success?(is-true(success?(1-proj-2-tuple(v_615))))) then (if not-caught-fail(v_617) then (v_617,2-proj-2-tuple(v_615)) else fail-any) else fail-any) else fail-any)) in
        {38}let v_619: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_618),2-proj-7-tuple(v_597),v_600,4-proj-7-tuple(v_597),5-proj-7-tuple(v_597),6-proj-7-tuple(v_597),7-proj-7-tuple(v_597))) in
        {39}let v_620: bitstring = catch-fail(concat3(v_601,2-proj-3-tuple(v_598),2-proj-2-tuple(v_618))) in
        {40}let (hs_621: handshakestate,message_a: bitstring) = (if (not-caught-fail(v_597) && success?(is-true(success?(1-proj-7-tuple(v_597))))) then (if (not-caught-fail(v_598) && success?(is-true(success?(1-proj-3-tuple(v_598))))) then (if not-caught-fail(v_600) then (if not-caught-fail(v_601) then (if not-caught-fail(v_603) then (if not-caught-fail(v_609) then (if (not-caught-fail(v_618) && success?(is-true(success?(1-proj-2-tuple(v_618))))) then (if not-caught-fail(v_619) then (if not-caught-fail(v_620) then (v_619,v_620) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {41}event SendMsg(alice,bob,stagepack_a(sid),msg_a(alice,bob,sid));
        {42}insert statestore(alice,bob,sid,statepack_b(hs_621));
        {43}out(pub, message_a)
    ) | (
        {79}get statestore(=alice,=bob,=sid,statepack_b(hs_622: handshakestate)) in
        {45}in(pub, message_b: bitstring);
        {46}let v_623: bitstring = catch-fail(handshakestateunpack(hs_622)) in
        {47}let v_624: bitstring = catch-fail(deconcat3(message_b)) in
        {48}let v_625: bool = catch-fail(true) in
        {49}let v_626: key = catch-fail(1-proj-3-tuple(v_624)) in
        {50}let v_627: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_623))) in
        {51}let v_628: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_623)) then (if (not-caught-fail(v_627) && success?(is-true(success?(1-proj-3-tuple(v_627))))) then symmetricstatepack(1-proj-3-tuple(v_627),2-proj-3-tuple(v_627),hash(3-proj-3-tuple(v_627),v_626)) else fail-any) else fail-any)) in
        {52}let v_629: bitstring = catch-fail(symmetricstateunpack(v_628)) in
        {53}let v_630: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_629),v_626)) in
        {54}let v_631: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_629),v_626)) in
        {55}let v_632: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_629),v_626)) in
        {56}let v_633: bitstring = catch-fail((if success?(2-proj-3-tuple(v_629)) then (if not-caught-fail(v_630) then (if not-caught-fail(v_631) then (if not-caught-fail(v_632) then (v_630,v_631,v_632) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {57}let v_634: symmetricstate = catch-fail((if (not-caught-fail(v_629) && success?(is-true(success?(1-proj-3-tuple(v_629))))) then (if (not-caught-fail(v_633) && success?(is-true(success?(1-proj-3-tuple(v_633))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_633)) then cipherstatepack(2-proj-3-tuple(v_633),minnonce) else fail-any),1-proj-3-tuple(v_633),3-proj-3-tuple(v_629)) else fail-any) else fail-any)) in
        {58}let v_635: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_623))) in
        {59}let v_636: bitstring = catch-fail(symmetricstateunpack(v_634)) in
        {60}let v_637: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_636),(if success?(3-proj-7-tuple(v_623)) then (if (not-caught-fail(v_635) && success?(is-true(success?(1-proj-2-tuple(v_635))))) then dhexp(2-proj-2-tuple(v_635),v_626) else fail-any) else fail-any))) in
        {61}let v_638: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_636),(if success?(3-proj-7-tuple(v_623)) then (if (not-caught-fail(v_635) && success?(is-true(success?(1-proj-2-tuple(v_635))))) then dhexp(2-proj-2-tuple(v_635),v_626) else fail-any) else fail-any))) in
        {62}let v_639: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_636),(if success?(3-proj-7-tuple(v_623)) then (if (not-caught-fail(v_635) && success?(is-true(success?(1-proj-2-tuple(v_635))))) then dhexp(2-proj-2-tuple(v_635),v_626) else fail-any) else fail-any))) in
        {63}let v_640: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_623)) then (if (not-caught-fail(v_635) && success?(is-true(success?(1-proj-2-tuple(v_635))))) then dhexp(2-proj-2-tuple(v_635),v_626) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_636))) then (if not-caught-fail(v_637) then (if not-caught-fail(v_638) then (if not-caught-fail(v_639) then (v_637,v_638,v_639) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {64}let v_641: symmetricstate = catch-fail((if success?((if success?(3-proj-7-tuple(v_623)) then (if (not-caught-fail(v_635) && success?(is-true(success?(1-proj-2-tuple(v_635))))) then dhexp(2-proj-2-tuple(v_635),v_626) else fail-any) else fail-any)) then (if (not-caught-fail(v_636) && success?(is-true(success?(1-proj-3-tuple(v_636))))) then (if (not-caught-fail(v_640) && success?(is-true(success?(1-proj-3-tuple(v_640))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_640)) then cipherstatepack(2-proj-3-tuple(v_640),minnonce) else fail-any),1-proj-3-tuple(v_640),3-proj-3-tuple(v_636)) else fail-any) else fail-any) else fail-any)) in
        {65}let v_642: bitstring = catch-fail(symmetricstateunpack(v_641)) in
        {66}let v_643: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_642))) in
        {67}let v_644: aead = catch-fail(decrypt(1-proj-2-tuple(v_643),2-proj-2-tuple(v_643),3-proj-3-tuple(v_642),3-proj-3-tuple(v_624))) in
        {68}let v_645: bitstring = catch-fail(aeadunpack(v_644)) in
        {69}let v_646: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_642))) in
        {70}let v_647: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_643))) && success?(1-proj-3-tuple(v_642))) then (if (not-caught-fail(v_646) && success?(is-true(success?(1-proj-2-tuple(v_646))))) then cipherstatepack(1-proj-2-tuple(v_646),increment_nonce(2-proj-2-tuple(v_643))) else fail-any) else fail-any)) in
        {71}let v_648: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_624)) && (success?(3-proj-3-tuple(v_642)) && success?(1-proj-3-tuple(v_642)))) then (if (not-caught-fail(v_643) && success?(is-true(success?(1-proj-2-tuple(v_643))))) then (if not-caught-fail(v_644) then (if (not-caught-fail(v_645) && success?(is-true(success?(1-proj-3-tuple(v_645))))) then (if not-caught-fail(v_647) then (v_647,3-proj-3-tuple(v_645),1-proj-3-tuple(v_645)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {72}let v_649: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_648),2-proj-3-tuple(v_642),3-proj-3-tuple(v_642)))) in
        {73}let v_650: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_624)) && success?(symmetricstatepack(1-proj-3-tuple(v_648),2-proj-3-tuple(v_642),3-proj-3-tuple(v_642)))) then (if (not-caught-fail(v_649) && success?(is-true(success?(1-proj-3-tuple(v_649))))) then symmetricstatepack(1-proj-3-tuple(v_649),2-proj-3-tuple(v_649),hash(3-proj-3-tuple(v_649),3-proj-3-tuple(v_624))) else fail-any) else fail-any)) in
        {74}let v_651: bitstring = catch-fail((if success?(3-proj-3-tuple(v_624)) then (if (not-caught-fail(v_642) && success?(is-true(success?(1-proj-3-tuple(v_642))))) then (if (not-caught-fail(v_648) && success?(is-true(success?(1-proj-3-tuple(v_648))))) then (if not-caught-fail(v_650) then (v_650,2-proj-3-tuple(v_648),3-proj-3-tuple(v_648)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {75}let v_652: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_651),2-proj-7-tuple(v_623),3-proj-7-tuple(v_623),4-proj-7-tuple(v_623),v_626,6-proj-7-tuple(v_623),7-proj-7-tuple(v_623))) in
        {76}let (hs_653: handshakestate,plaintext_b: bitstring,valid: bool) = (if (not-caught-fail(v_623) && success?(is-true(success?(1-proj-7-tuple(v_623))))) then (if (not-caught-fail(v_624) && success?(is-true(success?(1-proj-3-tuple(v_624))))) then (if not-caught-fail(v_625) then (if not-caught-fail(v_626) then (if not-caught-fail(v_628) then (if not-caught-fail(v_634) then (if not-caught-fail(v_641) then (if (not-caught-fail(v_651) && success?(is-true(success?(1-proj-3-tuple(v_651))))) then (if (v_625 && 3-proj-3-tuple(v_651)) then (if not-caught-fail(v_652) then (v_652,2-proj-3-tuple(v_651),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {77}event RecvMsg(alice,bob,stagepack_b(sid),plaintext_b);
        {78}insert statestore(alice,bob,sid,statepack_c(hs_653))
    ) | (
        {131}get statestore(=alice,=bob,=sid,statepack_c(hs_654: handshakestate)) in
        {80}let v_655: bitstring = catch-fail(handshakestateunpack(hs_654)) in
        {81}let v_656: bitstring = catch-fail((empty,empty,empty)) in
        {82}let v_657: key = catch-fail(dhexp(key_s(alice),validkey(g))) in
        {83}let v_658: keypair = catch-fail((if not-caught-fail(v_657) then keypairpack(validkey(v_657),key_s(alice)) else fail-any)) in
        {84}let v_659: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_655))) in
        {85}let v_660: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_659))) in
        {86}let v_661: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_660),2-proj-2-tuple(v_660),3-proj-3-tuple(v_659),getpublickey(v_658))) in
        {87}let v_662: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_659))) in
        {88}let v_663: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_660))) && success?(1-proj-3-tuple(v_659))) then (if (not-caught-fail(v_662) && success?(is-true(success?(1-proj-2-tuple(v_662))))) then cipherstatepack(1-proj-2-tuple(v_662),increment_nonce(2-proj-2-tuple(v_660))) else fail-any) else fail-any)) in
        {89}let v_664: bitstring = catch-fail((if (success?(getpublickey(v_658)) && (success?(3-proj-3-tuple(v_659)) && success?(1-proj-3-tuple(v_659)))) then (if (not-caught-fail(v_660) && success?(is-true(success?(1-proj-2-tuple(v_660))))) then (if not-caught-fail(v_661) then (if not-caught-fail(v_663) then (v_663,v_661) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {90}let v_665: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_664),2-proj-3-tuple(v_659),3-proj-3-tuple(v_659)))) in
        {91}let v_666: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_664)) && success?(symmetricstatepack(1-proj-2-tuple(v_664),2-proj-3-tuple(v_659),3-proj-3-tuple(v_659)))) then (if (not-caught-fail(v_665) && success?(is-true(success?(1-proj-3-tuple(v_665))))) then symmetricstatepack(1-proj-3-tuple(v_665),2-proj-3-tuple(v_665),hash(3-proj-3-tuple(v_665),2-proj-2-tuple(v_664))) else fail-any) else fail-any)) in
        {92}let v_667: bitstring = catch-fail((if (success?(getpublickey(v_658)) && success?(1-proj-7-tuple(v_655))) then (if (not-caught-fail(v_659) && success?(is-true(success?(1-proj-3-tuple(v_659))))) then (if (not-caught-fail(v_664) && success?(is-true(success?(1-proj-2-tuple(v_664))))) then (if not-caught-fail(v_666) then (v_666,2-proj-2-tuple(v_664)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {93}let v_668: bitstring = catch-fail(keypairunpack(v_658)) in
        {94}let v_669: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_667))) in
        {95}let v_670: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_669),(if success?(5-proj-7-tuple(v_655)) then (if (not-caught-fail(v_668) && success?(is-true(success?(1-proj-2-tuple(v_668))))) then dhexp(2-proj-2-tuple(v_668),5-proj-7-tuple(v_655)) else fail-any) else fail-any))) in
        {96}let v_671: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_669),(if success?(5-proj-7-tuple(v_655)) then (if (not-caught-fail(v_668) && success?(is-true(success?(1-proj-2-tuple(v_668))))) then dhexp(2-proj-2-tuple(v_668),5-proj-7-tuple(v_655)) else fail-any) else fail-any))) in
        {97}let v_672: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_669),(if success?(5-proj-7-tuple(v_655)) then (if (not-caught-fail(v_668) && success?(is-true(success?(1-proj-2-tuple(v_668))))) then dhexp(2-proj-2-tuple(v_668),5-proj-7-tuple(v_655)) else fail-any) else fail-any))) in
        {98}let v_673: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_655)) then (if (not-caught-fail(v_668) && success?(is-true(success?(1-proj-2-tuple(v_668))))) then dhexp(2-proj-2-tuple(v_668),5-proj-7-tuple(v_655)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_669))) then (if not-caught-fail(v_670) then (if not-caught-fail(v_671) then (if not-caught-fail(v_672) then (v_670,v_671,v_672) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {99}let v_674: symmetricstate = catch-fail((if (success?((if success?(5-proj-7-tuple(v_655)) then (if (not-caught-fail(v_668) && success?(is-true(success?(1-proj-2-tuple(v_668))))) then dhexp(2-proj-2-tuple(v_668),5-proj-7-tuple(v_655)) else fail-any) else fail-any)) && success?(1-proj-2-tuple(v_667))) then (if (not-caught-fail(v_669) && success?(is-true(success?(1-proj-3-tuple(v_669))))) then (if (not-caught-fail(v_673) && success?(is-true(success?(1-proj-3-tuple(v_673))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_673)) then cipherstatepack(2-proj-3-tuple(v_673),minnonce) else fail-any),1-proj-3-tuple(v_673),3-proj-3-tuple(v_669)) else fail-any) else fail-any) else fail-any)) in
        {100}let v_675: bitstring = catch-fail(symmetricstateunpack(v_674)) in
        {101}let v_676: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_675),6-proj-7-tuple(v_655))) in
        {102}let v_677: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_675),6-proj-7-tuple(v_655))) in
        {103}let v_678: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_675),6-proj-7-tuple(v_655))) in
        {104}let v_679: bitstring = catch-fail((if (success?(6-proj-7-tuple(v_655)) && success?(2-proj-3-tuple(v_675))) then (if not-caught-fail(v_676) then (if not-caught-fail(v_677) then (if not-caught-fail(v_678) then (v_676,v_677,v_678) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {105}let v_680: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_675),1-proj-3-tuple(v_679),3-proj-3-tuple(v_675)))) in
        {106}let v_681: bitstring = catch-fail(symmetricstateunpack((if (success?(2-proj-3-tuple(v_679)) && success?(symmetricstatepack(1-proj-3-tuple(v_675),1-proj-3-tuple(v_679),3-proj-3-tuple(v_675)))) then (if (not-caught-fail(v_680) && success?(is-true(success?(1-proj-3-tuple(v_680))))) then symmetricstatepack(1-proj-3-tuple(v_680),2-proj-3-tuple(v_680),hash(3-proj-3-tuple(v_680),2-proj-3-tuple(v_679))) else fail-any) else fail-any))) in
        {107}let v_682: symmetricstate = catch-fail((if success?(6-proj-7-tuple(v_655)) then (if (not-caught-fail(v_675) && success?(is-true(success?(1-proj-3-tuple(v_675))))) then (if (not-caught-fail(v_679) && success?(is-true(success?(1-proj-3-tuple(v_679))))) then (if (not-caught-fail(v_681) && success?(is-true(success?(1-proj-3-tuple(v_681))))) then symmetricstatepack((if success?(3-proj-3-tuple(v_679)) then cipherstatepack(3-proj-3-tuple(v_679),minnonce) else fail-any),1-proj-3-tuple(v_679),3-proj-3-tuple(v_681)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {108}let v_683: bitstring = catch-fail(symmetricstateunpack(v_682)) in
        {109}let v_684: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_683))) in
        {110}let v_685: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_684),2-proj-2-tuple(v_684),3-proj-3-tuple(v_683),msg_c(alice,bob,sid))) in
        {111}let v_686: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_683))) in
        {112}let v_687: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_684))) && success?(1-proj-3-tuple(v_683))) then (if (not-caught-fail(v_686) && success?(is-true(success?(1-proj-2-tuple(v_686))))) then cipherstatepack(1-proj-2-tuple(v_686),increment_nonce(2-proj-2-tuple(v_684))) else fail-any) else fail-any)) in
        {113}let v_688: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_683)) && success?(1-proj-3-tuple(v_683))) then (if (not-caught-fail(v_684) && success?(is-true(success?(1-proj-2-tuple(v_684))))) then (if not-caught-fail(v_685) then (if not-caught-fail(v_687) then (v_687,v_685) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {114}let v_689: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_688),2-proj-3-tuple(v_683),3-proj-3-tuple(v_683)))) in
        {115}let v_690: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_688)) && success?(symmetricstatepack(1-proj-2-tuple(v_688),2-proj-3-tuple(v_683),3-proj-3-tuple(v_683)))) then (if (not-caught-fail(v_689) && success?(is-true(success?(1-proj-3-tuple(v_689))))) then symmetricstatepack(1-proj-3-tuple(v_689),2-proj-3-tuple(v_689),hash(3-proj-3-tuple(v_689),2-proj-2-tuple(v_688))) else fail-any) else fail-any)) in
        {116}let v_691: bitstring = catch-fail((if (not-caught-fail(v_683) && success?(is-true(success?(1-proj-3-tuple(v_683))))) then (if (not-caught-fail(v_688) && success?(is-true(success?(1-proj-2-tuple(v_688))))) then (if not-caught-fail(v_690) then (v_690,2-proj-2-tuple(v_688)) else fail-any) else fail-any) else fail-any)) in
        {117}let v_692: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_691),v_658,3-proj-7-tuple(v_655),4-proj-7-tuple(v_655),5-proj-7-tuple(v_655),6-proj-7-tuple(v_655),7-proj-7-tuple(v_655))) in
        {118}let v_693: bitstring = catch-fail(concat3(1-proj-3-tuple(v_656),2-proj-2-tuple(v_667),2-proj-2-tuple(v_691))) in
        {119}let v_694: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_691))) in
        {120}let v_695: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_694),zero)) in
        {121}let v_696: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_694),zero)) in
        {122}let v_697: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_694),zero)) in
        {123}let v_698: bitstring = catch-fail((if success?(2-proj-3-tuple(v_694)) then (if not-caught-fail(v_695) then (if not-caught-fail(v_696) then (if not-caught-fail(v_697) then (v_695,v_696,v_697) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {124}let v_699: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_698)) then cipherstatepack(1-proj-3-tuple(v_698),minnonce) else fail-any)) in
        {125}let v_700: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_698)) then cipherstatepack(2-proj-3-tuple(v_698),minnonce) else fail-any)) in
        {126}let v_701: bitstring = catch-fail((if success?(1-proj-2-tuple(v_691)) then (if (not-caught-fail(v_694) && success?(is-true(success?(1-proj-3-tuple(v_694))))) then (if (not-caught-fail(v_698) && success?(is-true(success?(1-proj-3-tuple(v_698))))) then (if not-caught-fail(v_699) then (if not-caught-fail(v_700) then (1-proj-2-tuple(v_691),v_699,v_700) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {127}let (hs_702: handshakestate,message_c: bitstring,cs1: cipherstate,cs2: cipherstate) = (if (not-caught-fail(v_655) && success?(is-true(success?(1-proj-7-tuple(v_655))))) then (if (not-caught-fail(v_656) && success?(is-true(success?(1-proj-3-tuple(v_656))))) then (if not-caught-fail(v_658) then (if (not-caught-fail(v_667) && success?(is-true(success?(1-proj-2-tuple(v_667))))) then (if not-caught-fail(v_674) then (if not-caught-fail(v_682) then (if (not-caught-fail(v_691) && success?(is-true(success?(1-proj-2-tuple(v_691))))) then (if not-caught-fail(v_692) then (if not-caught-fail(v_693) then (if (not-caught-fail(v_701) && success?(is-true(success?(1-proj-3-tuple(v_701))))) then (v_692,v_693,2-proj-3-tuple(v_701),3-proj-3-tuple(v_701)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {128}event SendMsg(alice,bob,stagepack_c(sid),msg_c(alice,bob,sid));
        {129}insert statestore(alice,bob,sid,statepack_d(hs_702,cs1,cs2));
        {130}out(pub, message_c)
    ) | (
        {132}!
        {152}get statestore(=alice,=bob,=sid,statepack_d(hs_703: handshakestate,cs1_704: cipherstate,cs2_705: cipherstate)) in
        {133}let hs_706: handshakestate = handshakestatesetcs(hs_703,cs2_705) in
        {134}in(pub, message_d: bitstring);
        {135}let v_707: bitstring = catch-fail(handshakestateunpack(hs_706)) in
        {136}let v_708: bitstring = catch-fail(deconcat3(message_d)) in
        {137}let v_709: bool = catch-fail(true) in
        {138}let v_710: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_707))) in
        {139}let v_711: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_710))) in
        {140}let v_712: aead = catch-fail(decrypt(1-proj-2-tuple(v_711),2-proj-2-tuple(v_711),3-proj-3-tuple(v_710),3-proj-3-tuple(v_708))) in
        {141}let v_713: bitstring = catch-fail(aeadunpack(v_712)) in
        {142}let v_714: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_710))) in
        {143}let v_715: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_711))) && success?(1-proj-3-tuple(v_710))) then (if (not-caught-fail(v_714) && success?(is-true(success?(1-proj-2-tuple(v_714))))) then cipherstatepack(1-proj-2-tuple(v_714),increment_nonce(2-proj-2-tuple(v_711))) else fail-any) else fail-any)) in
        {144}let v_716: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_708)) && (success?(3-proj-3-tuple(v_710)) && success?(1-proj-3-tuple(v_710)))) then (if (not-caught-fail(v_711) && success?(is-true(success?(1-proj-2-tuple(v_711))))) then (if not-caught-fail(v_712) then (if (not-caught-fail(v_713) && success?(is-true(success?(1-proj-3-tuple(v_713))))) then (if not-caught-fail(v_715) then (v_715,3-proj-3-tuple(v_713),1-proj-3-tuple(v_713)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {145}let v_717: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_716),2-proj-3-tuple(v_710),3-proj-3-tuple(v_710)))) in
        {146}let v_718: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_708)) && success?(symmetricstatepack(1-proj-3-tuple(v_716),2-proj-3-tuple(v_710),3-proj-3-tuple(v_710)))) then (if (not-caught-fail(v_717) && success?(is-true(success?(1-proj-3-tuple(v_717))))) then symmetricstatepack(1-proj-3-tuple(v_717),2-proj-3-tuple(v_717),hash(3-proj-3-tuple(v_717),3-proj-3-tuple(v_708))) else fail-any) else fail-any)) in
        {147}let v_719: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_708)) && success?(1-proj-7-tuple(v_707))) then (if (not-caught-fail(v_710) && success?(is-true(success?(1-proj-3-tuple(v_710))))) then (if (not-caught-fail(v_716) && success?(is-true(success?(1-proj-3-tuple(v_716))))) then (if not-caught-fail(v_718) then (v_718,2-proj-3-tuple(v_716),3-proj-3-tuple(v_716)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {148}let v_720: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_719),2-proj-7-tuple(v_707),3-proj-7-tuple(v_707),4-proj-7-tuple(v_707),5-proj-7-tuple(v_707),6-proj-7-tuple(v_707),7-proj-7-tuple(v_707))) in
        {149}let (hs_721: handshakestate,plaintext_d: bitstring,valid_722: bool) = (if (not-caught-fail(v_707) && success?(is-true(success?(1-proj-7-tuple(v_707))))) then (if (not-caught-fail(v_708) && success?(is-true(success?(1-proj-3-tuple(v_708))))) then (if not-caught-fail(v_709) then (if (not-caught-fail(v_719) && success?(is-true(success?(1-proj-3-tuple(v_719))))) then (if (v_709 && 3-proj-3-tuple(v_719)) then (if not-caught-fail(v_720) then (v_720,2-proj-3-tuple(v_719),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {150}event RecvMsg(alice,bob,stagepack_d(sid),plaintext_d);
        {151}insert statestore(alice,bob,sid,statepack_e(hs_721,cs1_704,handshakestategetcs(hs_721)))
    ) | (
        {153}!
        {171}get statestore(=alice,=bob,=sid,statepack_e(hs_723: handshakestate,cs1_724: cipherstate,cs2_725: cipherstate)) in
        {154}let hs_726: handshakestate = handshakestatesetcs(hs_723,cs1_724) in
        {155}let v_727: bitstring = catch-fail(handshakestateunpack(hs_726)) in
        {156}let v_728: bitstring = catch-fail((empty,empty,empty)) in
        {157}let v_729: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_727))) in
        {158}let v_730: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_729))) in
        {159}let v_731: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_730),2-proj-2-tuple(v_730),3-proj-3-tuple(v_729),msg_e(alice,bob,sid))) in
        {160}let v_732: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_729))) in
        {161}let v_733: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_730))) && success?(1-proj-3-tuple(v_729))) then (if (not-caught-fail(v_732) && success?(is-true(success?(1-proj-2-tuple(v_732))))) then cipherstatepack(1-proj-2-tuple(v_732),increment_nonce(2-proj-2-tuple(v_730))) else fail-any) else fail-any)) in
        {162}let v_734: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_729)) && success?(1-proj-3-tuple(v_729))) then (if (not-caught-fail(v_730) && success?(is-true(success?(1-proj-2-tuple(v_730))))) then (if not-caught-fail(v_731) then (if not-caught-fail(v_733) then (v_733,v_731) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {163}let v_735: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_734),2-proj-3-tuple(v_729),3-proj-3-tuple(v_729)))) in
        {164}let v_736: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_734)) && success?(symmetricstatepack(1-proj-2-tuple(v_734),2-proj-3-tuple(v_729),3-proj-3-tuple(v_729)))) then (if (not-caught-fail(v_735) && success?(is-true(success?(1-proj-3-tuple(v_735))))) then symmetricstatepack(1-proj-3-tuple(v_735),2-proj-3-tuple(v_735),hash(3-proj-3-tuple(v_735),2-proj-2-tuple(v_734))) else fail-any) else fail-any)) in
        {165}let v_737: bitstring = catch-fail((if success?(1-proj-7-tuple(v_727)) then (if (not-caught-fail(v_729) && success?(is-true(success?(1-proj-3-tuple(v_729))))) then (if (not-caught-fail(v_734) && success?(is-true(success?(1-proj-2-tuple(v_734))))) then (if not-caught-fail(v_736) then (v_736,2-proj-2-tuple(v_734)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {166}let v_738: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_737),2-proj-7-tuple(v_727),3-proj-7-tuple(v_727),4-proj-7-tuple(v_727),5-proj-7-tuple(v_727),6-proj-7-tuple(v_727),7-proj-7-tuple(v_727))) in
        {167}let v_739: bitstring = catch-fail(concat3(1-proj-3-tuple(v_728),2-proj-3-tuple(v_728),2-proj-2-tuple(v_737))) in
        {168}let (hs_740: handshakestate,message_e: bitstring) = (if (not-caught-fail(v_727) && success?(is-true(success?(1-proj-7-tuple(v_727))))) then (if (not-caught-fail(v_728) && success?(is-true(success?(1-proj-3-tuple(v_728))))) then (if (not-caught-fail(v_737) && success?(is-true(success?(1-proj-2-tuple(v_737))))) then (if not-caught-fail(v_738) then (if not-caught-fail(v_739) then (v_738,v_739) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {169}event SendMsg(alice,bob,stagepack_e(sid),msg_e(alice,bob,sid));
        {170}out(pub, message_e)
    ) | (
        {172}event LeakPsk(phase0,alice,bob);
        {173}out(pub, key_psk(alice,bob))
    ) | (
        {174}phase 1;
        {175}event LeakPsk(phase1,alice,bob);
        {176}out(pub, key_psk(alice,bob))
    ) | (
        {177}event LeakS(phase0,alice);
        {178}out(pub, key_s(alice))
    ) | (
        {179}phase 1;
        {180}event LeakS(phase1,alice);
        {181}out(pub, key_s(alice))
    )
) | (
    {182}let s_741: keypair = keypairpack(empty,empty) in
    {183}out(pub, getpublickey(s_741));
    (
        {184}let e_742: keypair = keypairpack(empty,empty) in
        {185}let rs_743: key = empty in
        {186}let re_744: key = empty in
        {187}let v_745: bitstring = catch-fail(hash(somename,empty)) in
        {188}let v_746: key = catch-fail(v_745) in
        {189}let v_747: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {190}let v_748: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_745) then (if not-caught-fail(v_746) then (if not-caught-fail(v_747) then symmetricstatepack(v_747,v_746,v_745) else fail-any) else fail-any) else fail-any))) in
        {191}let v_749: symmetricstate = catch-fail((if success?((if not-caught-fail(v_745) then (if not-caught-fail(v_746) then (if not-caught-fail(v_747) then symmetricstatepack(v_747,v_746,v_745) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_748) && success?(is-true(success?(1-proj-3-tuple(v_748))))) then symmetricstatepack(1-proj-3-tuple(v_748),2-proj-3-tuple(v_748),hash(3-proj-3-tuple(v_748),empty)) else fail-any) else fail-any)) in
        {192}let hs_750: handshakestate = (if not-caught-fail(v_749) then handshakestatepack(v_749,s_741,e_742,rs_743,re_744,key_psk(alice,charlie),true) else fail-any) in
        {193}insert statestore(alice,charlie,sid,statepack_a(hs_750))
    ) | (
        {222}get statestore(=alice,=charlie,=sid,statepack_a(hs_751: handshakestate)) in
        {194}let v_752: bitstring = catch-fail(handshakestateunpack(hs_751)) in
        {195}let v_753: bitstring = catch-fail((empty,empty,empty)) in
        {196}let v_754: key = catch-fail(dhexp(key_e(alice,charlie,sid),validkey(g))) in
        {197}let v_755: keypair = catch-fail((if not-caught-fail(v_754) then keypairpack(validkey(v_754),key_e(alice,charlie,sid)) else fail-any)) in
        {198}let v_756: bitstring = catch-fail(getpublickey(v_755)) in
        {199}let v_757: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_752))) in
        {200}let v_758: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_752)) then (if (not-caught-fail(v_757) && success?(is-true(success?(1-proj-3-tuple(v_757))))) then symmetricstatepack(1-proj-3-tuple(v_757),2-proj-3-tuple(v_757),hash(3-proj-3-tuple(v_757),v_756)) else fail-any) else fail-any)) in
        {201}let v_759: bitstring = catch-fail(symmetricstateunpack(v_758)) in
        {202}let v_760: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_759),getpublickey(v_755))) in
        {203}let v_761: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_759),getpublickey(v_755))) in
        {204}let v_762: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_759),getpublickey(v_755))) in
        {205}let v_763: bitstring = catch-fail((if (success?(getpublickey(v_755)) && success?(2-proj-3-tuple(v_759))) then (if not-caught-fail(v_760) then (if not-caught-fail(v_761) then (if not-caught-fail(v_762) then (v_760,v_761,v_762) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {206}let v_764: symmetricstate = catch-fail((if success?(getpublickey(v_755)) then (if (not-caught-fail(v_759) && success?(is-true(success?(1-proj-3-tuple(v_759))))) then (if (not-caught-fail(v_763) && success?(is-true(success?(1-proj-3-tuple(v_763))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_763)) then cipherstatepack(2-proj-3-tuple(v_763),minnonce) else fail-any),1-proj-3-tuple(v_763),3-proj-3-tuple(v_759)) else fail-any) else fail-any) else fail-any)) in
        {207}let v_765: bitstring = catch-fail(symmetricstateunpack(v_764)) in
        {208}let v_766: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_765))) in
        {209}let v_767: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_766),2-proj-2-tuple(v_766),3-proj-3-tuple(v_765),msg_a(alice,charlie,sid))) in
        {210}let v_768: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_765))) in
        {211}let v_769: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_766))) && success?(1-proj-3-tuple(v_765))) then (if (not-caught-fail(v_768) && success?(is-true(success?(1-proj-2-tuple(v_768))))) then cipherstatepack(1-proj-2-tuple(v_768),increment_nonce(2-proj-2-tuple(v_766))) else fail-any) else fail-any)) in
        {212}let v_770: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_765)) && success?(1-proj-3-tuple(v_765))) then (if (not-caught-fail(v_766) && success?(is-true(success?(1-proj-2-tuple(v_766))))) then (if not-caught-fail(v_767) then (if not-caught-fail(v_769) then (v_769,v_767) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {213}let v_771: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_770),2-proj-3-tuple(v_765),3-proj-3-tuple(v_765)))) in
        {214}let v_772: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_770)) && success?(symmetricstatepack(1-proj-2-tuple(v_770),2-proj-3-tuple(v_765),3-proj-3-tuple(v_765)))) then (if (not-caught-fail(v_771) && success?(is-true(success?(1-proj-3-tuple(v_771))))) then symmetricstatepack(1-proj-3-tuple(v_771),2-proj-3-tuple(v_771),hash(3-proj-3-tuple(v_771),2-proj-2-tuple(v_770))) else fail-any) else fail-any)) in
        {215}let v_773: bitstring = catch-fail((if (not-caught-fail(v_765) && success?(is-true(success?(1-proj-3-tuple(v_765))))) then (if (not-caught-fail(v_770) && success?(is-true(success?(1-proj-2-tuple(v_770))))) then (if not-caught-fail(v_772) then (v_772,2-proj-2-tuple(v_770)) else fail-any) else fail-any) else fail-any)) in
        {216}let v_774: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_773),2-proj-7-tuple(v_752),v_755,4-proj-7-tuple(v_752),5-proj-7-tuple(v_752),6-proj-7-tuple(v_752),7-proj-7-tuple(v_752))) in
        {217}let v_775: bitstring = catch-fail(concat3(v_756,2-proj-3-tuple(v_753),2-proj-2-tuple(v_773))) in
        {218}let (hs_776: handshakestate,message_a_777: bitstring) = (if (not-caught-fail(v_752) && success?(is-true(success?(1-proj-7-tuple(v_752))))) then (if (not-caught-fail(v_753) && success?(is-true(success?(1-proj-3-tuple(v_753))))) then (if not-caught-fail(v_755) then (if not-caught-fail(v_756) then (if not-caught-fail(v_758) then (if not-caught-fail(v_764) then (if (not-caught-fail(v_773) && success?(is-true(success?(1-proj-2-tuple(v_773))))) then (if not-caught-fail(v_774) then (if not-caught-fail(v_775) then (v_774,v_775) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {219}event SendMsg(alice,charlie,stagepack_a(sid),msg_a(alice,charlie,sid));
        {220}insert statestore(alice,charlie,sid,statepack_b(hs_776));
        {221}out(pub, message_a_777)
    ) | (
        {257}get statestore(=alice,=charlie,=sid,statepack_b(hs_778: handshakestate)) in
        {223}in(pub, message_b_779: bitstring);
        {224}let v_780: bitstring = catch-fail(handshakestateunpack(hs_778)) in
        {225}let v_781: bitstring = catch-fail(deconcat3(message_b_779)) in
        {226}let v_782: bool = catch-fail(true) in
        {227}let v_783: key = catch-fail(1-proj-3-tuple(v_781)) in
        {228}let v_784: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_780))) in
        {229}let v_785: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_780)) then (if (not-caught-fail(v_784) && success?(is-true(success?(1-proj-3-tuple(v_784))))) then symmetricstatepack(1-proj-3-tuple(v_784),2-proj-3-tuple(v_784),hash(3-proj-3-tuple(v_784),v_783)) else fail-any) else fail-any)) in
        {230}let v_786: bitstring = catch-fail(symmetricstateunpack(v_785)) in
        {231}let v_787: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_786),v_783)) in
        {232}let v_788: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_786),v_783)) in
        {233}let v_789: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_786),v_783)) in
        {234}let v_790: bitstring = catch-fail((if success?(2-proj-3-tuple(v_786)) then (if not-caught-fail(v_787) then (if not-caught-fail(v_788) then (if not-caught-fail(v_789) then (v_787,v_788,v_789) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {235}let v_791: symmetricstate = catch-fail((if (not-caught-fail(v_786) && success?(is-true(success?(1-proj-3-tuple(v_786))))) then (if (not-caught-fail(v_790) && success?(is-true(success?(1-proj-3-tuple(v_790))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_790)) then cipherstatepack(2-proj-3-tuple(v_790),minnonce) else fail-any),1-proj-3-tuple(v_790),3-proj-3-tuple(v_786)) else fail-any) else fail-any)) in
        {236}let v_792: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_780))) in
        {237}let v_793: bitstring = catch-fail(symmetricstateunpack(v_791)) in
        {238}let v_794: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_793),(if success?(3-proj-7-tuple(v_780)) then (if (not-caught-fail(v_792) && success?(is-true(success?(1-proj-2-tuple(v_792))))) then dhexp(2-proj-2-tuple(v_792),v_783) else fail-any) else fail-any))) in
        {239}let v_795: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_793),(if success?(3-proj-7-tuple(v_780)) then (if (not-caught-fail(v_792) && success?(is-true(success?(1-proj-2-tuple(v_792))))) then dhexp(2-proj-2-tuple(v_792),v_783) else fail-any) else fail-any))) in
        {240}let v_796: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_793),(if success?(3-proj-7-tuple(v_780)) then (if (not-caught-fail(v_792) && success?(is-true(success?(1-proj-2-tuple(v_792))))) then dhexp(2-proj-2-tuple(v_792),v_783) else fail-any) else fail-any))) in
        {241}let v_797: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_780)) then (if (not-caught-fail(v_792) && success?(is-true(success?(1-proj-2-tuple(v_792))))) then dhexp(2-proj-2-tuple(v_792),v_783) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_793))) then (if not-caught-fail(v_794) then (if not-caught-fail(v_795) then (if not-caught-fail(v_796) then (v_794,v_795,v_796) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {242}let v_798: symmetricstate = catch-fail((if success?((if success?(3-proj-7-tuple(v_780)) then (if (not-caught-fail(v_792) && success?(is-true(success?(1-proj-2-tuple(v_792))))) then dhexp(2-proj-2-tuple(v_792),v_783) else fail-any) else fail-any)) then (if (not-caught-fail(v_793) && success?(is-true(success?(1-proj-3-tuple(v_793))))) then (if (not-caught-fail(v_797) && success?(is-true(success?(1-proj-3-tuple(v_797))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_797)) then cipherstatepack(2-proj-3-tuple(v_797),minnonce) else fail-any),1-proj-3-tuple(v_797),3-proj-3-tuple(v_793)) else fail-any) else fail-any) else fail-any)) in
        {243}let v_799: bitstring = catch-fail(symmetricstateunpack(v_798)) in
        {244}let v_800: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_799))) in
        {245}let v_801: aead = catch-fail(decrypt(1-proj-2-tuple(v_800),2-proj-2-tuple(v_800),3-proj-3-tuple(v_799),3-proj-3-tuple(v_781))) in
        {246}let v_802: bitstring = catch-fail(aeadunpack(v_801)) in
        {247}let v_803: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_799))) in
        {248}let v_804: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_800))) && success?(1-proj-3-tuple(v_799))) then (if (not-caught-fail(v_803) && success?(is-true(success?(1-proj-2-tuple(v_803))))) then cipherstatepack(1-proj-2-tuple(v_803),increment_nonce(2-proj-2-tuple(v_800))) else fail-any) else fail-any)) in
        {249}let v_805: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_781)) && (success?(3-proj-3-tuple(v_799)) && success?(1-proj-3-tuple(v_799)))) then (if (not-caught-fail(v_800) && success?(is-true(success?(1-proj-2-tuple(v_800))))) then (if not-caught-fail(v_801) then (if (not-caught-fail(v_802) && success?(is-true(success?(1-proj-3-tuple(v_802))))) then (if not-caught-fail(v_804) then (v_804,3-proj-3-tuple(v_802),1-proj-3-tuple(v_802)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {250}let v_806: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_805),2-proj-3-tuple(v_799),3-proj-3-tuple(v_799)))) in
        {251}let v_807: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_781)) && success?(symmetricstatepack(1-proj-3-tuple(v_805),2-proj-3-tuple(v_799),3-proj-3-tuple(v_799)))) then (if (not-caught-fail(v_806) && success?(is-true(success?(1-proj-3-tuple(v_806))))) then symmetricstatepack(1-proj-3-tuple(v_806),2-proj-3-tuple(v_806),hash(3-proj-3-tuple(v_806),3-proj-3-tuple(v_781))) else fail-any) else fail-any)) in
        {252}let v_808: bitstring = catch-fail((if success?(3-proj-3-tuple(v_781)) then (if (not-caught-fail(v_799) && success?(is-true(success?(1-proj-3-tuple(v_799))))) then (if (not-caught-fail(v_805) && success?(is-true(success?(1-proj-3-tuple(v_805))))) then (if not-caught-fail(v_807) then (v_807,2-proj-3-tuple(v_805),3-proj-3-tuple(v_805)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {253}let v_809: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_808),2-proj-7-tuple(v_780),3-proj-7-tuple(v_780),4-proj-7-tuple(v_780),v_783,6-proj-7-tuple(v_780),7-proj-7-tuple(v_780))) in
        {254}let (hs_810: handshakestate,plaintext_b_811: bitstring,valid_812: bool) = (if (not-caught-fail(v_780) && success?(is-true(success?(1-proj-7-tuple(v_780))))) then (if (not-caught-fail(v_781) && success?(is-true(success?(1-proj-3-tuple(v_781))))) then (if not-caught-fail(v_782) then (if not-caught-fail(v_783) then (if not-caught-fail(v_785) then (if not-caught-fail(v_791) then (if not-caught-fail(v_798) then (if (not-caught-fail(v_808) && success?(is-true(success?(1-proj-3-tuple(v_808))))) then (if (v_782 && 3-proj-3-tuple(v_808)) then (if not-caught-fail(v_809) then (v_809,2-proj-3-tuple(v_808),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {255}event RecvMsg(alice,charlie,stagepack_b(sid),plaintext_b_811);
        {256}insert statestore(alice,charlie,sid,statepack_c(hs_810))
    ) | (
        {309}get statestore(=alice,=charlie,=sid,statepack_c(hs_813: handshakestate)) in
        {258}let v_814: bitstring = catch-fail(handshakestateunpack(hs_813)) in
        {259}let v_815: bitstring = catch-fail((empty,empty,empty)) in
        {260}let v_816: key = catch-fail(dhexp(key_s(alice),validkey(g))) in
        {261}let v_817: keypair = catch-fail((if not-caught-fail(v_816) then keypairpack(validkey(v_816),key_s(alice)) else fail-any)) in
        {262}let v_818: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_814))) in
        {263}let v_819: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_818))) in
        {264}let v_820: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_819),2-proj-2-tuple(v_819),3-proj-3-tuple(v_818),getpublickey(v_817))) in
        {265}let v_821: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_818))) in
        {266}let v_822: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_819))) && success?(1-proj-3-tuple(v_818))) then (if (not-caught-fail(v_821) && success?(is-true(success?(1-proj-2-tuple(v_821))))) then cipherstatepack(1-proj-2-tuple(v_821),increment_nonce(2-proj-2-tuple(v_819))) else fail-any) else fail-any)) in
        {267}let v_823: bitstring = catch-fail((if (success?(getpublickey(v_817)) && (success?(3-proj-3-tuple(v_818)) && success?(1-proj-3-tuple(v_818)))) then (if (not-caught-fail(v_819) && success?(is-true(success?(1-proj-2-tuple(v_819))))) then (if not-caught-fail(v_820) then (if not-caught-fail(v_822) then (v_822,v_820) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {268}let v_824: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_823),2-proj-3-tuple(v_818),3-proj-3-tuple(v_818)))) in
        {269}let v_825: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_823)) && success?(symmetricstatepack(1-proj-2-tuple(v_823),2-proj-3-tuple(v_818),3-proj-3-tuple(v_818)))) then (if (not-caught-fail(v_824) && success?(is-true(success?(1-proj-3-tuple(v_824))))) then symmetricstatepack(1-proj-3-tuple(v_824),2-proj-3-tuple(v_824),hash(3-proj-3-tuple(v_824),2-proj-2-tuple(v_823))) else fail-any) else fail-any)) in
        {270}let v_826: bitstring = catch-fail((if (success?(getpublickey(v_817)) && success?(1-proj-7-tuple(v_814))) then (if (not-caught-fail(v_818) && success?(is-true(success?(1-proj-3-tuple(v_818))))) then (if (not-caught-fail(v_823) && success?(is-true(success?(1-proj-2-tuple(v_823))))) then (if not-caught-fail(v_825) then (v_825,2-proj-2-tuple(v_823)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {271}let v_827: bitstring = catch-fail(keypairunpack(v_817)) in
        {272}let v_828: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_826))) in
        {273}let v_829: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_828),(if success?(5-proj-7-tuple(v_814)) then (if (not-caught-fail(v_827) && success?(is-true(success?(1-proj-2-tuple(v_827))))) then dhexp(2-proj-2-tuple(v_827),5-proj-7-tuple(v_814)) else fail-any) else fail-any))) in
        {274}let v_830: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_828),(if success?(5-proj-7-tuple(v_814)) then (if (not-caught-fail(v_827) && success?(is-true(success?(1-proj-2-tuple(v_827))))) then dhexp(2-proj-2-tuple(v_827),5-proj-7-tuple(v_814)) else fail-any) else fail-any))) in
        {275}let v_831: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_828),(if success?(5-proj-7-tuple(v_814)) then (if (not-caught-fail(v_827) && success?(is-true(success?(1-proj-2-tuple(v_827))))) then dhexp(2-proj-2-tuple(v_827),5-proj-7-tuple(v_814)) else fail-any) else fail-any))) in
        {276}let v_832: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_814)) then (if (not-caught-fail(v_827) && success?(is-true(success?(1-proj-2-tuple(v_827))))) then dhexp(2-proj-2-tuple(v_827),5-proj-7-tuple(v_814)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_828))) then (if not-caught-fail(v_829) then (if not-caught-fail(v_830) then (if not-caught-fail(v_831) then (v_829,v_830,v_831) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {277}let v_833: symmetricstate = catch-fail((if (success?((if success?(5-proj-7-tuple(v_814)) then (if (not-caught-fail(v_827) && success?(is-true(success?(1-proj-2-tuple(v_827))))) then dhexp(2-proj-2-tuple(v_827),5-proj-7-tuple(v_814)) else fail-any) else fail-any)) && success?(1-proj-2-tuple(v_826))) then (if (not-caught-fail(v_828) && success?(is-true(success?(1-proj-3-tuple(v_828))))) then (if (not-caught-fail(v_832) && success?(is-true(success?(1-proj-3-tuple(v_832))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_832)) then cipherstatepack(2-proj-3-tuple(v_832),minnonce) else fail-any),1-proj-3-tuple(v_832),3-proj-3-tuple(v_828)) else fail-any) else fail-any) else fail-any)) in
        {278}let v_834: bitstring = catch-fail(symmetricstateunpack(v_833)) in
        {279}let v_835: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_834),6-proj-7-tuple(v_814))) in
        {280}let v_836: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_834),6-proj-7-tuple(v_814))) in
        {281}let v_837: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_834),6-proj-7-tuple(v_814))) in
        {282}let v_838: bitstring = catch-fail((if (success?(6-proj-7-tuple(v_814)) && success?(2-proj-3-tuple(v_834))) then (if not-caught-fail(v_835) then (if not-caught-fail(v_836) then (if not-caught-fail(v_837) then (v_835,v_836,v_837) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {283}let v_839: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_834),1-proj-3-tuple(v_838),3-proj-3-tuple(v_834)))) in
        {284}let v_840: bitstring = catch-fail(symmetricstateunpack((if (success?(2-proj-3-tuple(v_838)) && success?(symmetricstatepack(1-proj-3-tuple(v_834),1-proj-3-tuple(v_838),3-proj-3-tuple(v_834)))) then (if (not-caught-fail(v_839) && success?(is-true(success?(1-proj-3-tuple(v_839))))) then symmetricstatepack(1-proj-3-tuple(v_839),2-proj-3-tuple(v_839),hash(3-proj-3-tuple(v_839),2-proj-3-tuple(v_838))) else fail-any) else fail-any))) in
        {285}let v_841: symmetricstate = catch-fail((if success?(6-proj-7-tuple(v_814)) then (if (not-caught-fail(v_834) && success?(is-true(success?(1-proj-3-tuple(v_834))))) then (if (not-caught-fail(v_838) && success?(is-true(success?(1-proj-3-tuple(v_838))))) then (if (not-caught-fail(v_840) && success?(is-true(success?(1-proj-3-tuple(v_840))))) then symmetricstatepack((if success?(3-proj-3-tuple(v_838)) then cipherstatepack(3-proj-3-tuple(v_838),minnonce) else fail-any),1-proj-3-tuple(v_838),3-proj-3-tuple(v_840)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {286}let v_842: bitstring = catch-fail(symmetricstateunpack(v_841)) in
        {287}let v_843: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_842))) in
        {288}let v_844: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_843),2-proj-2-tuple(v_843),3-proj-3-tuple(v_842),msg_c(alice,charlie,sid))) in
        {289}let v_845: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_842))) in
        {290}let v_846: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_843))) && success?(1-proj-3-tuple(v_842))) then (if (not-caught-fail(v_845) && success?(is-true(success?(1-proj-2-tuple(v_845))))) then cipherstatepack(1-proj-2-tuple(v_845),increment_nonce(2-proj-2-tuple(v_843))) else fail-any) else fail-any)) in
        {291}let v_847: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_842)) && success?(1-proj-3-tuple(v_842))) then (if (not-caught-fail(v_843) && success?(is-true(success?(1-proj-2-tuple(v_843))))) then (if not-caught-fail(v_844) then (if not-caught-fail(v_846) then (v_846,v_844) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {292}let v_848: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_847),2-proj-3-tuple(v_842),3-proj-3-tuple(v_842)))) in
        {293}let v_849: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_847)) && success?(symmetricstatepack(1-proj-2-tuple(v_847),2-proj-3-tuple(v_842),3-proj-3-tuple(v_842)))) then (if (not-caught-fail(v_848) && success?(is-true(success?(1-proj-3-tuple(v_848))))) then symmetricstatepack(1-proj-3-tuple(v_848),2-proj-3-tuple(v_848),hash(3-proj-3-tuple(v_848),2-proj-2-tuple(v_847))) else fail-any) else fail-any)) in
        {294}let v_850: bitstring = catch-fail((if (not-caught-fail(v_842) && success?(is-true(success?(1-proj-3-tuple(v_842))))) then (if (not-caught-fail(v_847) && success?(is-true(success?(1-proj-2-tuple(v_847))))) then (if not-caught-fail(v_849) then (v_849,2-proj-2-tuple(v_847)) else fail-any) else fail-any) else fail-any)) in
        {295}let v_851: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_850),v_817,3-proj-7-tuple(v_814),4-proj-7-tuple(v_814),5-proj-7-tuple(v_814),6-proj-7-tuple(v_814),7-proj-7-tuple(v_814))) in
        {296}let v_852: bitstring = catch-fail(concat3(1-proj-3-tuple(v_815),2-proj-2-tuple(v_826),2-proj-2-tuple(v_850))) in
        {297}let v_853: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_850))) in
        {298}let v_854: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_853),zero)) in
        {299}let v_855: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_853),zero)) in
        {300}let v_856: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_853),zero)) in
        {301}let v_857: bitstring = catch-fail((if success?(2-proj-3-tuple(v_853)) then (if not-caught-fail(v_854) then (if not-caught-fail(v_855) then (if not-caught-fail(v_856) then (v_854,v_855,v_856) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {302}let v_858: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_857)) then cipherstatepack(1-proj-3-tuple(v_857),minnonce) else fail-any)) in
        {303}let v_859: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_857)) then cipherstatepack(2-proj-3-tuple(v_857),minnonce) else fail-any)) in
        {304}let v_860: bitstring = catch-fail((if success?(1-proj-2-tuple(v_850)) then (if (not-caught-fail(v_853) && success?(is-true(success?(1-proj-3-tuple(v_853))))) then (if (not-caught-fail(v_857) && success?(is-true(success?(1-proj-3-tuple(v_857))))) then (if not-caught-fail(v_858) then (if not-caught-fail(v_859) then (1-proj-2-tuple(v_850),v_858,v_859) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {305}let (hs_861: handshakestate,message_c_862: bitstring,cs1_863: cipherstate,cs2_864: cipherstate) = (if (not-caught-fail(v_814) && success?(is-true(success?(1-proj-7-tuple(v_814))))) then (if (not-caught-fail(v_815) && success?(is-true(success?(1-proj-3-tuple(v_815))))) then (if not-caught-fail(v_817) then (if (not-caught-fail(v_826) && success?(is-true(success?(1-proj-2-tuple(v_826))))) then (if not-caught-fail(v_833) then (if not-caught-fail(v_841) then (if (not-caught-fail(v_850) && success?(is-true(success?(1-proj-2-tuple(v_850))))) then (if not-caught-fail(v_851) then (if not-caught-fail(v_852) then (if (not-caught-fail(v_860) && success?(is-true(success?(1-proj-3-tuple(v_860))))) then (v_851,v_852,2-proj-3-tuple(v_860),3-proj-3-tuple(v_860)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {306}event SendMsg(alice,charlie,stagepack_c(sid),msg_c(alice,charlie,sid));
        {307}insert statestore(alice,charlie,sid,statepack_d(hs_861,cs1_863,cs2_864));
        {308}out(pub, message_c_862)
    ) | (
        {310}!
        {330}get statestore(=alice,=charlie,=sid,statepack_d(hs_865: handshakestate,cs1_866: cipherstate,cs2_867: cipherstate)) in
        {311}let hs_868: handshakestate = handshakestatesetcs(hs_865,cs2_867) in
        {312}in(pub, message_d_869: bitstring);
        {313}let v_870: bitstring = catch-fail(handshakestateunpack(hs_868)) in
        {314}let v_871: bitstring = catch-fail(deconcat3(message_d_869)) in
        {315}let v_872: bool = catch-fail(true) in
        {316}let v_873: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_870))) in
        {317}let v_874: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_873))) in
        {318}let v_875: aead = catch-fail(decrypt(1-proj-2-tuple(v_874),2-proj-2-tuple(v_874),3-proj-3-tuple(v_873),3-proj-3-tuple(v_871))) in
        {319}let v_876: bitstring = catch-fail(aeadunpack(v_875)) in
        {320}let v_877: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_873))) in
        {321}let v_878: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_874))) && success?(1-proj-3-tuple(v_873))) then (if (not-caught-fail(v_877) && success?(is-true(success?(1-proj-2-tuple(v_877))))) then cipherstatepack(1-proj-2-tuple(v_877),increment_nonce(2-proj-2-tuple(v_874))) else fail-any) else fail-any)) in
        {322}let v_879: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_871)) && (success?(3-proj-3-tuple(v_873)) && success?(1-proj-3-tuple(v_873)))) then (if (not-caught-fail(v_874) && success?(is-true(success?(1-proj-2-tuple(v_874))))) then (if not-caught-fail(v_875) then (if (not-caught-fail(v_876) && success?(is-true(success?(1-proj-3-tuple(v_876))))) then (if not-caught-fail(v_878) then (v_878,3-proj-3-tuple(v_876),1-proj-3-tuple(v_876)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {323}let v_880: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_879),2-proj-3-tuple(v_873),3-proj-3-tuple(v_873)))) in
        {324}let v_881: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_871)) && success?(symmetricstatepack(1-proj-3-tuple(v_879),2-proj-3-tuple(v_873),3-proj-3-tuple(v_873)))) then (if (not-caught-fail(v_880) && success?(is-true(success?(1-proj-3-tuple(v_880))))) then symmetricstatepack(1-proj-3-tuple(v_880),2-proj-3-tuple(v_880),hash(3-proj-3-tuple(v_880),3-proj-3-tuple(v_871))) else fail-any) else fail-any)) in
        {325}let v_882: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_871)) && success?(1-proj-7-tuple(v_870))) then (if (not-caught-fail(v_873) && success?(is-true(success?(1-proj-3-tuple(v_873))))) then (if (not-caught-fail(v_879) && success?(is-true(success?(1-proj-3-tuple(v_879))))) then (if not-caught-fail(v_881) then (v_881,2-proj-3-tuple(v_879),3-proj-3-tuple(v_879)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {326}let v_883: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_882),2-proj-7-tuple(v_870),3-proj-7-tuple(v_870),4-proj-7-tuple(v_870),5-proj-7-tuple(v_870),6-proj-7-tuple(v_870),7-proj-7-tuple(v_870))) in
        {327}let (hs_884: handshakestate,plaintext_d_885: bitstring,valid_886: bool) = (if (not-caught-fail(v_870) && success?(is-true(success?(1-proj-7-tuple(v_870))))) then (if (not-caught-fail(v_871) && success?(is-true(success?(1-proj-3-tuple(v_871))))) then (if not-caught-fail(v_872) then (if (not-caught-fail(v_882) && success?(is-true(success?(1-proj-3-tuple(v_882))))) then (if (v_872 && 3-proj-3-tuple(v_882)) then (if not-caught-fail(v_883) then (v_883,2-proj-3-tuple(v_882),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {328}event RecvMsg(alice,charlie,stagepack_d(sid),plaintext_d_885);
        {329}insert statestore(alice,charlie,sid,statepack_e(hs_884,cs1_866,handshakestategetcs(hs_884)))
    ) | (
        {331}!
        {349}get statestore(=alice,=charlie,=sid,statepack_e(hs_887: handshakestate,cs1_888: cipherstate,cs2_889: cipherstate)) in
        {332}let hs_890: handshakestate = handshakestatesetcs(hs_887,cs1_888) in
        {333}let v_891: bitstring = catch-fail(handshakestateunpack(hs_890)) in
        {334}let v_892: bitstring = catch-fail((empty,empty,empty)) in
        {335}let v_893: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_891))) in
        {336}let v_894: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_893))) in
        {337}let v_895: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_894),2-proj-2-tuple(v_894),3-proj-3-tuple(v_893),msg_e(alice,charlie,sid))) in
        {338}let v_896: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_893))) in
        {339}let v_897: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_894))) && success?(1-proj-3-tuple(v_893))) then (if (not-caught-fail(v_896) && success?(is-true(success?(1-proj-2-tuple(v_896))))) then cipherstatepack(1-proj-2-tuple(v_896),increment_nonce(2-proj-2-tuple(v_894))) else fail-any) else fail-any)) in
        {340}let v_898: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_893)) && success?(1-proj-3-tuple(v_893))) then (if (not-caught-fail(v_894) && success?(is-true(success?(1-proj-2-tuple(v_894))))) then (if not-caught-fail(v_895) then (if not-caught-fail(v_897) then (v_897,v_895) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {341}let v_899: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_898),2-proj-3-tuple(v_893),3-proj-3-tuple(v_893)))) in
        {342}let v_900: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_898)) && success?(symmetricstatepack(1-proj-2-tuple(v_898),2-proj-3-tuple(v_893),3-proj-3-tuple(v_893)))) then (if (not-caught-fail(v_899) && success?(is-true(success?(1-proj-3-tuple(v_899))))) then symmetricstatepack(1-proj-3-tuple(v_899),2-proj-3-tuple(v_899),hash(3-proj-3-tuple(v_899),2-proj-2-tuple(v_898))) else fail-any) else fail-any)) in
        {343}let v_901: bitstring = catch-fail((if success?(1-proj-7-tuple(v_891)) then (if (not-caught-fail(v_893) && success?(is-true(success?(1-proj-3-tuple(v_893))))) then (if (not-caught-fail(v_898) && success?(is-true(success?(1-proj-2-tuple(v_898))))) then (if not-caught-fail(v_900) then (v_900,2-proj-2-tuple(v_898)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {344}let v_902: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_901),2-proj-7-tuple(v_891),3-proj-7-tuple(v_891),4-proj-7-tuple(v_891),5-proj-7-tuple(v_891),6-proj-7-tuple(v_891),7-proj-7-tuple(v_891))) in
        {345}let v_903: bitstring = catch-fail(concat3(1-proj-3-tuple(v_892),2-proj-3-tuple(v_892),2-proj-2-tuple(v_901))) in
        {346}let (hs_904: handshakestate,message_e_905: bitstring) = (if (not-caught-fail(v_891) && success?(is-true(success?(1-proj-7-tuple(v_891))))) then (if (not-caught-fail(v_892) && success?(is-true(success?(1-proj-3-tuple(v_892))))) then (if (not-caught-fail(v_901) && success?(is-true(success?(1-proj-2-tuple(v_901))))) then (if not-caught-fail(v_902) then (if not-caught-fail(v_903) then (v_902,v_903) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {347}event SendMsg(alice,charlie,stagepack_e(sid),msg_e(alice,charlie,sid));
        {348}out(pub, message_e_905)
    ) | (
        {350}event LeakPsk(phase0,alice,charlie);
        {351}out(pub, key_psk(alice,charlie))
    ) | (
        {352}phase 1;
        {353}event LeakPsk(phase1,alice,charlie);
        {354}out(pub, key_psk(alice,charlie))
    ) | (
        {355}event LeakS(phase0,alice);
        {356}out(pub, key_s(alice))
    ) | (
        {357}phase 1;
        {358}event LeakS(phase1,alice);
        {359}out(pub, key_s(alice))
    )
) | (
    {360}let s_906: keypair = keypairpack(empty,empty) in
    (
        {361}let e_907: keypair = keypairpack(empty,empty) in
        {362}let rs_908: key = empty in
        {363}let re_909: key = empty in
        {364}let v_910: bitstring = catch-fail(hash(somename,empty)) in
        {365}let v_911: key = catch-fail(v_910) in
        {366}let v_912: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {367}let v_913: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_910) then (if not-caught-fail(v_911) then (if not-caught-fail(v_912) then symmetricstatepack(v_912,v_911,v_910) else fail-any) else fail-any) else fail-any))) in
        {368}let v_914: symmetricstate = catch-fail((if success?((if not-caught-fail(v_910) then (if not-caught-fail(v_911) then (if not-caught-fail(v_912) then symmetricstatepack(v_912,v_911,v_910) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_913) && success?(is-true(success?(1-proj-3-tuple(v_913))))) then symmetricstatepack(1-proj-3-tuple(v_913),2-proj-3-tuple(v_913),hash(3-proj-3-tuple(v_913),empty)) else fail-any) else fail-any)) in
        {369}let hs_915: handshakestate = (if not-caught-fail(v_914) then handshakestatepack(v_914,s_906,e_907,rs_908,re_909,key_psk(alice,bob),false) else fail-any) in
        {370}insert statestore(bob,alice,sid,statepack_a(hs_915))
    ) | (
        {398}get statestore(=bob,=alice,=sid,statepack_a(hs_916: handshakestate)) in
        {371}in(pub, message_a_917: bitstring);
        {372}let v_918: bitstring = catch-fail(handshakestateunpack(hs_916)) in
        {373}let v_919: bitstring = catch-fail(deconcat3(message_a_917)) in
        {374}let v_920: bool = catch-fail(true) in
        {375}let v_921: key = catch-fail(1-proj-3-tuple(v_919)) in
        {376}let v_922: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_918))) in
        {377}let v_923: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_918)) then (if (not-caught-fail(v_922) && success?(is-true(success?(1-proj-3-tuple(v_922))))) then symmetricstatepack(1-proj-3-tuple(v_922),2-proj-3-tuple(v_922),hash(3-proj-3-tuple(v_922),v_921)) else fail-any) else fail-any)) in
        {378}let v_924: bitstring = catch-fail(symmetricstateunpack(v_923)) in
        {379}let v_925: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_924),v_921)) in
        {380}let v_926: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_924),v_921)) in
        {381}let v_927: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_924),v_921)) in
        {382}let v_928: bitstring = catch-fail((if success?(2-proj-3-tuple(v_924)) then (if not-caught-fail(v_925) then (if not-caught-fail(v_926) then (if not-caught-fail(v_927) then (v_925,v_926,v_927) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {383}let v_929: symmetricstate = catch-fail((if (not-caught-fail(v_924) && success?(is-true(success?(1-proj-3-tuple(v_924))))) then (if (not-caught-fail(v_928) && success?(is-true(success?(1-proj-3-tuple(v_928))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_928)) then cipherstatepack(2-proj-3-tuple(v_928),minnonce) else fail-any),1-proj-3-tuple(v_928),3-proj-3-tuple(v_924)) else fail-any) else fail-any)) in
        {384}let v_930: bitstring = catch-fail(symmetricstateunpack(v_929)) in
        {385}let v_931: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_930))) in
        {386}let v_932: aead = catch-fail(decrypt(1-proj-2-tuple(v_931),2-proj-2-tuple(v_931),3-proj-3-tuple(v_930),3-proj-3-tuple(v_919))) in
        {387}let v_933: bitstring = catch-fail(aeadunpack(v_932)) in
        {388}let v_934: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_930))) in
        {389}let v_935: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_931))) && success?(1-proj-3-tuple(v_930))) then (if (not-caught-fail(v_934) && success?(is-true(success?(1-proj-2-tuple(v_934))))) then cipherstatepack(1-proj-2-tuple(v_934),increment_nonce(2-proj-2-tuple(v_931))) else fail-any) else fail-any)) in
        {390}let v_936: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_919)) && (success?(3-proj-3-tuple(v_930)) && success?(1-proj-3-tuple(v_930)))) then (if (not-caught-fail(v_931) && success?(is-true(success?(1-proj-2-tuple(v_931))))) then (if not-caught-fail(v_932) then (if (not-caught-fail(v_933) && success?(is-true(success?(1-proj-3-tuple(v_933))))) then (if not-caught-fail(v_935) then (v_935,3-proj-3-tuple(v_933),1-proj-3-tuple(v_933)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {391}let v_937: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_936),2-proj-3-tuple(v_930),3-proj-3-tuple(v_930)))) in
        {392}let v_938: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_919)) && success?(symmetricstatepack(1-proj-3-tuple(v_936),2-proj-3-tuple(v_930),3-proj-3-tuple(v_930)))) then (if (not-caught-fail(v_937) && success?(is-true(success?(1-proj-3-tuple(v_937))))) then symmetricstatepack(1-proj-3-tuple(v_937),2-proj-3-tuple(v_937),hash(3-proj-3-tuple(v_937),3-proj-3-tuple(v_919))) else fail-any) else fail-any)) in
        {393}let v_939: bitstring = catch-fail((if success?(3-proj-3-tuple(v_919)) then (if (not-caught-fail(v_930) && success?(is-true(success?(1-proj-3-tuple(v_930))))) then (if (not-caught-fail(v_936) && success?(is-true(success?(1-proj-3-tuple(v_936))))) then (if not-caught-fail(v_938) then (v_938,2-proj-3-tuple(v_936),3-proj-3-tuple(v_936)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {394}let v_940: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_939),2-proj-7-tuple(v_918),3-proj-7-tuple(v_918),4-proj-7-tuple(v_918),v_921,6-proj-7-tuple(v_918),7-proj-7-tuple(v_918))) in
        {395}let (hs_941: handshakestate,plaintext_a: bitstring,valid_942: bool) = (if (not-caught-fail(v_918) && success?(is-true(success?(1-proj-7-tuple(v_918))))) then (if (not-caught-fail(v_919) && success?(is-true(success?(1-proj-3-tuple(v_919))))) then (if not-caught-fail(v_920) then (if not-caught-fail(v_921) then (if not-caught-fail(v_923) then (if not-caught-fail(v_929) then (if (not-caught-fail(v_939) && success?(is-true(success?(1-proj-3-tuple(v_939))))) then (if (v_920 && 3-proj-3-tuple(v_939)) then (if not-caught-fail(v_940) then (v_940,2-proj-3-tuple(v_939),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {396}event RecvMsg(bob,alice,stagepack_a(sid),plaintext_a);
        {397}insert statestore(bob,alice,sid,statepack_b(hs_941))
    ) | (
        {434}get statestore(=bob,=alice,=sid,statepack_b(hs_943: handshakestate)) in
        {399}let v_944: bitstring = catch-fail(handshakestateunpack(hs_943)) in
        {400}let v_945: bitstring = catch-fail((empty,empty,empty)) in
        {401}let v_946: key = catch-fail(dhexp(key_e(bob,alice,sid),validkey(g))) in
        {402}let v_947: keypair = catch-fail((if not-caught-fail(v_946) then keypairpack(validkey(v_946),key_e(bob,alice,sid)) else fail-any)) in
        {403}let v_948: bitstring = catch-fail(getpublickey(v_947)) in
        {404}let v_949: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_944))) in
        {405}let v_950: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_944)) then (if (not-caught-fail(v_949) && success?(is-true(success?(1-proj-3-tuple(v_949))))) then symmetricstatepack(1-proj-3-tuple(v_949),2-proj-3-tuple(v_949),hash(3-proj-3-tuple(v_949),v_948)) else fail-any) else fail-any)) in
        {406}let v_951: bitstring = catch-fail(symmetricstateunpack(v_950)) in
        {407}let v_952: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_951),getpublickey(v_947))) in
        {408}let v_953: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_951),getpublickey(v_947))) in
        {409}let v_954: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_951),getpublickey(v_947))) in
        {410}let v_955: bitstring = catch-fail((if (success?(getpublickey(v_947)) && success?(2-proj-3-tuple(v_951))) then (if not-caught-fail(v_952) then (if not-caught-fail(v_953) then (if not-caught-fail(v_954) then (v_952,v_953,v_954) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {411}let v_956: symmetricstate = catch-fail((if success?(getpublickey(v_947)) then (if (not-caught-fail(v_951) && success?(is-true(success?(1-proj-3-tuple(v_951))))) then (if (not-caught-fail(v_955) && success?(is-true(success?(1-proj-3-tuple(v_955))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_955)) then cipherstatepack(2-proj-3-tuple(v_955),minnonce) else fail-any),1-proj-3-tuple(v_955),3-proj-3-tuple(v_951)) else fail-any) else fail-any) else fail-any)) in
        {412}let v_957: bitstring = catch-fail(keypairunpack(v_947)) in
        {413}let v_958: bitstring = catch-fail(symmetricstateunpack(v_956)) in
        {414}let v_959: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_958),(if success?(5-proj-7-tuple(v_944)) then (if (not-caught-fail(v_957) && success?(is-true(success?(1-proj-2-tuple(v_957))))) then dhexp(2-proj-2-tuple(v_957),5-proj-7-tuple(v_944)) else fail-any) else fail-any))) in
        {415}let v_960: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_958),(if success?(5-proj-7-tuple(v_944)) then (if (not-caught-fail(v_957) && success?(is-true(success?(1-proj-2-tuple(v_957))))) then dhexp(2-proj-2-tuple(v_957),5-proj-7-tuple(v_944)) else fail-any) else fail-any))) in
        {416}let v_961: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_958),(if success?(5-proj-7-tuple(v_944)) then (if (not-caught-fail(v_957) && success?(is-true(success?(1-proj-2-tuple(v_957))))) then dhexp(2-proj-2-tuple(v_957),5-proj-7-tuple(v_944)) else fail-any) else fail-any))) in
        {417}let v_962: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_944)) then (if (not-caught-fail(v_957) && success?(is-true(success?(1-proj-2-tuple(v_957))))) then dhexp(2-proj-2-tuple(v_957),5-proj-7-tuple(v_944)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_958))) then (if not-caught-fail(v_959) then (if not-caught-fail(v_960) then (if not-caught-fail(v_961) then (v_959,v_960,v_961) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {418}let v_963: symmetricstate = catch-fail((if success?((if success?(5-proj-7-tuple(v_944)) then (if (not-caught-fail(v_957) && success?(is-true(success?(1-proj-2-tuple(v_957))))) then dhexp(2-proj-2-tuple(v_957),5-proj-7-tuple(v_944)) else fail-any) else fail-any)) then (if (not-caught-fail(v_958) && success?(is-true(success?(1-proj-3-tuple(v_958))))) then (if (not-caught-fail(v_962) && success?(is-true(success?(1-proj-3-tuple(v_962))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_962)) then cipherstatepack(2-proj-3-tuple(v_962),minnonce) else fail-any),1-proj-3-tuple(v_962),3-proj-3-tuple(v_958)) else fail-any) else fail-any) else fail-any)) in
        {419}let v_964: bitstring = catch-fail(symmetricstateunpack(v_963)) in
        {420}let v_965: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_964))) in
        {421}let v_966: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_965),2-proj-2-tuple(v_965),3-proj-3-tuple(v_964),msg_b(bob,alice,sid))) in
        {422}let v_967: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_964))) in
        {423}let v_968: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_965))) && success?(1-proj-3-tuple(v_964))) then (if (not-caught-fail(v_967) && success?(is-true(success?(1-proj-2-tuple(v_967))))) then cipherstatepack(1-proj-2-tuple(v_967),increment_nonce(2-proj-2-tuple(v_965))) else fail-any) else fail-any)) in
        {424}let v_969: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_964)) && success?(1-proj-3-tuple(v_964))) then (if (not-caught-fail(v_965) && success?(is-true(success?(1-proj-2-tuple(v_965))))) then (if not-caught-fail(v_966) then (if not-caught-fail(v_968) then (v_968,v_966) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {425}let v_970: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_969),2-proj-3-tuple(v_964),3-proj-3-tuple(v_964)))) in
        {426}let v_971: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_969)) && success?(symmetricstatepack(1-proj-2-tuple(v_969),2-proj-3-tuple(v_964),3-proj-3-tuple(v_964)))) then (if (not-caught-fail(v_970) && success?(is-true(success?(1-proj-3-tuple(v_970))))) then symmetricstatepack(1-proj-3-tuple(v_970),2-proj-3-tuple(v_970),hash(3-proj-3-tuple(v_970),2-proj-2-tuple(v_969))) else fail-any) else fail-any)) in
        {427}let v_972: bitstring = catch-fail((if (not-caught-fail(v_964) && success?(is-true(success?(1-proj-3-tuple(v_964))))) then (if (not-caught-fail(v_969) && success?(is-true(success?(1-proj-2-tuple(v_969))))) then (if not-caught-fail(v_971) then (v_971,2-proj-2-tuple(v_969)) else fail-any) else fail-any) else fail-any)) in
        {428}let v_973: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_972),2-proj-7-tuple(v_944),v_947,4-proj-7-tuple(v_944),5-proj-7-tuple(v_944),6-proj-7-tuple(v_944),7-proj-7-tuple(v_944))) in
        {429}let v_974: bitstring = catch-fail(concat3(v_948,2-proj-3-tuple(v_945),2-proj-2-tuple(v_972))) in
        {430}let (hs_975: handshakestate,message_b_976: bitstring) = (if (not-caught-fail(v_944) && success?(is-true(success?(1-proj-7-tuple(v_944))))) then (if (not-caught-fail(v_945) && success?(is-true(success?(1-proj-3-tuple(v_945))))) then (if not-caught-fail(v_947) then (if not-caught-fail(v_948) then (if not-caught-fail(v_950) then (if not-caught-fail(v_956) then (if not-caught-fail(v_963) then (if (not-caught-fail(v_972) && success?(is-true(success?(1-proj-2-tuple(v_972))))) then (if not-caught-fail(v_973) then (if not-caught-fail(v_974) then (v_973,v_974) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {431}event SendMsg(bob,alice,stagepack_b(sid),msg_b(bob,alice,sid));
        {432}insert statestore(bob,alice,sid,statepack_c(hs_975));
        {433}out(pub, message_b_976)
    ) | (
        {488}get statestore(=bob,=alice,=sid,statepack_c(hs_977: handshakestate)) in
        {435}in(pub, message_c_978: bitstring);
        {436}let v_979: bitstring = catch-fail(handshakestateunpack(hs_977)) in
        {437}let v_980: bitstring = catch-fail(deconcat3(message_c_978)) in
        {438}let v_981: bool = catch-fail(true) in
        {439}let v_982: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_979))) in
        {440}let v_983: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_982))) in
        {441}let v_984: aead = catch-fail(decrypt(1-proj-2-tuple(v_983),2-proj-2-tuple(v_983),3-proj-3-tuple(v_982),2-proj-3-tuple(v_980))) in
        {442}let v_985: bitstring = catch-fail(aeadunpack(v_984)) in
        {443}let v_986: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_982))) in
        {444}let v_987: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_983))) && success?(1-proj-3-tuple(v_982))) then (if (not-caught-fail(v_986) && success?(is-true(success?(1-proj-2-tuple(v_986))))) then cipherstatepack(1-proj-2-tuple(v_986),increment_nonce(2-proj-2-tuple(v_983))) else fail-any) else fail-any)) in
        {445}let v_988: bitstring = catch-fail((if (success?(2-proj-3-tuple(v_980)) && (success?(3-proj-3-tuple(v_982)) && success?(1-proj-3-tuple(v_982)))) then (if (not-caught-fail(v_983) && success?(is-true(success?(1-proj-2-tuple(v_983))))) then (if not-caught-fail(v_984) then (if (not-caught-fail(v_985) && success?(is-true(success?(1-proj-3-tuple(v_985))))) then (if not-caught-fail(v_987) then (v_987,3-proj-3-tuple(v_985),1-proj-3-tuple(v_985)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {446}let v_989: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_988),2-proj-3-tuple(v_982),3-proj-3-tuple(v_982)))) in
        {447}let v_990: symmetricstate = catch-fail((if (success?(2-proj-3-tuple(v_980)) && success?(symmetricstatepack(1-proj-3-tuple(v_988),2-proj-3-tuple(v_982),3-proj-3-tuple(v_982)))) then (if (not-caught-fail(v_989) && success?(is-true(success?(1-proj-3-tuple(v_989))))) then symmetricstatepack(1-proj-3-tuple(v_989),2-proj-3-tuple(v_989),hash(3-proj-3-tuple(v_989),2-proj-3-tuple(v_980))) else fail-any) else fail-any)) in
        {448}let v_991: bitstring = catch-fail((if (success?(2-proj-3-tuple(v_980)) && success?(1-proj-7-tuple(v_979))) then (if (not-caught-fail(v_982) && success?(is-true(success?(1-proj-3-tuple(v_982))))) then (if (not-caught-fail(v_988) && success?(is-true(success?(1-proj-3-tuple(v_988))))) then (if not-caught-fail(v_990) then (v_990,2-proj-3-tuple(v_988),3-proj-3-tuple(v_988)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {449}let v_992: key = catch-fail(2-proj-3-tuple(v_991)) in
        {450}let v_993: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_979))) in
        {451}let v_994: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_991))) in
        {452}let v_995: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_994),(if success?(3-proj-7-tuple(v_979)) then (if (not-caught-fail(v_993) && success?(is-true(success?(1-proj-2-tuple(v_993))))) then dhexp(2-proj-2-tuple(v_993),v_992) else fail-any) else fail-any))) in
        {453}let v_996: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_994),(if success?(3-proj-7-tuple(v_979)) then (if (not-caught-fail(v_993) && success?(is-true(success?(1-proj-2-tuple(v_993))))) then dhexp(2-proj-2-tuple(v_993),v_992) else fail-any) else fail-any))) in
        {454}let v_997: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_994),(if success?(3-proj-7-tuple(v_979)) then (if (not-caught-fail(v_993) && success?(is-true(success?(1-proj-2-tuple(v_993))))) then dhexp(2-proj-2-tuple(v_993),v_992) else fail-any) else fail-any))) in
        {455}let v_998: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_979)) then (if (not-caught-fail(v_993) && success?(is-true(success?(1-proj-2-tuple(v_993))))) then dhexp(2-proj-2-tuple(v_993),v_992) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_994))) then (if not-caught-fail(v_995) then (if not-caught-fail(v_996) then (if not-caught-fail(v_997) then (v_995,v_996,v_997) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {456}let v_999: symmetricstate = catch-fail((if (success?((if success?(3-proj-7-tuple(v_979)) then (if (not-caught-fail(v_993) && success?(is-true(success?(1-proj-2-tuple(v_993))))) then dhexp(2-proj-2-tuple(v_993),v_992) else fail-any) else fail-any)) && success?(1-proj-3-tuple(v_991))) then (if (not-caught-fail(v_994) && success?(is-true(success?(1-proj-3-tuple(v_994))))) then (if (not-caught-fail(v_998) && success?(is-true(success?(1-proj-3-tuple(v_998))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_998)) then cipherstatepack(2-proj-3-tuple(v_998),minnonce) else fail-any),1-proj-3-tuple(v_998),3-proj-3-tuple(v_994)) else fail-any) else fail-any) else fail-any)) in
        {457}let v_1000: bitstring = catch-fail(symmetricstateunpack(v_999)) in
        {458}let v_1001: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1000),6-proj-7-tuple(v_979))) in
        {459}let v_1002: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1000),6-proj-7-tuple(v_979))) in
        {460}let v_1003: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1000),6-proj-7-tuple(v_979))) in
        {461}let v_1004: bitstring = catch-fail((if (success?(6-proj-7-tuple(v_979)) && success?(2-proj-3-tuple(v_1000))) then (if not-caught-fail(v_1001) then (if not-caught-fail(v_1002) then (if not-caught-fail(v_1003) then (v_1001,v_1002,v_1003) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {462}let v_1005: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1000),1-proj-3-tuple(v_1004),3-proj-3-tuple(v_1000)))) in
        {463}let v_1006: bitstring = catch-fail(symmetricstateunpack((if (success?(2-proj-3-tuple(v_1004)) && success?(symmetricstatepack(1-proj-3-tuple(v_1000),1-proj-3-tuple(v_1004),3-proj-3-tuple(v_1000)))) then (if (not-caught-fail(v_1005) && success?(is-true(success?(1-proj-3-tuple(v_1005))))) then symmetricstatepack(1-proj-3-tuple(v_1005),2-proj-3-tuple(v_1005),hash(3-proj-3-tuple(v_1005),2-proj-3-tuple(v_1004))) else fail-any) else fail-any))) in
        {464}let v_1007: symmetricstate = catch-fail((if success?(6-proj-7-tuple(v_979)) then (if (not-caught-fail(v_1000) && success?(is-true(success?(1-proj-3-tuple(v_1000))))) then (if (not-caught-fail(v_1004) && success?(is-true(success?(1-proj-3-tuple(v_1004))))) then (if (not-caught-fail(v_1006) && success?(is-true(success?(1-proj-3-tuple(v_1006))))) then symmetricstatepack((if success?(3-proj-3-tuple(v_1004)) then cipherstatepack(3-proj-3-tuple(v_1004),minnonce) else fail-any),1-proj-3-tuple(v_1004),3-proj-3-tuple(v_1006)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {465}let v_1008: bitstring = catch-fail(symmetricstateunpack(v_1007)) in
        {466}let v_1009: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1008))) in
        {467}let v_1010: aead = catch-fail(decrypt(1-proj-2-tuple(v_1009),2-proj-2-tuple(v_1009),3-proj-3-tuple(v_1008),3-proj-3-tuple(v_980))) in
        {468}let v_1011: bitstring = catch-fail(aeadunpack(v_1010)) in
        {469}let v_1012: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1008))) in
        {470}let v_1013: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1009))) && success?(1-proj-3-tuple(v_1008))) then (if (not-caught-fail(v_1012) && success?(is-true(success?(1-proj-2-tuple(v_1012))))) then cipherstatepack(1-proj-2-tuple(v_1012),increment_nonce(2-proj-2-tuple(v_1009))) else fail-any) else fail-any)) in
        {471}let v_1014: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_980)) && (success?(3-proj-3-tuple(v_1008)) && success?(1-proj-3-tuple(v_1008)))) then (if (not-caught-fail(v_1009) && success?(is-true(success?(1-proj-2-tuple(v_1009))))) then (if not-caught-fail(v_1010) then (if (not-caught-fail(v_1011) && success?(is-true(success?(1-proj-3-tuple(v_1011))))) then (if not-caught-fail(v_1013) then (v_1013,3-proj-3-tuple(v_1011),1-proj-3-tuple(v_1011)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {472}let v_1015: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1014),2-proj-3-tuple(v_1008),3-proj-3-tuple(v_1008)))) in
        {473}let v_1016: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_980)) && success?(symmetricstatepack(1-proj-3-tuple(v_1014),2-proj-3-tuple(v_1008),3-proj-3-tuple(v_1008)))) then (if (not-caught-fail(v_1015) && success?(is-true(success?(1-proj-3-tuple(v_1015))))) then symmetricstatepack(1-proj-3-tuple(v_1015),2-proj-3-tuple(v_1015),hash(3-proj-3-tuple(v_1015),3-proj-3-tuple(v_980))) else fail-any) else fail-any)) in
        {474}let v_1017: bitstring = catch-fail((if success?(3-proj-3-tuple(v_980)) then (if (not-caught-fail(v_1008) && success?(is-true(success?(1-proj-3-tuple(v_1008))))) then (if (not-caught-fail(v_1014) && success?(is-true(success?(1-proj-3-tuple(v_1014))))) then (if not-caught-fail(v_1016) then (v_1016,2-proj-3-tuple(v_1014),3-proj-3-tuple(v_1014)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {475}let v_1018: key = catch-fail(dhexp(key_s(alice),validkey(g))) in
        {476}let v_1019: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_1017),2-proj-7-tuple(v_979),3-proj-7-tuple(v_979),v_992,5-proj-7-tuple(v_979),6-proj-7-tuple(v_979),7-proj-7-tuple(v_979))) in
        {477}let v_1020: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_1017))) in
        {478}let v_1021: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1020),zero)) in
        {479}let v_1022: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1020),zero)) in
        {480}let v_1023: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1020),zero)) in
        {481}let v_1024: bitstring = catch-fail((if success?(2-proj-3-tuple(v_1020)) then (if not-caught-fail(v_1021) then (if not-caught-fail(v_1022) then (if not-caught-fail(v_1023) then (v_1021,v_1022,v_1023) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {482}let v_1025: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_1024)) then cipherstatepack(1-proj-3-tuple(v_1024),minnonce) else fail-any)) in
        {483}let v_1026: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_1024)) then cipherstatepack(2-proj-3-tuple(v_1024),minnonce) else fail-any)) in
        {484}let v_1027: bitstring = catch-fail((if success?(1-proj-3-tuple(v_1017)) then (if (not-caught-fail(v_1020) && success?(is-true(success?(1-proj-3-tuple(v_1020))))) then (if (not-caught-fail(v_1024) && success?(is-true(success?(1-proj-3-tuple(v_1024))))) then (if not-caught-fail(v_1025) then (if not-caught-fail(v_1026) then (1-proj-3-tuple(v_1017),v_1025,v_1026) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {485}let (hs_1028: handshakestate,plaintext_c: bitstring,valid_1029: bool,cs1_1030: cipherstate,cs2_1031: cipherstate) = (if (not-caught-fail(v_979) && success?(is-true(success?(1-proj-7-tuple(v_979))))) then (if (not-caught-fail(v_980) && success?(is-true(success?(1-proj-3-tuple(v_980))))) then (if not-caught-fail(v_981) then (if (not-caught-fail(v_991) && success?(is-true(success?(1-proj-3-tuple(v_991))))) then (if not-caught-fail(v_992) then (if not-caught-fail(v_999) then (if not-caught-fail(v_1007) then (if (not-caught-fail(v_1017) && success?(is-true(success?(1-proj-3-tuple(v_1017))))) then (if ((3-proj-3-tuple(v_991) && 3-proj-3-tuple(v_1017)) && (v_992 = getpublickey((if not-caught-fail(v_1018) then keypairpack(validkey(v_1018),key_s(alice)) else fail-any)))) then (if not-caught-fail(v_1019) then (if (not-caught-fail(v_1027) && success?(is-true(success?(1-proj-3-tuple(v_1027))))) then (v_1019,2-proj-3-tuple(v_1017),true,2-proj-3-tuple(v_1027),3-proj-3-tuple(v_1027)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {486}event RecvMsg(bob,alice,stagepack_c(sid),plaintext_c);
        {487}insert statestore(bob,alice,sid,statepack_d(hs_1028,cs1_1030,cs2_1031))
    ) | (
        {489}!
        {508}get statestore(=bob,=alice,=sid,statepack_d(hs_1032: handshakestate,cs1_1033: cipherstate,cs2_1034: cipherstate)) in
        {490}let hs_1035: handshakestate = handshakestatesetcs(hs_1032,cs2_1034) in
        {491}let v_1036: bitstring = catch-fail(handshakestateunpack(hs_1035)) in
        {492}let v_1037: bitstring = catch-fail((empty,empty,empty)) in
        {493}let v_1038: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1036))) in
        {494}let v_1039: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1038))) in
        {495}let v_1040: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_1039),2-proj-2-tuple(v_1039),3-proj-3-tuple(v_1038),msg_d(bob,alice,sid))) in
        {496}let v_1041: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1038))) in
        {497}let v_1042: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1039))) && success?(1-proj-3-tuple(v_1038))) then (if (not-caught-fail(v_1041) && success?(is-true(success?(1-proj-2-tuple(v_1041))))) then cipherstatepack(1-proj-2-tuple(v_1041),increment_nonce(2-proj-2-tuple(v_1039))) else fail-any) else fail-any)) in
        {498}let v_1043: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1038)) && success?(1-proj-3-tuple(v_1038))) then (if (not-caught-fail(v_1039) && success?(is-true(success?(1-proj-2-tuple(v_1039))))) then (if not-caught-fail(v_1040) then (if not-caught-fail(v_1042) then (v_1042,v_1040) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {499}let v_1044: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_1043),2-proj-3-tuple(v_1038),3-proj-3-tuple(v_1038)))) in
        {500}let v_1045: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_1043)) && success?(symmetricstatepack(1-proj-2-tuple(v_1043),2-proj-3-tuple(v_1038),3-proj-3-tuple(v_1038)))) then (if (not-caught-fail(v_1044) && success?(is-true(success?(1-proj-3-tuple(v_1044))))) then symmetricstatepack(1-proj-3-tuple(v_1044),2-proj-3-tuple(v_1044),hash(3-proj-3-tuple(v_1044),2-proj-2-tuple(v_1043))) else fail-any) else fail-any)) in
        {501}let v_1046: bitstring = catch-fail((if success?(1-proj-7-tuple(v_1036)) then (if (not-caught-fail(v_1038) && success?(is-true(success?(1-proj-3-tuple(v_1038))))) then (if (not-caught-fail(v_1043) && success?(is-true(success?(1-proj-2-tuple(v_1043))))) then (if not-caught-fail(v_1045) then (v_1045,2-proj-2-tuple(v_1043)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {502}let v_1047: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_1046),2-proj-7-tuple(v_1036),3-proj-7-tuple(v_1036),4-proj-7-tuple(v_1036),5-proj-7-tuple(v_1036),6-proj-7-tuple(v_1036),7-proj-7-tuple(v_1036))) in
        {503}let v_1048: bitstring = catch-fail(concat3(1-proj-3-tuple(v_1037),2-proj-3-tuple(v_1037),2-proj-2-tuple(v_1046))) in
        {504}let (hs_1049: handshakestate,message_d_1050: bitstring) = (if (not-caught-fail(v_1036) && success?(is-true(success?(1-proj-7-tuple(v_1036))))) then (if (not-caught-fail(v_1037) && success?(is-true(success?(1-proj-3-tuple(v_1037))))) then (if (not-caught-fail(v_1046) && success?(is-true(success?(1-proj-2-tuple(v_1046))))) then (if not-caught-fail(v_1047) then (if not-caught-fail(v_1048) then (v_1047,v_1048) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {505}event SendMsg(bob,alice,stagepack_d(sid),msg_d(bob,alice,sid));
        {506}insert statestore(bob,alice,sid,statepack_e(hs_1049,cs1_1033,handshakestategetcs(hs_1049)));
        {507}out(pub, message_d_1050)
    ) | (
        {509}!
        {529}get statestore(=bob,=alice,=sid,statepack_e(hs_1051: handshakestate,cs1_1052: cipherstate,cs2_1053: cipherstate)) in
        {510}let hs_1054: handshakestate = handshakestatesetcs(hs_1051,cs1_1052) in
        {511}in(pub, message_e_1055: bitstring);
        {512}let v_1056: bitstring = catch-fail(handshakestateunpack(hs_1054)) in
        {513}let v_1057: bitstring = catch-fail(deconcat3(message_e_1055)) in
        {514}let v_1058: bool = catch-fail(true) in
        {515}let v_1059: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1056))) in
        {516}let v_1060: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1059))) in
        {517}let v_1061: aead = catch-fail(decrypt(1-proj-2-tuple(v_1060),2-proj-2-tuple(v_1060),3-proj-3-tuple(v_1059),3-proj-3-tuple(v_1057))) in
        {518}let v_1062: bitstring = catch-fail(aeadunpack(v_1061)) in
        {519}let v_1063: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1059))) in
        {520}let v_1064: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1060))) && success?(1-proj-3-tuple(v_1059))) then (if (not-caught-fail(v_1063) && success?(is-true(success?(1-proj-2-tuple(v_1063))))) then cipherstatepack(1-proj-2-tuple(v_1063),increment_nonce(2-proj-2-tuple(v_1060))) else fail-any) else fail-any)) in
        {521}let v_1065: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1057)) && (success?(3-proj-3-tuple(v_1059)) && success?(1-proj-3-tuple(v_1059)))) then (if (not-caught-fail(v_1060) && success?(is-true(success?(1-proj-2-tuple(v_1060))))) then (if not-caught-fail(v_1061) then (if (not-caught-fail(v_1062) && success?(is-true(success?(1-proj-3-tuple(v_1062))))) then (if not-caught-fail(v_1064) then (v_1064,3-proj-3-tuple(v_1062),1-proj-3-tuple(v_1062)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {522}let v_1066: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1065),2-proj-3-tuple(v_1059),3-proj-3-tuple(v_1059)))) in
        {523}let v_1067: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_1057)) && success?(symmetricstatepack(1-proj-3-tuple(v_1065),2-proj-3-tuple(v_1059),3-proj-3-tuple(v_1059)))) then (if (not-caught-fail(v_1066) && success?(is-true(success?(1-proj-3-tuple(v_1066))))) then symmetricstatepack(1-proj-3-tuple(v_1066),2-proj-3-tuple(v_1066),hash(3-proj-3-tuple(v_1066),3-proj-3-tuple(v_1057))) else fail-any) else fail-any)) in
        {524}let v_1068: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1057)) && success?(1-proj-7-tuple(v_1056))) then (if (not-caught-fail(v_1059) && success?(is-true(success?(1-proj-3-tuple(v_1059))))) then (if (not-caught-fail(v_1065) && success?(is-true(success?(1-proj-3-tuple(v_1065))))) then (if not-caught-fail(v_1067) then (v_1067,2-proj-3-tuple(v_1065),3-proj-3-tuple(v_1065)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {525}let v_1069: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_1068),2-proj-7-tuple(v_1056),3-proj-7-tuple(v_1056),4-proj-7-tuple(v_1056),5-proj-7-tuple(v_1056),6-proj-7-tuple(v_1056),7-proj-7-tuple(v_1056))) in
        {526}let (hs_1070: handshakestate,plaintext_e: bitstring,valid_1071: bool) = (if (not-caught-fail(v_1056) && success?(is-true(success?(1-proj-7-tuple(v_1056))))) then (if (not-caught-fail(v_1057) && success?(is-true(success?(1-proj-3-tuple(v_1057))))) then (if not-caught-fail(v_1058) then (if (not-caught-fail(v_1068) && success?(is-true(success?(1-proj-3-tuple(v_1068))))) then (if (v_1058 && 3-proj-3-tuple(v_1068)) then (if not-caught-fail(v_1069) then (v_1069,2-proj-3-tuple(v_1068),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {527}event RecvMsg(bob,alice,stagepack_e(sid),plaintext_e);
        {528}event RecvEnd(valid_1071)
    ) | (
        {530}event LeakPsk(phase0,alice,bob);
        {531}out(pub, key_psk(alice,bob))
    ) | (
        {532}phase 1;
        {533}event LeakPsk(phase1,alice,bob);
        {534}out(pub, key_psk(alice,bob))
    ) | (
        0
    )
) | (
    {535}let s_1072: keypair = keypairpack(empty,empty) in
    (
        {536}let e_1073: keypair = keypairpack(empty,empty) in
        {537}let rs_1074: key = empty in
        {538}let re_1075: key = empty in
        {539}let v_1076: bitstring = catch-fail(hash(somename,empty)) in
        {540}let v_1077: key = catch-fail(v_1076) in
        {541}let v_1078: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {542}let v_1079: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_1076) then (if not-caught-fail(v_1077) then (if not-caught-fail(v_1078) then symmetricstatepack(v_1078,v_1077,v_1076) else fail-any) else fail-any) else fail-any))) in
        {543}let v_1080: symmetricstate = catch-fail((if success?((if not-caught-fail(v_1076) then (if not-caught-fail(v_1077) then (if not-caught-fail(v_1078) then symmetricstatepack(v_1078,v_1077,v_1076) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_1079) && success?(is-true(success?(1-proj-3-tuple(v_1079))))) then symmetricstatepack(1-proj-3-tuple(v_1079),2-proj-3-tuple(v_1079),hash(3-proj-3-tuple(v_1079),empty)) else fail-any) else fail-any)) in
        {544}let hs_1081: handshakestate = (if not-caught-fail(v_1080) then handshakestatepack(v_1080,s_1072,e_1073,rs_1074,re_1075,key_psk(charlie,bob),false) else fail-any) in
        {545}insert statestore(bob,charlie,sid,statepack_a(hs_1081))
    ) | (
        {573}get statestore(=bob,=charlie,=sid,statepack_a(hs_1082: handshakestate)) in
        {546}in(pub, message_a_1083: bitstring);
        {547}let v_1084: bitstring = catch-fail(handshakestateunpack(hs_1082)) in
        {548}let v_1085: bitstring = catch-fail(deconcat3(message_a_1083)) in
        {549}let v_1086: bool = catch-fail(true) in
        {550}let v_1087: key = catch-fail(1-proj-3-tuple(v_1085)) in
        {551}let v_1088: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1084))) in
        {552}let v_1089: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_1084)) then (if (not-caught-fail(v_1088) && success?(is-true(success?(1-proj-3-tuple(v_1088))))) then symmetricstatepack(1-proj-3-tuple(v_1088),2-proj-3-tuple(v_1088),hash(3-proj-3-tuple(v_1088),v_1087)) else fail-any) else fail-any)) in
        {553}let v_1090: bitstring = catch-fail(symmetricstateunpack(v_1089)) in
        {554}let v_1091: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1090),v_1087)) in
        {555}let v_1092: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1090),v_1087)) in
        {556}let v_1093: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1090),v_1087)) in
        {557}let v_1094: bitstring = catch-fail((if success?(2-proj-3-tuple(v_1090)) then (if not-caught-fail(v_1091) then (if not-caught-fail(v_1092) then (if not-caught-fail(v_1093) then (v_1091,v_1092,v_1093) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {558}let v_1095: symmetricstate = catch-fail((if (not-caught-fail(v_1090) && success?(is-true(success?(1-proj-3-tuple(v_1090))))) then (if (not-caught-fail(v_1094) && success?(is-true(success?(1-proj-3-tuple(v_1094))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1094)) then cipherstatepack(2-proj-3-tuple(v_1094),minnonce) else fail-any),1-proj-3-tuple(v_1094),3-proj-3-tuple(v_1090)) else fail-any) else fail-any)) in
        {559}let v_1096: bitstring = catch-fail(symmetricstateunpack(v_1095)) in
        {560}let v_1097: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1096))) in
        {561}let v_1098: aead = catch-fail(decrypt(1-proj-2-tuple(v_1097),2-proj-2-tuple(v_1097),3-proj-3-tuple(v_1096),3-proj-3-tuple(v_1085))) in
        {562}let v_1099: bitstring = catch-fail(aeadunpack(v_1098)) in
        {563}let v_1100: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1096))) in
        {564}let v_1101: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1097))) && success?(1-proj-3-tuple(v_1096))) then (if (not-caught-fail(v_1100) && success?(is-true(success?(1-proj-2-tuple(v_1100))))) then cipherstatepack(1-proj-2-tuple(v_1100),increment_nonce(2-proj-2-tuple(v_1097))) else fail-any) else fail-any)) in
        {565}let v_1102: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1085)) && (success?(3-proj-3-tuple(v_1096)) && success?(1-proj-3-tuple(v_1096)))) then (if (not-caught-fail(v_1097) && success?(is-true(success?(1-proj-2-tuple(v_1097))))) then (if not-caught-fail(v_1098) then (if (not-caught-fail(v_1099) && success?(is-true(success?(1-proj-3-tuple(v_1099))))) then (if not-caught-fail(v_1101) then (v_1101,3-proj-3-tuple(v_1099),1-proj-3-tuple(v_1099)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {566}let v_1103: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1102),2-proj-3-tuple(v_1096),3-proj-3-tuple(v_1096)))) in
        {567}let v_1104: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_1085)) && success?(symmetricstatepack(1-proj-3-tuple(v_1102),2-proj-3-tuple(v_1096),3-proj-3-tuple(v_1096)))) then (if (not-caught-fail(v_1103) && success?(is-true(success?(1-proj-3-tuple(v_1103))))) then symmetricstatepack(1-proj-3-tuple(v_1103),2-proj-3-tuple(v_1103),hash(3-proj-3-tuple(v_1103),3-proj-3-tuple(v_1085))) else fail-any) else fail-any)) in
        {568}let v_1105: bitstring = catch-fail((if success?(3-proj-3-tuple(v_1085)) then (if (not-caught-fail(v_1096) && success?(is-true(success?(1-proj-3-tuple(v_1096))))) then (if (not-caught-fail(v_1102) && success?(is-true(success?(1-proj-3-tuple(v_1102))))) then (if not-caught-fail(v_1104) then (v_1104,2-proj-3-tuple(v_1102),3-proj-3-tuple(v_1102)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {569}let v_1106: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_1105),2-proj-7-tuple(v_1084),3-proj-7-tuple(v_1084),4-proj-7-tuple(v_1084),v_1087,6-proj-7-tuple(v_1084),7-proj-7-tuple(v_1084))) in
        {570}let (hs_1107: handshakestate,plaintext_a_1108: bitstring,valid_1109: bool) = (if (not-caught-fail(v_1084) && success?(is-true(success?(1-proj-7-tuple(v_1084))))) then (if (not-caught-fail(v_1085) && success?(is-true(success?(1-proj-3-tuple(v_1085))))) then (if not-caught-fail(v_1086) then (if not-caught-fail(v_1087) then (if not-caught-fail(v_1089) then (if not-caught-fail(v_1095) then (if (not-caught-fail(v_1105) && success?(is-true(success?(1-proj-3-tuple(v_1105))))) then (if (v_1086 && 3-proj-3-tuple(v_1105)) then (if not-caught-fail(v_1106) then (v_1106,2-proj-3-tuple(v_1105),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {571}event RecvMsg(bob,charlie,stagepack_a(sid),plaintext_a_1108);
        {572}insert statestore(bob,charlie,sid,statepack_b(hs_1107))
    ) | (
        {609}get statestore(=bob,=charlie,=sid,statepack_b(hs_1110: handshakestate)) in
        {574}let v_1111: bitstring = catch-fail(handshakestateunpack(hs_1110)) in
        {575}let v_1112: bitstring = catch-fail((empty,empty,empty)) in
        {576}let v_1113: key = catch-fail(dhexp(key_e(bob,charlie,sid),validkey(g))) in
        {577}let v_1114: keypair = catch-fail((if not-caught-fail(v_1113) then keypairpack(validkey(v_1113),key_e(bob,charlie,sid)) else fail-any)) in
        {578}let v_1115: bitstring = catch-fail(getpublickey(v_1114)) in
        {579}let v_1116: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1111))) in
        {580}let v_1117: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_1111)) then (if (not-caught-fail(v_1116) && success?(is-true(success?(1-proj-3-tuple(v_1116))))) then symmetricstatepack(1-proj-3-tuple(v_1116),2-proj-3-tuple(v_1116),hash(3-proj-3-tuple(v_1116),v_1115)) else fail-any) else fail-any)) in
        {581}let v_1118: bitstring = catch-fail(symmetricstateunpack(v_1117)) in
        {582}let v_1119: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1118),getpublickey(v_1114))) in
        {583}let v_1120: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1118),getpublickey(v_1114))) in
        {584}let v_1121: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1118),getpublickey(v_1114))) in
        {585}let v_1122: bitstring = catch-fail((if (success?(getpublickey(v_1114)) && success?(2-proj-3-tuple(v_1118))) then (if not-caught-fail(v_1119) then (if not-caught-fail(v_1120) then (if not-caught-fail(v_1121) then (v_1119,v_1120,v_1121) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {586}let v_1123: symmetricstate = catch-fail((if success?(getpublickey(v_1114)) then (if (not-caught-fail(v_1118) && success?(is-true(success?(1-proj-3-tuple(v_1118))))) then (if (not-caught-fail(v_1122) && success?(is-true(success?(1-proj-3-tuple(v_1122))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1122)) then cipherstatepack(2-proj-3-tuple(v_1122),minnonce) else fail-any),1-proj-3-tuple(v_1122),3-proj-3-tuple(v_1118)) else fail-any) else fail-any) else fail-any)) in
        {587}let v_1124: bitstring = catch-fail(keypairunpack(v_1114)) in
        {588}let v_1125: bitstring = catch-fail(symmetricstateunpack(v_1123)) in
        {589}let v_1126: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1125),(if success?(5-proj-7-tuple(v_1111)) then (if (not-caught-fail(v_1124) && success?(is-true(success?(1-proj-2-tuple(v_1124))))) then dhexp(2-proj-2-tuple(v_1124),5-proj-7-tuple(v_1111)) else fail-any) else fail-any))) in
        {590}let v_1127: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1125),(if success?(5-proj-7-tuple(v_1111)) then (if (not-caught-fail(v_1124) && success?(is-true(success?(1-proj-2-tuple(v_1124))))) then dhexp(2-proj-2-tuple(v_1124),5-proj-7-tuple(v_1111)) else fail-any) else fail-any))) in
        {591}let v_1128: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1125),(if success?(5-proj-7-tuple(v_1111)) then (if (not-caught-fail(v_1124) && success?(is-true(success?(1-proj-2-tuple(v_1124))))) then dhexp(2-proj-2-tuple(v_1124),5-proj-7-tuple(v_1111)) else fail-any) else fail-any))) in
        {592}let v_1129: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_1111)) then (if (not-caught-fail(v_1124) && success?(is-true(success?(1-proj-2-tuple(v_1124))))) then dhexp(2-proj-2-tuple(v_1124),5-proj-7-tuple(v_1111)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_1125))) then (if not-caught-fail(v_1126) then (if not-caught-fail(v_1127) then (if not-caught-fail(v_1128) then (v_1126,v_1127,v_1128) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {593}let v_1130: symmetricstate = catch-fail((if success?((if success?(5-proj-7-tuple(v_1111)) then (if (not-caught-fail(v_1124) && success?(is-true(success?(1-proj-2-tuple(v_1124))))) then dhexp(2-proj-2-tuple(v_1124),5-proj-7-tuple(v_1111)) else fail-any) else fail-any)) then (if (not-caught-fail(v_1125) && success?(is-true(success?(1-proj-3-tuple(v_1125))))) then (if (not-caught-fail(v_1129) && success?(is-true(success?(1-proj-3-tuple(v_1129))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1129)) then cipherstatepack(2-proj-3-tuple(v_1129),minnonce) else fail-any),1-proj-3-tuple(v_1129),3-proj-3-tuple(v_1125)) else fail-any) else fail-any) else fail-any)) in
        {594}let v_1131: bitstring = catch-fail(symmetricstateunpack(v_1130)) in
        {595}let v_1132: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1131))) in
        {596}let v_1133: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_1132),2-proj-2-tuple(v_1132),3-proj-3-tuple(v_1131),msg_b(bob,charlie,sid))) in
        {597}let v_1134: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1131))) in
        {598}let v_1135: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1132))) && success?(1-proj-3-tuple(v_1131))) then (if (not-caught-fail(v_1134) && success?(is-true(success?(1-proj-2-tuple(v_1134))))) then cipherstatepack(1-proj-2-tuple(v_1134),increment_nonce(2-proj-2-tuple(v_1132))) else fail-any) else fail-any)) in
        {599}let v_1136: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1131)) && success?(1-proj-3-tuple(v_1131))) then (if (not-caught-fail(v_1132) && success?(is-true(success?(1-proj-2-tuple(v_1132))))) then (if not-caught-fail(v_1133) then (if not-caught-fail(v_1135) then (v_1135,v_1133) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {600}let v_1137: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_1136),2-proj-3-tuple(v_1131),3-proj-3-tuple(v_1131)))) in
        {601}let v_1138: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_1136)) && success?(symmetricstatepack(1-proj-2-tuple(v_1136),2-proj-3-tuple(v_1131),3-proj-3-tuple(v_1131)))) then (if (not-caught-fail(v_1137) && success?(is-true(success?(1-proj-3-tuple(v_1137))))) then symmetricstatepack(1-proj-3-tuple(v_1137),2-proj-3-tuple(v_1137),hash(3-proj-3-tuple(v_1137),2-proj-2-tuple(v_1136))) else fail-any) else fail-any)) in
        {602}let v_1139: bitstring = catch-fail((if (not-caught-fail(v_1131) && success?(is-true(success?(1-proj-3-tuple(v_1131))))) then (if (not-caught-fail(v_1136) && success?(is-true(success?(1-proj-2-tuple(v_1136))))) then (if not-caught-fail(v_1138) then (v_1138,2-proj-2-tuple(v_1136)) else fail-any) else fail-any) else fail-any)) in
        {603}let v_1140: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_1139),2-proj-7-tuple(v_1111),v_1114,4-proj-7-tuple(v_1111),5-proj-7-tuple(v_1111),6-proj-7-tuple(v_1111),7-proj-7-tuple(v_1111))) in
        {604}let v_1141: bitstring = catch-fail(concat3(v_1115,2-proj-3-tuple(v_1112),2-proj-2-tuple(v_1139))) in
        {605}let (hs_1142: handshakestate,message_b_1143: bitstring) = (if (not-caught-fail(v_1111) && success?(is-true(success?(1-proj-7-tuple(v_1111))))) then (if (not-caught-fail(v_1112) && success?(is-true(success?(1-proj-3-tuple(v_1112))))) then (if not-caught-fail(v_1114) then (if not-caught-fail(v_1115) then (if not-caught-fail(v_1117) then (if not-caught-fail(v_1123) then (if not-caught-fail(v_1130) then (if (not-caught-fail(v_1139) && success?(is-true(success?(1-proj-2-tuple(v_1139))))) then (if not-caught-fail(v_1140) then (if not-caught-fail(v_1141) then (v_1140,v_1141) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {606}event SendMsg(bob,charlie,stagepack_b(sid),msg_b(bob,charlie,sid));
        {607}insert statestore(bob,charlie,sid,statepack_c(hs_1142));
        {608}out(pub, message_b_1143)
    ) | (
        {663}get statestore(=bob,=charlie,=sid,statepack_c(hs_1144: handshakestate)) in
        {610}in(pub, message_c_1145: bitstring);
        {611}let v_1146: bitstring = catch-fail(handshakestateunpack(hs_1144)) in
        {612}let v_1147: bitstring = catch-fail(deconcat3(message_c_1145)) in
        {613}let v_1148: bool = catch-fail(true) in
        {614}let v_1149: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1146))) in
        {615}let v_1150: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1149))) in
        {616}let v_1151: aead = catch-fail(decrypt(1-proj-2-tuple(v_1150),2-proj-2-tuple(v_1150),3-proj-3-tuple(v_1149),2-proj-3-tuple(v_1147))) in
        {617}let v_1152: bitstring = catch-fail(aeadunpack(v_1151)) in
        {618}let v_1153: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1149))) in
        {619}let v_1154: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1150))) && success?(1-proj-3-tuple(v_1149))) then (if (not-caught-fail(v_1153) && success?(is-true(success?(1-proj-2-tuple(v_1153))))) then cipherstatepack(1-proj-2-tuple(v_1153),increment_nonce(2-proj-2-tuple(v_1150))) else fail-any) else fail-any)) in
        {620}let v_1155: bitstring = catch-fail((if (success?(2-proj-3-tuple(v_1147)) && (success?(3-proj-3-tuple(v_1149)) && success?(1-proj-3-tuple(v_1149)))) then (if (not-caught-fail(v_1150) && success?(is-true(success?(1-proj-2-tuple(v_1150))))) then (if not-caught-fail(v_1151) then (if (not-caught-fail(v_1152) && success?(is-true(success?(1-proj-3-tuple(v_1152))))) then (if not-caught-fail(v_1154) then (v_1154,3-proj-3-tuple(v_1152),1-proj-3-tuple(v_1152)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {621}let v_1156: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1155),2-proj-3-tuple(v_1149),3-proj-3-tuple(v_1149)))) in
        {622}let v_1157: symmetricstate = catch-fail((if (success?(2-proj-3-tuple(v_1147)) && success?(symmetricstatepack(1-proj-3-tuple(v_1155),2-proj-3-tuple(v_1149),3-proj-3-tuple(v_1149)))) then (if (not-caught-fail(v_1156) && success?(is-true(success?(1-proj-3-tuple(v_1156))))) then symmetricstatepack(1-proj-3-tuple(v_1156),2-proj-3-tuple(v_1156),hash(3-proj-3-tuple(v_1156),2-proj-3-tuple(v_1147))) else fail-any) else fail-any)) in
        {623}let v_1158: bitstring = catch-fail((if (success?(2-proj-3-tuple(v_1147)) && success?(1-proj-7-tuple(v_1146))) then (if (not-caught-fail(v_1149) && success?(is-true(success?(1-proj-3-tuple(v_1149))))) then (if (not-caught-fail(v_1155) && success?(is-true(success?(1-proj-3-tuple(v_1155))))) then (if not-caught-fail(v_1157) then (v_1157,2-proj-3-tuple(v_1155),3-proj-3-tuple(v_1155)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {624}let v_1159: key = catch-fail(2-proj-3-tuple(v_1158)) in
        {625}let v_1160: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_1146))) in
        {626}let v_1161: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_1158))) in
        {627}let v_1162: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1161),(if success?(3-proj-7-tuple(v_1146)) then (if (not-caught-fail(v_1160) && success?(is-true(success?(1-proj-2-tuple(v_1160))))) then dhexp(2-proj-2-tuple(v_1160),v_1159) else fail-any) else fail-any))) in
        {628}let v_1163: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1161),(if success?(3-proj-7-tuple(v_1146)) then (if (not-caught-fail(v_1160) && success?(is-true(success?(1-proj-2-tuple(v_1160))))) then dhexp(2-proj-2-tuple(v_1160),v_1159) else fail-any) else fail-any))) in
        {629}let v_1164: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1161),(if success?(3-proj-7-tuple(v_1146)) then (if (not-caught-fail(v_1160) && success?(is-true(success?(1-proj-2-tuple(v_1160))))) then dhexp(2-proj-2-tuple(v_1160),v_1159) else fail-any) else fail-any))) in
        {630}let v_1165: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_1146)) then (if (not-caught-fail(v_1160) && success?(is-true(success?(1-proj-2-tuple(v_1160))))) then dhexp(2-proj-2-tuple(v_1160),v_1159) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_1161))) then (if not-caught-fail(v_1162) then (if not-caught-fail(v_1163) then (if not-caught-fail(v_1164) then (v_1162,v_1163,v_1164) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {631}let v_1166: symmetricstate = catch-fail((if (success?((if success?(3-proj-7-tuple(v_1146)) then (if (not-caught-fail(v_1160) && success?(is-true(success?(1-proj-2-tuple(v_1160))))) then dhexp(2-proj-2-tuple(v_1160),v_1159) else fail-any) else fail-any)) && success?(1-proj-3-tuple(v_1158))) then (if (not-caught-fail(v_1161) && success?(is-true(success?(1-proj-3-tuple(v_1161))))) then (if (not-caught-fail(v_1165) && success?(is-true(success?(1-proj-3-tuple(v_1165))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1165)) then cipherstatepack(2-proj-3-tuple(v_1165),minnonce) else fail-any),1-proj-3-tuple(v_1165),3-proj-3-tuple(v_1161)) else fail-any) else fail-any) else fail-any)) in
        {632}let v_1167: bitstring = catch-fail(symmetricstateunpack(v_1166)) in
        {633}let v_1168: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1167),6-proj-7-tuple(v_1146))) in
        {634}let v_1169: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1167),6-proj-7-tuple(v_1146))) in
        {635}let v_1170: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1167),6-proj-7-tuple(v_1146))) in
        {636}let v_1171: bitstring = catch-fail((if (success?(6-proj-7-tuple(v_1146)) && success?(2-proj-3-tuple(v_1167))) then (if not-caught-fail(v_1168) then (if not-caught-fail(v_1169) then (if not-caught-fail(v_1170) then (v_1168,v_1169,v_1170) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {637}let v_1172: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1167),1-proj-3-tuple(v_1171),3-proj-3-tuple(v_1167)))) in
        {638}let v_1173: bitstring = catch-fail(symmetricstateunpack((if (success?(2-proj-3-tuple(v_1171)) && success?(symmetricstatepack(1-proj-3-tuple(v_1167),1-proj-3-tuple(v_1171),3-proj-3-tuple(v_1167)))) then (if (not-caught-fail(v_1172) && success?(is-true(success?(1-proj-3-tuple(v_1172))))) then symmetricstatepack(1-proj-3-tuple(v_1172),2-proj-3-tuple(v_1172),hash(3-proj-3-tuple(v_1172),2-proj-3-tuple(v_1171))) else fail-any) else fail-any))) in
        {639}let v_1174: symmetricstate = catch-fail((if success?(6-proj-7-tuple(v_1146)) then (if (not-caught-fail(v_1167) && success?(is-true(success?(1-proj-3-tuple(v_1167))))) then (if (not-caught-fail(v_1171) && success?(is-true(success?(1-proj-3-tuple(v_1171))))) then (if (not-caught-fail(v_1173) && success?(is-true(success?(1-proj-3-tuple(v_1173))))) then symmetricstatepack((if success?(3-proj-3-tuple(v_1171)) then cipherstatepack(3-proj-3-tuple(v_1171),minnonce) else fail-any),1-proj-3-tuple(v_1171),3-proj-3-tuple(v_1173)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {640}let v_1175: bitstring = catch-fail(symmetricstateunpack(v_1174)) in
        {641}let v_1176: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1175))) in
        {642}let v_1177: aead = catch-fail(decrypt(1-proj-2-tuple(v_1176),2-proj-2-tuple(v_1176),3-proj-3-tuple(v_1175),3-proj-3-tuple(v_1147))) in
        {643}let v_1178: bitstring = catch-fail(aeadunpack(v_1177)) in
        {644}let v_1179: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1175))) in
        {645}let v_1180: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1176))) && success?(1-proj-3-tuple(v_1175))) then (if (not-caught-fail(v_1179) && success?(is-true(success?(1-proj-2-tuple(v_1179))))) then cipherstatepack(1-proj-2-tuple(v_1179),increment_nonce(2-proj-2-tuple(v_1176))) else fail-any) else fail-any)) in
        {646}let v_1181: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1147)) && (success?(3-proj-3-tuple(v_1175)) && success?(1-proj-3-tuple(v_1175)))) then (if (not-caught-fail(v_1176) && success?(is-true(success?(1-proj-2-tuple(v_1176))))) then (if not-caught-fail(v_1177) then (if (not-caught-fail(v_1178) && success?(is-true(success?(1-proj-3-tuple(v_1178))))) then (if not-caught-fail(v_1180) then (v_1180,3-proj-3-tuple(v_1178),1-proj-3-tuple(v_1178)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {647}let v_1182: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1181),2-proj-3-tuple(v_1175),3-proj-3-tuple(v_1175)))) in
        {648}let v_1183: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_1147)) && success?(symmetricstatepack(1-proj-3-tuple(v_1181),2-proj-3-tuple(v_1175),3-proj-3-tuple(v_1175)))) then (if (not-caught-fail(v_1182) && success?(is-true(success?(1-proj-3-tuple(v_1182))))) then symmetricstatepack(1-proj-3-tuple(v_1182),2-proj-3-tuple(v_1182),hash(3-proj-3-tuple(v_1182),3-proj-3-tuple(v_1147))) else fail-any) else fail-any)) in
        {649}let v_1184: bitstring = catch-fail((if success?(3-proj-3-tuple(v_1147)) then (if (not-caught-fail(v_1175) && success?(is-true(success?(1-proj-3-tuple(v_1175))))) then (if (not-caught-fail(v_1181) && success?(is-true(success?(1-proj-3-tuple(v_1181))))) then (if not-caught-fail(v_1183) then (v_1183,2-proj-3-tuple(v_1181),3-proj-3-tuple(v_1181)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {650}let v_1185: key = catch-fail(dhexp(key_s(charlie),validkey(g))) in
        {651}let v_1186: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_1184),2-proj-7-tuple(v_1146),3-proj-7-tuple(v_1146),v_1159,5-proj-7-tuple(v_1146),6-proj-7-tuple(v_1146),7-proj-7-tuple(v_1146))) in
        {652}let v_1187: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_1184))) in
        {653}let v_1188: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1187),zero)) in
        {654}let v_1189: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1187),zero)) in
        {655}let v_1190: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1187),zero)) in
        {656}let v_1191: bitstring = catch-fail((if success?(2-proj-3-tuple(v_1187)) then (if not-caught-fail(v_1188) then (if not-caught-fail(v_1189) then (if not-caught-fail(v_1190) then (v_1188,v_1189,v_1190) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {657}let v_1192: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_1191)) then cipherstatepack(1-proj-3-tuple(v_1191),minnonce) else fail-any)) in
        {658}let v_1193: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_1191)) then cipherstatepack(2-proj-3-tuple(v_1191),minnonce) else fail-any)) in
        {659}let v_1194: bitstring = catch-fail((if success?(1-proj-3-tuple(v_1184)) then (if (not-caught-fail(v_1187) && success?(is-true(success?(1-proj-3-tuple(v_1187))))) then (if (not-caught-fail(v_1191) && success?(is-true(success?(1-proj-3-tuple(v_1191))))) then (if not-caught-fail(v_1192) then (if not-caught-fail(v_1193) then (1-proj-3-tuple(v_1184),v_1192,v_1193) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {660}let (hs_1195: handshakestate,plaintext_c_1196: bitstring,valid_1197: bool,cs1_1198: cipherstate,cs2_1199: cipherstate) = (if (not-caught-fail(v_1146) && success?(is-true(success?(1-proj-7-tuple(v_1146))))) then (if (not-caught-fail(v_1147) && success?(is-true(success?(1-proj-3-tuple(v_1147))))) then (if not-caught-fail(v_1148) then (if (not-caught-fail(v_1158) && success?(is-true(success?(1-proj-3-tuple(v_1158))))) then (if not-caught-fail(v_1159) then (if not-caught-fail(v_1166) then (if not-caught-fail(v_1174) then (if (not-caught-fail(v_1184) && success?(is-true(success?(1-proj-3-tuple(v_1184))))) then (if ((3-proj-3-tuple(v_1158) && 3-proj-3-tuple(v_1184)) && (v_1159 = getpublickey((if not-caught-fail(v_1185) then keypairpack(validkey(v_1185),key_s(charlie)) else fail-any)))) then (if not-caught-fail(v_1186) then (if (not-caught-fail(v_1194) && success?(is-true(success?(1-proj-3-tuple(v_1194))))) then (v_1186,2-proj-3-tuple(v_1184),true,2-proj-3-tuple(v_1194),3-proj-3-tuple(v_1194)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {661}event RecvMsg(bob,charlie,stagepack_c(sid),plaintext_c_1196);
        {662}insert statestore(bob,charlie,sid,statepack_d(hs_1195,cs1_1198,cs2_1199))
    ) | (
        {664}!
        {683}get statestore(=bob,=charlie,=sid,statepack_d(hs_1200: handshakestate,cs1_1201: cipherstate,cs2_1202: cipherstate)) in
        {665}let hs_1203: handshakestate = handshakestatesetcs(hs_1200,cs2_1202) in
        {666}let v_1204: bitstring = catch-fail(handshakestateunpack(hs_1203)) in
        {667}let v_1205: bitstring = catch-fail((empty,empty,empty)) in
        {668}let v_1206: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1204))) in
        {669}let v_1207: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1206))) in
        {670}let v_1208: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_1207),2-proj-2-tuple(v_1207),3-proj-3-tuple(v_1206),msg_d(bob,charlie,sid))) in
        {671}let v_1209: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1206))) in
        {672}let v_1210: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1207))) && success?(1-proj-3-tuple(v_1206))) then (if (not-caught-fail(v_1209) && success?(is-true(success?(1-proj-2-tuple(v_1209))))) then cipherstatepack(1-proj-2-tuple(v_1209),increment_nonce(2-proj-2-tuple(v_1207))) else fail-any) else fail-any)) in
        {673}let v_1211: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1206)) && success?(1-proj-3-tuple(v_1206))) then (if (not-caught-fail(v_1207) && success?(is-true(success?(1-proj-2-tuple(v_1207))))) then (if not-caught-fail(v_1208) then (if not-caught-fail(v_1210) then (v_1210,v_1208) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {674}let v_1212: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_1211),2-proj-3-tuple(v_1206),3-proj-3-tuple(v_1206)))) in
        {675}let v_1213: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_1211)) && success?(symmetricstatepack(1-proj-2-tuple(v_1211),2-proj-3-tuple(v_1206),3-proj-3-tuple(v_1206)))) then (if (not-caught-fail(v_1212) && success?(is-true(success?(1-proj-3-tuple(v_1212))))) then symmetricstatepack(1-proj-3-tuple(v_1212),2-proj-3-tuple(v_1212),hash(3-proj-3-tuple(v_1212),2-proj-2-tuple(v_1211))) else fail-any) else fail-any)) in
        {676}let v_1214: bitstring = catch-fail((if success?(1-proj-7-tuple(v_1204)) then (if (not-caught-fail(v_1206) && success?(is-true(success?(1-proj-3-tuple(v_1206))))) then (if (not-caught-fail(v_1211) && success?(is-true(success?(1-proj-2-tuple(v_1211))))) then (if not-caught-fail(v_1213) then (v_1213,2-proj-2-tuple(v_1211)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {677}let v_1215: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_1214),2-proj-7-tuple(v_1204),3-proj-7-tuple(v_1204),4-proj-7-tuple(v_1204),5-proj-7-tuple(v_1204),6-proj-7-tuple(v_1204),7-proj-7-tuple(v_1204))) in
        {678}let v_1216: bitstring = catch-fail(concat3(1-proj-3-tuple(v_1205),2-proj-3-tuple(v_1205),2-proj-2-tuple(v_1214))) in
        {679}let (hs_1217: handshakestate,message_d_1218: bitstring) = (if (not-caught-fail(v_1204) && success?(is-true(success?(1-proj-7-tuple(v_1204))))) then (if (not-caught-fail(v_1205) && success?(is-true(success?(1-proj-3-tuple(v_1205))))) then (if (not-caught-fail(v_1214) && success?(is-true(success?(1-proj-2-tuple(v_1214))))) then (if not-caught-fail(v_1215) then (if not-caught-fail(v_1216) then (v_1215,v_1216) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {680}event SendMsg(bob,charlie,stagepack_d(sid),msg_d(bob,charlie,sid));
        {681}insert statestore(bob,charlie,sid,statepack_e(hs_1217,cs1_1201,handshakestategetcs(hs_1217)));
        {682}out(pub, message_d_1218)
    ) | (
        {684}!
        {704}get statestore(=bob,=charlie,=sid,statepack_e(hs_1219: handshakestate,cs1_1220: cipherstate,cs2_1221: cipherstate)) in
        {685}let hs_1222: handshakestate = handshakestatesetcs(hs_1219,cs1_1220) in
        {686}in(pub, message_e_1223: bitstring);
        {687}let v_1224: bitstring = catch-fail(handshakestateunpack(hs_1222)) in
        {688}let v_1225: bitstring = catch-fail(deconcat3(message_e_1223)) in
        {689}let v_1226: bool = catch-fail(true) in
        {690}let v_1227: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1224))) in
        {691}let v_1228: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1227))) in
        {692}let v_1229: aead = catch-fail(decrypt(1-proj-2-tuple(v_1228),2-proj-2-tuple(v_1228),3-proj-3-tuple(v_1227),3-proj-3-tuple(v_1225))) in
        {693}let v_1230: bitstring = catch-fail(aeadunpack(v_1229)) in
        {694}let v_1231: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1227))) in
        {695}let v_1232: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1228))) && success?(1-proj-3-tuple(v_1227))) then (if (not-caught-fail(v_1231) && success?(is-true(success?(1-proj-2-tuple(v_1231))))) then cipherstatepack(1-proj-2-tuple(v_1231),increment_nonce(2-proj-2-tuple(v_1228))) else fail-any) else fail-any)) in
        {696}let v_1233: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1225)) && (success?(3-proj-3-tuple(v_1227)) && success?(1-proj-3-tuple(v_1227)))) then (if (not-caught-fail(v_1228) && success?(is-true(success?(1-proj-2-tuple(v_1228))))) then (if not-caught-fail(v_1229) then (if (not-caught-fail(v_1230) && success?(is-true(success?(1-proj-3-tuple(v_1230))))) then (if not-caught-fail(v_1232) then (v_1232,3-proj-3-tuple(v_1230),1-proj-3-tuple(v_1230)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {697}let v_1234: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1233),2-proj-3-tuple(v_1227),3-proj-3-tuple(v_1227)))) in
        {698}let v_1235: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_1225)) && success?(symmetricstatepack(1-proj-3-tuple(v_1233),2-proj-3-tuple(v_1227),3-proj-3-tuple(v_1227)))) then (if (not-caught-fail(v_1234) && success?(is-true(success?(1-proj-3-tuple(v_1234))))) then symmetricstatepack(1-proj-3-tuple(v_1234),2-proj-3-tuple(v_1234),hash(3-proj-3-tuple(v_1234),3-proj-3-tuple(v_1225))) else fail-any) else fail-any)) in
        {699}let v_1236: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1225)) && success?(1-proj-7-tuple(v_1224))) then (if (not-caught-fail(v_1227) && success?(is-true(success?(1-proj-3-tuple(v_1227))))) then (if (not-caught-fail(v_1233) && success?(is-true(success?(1-proj-3-tuple(v_1233))))) then (if not-caught-fail(v_1235) then (v_1235,2-proj-3-tuple(v_1233),3-proj-3-tuple(v_1233)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {700}let v_1237: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_1236),2-proj-7-tuple(v_1224),3-proj-7-tuple(v_1224),4-proj-7-tuple(v_1224),5-proj-7-tuple(v_1224),6-proj-7-tuple(v_1224),7-proj-7-tuple(v_1224))) in
        {701}let (hs_1238: handshakestate,plaintext_e_1239: bitstring,valid_1240: bool) = (if (not-caught-fail(v_1224) && success?(is-true(success?(1-proj-7-tuple(v_1224))))) then (if (not-caught-fail(v_1225) && success?(is-true(success?(1-proj-3-tuple(v_1225))))) then (if not-caught-fail(v_1226) then (if (not-caught-fail(v_1236) && success?(is-true(success?(1-proj-3-tuple(v_1236))))) then (if (v_1226 && 3-proj-3-tuple(v_1236)) then (if not-caught-fail(v_1237) then (v_1237,2-proj-3-tuple(v_1236),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {702}event RecvMsg(bob,charlie,stagepack_e(sid),plaintext_e_1239);
        {703}event RecvEnd(valid_1240)
    ) | (
        {705}event LeakPsk(phase0,charlie,bob);
        {706}out(pub, key_psk(charlie,bob))
    ) | (
        {707}phase 1;
        {708}event LeakPsk(phase1,charlie,bob);
        {709}out(pub, key_psk(charlie,bob))
    ) | (
        0
    )
)

-- Query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1358,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || event(LeakPsk(phase0,alice,bob)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1358,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || event(LeakPsk(phase0,alice,bob)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)); not attacker_p1(msg_a(alice,bob,sid_a)); attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakPsk(phase0,alice,bob)) || event(LeakPsk(phase1,alice,bob)); attacker_p1(msg_a(alice,bob,sid_a)) ==> (event(LeakPsk(phase0,alice,bob)) && event(LeakS(p,alice))); attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakPsk(phase0,alice,bob)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1358,stagepack_b(sid_b),m)) || event(LeakPsk(phase0,alice,bob)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1358,stagepack_b(sid_b),m)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakPsk(phase0,alice,bob)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)); not attacker_p1(msg_b(bob,alice,sid_b)); attacker_p1(msg_b(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase1,alice,bob))) || (event(LeakS(phase1,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase1,alice)) && event(LeakPsk(phase1,alice,bob))); attacker_p1(msg_b(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase1,alice)) && event(LeakPsk(phase0,alice,bob))); attacker_p1(msg_b(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1358,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || event(LeakPsk(phase0,alice,bob)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1358,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || event(LeakPsk(phase0,alice,bob)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)); not attacker_p1(msg_c(alice,bob,sid_a)); attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakPsk(phase0,alice,bob)) || event(LeakPsk(phase1,alice,bob)); attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakPsk(phase0,alice,bob)) && event(LeakS(p,alice))); attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakPsk(phase0,alice,bob)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1358,stagepack_d(sid_b),m)) || event(LeakPsk(phase0,alice,bob)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1358,stagepack_d(sid_b),m)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakPsk(phase0,alice,bob)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)); not attacker_p1(msg_d(bob,alice,sid_b)); attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase1,alice,bob))) || (event(LeakS(phase1,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase1,alice)) && event(LeakPsk(phase1,alice,bob))); attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase1,alice)) && event(LeakPsk(phase0,alice,bob))); attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)); event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1358,stagepack_e(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || event(LeakPsk(phase0,alice,bob)); event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1358,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || event(LeakPsk(phase0,alice,bob)); event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)); not attacker_p1(msg_e(alice,bob,sid_a)); attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakPsk(phase0,alice,bob)) || event(LeakPsk(phase1,alice,bob)); attacker_p1(msg_e(alice,bob,sid_a)) ==> (event(LeakPsk(phase0,alice,bob)) && event(LeakS(p,alice))); attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakPsk(phase0,alice,bob)); not event(RecvEnd(true))
Completing...
200 rules inserted. The rule base contains 200 rules. 122 rules in the queue.
400 rules inserted. The rule base contains 384 rules. 77 rules in the queue.
600 rules inserted. The rule base contains 570 rules. 183 rules in the queue.
800 rules inserted. The rule base contains 731 rules. 130 rules in the queue.
1000 rules inserted. The rule base contains 888 rules. 170 rules in the queue.
1200 rules inserted. The rule base contains 1059 rules. 230 rules in the queue.
1400 rules inserted. The rule base contains 1204 rules. 259 rules in the queue.
1600 rules inserted. The rule base contains 1312 rules. 272 rules in the queue.
1800 rules inserted. The rule base contains 1408 rules. 240 rules in the queue.
2000 rules inserted. The rule base contains 1584 rules. 253 rules in the queue.
2200 rules inserted. The rule base contains 1724 rules. 280 rules in the queue.
2400 rules inserted. The rule base contains 1860 rules. 291 rules in the queue.
2600 rules inserted. The rule base contains 1954 rules. 308 rules in the queue.
2800 rules inserted. The rule base contains 2040 rules. 325 rules in the queue.
3000 rules inserted. The rule base contains 2156 rules. 331 rules in the queue.
3200 rules inserted. The rule base contains 2251 rules. 294 rules in the queue.
3400 rules inserted. The rule base contains 2373 rules. 273 rules in the queue.
3600 rules inserted. The rule base contains 2496 rules. 275 rules in the queue.
3800 rules inserted. The rule base contains 2618 rules. 303 rules in the queue.
4000 rules inserted. The rule base contains 2756 rules. 350 rules in the queue.
4200 rules inserted. The rule base contains 2878 rules. 370 rules in the queue.
4400 rules inserted. The rule base contains 3003 rules. 393 rules in the queue.
4600 rules inserted. The rule base contains 3132 rules. 384 rules in the queue.
4800 rules inserted. The rule base contains 3241 rules. 368 rules in the queue.
5000 rules inserted. The rule base contains 3354 rules. 352 rules in the queue.
5200 rules inserted. The rule base contains 3475 rules. 325 rules in the queue.
5400 rules inserted. The rule base contains 3613 rules. 294 rules in the queue.
5600 rules inserted. The rule base contains 3768 rules. 292 rules in the queue.
5800 rules inserted. The rule base contains 3924 rules. 318 rules in the queue.
6000 rules inserted. The rule base contains 4055 rules. 346 rules in the queue.
6200 rules inserted. The rule base contains 4168 rules. 383 rules in the queue.
6400 rules inserted. The rule base contains 4280 rules. 395 rules in the queue.
6600 rules inserted. The rule base contains 4415 rules. 407 rules in the queue.
6800 rules inserted. The rule base contains 4520 rules. 372 rules in the queue.
7000 rules inserted. The rule base contains 4604 rules. 300 rules in the queue.
7200 rules inserted. The rule base contains 4732 rules. 276 rules in the queue.
7400 rules inserted. The rule base contains 4817 rules. 238 rules in the queue.
7600 rules inserted. The rule base contains 4880 rules. 216 rules in the queue.
7800 rules inserted. The rule base contains 4956 rules. 167 rules in the queue.
8000 rules inserted. The rule base contains 5075 rules. 146 rules in the queue.
8200 rules inserted. The rule base contains 5186 rules. 110 rules in the queue.
8400 rules inserted. The rule base contains 5307 rules. 98 rules in the queue.
8600 rules inserted. The rule base contains 5391 rules. 77 rules in the queue.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m))
goal reachable: begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_56981464]),msg_a(alice,charlie,sid[!1 = @sid_56981464]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_56981465]),msg_a(alice,charlie,sid[!1 = @sid_56981464])))
Abbreviations:
sid_56981498 = sid[!1 = @sid_56981488]
sid_56981499 = sid[!1 = @sid_56981472]

1. The entry statestore(bob,alice,sid_56981498,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) may be inserted in a table at insert {370}.
table(statestore(bob,alice,sid_56981498,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false)))).

2. The entry statestore(alice,charlie,sid_56981499,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true))) may be inserted in a table at insert {193}.
table(statestore(alice,charlie,sid_56981499,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true)))).

3. The entry statestore(alice,charlie,sid_56981499,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true))) that may be in a table by 2 may be read at get {222}.
The event SendMsg(alice,charlie,stagepack_a(sid_56981499),msg_a(alice,charlie,sid_56981499)) may be executed at {219}.
So the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_56981499),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_56981499),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_56981499),g))),msg_a(alice,charlie,sid_56981499))) may be sent on channel pub at output {221}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,charlie,sid_56981499),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_56981499),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_56981499),g))),msg_a(alice,charlie,sid_56981499)))).

4. The entry statestore(bob,alice,sid_56981498,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) that may be in a table by 1 may be read at get {398}.
The message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_56981499),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_56981499),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_56981499),g))),msg_a(alice,charlie,sid_56981499))) that may be sent on channel pub by 3 may be received at input {371}.
We have validkey(dhexp_real(key_e(alice,charlie,sid_56981499),g)) <> caught-fail.
So event RecvMsg(bob,alice,stagepack_a(sid_56981498),msg_a(alice,charlie,sid_56981499)) may be executed at {396}.
end(RecvMsg(bob,alice,stagepack_a(sid_56981498),msg_a(alice,charlie,sid_56981499))).


RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) cannot be proved.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1358,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || event(LeakPsk(phase0,alice,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56981502]),msg_a(alice,bob,sid[!1 = @sid_56981502]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_56981503]),msg_a(alice,bob,sid[!1 = @sid_56981502])))
goal reachable: begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_56981506]),msg_a(alice,charlie,sid[!1 = @sid_56981506]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_56981507]),msg_a(alice,charlie,sid[!1 = @sid_56981506])))
RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1358,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || event(LeakPsk(phase0,alice,bob)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1358,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56981516]),msg_a(alice,bob,sid[!1 = @sid_56981516]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_56981517]),msg_a(alice,bob,sid[!1 = @sid_56981516])))
goal reachable: begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_56981520]),msg_a(alice,charlie,sid[!1 = @sid_56981520]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_56981521]),msg_a(alice,charlie,sid[!1 = @sid_56981520])))
RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1358,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || event(LeakPsk(phase0,alice,bob))
goal reachable: begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_56981534]),msg_a(alice,charlie,sid[!1 = @sid_56981534]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_56981535]),msg_a(alice,charlie,sid[!1 = @sid_56981534])))
Abbreviations:
sid_56981568 = sid[!1 = @sid_56981558]
sid_56981569 = sid[!1 = @sid_56981542]

1. The entry statestore(bob,alice,sid_56981568,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) may be inserted in a table at insert {370}.
table(statestore(bob,alice,sid_56981568,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false)))).

2. The entry statestore(alice,charlie,sid_56981569,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true))) may be inserted in a table at insert {193}.
table(statestore(alice,charlie,sid_56981569,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true)))).

3. The entry statestore(alice,charlie,sid_56981569,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true))) that may be in a table by 2 may be read at get {222}.
The event SendMsg(alice,charlie,stagepack_a(sid_56981569),msg_a(alice,charlie,sid_56981569)) may be executed at {219}.
So the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_56981569),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_56981569),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_56981569),g))),msg_a(alice,charlie,sid_56981569))) may be sent on channel pub at output {221}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,charlie,sid_56981569),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_56981569),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_56981569),g))),msg_a(alice,charlie,sid_56981569)))).

4. The entry statestore(bob,alice,sid_56981568,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) that may be in a table by 1 may be read at get {398}.
The message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_56981569),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_56981569),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_56981569),g))),msg_a(alice,charlie,sid_56981569))) that may be sent on channel pub by 3 may be received at input {371}.
We have validkey(dhexp_real(key_e(alice,charlie,sid_56981569),g)) <> caught-fail.
So event RecvMsg(bob,alice,stagepack_a(sid_56981568),msg_a(alice,charlie,sid_56981569)) may be executed at {396}.
end(RecvMsg(bob,alice,stagepack_a(sid_56981568),msg_a(alice,charlie,sid_56981569))).


RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || event(LeakPsk(phase0,alice,bob)) cannot be proved.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_56981576]),msg_a(alice,charlie,sid[!1 = @sid_56981576]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_56981577]),msg_a(alice,charlie,sid[!1 = @sid_56981576])))
Abbreviations:
sid_56981610 = sid[!1 = @sid_56981600]
sid_56981611 = sid[!1 = @sid_56981584]

1. The entry statestore(bob,alice,sid_56981610,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) may be inserted in a table at insert {370}.
table(statestore(bob,alice,sid_56981610,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false)))).

2. The entry statestore(alice,charlie,sid_56981611,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true))) may be inserted in a table at insert {193}.
table(statestore(alice,charlie,sid_56981611,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true)))).

3. The entry statestore(alice,charlie,sid_56981611,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,charlie),true))) that may be in a table by 2 may be read at get {222}.
The event SendMsg(alice,charlie,stagepack_a(sid_56981611),msg_a(alice,charlie,sid_56981611)) may be executed at {219}.
So the message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_56981611),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_56981611),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_56981611),g))),msg_a(alice,charlie,sid_56981611))) may be sent on channel pub at output {221}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,charlie,sid_56981611),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_56981611),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_56981611),g))),msg_a(alice,charlie,sid_56981611)))).

4. The entry statestore(bob,alice,sid_56981610,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) that may be in a table by 1 may be read at get {398}.
The message concat3(validkey(dhexp_real(key_e(alice,charlie,sid_56981611),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,charlie,sid_56981611),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,charlie,sid_56981611),g))),msg_a(alice,charlie,sid_56981611))) that may be sent on channel pub by 3 may be received at input {371}.
We have validkey(dhexp_real(key_e(alice,charlie,sid_56981611),g)) <> caught-fail.
So event RecvMsg(bob,alice,stagepack_a(sid_56981610),msg_a(alice,charlie,sid_56981611)) may be executed at {396}.
end(RecvMsg(bob,alice,stagepack_a(sid_56981610),msg_a(alice,charlie,sid_56981611))).


RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) cannot be proved.
Starting query not attacker_p1(msg_a(alice,bob,sid_a))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56981614]),msg_a(alice,bob,sid[!1 = @sid_56981614]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_56981614]))
Abbreviations:
sid_56981666 = sid[!1 = @sid_56981642]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_56981666,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,sid_56981666,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true)))).

3. The entry statestore(alice,bob,sid_56981666,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {44}.
The event SendMsg(alice,bob,stagepack_a(sid_56981666),msg_a(alice,bob,sid_56981666)) may be executed at {41}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981666),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981666),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981666),g))),msg_a(alice,bob,sid_56981666))) may be sent on channel pub at output {43}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981666),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981666),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981666),g))),msg_a(alice,bob,sid_56981666)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981666),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981666),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981666),g))),msg_a(alice,bob,sid_56981666))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981666),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981666),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981666),g))),msg_a(alice,bob,sid_56981666))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981666),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981666),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981666),g))),msg_a(alice,bob,sid_56981666)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981666),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981666),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981666),g))),msg_a(alice,bob,sid_56981666))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981666),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981666),g))),msg_a(alice,bob,sid_56981666)).
attacker(encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981666),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981666),g))),msg_a(alice,bob,sid_56981666))).

6. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981666),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981666),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981666),g))),msg_a(alice,bob,sid_56981666))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_56981666),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_56981666),g))).

7. Using the function empty the attacker may obtain empty.
attacker(empty).

8. Using the function somename the attacker may obtain somename.
attacker(somename).

9. By 8, the attacker may know somename.
By 7, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

10. By 9, the attacker may know hash(somename,empty).
By 7, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

11. By 10, the attacker may know hash(hash(somename,empty),empty).
By 6, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_56981666),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981666),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981666),g)))).

12. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

13. By 9, the attacker may know hash(somename,empty).
By 6, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_56981666),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981666),g))).
attacker(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981666),g)))).

14. By 13, the attacker may know hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981666),g))).
By 12, the attacker may know minnonce.
By 11, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981666),g))).
By 5, the attacker may know encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981666),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981666),g))),msg_a(alice,bob,sid_56981666)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981666),g))),msg_a(alice,bob,sid_56981666)).
attacker(aeadpack(true,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981666),g))),msg_a(alice,bob,sid_56981666))).

15. By 14, the attacker may know aeadpack(true,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981666),g))),msg_a(alice,bob,sid_56981666)).
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_56981666).
attacker(msg_a(alice,bob,sid_56981666)).

16. By 15, the attacker may know msg_a(alice,bob,sid_56981666).
So the attacker may know msg_a(alice,bob,sid_56981666) in phase 1.
attacker_p1(msg_a(alice,bob,sid_56981666)).


RESULT not attacker_p1(msg_a(alice,bob,sid_a)) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakPsk(phase0,alice,bob)) || event(LeakPsk(phase1,alice,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56981669]),msg_a(alice,bob,sid[!1 = @sid_56981669]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_56981669]))
Abbreviations:
sid_56981721 = sid[!1 = @sid_56981697]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_56981721,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,sid_56981721,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true)))).

3. The entry statestore(alice,bob,sid_56981721,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {44}.
The event SendMsg(alice,bob,stagepack_a(sid_56981721),msg_a(alice,bob,sid_56981721)) may be executed at {41}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981721),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981721),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981721),g))),msg_a(alice,bob,sid_56981721))) may be sent on channel pub at output {43}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981721),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981721),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981721),g))),msg_a(alice,bob,sid_56981721)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981721),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981721),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981721),g))),msg_a(alice,bob,sid_56981721))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981721),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981721),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981721),g))),msg_a(alice,bob,sid_56981721))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981721),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981721),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981721),g))),msg_a(alice,bob,sid_56981721)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981721),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981721),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981721),g))),msg_a(alice,bob,sid_56981721))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981721),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981721),g))),msg_a(alice,bob,sid_56981721)).
attacker(encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981721),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981721),g))),msg_a(alice,bob,sid_56981721))).

6. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981721),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981721),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981721),g))),msg_a(alice,bob,sid_56981721))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_56981721),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_56981721),g))).

7. Using the function empty the attacker may obtain empty.
attacker(empty).

8. Using the function somename the attacker may obtain somename.
attacker(somename).

9. By 8, the attacker may know somename.
By 7, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

10. By 9, the attacker may know hash(somename,empty).
By 7, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

11. By 10, the attacker may know hash(hash(somename,empty),empty).
By 6, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_56981721),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981721),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981721),g)))).

12. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

13. By 9, the attacker may know hash(somename,empty).
By 6, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_56981721),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981721),g))).
attacker(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981721),g)))).

14. By 13, the attacker may know hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981721),g))).
By 12, the attacker may know minnonce.
By 11, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981721),g))).
By 5, the attacker may know encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981721),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981721),g))),msg_a(alice,bob,sid_56981721)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981721),g))),msg_a(alice,bob,sid_56981721)).
attacker(aeadpack(true,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981721),g))),msg_a(alice,bob,sid_56981721))).

15. By 14, the attacker may know aeadpack(true,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981721),g))),msg_a(alice,bob,sid_56981721)).
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_56981721).
attacker(msg_a(alice,bob,sid_56981721)).

16. By 15, the attacker may know msg_a(alice,bob,sid_56981721).
So the attacker may know msg_a(alice,bob,sid_56981721) in phase 1.
attacker_p1(msg_a(alice,bob,sid_56981721)).


RESULT attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakPsk(phase0,alice,bob)) || event(LeakPsk(phase1,alice,bob)) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob,sid_a)) ==> (event(LeakPsk(phase0,alice,bob)) && event(LeakS(p,alice)))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56981724]),msg_a(alice,bob,sid[!1 = @sid_56981724]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_56981724]))
Abbreviations:
sid_56981777 = sid[!1 = @sid_56981753]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_56981777,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,sid_56981777,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true)))).

3. The entry statestore(alice,bob,sid_56981777,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {44}.
The event SendMsg(alice,bob,stagepack_a(sid_56981777),msg_a(alice,bob,sid_56981777)) may be executed at {41}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981777),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981777),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981777),g))),msg_a(alice,bob,sid_56981777))) may be sent on channel pub at output {43}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981777),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981777),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981777),g))),msg_a(alice,bob,sid_56981777)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981777),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981777),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981777),g))),msg_a(alice,bob,sid_56981777))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981777),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981777),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981777),g))),msg_a(alice,bob,sid_56981777))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981777),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981777),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981777),g))),msg_a(alice,bob,sid_56981777)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981777),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981777),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981777),g))),msg_a(alice,bob,sid_56981777))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981777),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981777),g))),msg_a(alice,bob,sid_56981777)).
attacker(encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981777),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981777),g))),msg_a(alice,bob,sid_56981777))).

6. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981777),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981777),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981777),g))),msg_a(alice,bob,sid_56981777))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_56981777),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_56981777),g))).

7. Using the function empty the attacker may obtain empty.
attacker(empty).

8. Using the function somename the attacker may obtain somename.
attacker(somename).

9. By 8, the attacker may know somename.
By 7, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

10. By 9, the attacker may know hash(somename,empty).
By 7, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

11. By 10, the attacker may know hash(hash(somename,empty),empty).
By 6, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_56981777),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981777),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981777),g)))).

12. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

13. By 9, the attacker may know hash(somename,empty).
By 6, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_56981777),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981777),g))).
attacker(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981777),g)))).

14. By 13, the attacker may know hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981777),g))).
By 12, the attacker may know minnonce.
By 11, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981777),g))).
By 5, the attacker may know encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981777),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981777),g))),msg_a(alice,bob,sid_56981777)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981777),g))),msg_a(alice,bob,sid_56981777)).
attacker(aeadpack(true,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981777),g))),msg_a(alice,bob,sid_56981777))).

15. By 14, the attacker may know aeadpack(true,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981777),g))),msg_a(alice,bob,sid_56981777)).
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_56981777).
attacker(msg_a(alice,bob,sid_56981777)).

16. By 15, the attacker may know msg_a(alice,bob,sid_56981777).
So the attacker may know msg_a(alice,bob,sid_56981777) in phase 1.
attacker_p1(msg_a(alice,bob,sid_56981777)).


RESULT attacker_p1(msg_a(alice,bob,sid_a)) ==> (event(LeakPsk(phase0,alice,bob)) && event(LeakS(p,alice))) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakPsk(phase0,alice,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56981780]),msg_a(alice,bob,sid[!1 = @sid_56981780]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_56981780]))
Abbreviations:
sid_56981832 = sid[!1 = @sid_56981808]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_56981832,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,sid_56981832,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true)))).

3. The entry statestore(alice,bob,sid_56981832,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {44}.
The event SendMsg(alice,bob,stagepack_a(sid_56981832),msg_a(alice,bob,sid_56981832)) may be executed at {41}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981832),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981832),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981832),g))),msg_a(alice,bob,sid_56981832))) may be sent on channel pub at output {43}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981832),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981832),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981832),g))),msg_a(alice,bob,sid_56981832)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981832),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981832),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981832),g))),msg_a(alice,bob,sid_56981832))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981832),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981832),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981832),g))),msg_a(alice,bob,sid_56981832))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981832),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981832),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981832),g))),msg_a(alice,bob,sid_56981832)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981832),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981832),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981832),g))),msg_a(alice,bob,sid_56981832))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981832),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981832),g))),msg_a(alice,bob,sid_56981832)).
attacker(encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981832),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981832),g))),msg_a(alice,bob,sid_56981832))).

6. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981832),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981832),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981832),g))),msg_a(alice,bob,sid_56981832))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_56981832),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_56981832),g))).

7. Using the function empty the attacker may obtain empty.
attacker(empty).

8. Using the function somename the attacker may obtain somename.
attacker(somename).

9. By 8, the attacker may know somename.
By 7, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

10. By 9, the attacker may know hash(somename,empty).
By 7, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

11. By 10, the attacker may know hash(hash(somename,empty),empty).
By 6, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_56981832),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981832),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981832),g)))).

12. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

13. By 9, the attacker may know hash(somename,empty).
By 6, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_56981832),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981832),g))).
attacker(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981832),g)))).

14. By 13, the attacker may know hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981832),g))).
By 12, the attacker may know minnonce.
By 11, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981832),g))).
By 5, the attacker may know encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981832),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981832),g))),msg_a(alice,bob,sid_56981832)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981832),g))),msg_a(alice,bob,sid_56981832)).
attacker(aeadpack(true,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981832),g))),msg_a(alice,bob,sid_56981832))).

15. By 14, the attacker may know aeadpack(true,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981832),g))),msg_a(alice,bob,sid_56981832)).
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_56981832).
attacker(msg_a(alice,bob,sid_56981832)).

16. By 15, the attacker may know msg_a(alice,bob,sid_56981832).
So the attacker may know msg_a(alice,bob,sid_56981832) in phase 1.
attacker_p1(msg_a(alice,bob,sid_56981832)).


RESULT attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakPsk(phase0,alice,bob)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m))
goal reachable: begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_56981835]),msg_b(bob,charlie,sid[!1 = @sid_56981835]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56981836]),msg_a(alice,bob,sid[!1 = @sid_56981836]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_56981836]),msg_b(bob,charlie,sid[!1 = @sid_56981835])))
Abbreviations:
sid_56981908 = sid[!1 = @sid_56981858]
sid_56981909 = sid[!1 = @sid_56981882]

1. The entry statestore(alice,bob,sid_56981908,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,sid_56981908,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true)))).

2. The entry statestore(alice,bob,sid_56981908,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) that may be in a table by 1 may be read at get {44}.
The event SendMsg(alice,bob,stagepack_a(sid_56981908),msg_a(alice,bob,sid_56981908)) may be executed at {41}.
So the entry statestore(alice,bob,sid_56981908,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),msg_a(alice,bob,sid_56981908)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_56981908),g)),key_e(alice,bob,sid_56981908)),empty,empty,key_psk(alice,bob),true))) may be inserted in a table at insert {42}.
table(statestore(alice,bob,sid_56981908,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),msg_a(alice,bob,sid_56981908)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_56981908),g)),key_e(alice,bob,sid_56981908)),empty,empty,key_psk(alice,bob),true)))).

3. The entry statestore(bob,charlie,sid_56981909,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(charlie,bob),false))) may be inserted in a table at insert {545}.
table(statestore(bob,charlie,sid_56981909,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(charlie,bob),false)))).

4. The entry statestore(alice,bob,sid_56981908,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) that may be in a table by 1 may be read at get {44}.
The event SendMsg(alice,bob,stagepack_a(sid_56981908),msg_a(alice,bob,sid_56981908)) may be executed at {41}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981908),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),msg_a(alice,bob,sid_56981908))) may be sent on channel pub at output {43}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981908),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),msg_a(alice,bob,sid_56981908)))).

5. The entry statestore(bob,charlie,sid_56981909,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(charlie,bob),false))) that may be in a table by 3 may be read at get {573}.
The message concat3(validkey(dhexp_real(key_e(alice,bob,sid_56981908),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),msg_a(alice,bob,sid_56981908))) that may be sent on channel pub by 4 may be received at input {546}.
We have validkey(dhexp_real(key_e(alice,bob,sid_56981908),g)) <> caught-fail.
So the entry statestore(bob,charlie,sid_56981909,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),msg_a(alice,bob,sid_56981908)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_56981908),g)),key_psk(charlie,bob),false))) may be inserted in a table at insert {572}.
table(statestore(bob,charlie,sid_56981909,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),msg_a(alice,bob,sid_56981908)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_56981908),g)),key_psk(charlie,bob),false)))).

6. The entry statestore(bob,charlie,sid_56981909,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),msg_a(alice,bob,sid_56981908)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_56981908),g)),key_psk(charlie,bob),false))) that may be in a table by 5 may be read at get {609}.
The event SendMsg(bob,charlie,stagepack_b(sid_56981909),msg_b(bob,charlie,sid_56981909)) may be executed at {606}.
So the message concat3(validkey(dhexp_real(key_e(bob,charlie,sid_56981909),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),validkey(dhexp_real(key_e(bob,charlie,sid_56981909),g))),dhexp_real(key_e(bob,charlie,sid_56981909),dhexp_real(key_e(alice,bob,sid_56981908),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),msg_a(alice,bob,sid_56981908))),validkey(dhexp_real(key_e(bob,charlie,sid_56981909),g))),msg_b(bob,charlie,sid_56981909))) may be sent on channel pub at output {608}.
mess(pub,concat3(validkey(dhexp_real(key_e(bob,charlie,sid_56981909),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),validkey(dhexp_real(key_e(bob,charlie,sid_56981909),g))),dhexp_real(key_e(bob,charlie,sid_56981909),dhexp_real(key_e(alice,bob,sid_56981908),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),msg_a(alice,bob,sid_56981908))),validkey(dhexp_real(key_e(bob,charlie,sid_56981909),g))),msg_b(bob,charlie,sid_56981909)))).

7. The entry statestore(alice,bob,sid_56981908,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),msg_a(alice,bob,sid_56981908)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_56981908),g)),key_e(alice,bob,sid_56981908)),empty,empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {79}.
The message concat3(validkey(dhexp_real(key_e(bob,charlie,sid_56981909),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),validkey(dhexp_real(key_e(bob,charlie,sid_56981909),g))),dhexp_real(key_e(bob,charlie,sid_56981909),dhexp_real(key_e(alice,bob,sid_56981908),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56981908),g))),msg_a(alice,bob,sid_56981908))),validkey(dhexp_real(key_e(bob,charlie,sid_56981909),g))),msg_b(bob,charlie,sid_56981909))) that may be sent on channel pub by 6 may be received at input {45}.
So event RecvMsg(alice,bob,stagepack_b(sid_56981908),msg_b(bob,charlie,sid_56981909)) may be executed at {77}.
end(RecvMsg(alice,bob,stagepack_b(sid_56981908),msg_b(bob,charlie,sid_56981909))).


RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1358,stagepack_b(sid_b),m)) || event(LeakPsk(phase0,alice,bob)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_56981912]),msg_b(bob,charlie,sid[!1 = @sid_56981912]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56981913]),msg_a(alice,bob,sid[!1 = @sid_56981913]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_56981913]),msg_b(bob,charlie,sid[!1 = @sid_56981912])))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_56981916]),msg_b(bob,alice,sid[!1 = @sid_56981916]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56981917]),msg_a(alice,bob,sid[!1 = @sid_56981917]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_56981917]),msg_b(bob,alice,sid[!1 = @sid_56981916])))
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1358,stagepack_b(sid_b),m)) || event(LeakPsk(phase0,alice,bob)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1358,stagepack_b(sid_b),m))
goal reachable: begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_56981926]),msg_b(bob,charlie,sid[!1 = @sid_56981926]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56981927]),msg_a(alice,bob,sid[!1 = @sid_56981927]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_56981927]),msg_b(bob,charlie,sid[!1 = @sid_56981926])))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_56981930]),msg_b(bob,alice,sid[!1 = @sid_56981930]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56981931]),msg_a(alice,bob,sid[!1 = @sid_56981931]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_56981931]),msg_b(bob,alice,sid[!1 = @sid_56981930])))
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1358,stagepack_b(sid_b),m)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakPsk(phase0,alice,bob)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_56981940]),msg_b(bob,charlie,sid[!1 = @sid_56981940]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56981941]),msg_a(alice,bob,sid[!1 = @sid_56981941]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_56981941]),msg_b(bob,charlie,sid[!1 = @sid_56981940])))
Abbreviations:
sid_56982013 = sid[!1 = @sid_56981963]
sid_56982014 = sid[!1 = @sid_56981987]

1. The entry statestore(alice,bob,sid_56982013,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,sid_56982013,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true)))).

2. The entry statestore(alice,bob,sid_56982013,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) that may be in a table by 1 may be read at get {44}.
The event SendMsg(alice,bob,stagepack_a(sid_56982013),msg_a(alice,bob,sid_56982013)) may be executed at {41}.
So the entry statestore(alice,bob,sid_56982013,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),msg_a(alice,bob,sid_56982013)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_56982013),g)),key_e(alice,bob,sid_56982013)),empty,empty,key_psk(alice,bob),true))) may be inserted in a table at insert {42}.
table(statestore(alice,bob,sid_56982013,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),msg_a(alice,bob,sid_56982013)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_56982013),g)),key_e(alice,bob,sid_56982013)),empty,empty,key_psk(alice,bob),true)))).

3. The entry statestore(bob,charlie,sid_56982014,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(charlie,bob),false))) may be inserted in a table at insert {545}.
table(statestore(bob,charlie,sid_56982014,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(charlie,bob),false)))).

4. The entry statestore(alice,bob,sid_56982013,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) that may be in a table by 1 may be read at get {44}.
The event SendMsg(alice,bob,stagepack_a(sid_56982013),msg_a(alice,bob,sid_56982013)) may be executed at {41}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_56982013),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),msg_a(alice,bob,sid_56982013))) may be sent on channel pub at output {43}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_56982013),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),msg_a(alice,bob,sid_56982013)))).

5. The entry statestore(bob,charlie,sid_56982014,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(charlie,bob),false))) that may be in a table by 3 may be read at get {573}.
The message concat3(validkey(dhexp_real(key_e(alice,bob,sid_56982013),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),msg_a(alice,bob,sid_56982013))) that may be sent on channel pub by 4 may be received at input {546}.
We have validkey(dhexp_real(key_e(alice,bob,sid_56982013),g)) <> caught-fail.
So the entry statestore(bob,charlie,sid_56982014,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),msg_a(alice,bob,sid_56982013)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_56982013),g)),key_psk(charlie,bob),false))) may be inserted in a table at insert {572}.
table(statestore(bob,charlie,sid_56982014,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),msg_a(alice,bob,sid_56982013)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_56982013),g)),key_psk(charlie,bob),false)))).

6. The entry statestore(bob,charlie,sid_56982014,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),msg_a(alice,bob,sid_56982013)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_56982013),g)),key_psk(charlie,bob),false))) that may be in a table by 5 may be read at get {609}.
The event SendMsg(bob,charlie,stagepack_b(sid_56982014),msg_b(bob,charlie,sid_56982014)) may be executed at {606}.
So the message concat3(validkey(dhexp_real(key_e(bob,charlie,sid_56982014),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),validkey(dhexp_real(key_e(bob,charlie,sid_56982014),g))),dhexp_real(key_e(bob,charlie,sid_56982014),dhexp_real(key_e(alice,bob,sid_56982013),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),msg_a(alice,bob,sid_56982013))),validkey(dhexp_real(key_e(bob,charlie,sid_56982014),g))),msg_b(bob,charlie,sid_56982014))) may be sent on channel pub at output {608}.
mess(pub,concat3(validkey(dhexp_real(key_e(bob,charlie,sid_56982014),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),validkey(dhexp_real(key_e(bob,charlie,sid_56982014),g))),dhexp_real(key_e(bob,charlie,sid_56982014),dhexp_real(key_e(alice,bob,sid_56982013),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),msg_a(alice,bob,sid_56982013))),validkey(dhexp_real(key_e(bob,charlie,sid_56982014),g))),msg_b(bob,charlie,sid_56982014)))).

7. The entry statestore(alice,bob,sid_56982013,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),msg_a(alice,bob,sid_56982013)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_56982013),g)),key_e(alice,bob,sid_56982013)),empty,empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {79}.
The message concat3(validkey(dhexp_real(key_e(bob,charlie,sid_56982014),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),validkey(dhexp_real(key_e(bob,charlie,sid_56982014),g))),dhexp_real(key_e(bob,charlie,sid_56982014),dhexp_real(key_e(alice,bob,sid_56982013),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982013),g))),msg_a(alice,bob,sid_56982013))),validkey(dhexp_real(key_e(bob,charlie,sid_56982014),g))),msg_b(bob,charlie,sid_56982014))) that may be sent on channel pub by 6 may be received at input {45}.
So event RecvMsg(alice,bob,stagepack_b(sid_56982013),msg_b(bob,charlie,sid_56982014)) may be executed at {77}.
end(RecvMsg(alice,bob,stagepack_b(sid_56982013),msg_b(bob,charlie,sid_56982014))).


RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakPsk(phase0,alice,bob)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m))
goal reachable: begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_56982017]),msg_b(bob,charlie,sid[!1 = @sid_56982017]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56982018]),msg_a(alice,bob,sid[!1 = @sid_56982018]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_56982018]),msg_b(bob,charlie,sid[!1 = @sid_56982017])))
Abbreviations:
sid_56982090 = sid[!1 = @sid_56982040]
sid_56982091 = sid[!1 = @sid_56982064]

1. The entry statestore(alice,bob,sid_56982090,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,sid_56982090,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true)))).

2. The entry statestore(alice,bob,sid_56982090,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) that may be in a table by 1 may be read at get {44}.
The event SendMsg(alice,bob,stagepack_a(sid_56982090),msg_a(alice,bob,sid_56982090)) may be executed at {41}.
So the entry statestore(alice,bob,sid_56982090,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),msg_a(alice,bob,sid_56982090)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_56982090),g)),key_e(alice,bob,sid_56982090)),empty,empty,key_psk(alice,bob),true))) may be inserted in a table at insert {42}.
table(statestore(alice,bob,sid_56982090,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),msg_a(alice,bob,sid_56982090)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_56982090),g)),key_e(alice,bob,sid_56982090)),empty,empty,key_psk(alice,bob),true)))).

3. The entry statestore(bob,charlie,sid_56982091,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(charlie,bob),false))) may be inserted in a table at insert {545}.
table(statestore(bob,charlie,sid_56982091,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(charlie,bob),false)))).

4. The entry statestore(alice,bob,sid_56982090,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) that may be in a table by 1 may be read at get {44}.
The event SendMsg(alice,bob,stagepack_a(sid_56982090),msg_a(alice,bob,sid_56982090)) may be executed at {41}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_56982090),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),msg_a(alice,bob,sid_56982090))) may be sent on channel pub at output {43}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_56982090),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),msg_a(alice,bob,sid_56982090)))).

5. The entry statestore(bob,charlie,sid_56982091,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(charlie,bob),false))) that may be in a table by 3 may be read at get {573}.
The message concat3(validkey(dhexp_real(key_e(alice,bob,sid_56982090),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),msg_a(alice,bob,sid_56982090))) that may be sent on channel pub by 4 may be received at input {546}.
We have validkey(dhexp_real(key_e(alice,bob,sid_56982090),g)) <> caught-fail.
So the entry statestore(bob,charlie,sid_56982091,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),msg_a(alice,bob,sid_56982090)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_56982090),g)),key_psk(charlie,bob),false))) may be inserted in a table at insert {572}.
table(statestore(bob,charlie,sid_56982091,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),msg_a(alice,bob,sid_56982090)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_56982090),g)),key_psk(charlie,bob),false)))).

6. The entry statestore(bob,charlie,sid_56982091,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),msg_a(alice,bob,sid_56982090)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_56982090),g)),key_psk(charlie,bob),false))) that may be in a table by 5 may be read at get {609}.
The event SendMsg(bob,charlie,stagepack_b(sid_56982091),msg_b(bob,charlie,sid_56982091)) may be executed at {606}.
So the message concat3(validkey(dhexp_real(key_e(bob,charlie,sid_56982091),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),validkey(dhexp_real(key_e(bob,charlie,sid_56982091),g))),dhexp_real(key_e(bob,charlie,sid_56982091),dhexp_real(key_e(alice,bob,sid_56982090),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),msg_a(alice,bob,sid_56982090))),validkey(dhexp_real(key_e(bob,charlie,sid_56982091),g))),msg_b(bob,charlie,sid_56982091))) may be sent on channel pub at output {608}.
mess(pub,concat3(validkey(dhexp_real(key_e(bob,charlie,sid_56982091),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),validkey(dhexp_real(key_e(bob,charlie,sid_56982091),g))),dhexp_real(key_e(bob,charlie,sid_56982091),dhexp_real(key_e(alice,bob,sid_56982090),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),msg_a(alice,bob,sid_56982090))),validkey(dhexp_real(key_e(bob,charlie,sid_56982091),g))),msg_b(bob,charlie,sid_56982091)))).

7. The entry statestore(alice,bob,sid_56982090,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),msg_a(alice,bob,sid_56982090)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_56982090),g)),key_e(alice,bob,sid_56982090)),empty,empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {79}.
The message concat3(validkey(dhexp_real(key_e(bob,charlie,sid_56982091),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),validkey(dhexp_real(key_e(bob,charlie,sid_56982091),g))),dhexp_real(key_e(bob,charlie,sid_56982091),dhexp_real(key_e(alice,bob,sid_56982090),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982090),g))),msg_a(alice,bob,sid_56982090))),validkey(dhexp_real(key_e(bob,charlie,sid_56982091),g))),msg_b(bob,charlie,sid_56982091))) that may be sent on channel pub by 6 may be received at input {45}.
So event RecvMsg(alice,bob,stagepack_b(sid_56982090),msg_b(bob,charlie,sid_56982091)) may be executed at {77}.
end(RecvMsg(alice,bob,stagepack_b(sid_56982090),msg_b(bob,charlie,sid_56982091))).


RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) cannot be proved.
Starting query not attacker_p1(msg_b(bob,alice,sid_b))
RESULT not attacker_p1(msg_b(bob,alice,sid_b)) is true.
Starting query attacker_p1(msg_b(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase1,alice,bob))) || (event(LeakS(phase1,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase1,alice)) && event(LeakPsk(phase1,alice,bob)))
RESULT attacker_p1(msg_b(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase1,alice,bob))) || (event(LeakS(phase1,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase1,alice)) && event(LeakPsk(phase1,alice,bob))) is true.
Starting query attacker_p1(msg_b(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase1,alice)) && event(LeakPsk(phase0,alice,bob)))
RESULT attacker_p1(msg_b(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase1,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query attacker_p1(msg_b(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
RESULT attacker_p1(msg_b(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_56982106]),msg_c(alice,bob,sid[!1 = @sid_56982106]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_56982107]),msg_b(bob,alice,sid[!1 = @sid_56982107]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56982106]),msg_a(alice,bob,sid[!1 = @sid_56982106]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_56982107]),msg_c(alice,bob,sid[!1 = @sid_56982106])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1358,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || event(LeakPsk(phase0,alice,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_56982115]),msg_c(alice,bob,sid[!1 = @sid_56982115]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_56982116]),msg_b(bob,alice,sid[!1 = @sid_56982116]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56982115]),msg_a(alice,bob,sid[!1 = @sid_56982115]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_56982116]),msg_c(alice,bob,sid[!1 = @sid_56982115])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1358,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || event(LeakPsk(phase0,alice,bob)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1358,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_56982125]),msg_c(alice,bob,sid[!1 = @sid_56982125]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_56982126]),msg_b(bob,alice,sid[!1 = @sid_56982126]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56982125]),msg_a(alice,bob,sid[!1 = @sid_56982125]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_56982126]),msg_c(alice,bob,sid[!1 = @sid_56982125])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1358,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || event(LeakPsk(phase0,alice,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_56982135]),msg_c(alice,bob,sid[!1 = @sid_56982135]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_56982136]),msg_b(bob,alice,sid[!1 = @sid_56982136]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56982135]),msg_a(alice,bob,sid[!1 = @sid_56982135]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_56982136]),msg_c(alice,bob,sid[!1 = @sid_56982135])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || event(LeakPsk(phase0,alice,bob)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_56982144]),msg_c(alice,bob,sid[!1 = @sid_56982144]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_56982145]),msg_b(bob,alice,sid[!1 = @sid_56982145]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56982144]),msg_a(alice,bob,sid[!1 = @sid_56982144]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_56982145]),msg_c(alice,bob,sid[!1 = @sid_56982144])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query not attacker_p1(msg_c(alice,bob,sid_a))
RESULT not attacker_p1(msg_c(alice,bob,sid_a)) is true.
Starting query attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakPsk(phase0,alice,bob)) || event(LeakPsk(phase1,alice,bob))
RESULT attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakPsk(phase0,alice,bob)) || event(LeakPsk(phase1,alice,bob)) is true.
Starting query attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakPsk(phase0,alice,bob)) && event(LeakS(p,alice)))
RESULT attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakPsk(phase0,alice,bob)) && event(LeakS(p,alice))) is true.
Starting query attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakPsk(phase0,alice,bob))
RESULT attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakPsk(phase0,alice,bob)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_56982166]),msg_d(bob,alice,sid[!1 = @sid_56982166]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_56982167]),msg_c(alice,bob,sid[!1 = @sid_56982167]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_56982166]),msg_b(bob,alice,sid[!1 = @sid_56982166]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56982167]),msg_a(alice,bob,sid[!1 = @sid_56982167]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_56982167]),msg_d(bob,alice,sid[!1 = @sid_56982166])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1358,stagepack_d(sid_b),m)) || event(LeakPsk(phase0,alice,bob)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_56982175]),msg_d(bob,alice,sid[!1 = @sid_56982175]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_56982176]),msg_c(alice,bob,sid[!1 = @sid_56982176]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_56982175]),msg_b(bob,alice,sid[!1 = @sid_56982175]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56982176]),msg_a(alice,bob,sid[!1 = @sid_56982176]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_56982176]),msg_d(bob,alice,sid[!1 = @sid_56982175])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1358,stagepack_d(sid_b),m)) || event(LeakPsk(phase0,alice,bob)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1358,stagepack_d(sid_b),m))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_56982185]),msg_d(bob,alice,sid[!1 = @sid_56982185]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_56982186]),msg_c(alice,bob,sid[!1 = @sid_56982186]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_56982185]),msg_b(bob,alice,sid[!1 = @sid_56982185]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56982186]),msg_a(alice,bob,sid[!1 = @sid_56982186]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_56982186]),msg_d(bob,alice,sid[!1 = @sid_56982185])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1358,stagepack_d(sid_b),m)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakPsk(phase0,alice,bob)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_56982195]),msg_d(bob,alice,sid[!1 = @sid_56982195]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_56982196]),msg_c(alice,bob,sid[!1 = @sid_56982196]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_56982195]),msg_b(bob,alice,sid[!1 = @sid_56982195]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56982196]),msg_a(alice,bob,sid[!1 = @sid_56982196]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_56982196]),msg_d(bob,alice,sid[!1 = @sid_56982195])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakPsk(phase0,alice,bob)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_56982204]),msg_d(bob,alice,sid[!1 = @sid_56982204]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_56982205]),msg_c(alice,bob,sid[!1 = @sid_56982205]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_56982204]),msg_b(bob,alice,sid[!1 = @sid_56982204]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56982205]),msg_a(alice,bob,sid[!1 = @sid_56982205]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_56982205]),msg_d(bob,alice,sid[!1 = @sid_56982204])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) is true.
Starting query not attacker_p1(msg_d(bob,alice,sid_b))
RESULT not attacker_p1(msg_d(bob,alice,sid_b)) is true.
Starting query attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase1,alice,bob))) || (event(LeakS(phase1,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase1,alice)) && event(LeakPsk(phase1,alice,bob)))
RESULT attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase1,alice,bob))) || (event(LeakS(phase1,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase1,alice)) && event(LeakPsk(phase1,alice,bob))) is true.
Starting query attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase1,alice)) && event(LeakPsk(phase0,alice,bob)))
RESULT attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase1,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
RESULT attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_56982225]),msg_e(alice,bob,sid[!1 = @sid_56982225]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_56982226]),msg_d(bob,alice,sid[!1 = @sid_56982226]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_56982225]),msg_c(alice,bob,sid[!1 = @sid_56982225]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_56982226]),msg_b(bob,alice,sid[!1 = @sid_56982226]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56982225]),msg_a(alice,bob,sid[!1 = @sid_56982225]))) -> end(RecvMsg(bob,alice,stagepack_e(sid[!1 = @sid_56982226]),msg_e(alice,bob,sid[!1 = @sid_56982225])))
RESULT event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1358,stagepack_e(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || event(LeakPsk(phase0,alice,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_56982234]),msg_e(alice,bob,sid[!1 = @sid_56982234]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_56982235]),msg_d(bob,alice,sid[!1 = @sid_56982235]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_56982234]),msg_c(alice,bob,sid[!1 = @sid_56982234]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_56982235]),msg_b(bob,alice,sid[!1 = @sid_56982235]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56982234]),msg_a(alice,bob,sid[!1 = @sid_56982234]))) -> end(RecvMsg(bob,alice,stagepack_e(sid[!1 = @sid_56982235]),msg_e(alice,bob,sid[!1 = @sid_56982234])))
RESULT event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1358,stagepack_e(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || event(LeakPsk(phase0,alice,bob)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1358,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_56982244]),msg_e(alice,bob,sid[!1 = @sid_56982244]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_56982245]),msg_d(bob,alice,sid[!1 = @sid_56982245]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_56982244]),msg_c(alice,bob,sid[!1 = @sid_56982244]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_56982245]),msg_b(bob,alice,sid[!1 = @sid_56982245]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56982244]),msg_a(alice,bob,sid[!1 = @sid_56982244]))) -> end(RecvMsg(bob,alice,stagepack_e(sid[!1 = @sid_56982245]),msg_e(alice,bob,sid[!1 = @sid_56982244])))
RESULT event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1358,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || event(LeakPsk(phase0,alice,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_56982254]),msg_e(alice,bob,sid[!1 = @sid_56982254]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_56982255]),msg_d(bob,alice,sid[!1 = @sid_56982255]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_56982254]),msg_c(alice,bob,sid[!1 = @sid_56982254]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_56982255]),msg_b(bob,alice,sid[!1 = @sid_56982255]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56982254]),msg_a(alice,bob,sid[!1 = @sid_56982254]))) -> end(RecvMsg(bob,alice,stagepack_e(sid[!1 = @sid_56982255]),msg_e(alice,bob,sid[!1 = @sid_56982254])))
RESULT event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || event(LeakPsk(phase0,alice,bob)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_56982263]),msg_e(alice,bob,sid[!1 = @sid_56982263]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_56982264]),msg_d(bob,alice,sid[!1 = @sid_56982264]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_56982263]),msg_c(alice,bob,sid[!1 = @sid_56982263]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_56982264]),msg_b(bob,alice,sid[!1 = @sid_56982264]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56982263]),msg_a(alice,bob,sid[!1 = @sid_56982263]))) -> end(RecvMsg(bob,alice,stagepack_e(sid[!1 = @sid_56982264]),msg_e(alice,bob,sid[!1 = @sid_56982263])))
RESULT event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query not attacker_p1(msg_e(alice,bob,sid_a))
RESULT not attacker_p1(msg_e(alice,bob,sid_a)) is true.
Starting query attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakPsk(phase0,alice,bob)) || event(LeakPsk(phase1,alice,bob))
RESULT attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakPsk(phase0,alice,bob)) || event(LeakPsk(phase1,alice,bob)) is true.
Starting query attacker_p1(msg_e(alice,bob,sid_a)) ==> (event(LeakPsk(phase0,alice,bob)) && event(LeakS(p,alice)))
RESULT attacker_p1(msg_e(alice,bob,sid_a)) ==> (event(LeakPsk(phase0,alice,bob)) && event(LeakS(p,alice))) is true.
Starting query attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakPsk(phase0,alice,bob))
RESULT attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakPsk(phase0,alice,bob)) is true.
Starting query not event(RecvEnd(true))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_56982283]),msg_e(alice,bob,sid[!1 = @sid_56982283]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_56982284]),msg_d(bob,alice,sid[!1 = @sid_56982284]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_56982283]),msg_c(alice,bob,sid[!1 = @sid_56982283]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_56982284]),msg_b(bob,alice,sid[!1 = @sid_56982284]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_56982283]),msg_a(alice,bob,sid[!1 = @sid_56982283]))) -> end(RecvEnd(true))
Abbreviations:
sid_56982674 = sid[!1 = @sid_56982618]
sid_56982675 = sid[!1 = @sid_56982663]

1. The entry statestore(bob,alice,sid_56982675,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) may be inserted in a table at insert {370}.
table(statestore(bob,alice,sid_56982675,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false)))).

2. The entry statestore(alice,bob,sid_56982674,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,sid_56982674,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true)))).

3. The entry statestore(alice,bob,sid_56982674,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {44}.
The event SendMsg(alice,bob,stagepack_a(sid_56982674),msg_a(alice,bob,sid_56982674)) may be executed at {41}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_56982674),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))) may be sent on channel pub at output {43}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_56982674),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674)))).

4. The entry statestore(bob,alice,sid_56982675,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) that may be in a table by 1 may be read at get {398}.
The message concat3(validkey(dhexp_real(key_e(alice,bob,sid_56982674),g)),empty,encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))) that may be sent on channel pub by 3 may be received at input {371}.
We have validkey(dhexp_real(key_e(alice,bob,sid_56982674),g)) <> caught-fail.
So the entry statestore(bob,alice,sid_56982675,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_56982674),g)),key_psk(alice,bob),false))) may be inserted in a table at insert {397}.
table(statestore(bob,alice,sid_56982675,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_56982674),g)),key_psk(alice,bob),false)))).

5. The entry statestore(bob,alice,sid_56982675,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_56982674),g)),key_psk(alice,bob),false))) that may be in a table by 4 may be read at get {434}.
The event SendMsg(bob,alice,stagepack_b(sid_56982675),msg_b(bob,alice,sid_56982675)) may be executed at {431}.
So the entry statestore(bob,alice,sid_56982675,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_56982675),g)),key_e(bob,alice,sid_56982675)),empty,validkey(dhexp_real(key_e(alice,bob,sid_56982674),g)),key_psk(alice,bob),false))) may be inserted in a table at insert {432}.
table(statestore(bob,alice,sid_56982675,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_56982675),g)),key_e(bob,alice,sid_56982675)),empty,validkey(dhexp_real(key_e(alice,bob,sid_56982674),g)),key_psk(alice,bob),false)))).

6. The entry statestore(alice,bob,sid_56982674,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {44}.
The event SendMsg(alice,bob,stagepack_a(sid_56982674),msg_a(alice,bob,sid_56982674)) may be executed at {41}.
So the entry statestore(alice,bob,sid_56982674,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_56982674),g)),key_e(alice,bob,sid_56982674)),empty,empty,key_psk(alice,bob),true))) may be inserted in a table at insert {42}.
table(statestore(alice,bob,sid_56982674,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_56982674),g)),key_e(alice,bob,sid_56982674)),empty,empty,key_psk(alice,bob),true)))).

7. The entry statestore(bob,alice,sid_56982675,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_56982674),g)),key_psk(alice,bob),false))) that may be in a table by 4 may be read at get {434}.
The event SendMsg(bob,alice,stagepack_b(sid_56982675),msg_b(bob,alice,sid_56982675)) may be executed at {431}.
So the message concat3(validkey(dhexp_real(key_e(bob,alice,sid_56982675),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))) may be sent on channel pub at output {433}.
mess(pub,concat3(validkey(dhexp_real(key_e(bob,alice,sid_56982675),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675)))).

8. The entry statestore(alice,bob,sid_56982674,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_56982674),g)),key_e(alice,bob,sid_56982674)),empty,empty,key_psk(alice,bob),true))) that may be in a table by 6 may be read at get {79}.
The message concat3(validkey(dhexp_real(key_e(bob,alice,sid_56982675),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))) that may be sent on channel pub by 7 may be received at input {45}.
So the entry statestore(alice,bob,sid_56982674,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_56982674),g)),key_e(alice,bob,sid_56982674)),empty,validkey(dhexp_real(key_e(bob,alice,sid_56982675),g)),key_psk(alice,bob),true))) may be inserted in a table at insert {78}.
table(statestore(alice,bob,sid_56982674,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_56982674),g)),key_e(alice,bob,sid_56982674)),empty,validkey(dhexp_real(key_e(bob,alice,sid_56982675),g)),key_psk(alice,bob),true)))).

9. The entry statestore(alice,bob,sid_56982674,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_56982674),g)),key_e(alice,bob,sid_56982674)),empty,validkey(dhexp_real(key_e(bob,alice,sid_56982675),g)),key_psk(alice,bob),true))) that may be in a table by 8 may be read at get {131}.
The event SendMsg(alice,bob,stagepack_c(sid_56982674),msg_c(alice,bob,sid_56982674)) may be executed at {128}.
So the message concat3(empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982674))) may be sent on channel pub at output {130}.
mess(pub,concat3(empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982674)))).

10. The entry statestore(bob,alice,sid_56982675,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_56982675),g)),key_e(bob,alice,sid_56982675)),empty,validkey(dhexp_real(key_e(alice,bob,sid_56982674),g)),key_psk(alice,bob),false))) that may be in a table by 5 may be read at get {488}.
The message concat3(empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982674))) that may be sent on channel pub by 9 may be received at input {435}.
So the entry statestore(bob,alice,sid_56982675,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982674)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_56982675),g)),key_e(bob,alice,sid_56982675)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g)),key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),minnonce))) may be inserted in a table at insert {487}.
table(statestore(bob,alice,sid_56982675,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982674)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_56982675),g)),key_e(bob,alice,sid_56982675)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g)),key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),minnonce)))).

11. The entry statestore(bob,alice,sid_56982675,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982674)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_56982675),g)),key_e(bob,alice,sid_56982675)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g)),key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),minnonce))) that may be in a table by 10 may be read at get {508}.
The event SendMsg(bob,alice,stagepack_d(sid_56982675),msg_d(bob,alice,sid_56982675)) may be executed at {505}.
So the entry statestore(bob,alice,sid_56982675,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982674))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982674))),msg_d(bob,alice,sid_56982675)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_56982675),g)),key_e(bob,alice,sid_56982675)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g)),key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)))) may be inserted in a table at insert {506}.
table(statestore(bob,alice,sid_56982675,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982674))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982674))),msg_d(bob,alice,sid_56982675)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_56982675),g)),key_e(bob,alice,sid_56982675)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g)),key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce))))).

12. The entry statestore(alice,bob,sid_56982674,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_56982674),g)),key_e(alice,bob,sid_56982674)),empty,validkey(dhexp_real(key_e(bob,alice,sid_56982675),g)),key_psk(alice,bob),true))) that may be in a table by 8 may be read at get {131}.
The event SendMsg(alice,bob,stagepack_c(sid_56982674),msg_c(alice,bob,sid_56982674)) may be executed at {128}.
So the entry statestore(alice,bob,sid_56982674,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982674)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_56982674),g)),key_e(alice,bob,sid_56982674)),empty,validkey(dhexp_real(key_e(bob,alice,sid_56982675),g)),key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),minnonce))) may be inserted in a table at insert {129}.
table(statestore(alice,bob,sid_56982674,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982674)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_56982674),g)),key_e(alice,bob,sid_56982674)),empty,validkey(dhexp_real(key_e(bob,alice,sid_56982675),g)),key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),minnonce)))).

13. The entry statestore(bob,alice,sid_56982675,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982674)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_56982675),g)),key_e(bob,alice,sid_56982675)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g)),key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),minnonce))) that may be in a table by 10 may be read at get {508}.
The event SendMsg(bob,alice,stagepack_d(sid_56982675),msg_d(bob,alice,sid_56982675)) may be executed at {505}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982674))),msg_d(bob,alice,sid_56982675))) may be sent on channel pub at output {507}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982674))),msg_d(bob,alice,sid_56982675)))).

14. The entry statestore(alice,bob,sid_56982674,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982674)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_56982674),g)),key_e(alice,bob,sid_56982674)),empty,validkey(dhexp_real(key_e(bob,alice,sid_56982675),g)),key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),minnonce))) that may be in a table by 12 may be read at get {152}.
The message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982674))),msg_d(bob,alice,sid_56982675))) that may be sent on channel pub by 13 may be received at input {134}.
So the entry statestore(alice,bob,sid_56982674,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982674))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982674))),msg_d(bob,alice,sid_56982675)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_56982674),g)),key_e(alice,bob,sid_56982674)),empty,validkey(dhexp_real(key_e(bob,alice,sid_56982675),g)),key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)))) may be inserted in a table at insert {151}.
table(statestore(alice,bob,sid_56982674,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982674))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982674))),msg_d(bob,alice,sid_56982675)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_56982674),g)),key_e(alice,bob,sid_56982674)),empty,validkey(dhexp_real(key_e(bob,alice,sid_56982675),g)),key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce))))).

15. The entry statestore(alice,bob,sid_56982674,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982674))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982674))),msg_d(bob,alice,sid_56982675)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_56982674),g)),key_e(alice,bob,sid_56982674)),empty,validkey(dhexp_real(key_e(bob,alice,sid_56982675),g)),key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)))) that may be in a table by 14 may be read at get {171}.
The event SendMsg(alice,bob,stagepack_e(sid_56982674),msg_e(alice,bob,sid_56982674)) may be executed at {169}.
So the message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982674))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982674))),msg_d(bob,alice,sid_56982675))),msg_e(alice,bob,sid_56982674))) may be sent on channel pub at output {170}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982674))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982674))),msg_d(bob,alice,sid_56982675))),msg_e(alice,bob,sid_56982674)))).

16. The entry statestore(bob,alice,sid_56982675,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982674))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982674))),msg_d(bob,alice,sid_56982675)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_56982675),g)),key_e(bob,alice,sid_56982675)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g)),key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)))) that may be in a table by 11 may be read at get {529}.
The message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982674))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(bob,alice,sid_56982675),dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),encrypt(hmac_hash2(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),minnonce,hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),msg_a(alice,bob,sid_56982674))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),msg_b(bob,alice,sid_56982675))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_56982674),g))),validkey(dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_e(alice,bob,sid_56982674),dhexp_real(key_e(bob,alice,sid_56982675),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_56982675),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_56982674))),msg_d(bob,alice,sid_56982675))),msg_e(alice,bob,sid_56982674))) that may be sent on channel pub by 15 may be received at input {511}.
So event RecvEnd(true) may be executed at {528}.
end(RecvEnd(true)).


RESULT not event(RecvEnd(true)) cannot be proved.
