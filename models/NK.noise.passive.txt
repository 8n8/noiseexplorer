File "NK.noise.passive.pv", line 238, characters 7-8:
Warning: identifier ck rebound.
File "NK.noise.passive.pv", line 247, characters 7-8:
Warning: identifier ck rebound.
File "NK.noise.passive.pv", line 248, characters 7-8:
Warning: identifier cs rebound.
File "NK.noise.passive.pv", line 248, character 36:
Warning: identifier h rebound.
File "NK.noise.passive.pv", line 257, characters 7-8:
Warning: identifier cs rebound.
File "NK.noise.passive.pv", line 258, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 263, characters 7-8:
Warning: identifier cs rebound.
File "NK.noise.passive.pv", line 264, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 278, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 283, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 289, character 6:
Warning: identifier e rebound.
File "NK.noise.passive.pv", line 290, characters 6-7:
Warning: identifier ne rebound.
File "NK.noise.passive.pv", line 291, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 293, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 294, characters 7-8:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 294, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NK.noise.passive.pv", line 295, characters 6-7:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 302, character 6:
Warning: identifier e rebound.
File "NK.noise.passive.pv", line 303, characters 6-7:
Warning: identifier ne rebound.
File "NK.noise.passive.pv", line 304, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 306, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 307, characters 7-8:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 307, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NK.noise.passive.pv", line 308, characters 6-7:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 316, characters 7-8:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 316, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NK.noise.passive.pv", line 317, characters 6-7:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 324, characters 7-8:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 324, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NK.noise.passive.pv", line 325, characters 6-7:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 333, characters 6-7:
Warning: identifier re rebound.
File "NK.noise.passive.pv", line 334, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 336, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 337, characters 7-8:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 339, characters 7-8:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 347, characters 6-7:
Warning: identifier re rebound.
File "NK.noise.passive.pv", line 348, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 350, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 351, characters 7-8:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 353, characters 7-8:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 362, characters 7-8:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 364, characters 7-8:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 372, characters 7-8:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 374, characters 7-8:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 521, characters 7-8:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 523, characters 8-9:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 372, characters 7-8:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 374, characters 7-8:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 263, characters 7-8:
Warning: identifier cs rebound.
File "NK.noise.passive.pv", line 264, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 513, characters 7-8:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 514, characters 8-9:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 316, characters 7-8:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 316, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NK.noise.passive.pv", line 317, characters 6-7:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 257, characters 7-8:
Warning: identifier cs rebound.
File "NK.noise.passive.pv", line 258, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 506, characters 8-9:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 347, characters 6-7:
Warning: identifier re rebound.
File "NK.noise.passive.pv", line 348, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 350, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 351, characters 7-8:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 353, characters 7-8:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 238, characters 7-8:
Warning: identifier ck rebound.
File "NK.noise.passive.pv", line 263, characters 7-8:
Warning: identifier cs rebound.
File "NK.noise.passive.pv", line 264, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 498, characters 8-9:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 289, character 6:
Warning: identifier e rebound.
File "NK.noise.passive.pv", line 290, characters 6-7:
Warning: identifier ne rebound.
File "NK.noise.passive.pv", line 291, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 293, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 294, characters 7-8:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 294, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NK.noise.passive.pv", line 295, characters 6-7:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 238, characters 7-8:
Warning: identifier ck rebound.
File "NK.noise.passive.pv", line 257, characters 7-8:
Warning: identifier cs rebound.
File "NK.noise.passive.pv", line 258, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 278, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 574, characters 7-8:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 575, characters 8-9:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 324, characters 7-8:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 324, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NK.noise.passive.pv", line 325, characters 6-7:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 257, characters 7-8:
Warning: identifier cs rebound.
File "NK.noise.passive.pv", line 258, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 565, characters 7-8:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 567, characters 8-9:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 362, characters 7-8:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 364, characters 7-8:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 263, characters 7-8:
Warning: identifier cs rebound.
File "NK.noise.passive.pv", line 264, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 558, characters 8-9:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 302, character 6:
Warning: identifier e rebound.
File "NK.noise.passive.pv", line 303, characters 6-7:
Warning: identifier ne rebound.
File "NK.noise.passive.pv", line 304, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 306, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 307, characters 7-8:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 307, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NK.noise.passive.pv", line 308, characters 6-7:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 238, characters 7-8:
Warning: identifier ck rebound.
File "NK.noise.passive.pv", line 257, characters 7-8:
Warning: identifier cs rebound.
File "NK.noise.passive.pv", line 258, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 551, characters 8-9:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 333, characters 6-7:
Warning: identifier re rebound.
File "NK.noise.passive.pv", line 334, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 336, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 337, characters 7-8:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 339, characters 7-8:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 238, characters 7-8:
Warning: identifier ck rebound.
File "NK.noise.passive.pv", line 263, characters 7-8:
Warning: identifier cs rebound.
File "NK.noise.passive.pv", line 264, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 283, characters 6-7:
Warning: identifier ss rebound.
Linear part:
dhexp(b_96,dhexp(a_95,g)) = dhexp(a_95,dhexp(b_96,g))
Completing equations...
Completed equations:
dhexp(b_96,dhexp(a_95,g)) = dhexp(a_95,dhexp(b_96,g))
Convergent part:
Completing equations...
Completed equations:
Process:
{1}out(pub, key_s(charlie));
{2}!
{3}new sid_a: sessionid;
(
    {4}let s_493: keypair = keypairpack(empty,empty) in
    (
        {5}let e_494: keypair = keypairpack(empty,empty) in
        {6}let v_495: key = catch-fail(dhexp(key_s(bob),g)) in
        {7}let rs_496: key = getpublickey((if not-caught-fail(v_495) then keypairpack(v_495,key_s(bob)) else fail-any)) in
        {8}let re_497: key = empty in
        {9}let v_498: bitstring = catch-fail(hash(somename,empty)) in
        {10}let v_499: key = catch-fail(v_498) in
        {11}let v_500: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {12}let v_501: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_498) then (if not-caught-fail(v_499) then (if not-caught-fail(v_500) then symmetricstatepack(v_500,v_499,v_498) else fail-any) else fail-any) else fail-any))) in
        {13}let v_502: symmetricstate = catch-fail((if success?((if not-caught-fail(v_498) then (if not-caught-fail(v_499) then (if not-caught-fail(v_500) then symmetricstatepack(v_500,v_499,v_498) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_501) && success?(is-true(success?(1-proj-3-tuple(v_501))))) then symmetricstatepack(1-proj-3-tuple(v_501),2-proj-3-tuple(v_501),hash(3-proj-3-tuple(v_501),empty)) else fail-any) else fail-any)) in
        {14}let v_503: bitstring = catch-fail(symmetricstateunpack(v_502)) in
        {15}let v_504: symmetricstate = catch-fail((if (not-caught-fail(v_503) && success?(is-true(success?(1-proj-3-tuple(v_503))))) then symmetricstatepack(1-proj-3-tuple(v_503),2-proj-3-tuple(v_503),hash(3-proj-3-tuple(v_503),rs_496)) else fail-any)) in
        {16}let hs: handshakestate = (if not-caught-fail(v_502) then (if not-caught-fail(v_504) then handshakestatepack(v_504,s_493,e_494,rs_496,re_497,empty,true) else fail-any) else fail-any) in
        {17}insert statestore(alice,bob,sid_a,statepack_a(hs))
    ) | (
        {47}get statestore(=alice,=bob,=sid_a,statepack_a(hs_505: handshakestate)) in
        {18}let v_506: bitstring = catch-fail(handshakestateunpack(hs_505)) in
        {19}let v_507: bitstring = catch-fail((empty,empty,empty)) in
        {20}let v_508: key = catch-fail(dhexp(key_e(alice,bob,sid_a),g)) in
        {21}let v_509: keypair = catch-fail((if not-caught-fail(v_508) then keypairpack(v_508,key_e(alice,bob,sid_a)) else fail-any)) in
        {22}let v_510: bitstring = catch-fail(getpublickey(v_509)) in
        {23}let v_511: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_506))) in
        {24}let v_512: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_506)) then (if (not-caught-fail(v_511) && success?(is-true(success?(1-proj-3-tuple(v_511))))) then symmetricstatepack(1-proj-3-tuple(v_511),2-proj-3-tuple(v_511),hash(3-proj-3-tuple(v_511),v_510)) else fail-any) else fail-any)) in
        {25}let v_513: bitstring = catch-fail(keypairunpack(v_509)) in
        {26}let v_514: bitstring = catch-fail(symmetricstateunpack(v_512)) in
        {27}let v_515: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_514),(if success?(4-proj-7-tuple(v_506)) then (if (not-caught-fail(v_513) && success?(is-true(success?(1-proj-2-tuple(v_513))))) then dhexp(2-proj-2-tuple(v_513),4-proj-7-tuple(v_506)) else fail-any) else fail-any))) in
        {28}let v_516: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_514),(if success?(4-proj-7-tuple(v_506)) then (if (not-caught-fail(v_513) && success?(is-true(success?(1-proj-2-tuple(v_513))))) then dhexp(2-proj-2-tuple(v_513),4-proj-7-tuple(v_506)) else fail-any) else fail-any))) in
        {29}let v_517: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_514),(if success?(4-proj-7-tuple(v_506)) then (if (not-caught-fail(v_513) && success?(is-true(success?(1-proj-2-tuple(v_513))))) then dhexp(2-proj-2-tuple(v_513),4-proj-7-tuple(v_506)) else fail-any) else fail-any))) in
        {30}let v_518: bitstring = catch-fail((if (success?((if success?(4-proj-7-tuple(v_506)) then (if (not-caught-fail(v_513) && success?(is-true(success?(1-proj-2-tuple(v_513))))) then dhexp(2-proj-2-tuple(v_513),4-proj-7-tuple(v_506)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_514))) then (if not-caught-fail(v_515) then (if not-caught-fail(v_516) then (if not-caught-fail(v_517) then (v_515,v_516,v_517) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {31}let v_519: symmetricstate = catch-fail((if success?((if success?(4-proj-7-tuple(v_506)) then (if (not-caught-fail(v_513) && success?(is-true(success?(1-proj-2-tuple(v_513))))) then dhexp(2-proj-2-tuple(v_513),4-proj-7-tuple(v_506)) else fail-any) else fail-any)) then (if (not-caught-fail(v_514) && success?(is-true(success?(1-proj-3-tuple(v_514))))) then (if (not-caught-fail(v_518) && success?(is-true(success?(1-proj-3-tuple(v_518))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_518)) then cipherstatepack(2-proj-3-tuple(v_518),minnonce) else fail-any),1-proj-3-tuple(v_518),3-proj-3-tuple(v_514)) else fail-any) else fail-any) else fail-any)) in
        {32}let v_520: bitstring = catch-fail(symmetricstateunpack(v_519)) in
        {33}let v_521: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_520))) in
        {34}let v_522: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_521),2-proj-2-tuple(v_521),3-proj-3-tuple(v_520),msg_a(alice,bob))) in
        {35}let v_523: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_520))) in
        {36}let v_524: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_521))) && success?(1-proj-3-tuple(v_520))) then (if (not-caught-fail(v_523) && success?(is-true(success?(1-proj-2-tuple(v_523))))) then cipherstatepack(1-proj-2-tuple(v_523),increment_nonce(2-proj-2-tuple(v_521))) else fail-any) else fail-any)) in
        {37}let v_525: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_520)) && success?(1-proj-3-tuple(v_520))) then (if (not-caught-fail(v_521) && success?(is-true(success?(1-proj-2-tuple(v_521))))) then (if not-caught-fail(v_522) then (if not-caught-fail(v_524) then (v_524,v_522) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {38}let v_526: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_525),2-proj-3-tuple(v_520),3-proj-3-tuple(v_520)))) in
        {39}let v_527: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_525)) && success?(symmetricstatepack(1-proj-2-tuple(v_525),2-proj-3-tuple(v_520),3-proj-3-tuple(v_520)))) then (if (not-caught-fail(v_526) && success?(is-true(success?(1-proj-3-tuple(v_526))))) then symmetricstatepack(1-proj-3-tuple(v_526),2-proj-3-tuple(v_526),hash(3-proj-3-tuple(v_526),2-proj-2-tuple(v_525))) else fail-any) else fail-any)) in
        {40}let v_528: bitstring = catch-fail((if (not-caught-fail(v_520) && success?(is-true(success?(1-proj-3-tuple(v_520))))) then (if (not-caught-fail(v_525) && success?(is-true(success?(1-proj-2-tuple(v_525))))) then (if not-caught-fail(v_527) then (v_527,2-proj-2-tuple(v_525)) else fail-any) else fail-any) else fail-any)) in
        {41}let v_529: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_528),2-proj-7-tuple(v_506),v_509,4-proj-7-tuple(v_506),5-proj-7-tuple(v_506),6-proj-7-tuple(v_506),7-proj-7-tuple(v_506))) in
        {42}let v_530: bitstring = catch-fail(concat3(v_510,2-proj-3-tuple(v_507),2-proj-2-tuple(v_528))) in
        {43}let (hs_531: handshakestate,message_a: bitstring) = (if (not-caught-fail(v_506) && success?(is-true(success?(1-proj-7-tuple(v_506))))) then (if (not-caught-fail(v_507) && success?(is-true(success?(1-proj-3-tuple(v_507))))) then (if not-caught-fail(v_509) then (if not-caught-fail(v_510) then (if not-caught-fail(v_512) then (if not-caught-fail(v_519) then (if (not-caught-fail(v_528) && success?(is-true(success?(1-proj-2-tuple(v_528))))) then (if not-caught-fail(v_529) then (if not-caught-fail(v_530) then (v_529,v_530) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {44}event SendMsg(alice,bob,stagepack_a(sid_a),msg_a(alice,bob));
        {45}insert statestore(alice,bob,sid_a,statepack_b(hs_531));
        {46}out(pub, message_a)
    ) | (
        {84}get statestore(=alice,=bob,=sid_a,statepack_b(hs_532: handshakestate)) in
        {48}in(pub, message_b: bitstring);
        {49}let v_533: bitstring = catch-fail(handshakestateunpack(hs_532)) in
        {50}let v_534: bitstring = catch-fail(deconcat3(message_b)) in
        {51}let v_535: bool = catch-fail(true) in
        {52}let v_536: key = catch-fail(1-proj-3-tuple(v_534)) in
        {53}let v_537: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_533))) in
        {54}let v_538: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_533)) then (if (not-caught-fail(v_537) && success?(is-true(success?(1-proj-3-tuple(v_537))))) then symmetricstatepack(1-proj-3-tuple(v_537),2-proj-3-tuple(v_537),hash(3-proj-3-tuple(v_537),v_536)) else fail-any) else fail-any)) in
        {55}let v_539: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_533))) in
        {56}let v_540: bitstring = catch-fail(symmetricstateunpack(v_538)) in
        {57}let v_541: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_540),(if success?(3-proj-7-tuple(v_533)) then (if (not-caught-fail(v_539) && success?(is-true(success?(1-proj-2-tuple(v_539))))) then dhexp(2-proj-2-tuple(v_539),v_536) else fail-any) else fail-any))) in
        {58}let v_542: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_540),(if success?(3-proj-7-tuple(v_533)) then (if (not-caught-fail(v_539) && success?(is-true(success?(1-proj-2-tuple(v_539))))) then dhexp(2-proj-2-tuple(v_539),v_536) else fail-any) else fail-any))) in
        {59}let v_543: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_540),(if success?(3-proj-7-tuple(v_533)) then (if (not-caught-fail(v_539) && success?(is-true(success?(1-proj-2-tuple(v_539))))) then dhexp(2-proj-2-tuple(v_539),v_536) else fail-any) else fail-any))) in
        {60}let v_544: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_533)) then (if (not-caught-fail(v_539) && success?(is-true(success?(1-proj-2-tuple(v_539))))) then dhexp(2-proj-2-tuple(v_539),v_536) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_540))) then (if not-caught-fail(v_541) then (if not-caught-fail(v_542) then (if not-caught-fail(v_543) then (v_541,v_542,v_543) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {61}let v_545: symmetricstate = catch-fail((if success?((if success?(3-proj-7-tuple(v_533)) then (if (not-caught-fail(v_539) && success?(is-true(success?(1-proj-2-tuple(v_539))))) then dhexp(2-proj-2-tuple(v_539),v_536) else fail-any) else fail-any)) then (if (not-caught-fail(v_540) && success?(is-true(success?(1-proj-3-tuple(v_540))))) then (if (not-caught-fail(v_544) && success?(is-true(success?(1-proj-3-tuple(v_544))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_544)) then cipherstatepack(2-proj-3-tuple(v_544),minnonce) else fail-any),1-proj-3-tuple(v_544),3-proj-3-tuple(v_540)) else fail-any) else fail-any) else fail-any)) in
        {62}let v_546: bitstring = catch-fail(symmetricstateunpack(v_545)) in
        {63}let v_547: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_546))) in
        {64}let v_548: aead = catch-fail(decrypt(1-proj-2-tuple(v_547),2-proj-2-tuple(v_547),3-proj-3-tuple(v_546),3-proj-3-tuple(v_534))) in
        {65}let v_549: bitstring = catch-fail(aeadunpack(v_548)) in
        {66}let v_550: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_546))) in
        {67}let v_551: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_547))) && success?(1-proj-3-tuple(v_546))) then (if (not-caught-fail(v_550) && success?(is-true(success?(1-proj-2-tuple(v_550))))) then cipherstatepack(1-proj-2-tuple(v_550),increment_nonce(2-proj-2-tuple(v_547))) else fail-any) else fail-any)) in
        {68}let v_552: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_534)) && (success?(3-proj-3-tuple(v_546)) && success?(1-proj-3-tuple(v_546)))) then (if (not-caught-fail(v_547) && success?(is-true(success?(1-proj-2-tuple(v_547))))) then (if not-caught-fail(v_548) then (if (not-caught-fail(v_549) && success?(is-true(success?(1-proj-3-tuple(v_549))))) then (if not-caught-fail(v_551) then (v_551,3-proj-3-tuple(v_549),1-proj-3-tuple(v_549)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {69}let v_553: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_552),2-proj-3-tuple(v_546),3-proj-3-tuple(v_546)))) in
        {70}let v_554: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_534)) && success?(symmetricstatepack(1-proj-3-tuple(v_552),2-proj-3-tuple(v_546),3-proj-3-tuple(v_546)))) then (if (not-caught-fail(v_553) && success?(is-true(success?(1-proj-3-tuple(v_553))))) then symmetricstatepack(1-proj-3-tuple(v_553),2-proj-3-tuple(v_553),hash(3-proj-3-tuple(v_553),3-proj-3-tuple(v_534))) else fail-any) else fail-any)) in
        {71}let v_555: bitstring = catch-fail((if success?(3-proj-3-tuple(v_534)) then (if (not-caught-fail(v_546) && success?(is-true(success?(1-proj-3-tuple(v_546))))) then (if (not-caught-fail(v_552) && success?(is-true(success?(1-proj-3-tuple(v_552))))) then (if not-caught-fail(v_554) then (v_554,2-proj-3-tuple(v_552),3-proj-3-tuple(v_552)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {72}let v_556: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_555),2-proj-7-tuple(v_533),3-proj-7-tuple(v_533),4-proj-7-tuple(v_533),v_536,6-proj-7-tuple(v_533),7-proj-7-tuple(v_533))) in
        {73}let v_557: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_555))) in
        {74}let v_558: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_557),zero)) in
        {75}let v_559: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_557),zero)) in
        {76}let v_560: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_557),zero)) in
        {77}let v_561: bitstring = catch-fail((if success?(2-proj-3-tuple(v_557)) then (if not-caught-fail(v_558) then (if not-caught-fail(v_559) then (if not-caught-fail(v_560) then (v_558,v_559,v_560) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {78}let v_562: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_561)) then cipherstatepack(1-proj-3-tuple(v_561),minnonce) else fail-any)) in
        {79}let v_563: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_561)) then cipherstatepack(2-proj-3-tuple(v_561),minnonce) else fail-any)) in
        {80}let v_564: bitstring = catch-fail((if success?(1-proj-3-tuple(v_555)) then (if (not-caught-fail(v_557) && success?(is-true(success?(1-proj-3-tuple(v_557))))) then (if (not-caught-fail(v_561) && success?(is-true(success?(1-proj-3-tuple(v_561))))) then (if not-caught-fail(v_562) then (if not-caught-fail(v_563) then (1-proj-3-tuple(v_555),v_562,v_563) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {81}let (hs_565: handshakestate,plaintext_b: bitstring,valid: bool,cs1: cipherstate,cs2: cipherstate) = (if (not-caught-fail(v_533) && success?(is-true(success?(1-proj-7-tuple(v_533))))) then (if (not-caught-fail(v_534) && success?(is-true(success?(1-proj-3-tuple(v_534))))) then (if not-caught-fail(v_535) then (if not-caught-fail(v_536) then (if not-caught-fail(v_538) then (if not-caught-fail(v_545) then (if (not-caught-fail(v_555) && success?(is-true(success?(1-proj-3-tuple(v_555))))) then (if (v_535 && 3-proj-3-tuple(v_555)) then (if not-caught-fail(v_556) then (if (not-caught-fail(v_564) && success?(is-true(success?(1-proj-3-tuple(v_564))))) then (v_556,2-proj-3-tuple(v_555),true,2-proj-3-tuple(v_564),3-proj-3-tuple(v_564)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {82}event RecvMsg(alice,bob,stagepack_b(sid_a),plaintext_b);
        {83}insert statestore(alice,bob,sid_a,statepack_c(hs_565,cs1,cs2))
    ) | (
        {85}!
        {104}get statestore(=alice,=bob,=sid_a,statepack_c(hs_566: handshakestate,cs1_567: cipherstate,cs2_568: cipherstate)) in
        {86}let hs_569: handshakestate = handshakestatesetcs(hs_566,cs1_567) in
        {87}let v_570: bitstring = catch-fail(handshakestateunpack(hs_569)) in
        {88}let v_571: bitstring = catch-fail((empty,empty,empty)) in
        {89}let v_572: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_570))) in
        {90}let v_573: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_572))) in
        {91}let v_574: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_573),2-proj-2-tuple(v_573),3-proj-3-tuple(v_572),msg_c(alice,bob))) in
        {92}let v_575: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_572))) in
        {93}let v_576: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_573))) && success?(1-proj-3-tuple(v_572))) then (if (not-caught-fail(v_575) && success?(is-true(success?(1-proj-2-tuple(v_575))))) then cipherstatepack(1-proj-2-tuple(v_575),increment_nonce(2-proj-2-tuple(v_573))) else fail-any) else fail-any)) in
        {94}let v_577: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_572)) && success?(1-proj-3-tuple(v_572))) then (if (not-caught-fail(v_573) && success?(is-true(success?(1-proj-2-tuple(v_573))))) then (if not-caught-fail(v_574) then (if not-caught-fail(v_576) then (v_576,v_574) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {95}let v_578: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_577),2-proj-3-tuple(v_572),3-proj-3-tuple(v_572)))) in
        {96}let v_579: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_577)) && success?(symmetricstatepack(1-proj-2-tuple(v_577),2-proj-3-tuple(v_572),3-proj-3-tuple(v_572)))) then (if (not-caught-fail(v_578) && success?(is-true(success?(1-proj-3-tuple(v_578))))) then symmetricstatepack(1-proj-3-tuple(v_578),2-proj-3-tuple(v_578),hash(3-proj-3-tuple(v_578),2-proj-2-tuple(v_577))) else fail-any) else fail-any)) in
        {97}let v_580: bitstring = catch-fail((if success?(1-proj-7-tuple(v_570)) then (if (not-caught-fail(v_572) && success?(is-true(success?(1-proj-3-tuple(v_572))))) then (if (not-caught-fail(v_577) && success?(is-true(success?(1-proj-2-tuple(v_577))))) then (if not-caught-fail(v_579) then (v_579,2-proj-2-tuple(v_577)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {98}let v_581: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_580),2-proj-7-tuple(v_570),3-proj-7-tuple(v_570),4-proj-7-tuple(v_570),5-proj-7-tuple(v_570),6-proj-7-tuple(v_570),7-proj-7-tuple(v_570))) in
        {99}let v_582: bitstring = catch-fail(concat3(1-proj-3-tuple(v_571),2-proj-3-tuple(v_571),2-proj-2-tuple(v_580))) in
        {100}let (hs_583: handshakestate,message_c: bitstring) = (if (not-caught-fail(v_570) && success?(is-true(success?(1-proj-7-tuple(v_570))))) then (if (not-caught-fail(v_571) && success?(is-true(success?(1-proj-3-tuple(v_571))))) then (if (not-caught-fail(v_580) && success?(is-true(success?(1-proj-2-tuple(v_580))))) then (if not-caught-fail(v_581) then (if not-caught-fail(v_582) then (v_581,v_582) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {101}event SendMsg(alice,bob,stagepack_c(sid_a),msg_c(alice,bob));
        {102}insert statestore(alice,bob,sid_a,statepack_d(hs_583,handshakestategetcs(hs_583),cs2_568));
        {103}out(pub, message_c)
    ) | (
        {105}!
        {125}get statestore(=alice,=bob,=sid_a,statepack_d(hs_584: handshakestate,cs1_585: cipherstate,cs2_586: cipherstate)) in
        {106}let hs_587: handshakestate = handshakestatesetcs(hs_584,cs2_586) in
        {107}in(pub, message_d: bitstring);
        {108}let v_588: bitstring = catch-fail(handshakestateunpack(hs_587)) in
        {109}let v_589: bitstring = catch-fail(deconcat3(message_d)) in
        {110}let v_590: bool = catch-fail(true) in
        {111}let v_591: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_588))) in
        {112}let v_592: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_591))) in
        {113}let v_593: aead = catch-fail(decrypt(1-proj-2-tuple(v_592),2-proj-2-tuple(v_592),3-proj-3-tuple(v_591),3-proj-3-tuple(v_589))) in
        {114}let v_594: bitstring = catch-fail(aeadunpack(v_593)) in
        {115}let v_595: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_591))) in
        {116}let v_596: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_592))) && success?(1-proj-3-tuple(v_591))) then (if (not-caught-fail(v_595) && success?(is-true(success?(1-proj-2-tuple(v_595))))) then cipherstatepack(1-proj-2-tuple(v_595),increment_nonce(2-proj-2-tuple(v_592))) else fail-any) else fail-any)) in
        {117}let v_597: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_589)) && (success?(3-proj-3-tuple(v_591)) && success?(1-proj-3-tuple(v_591)))) then (if (not-caught-fail(v_592) && success?(is-true(success?(1-proj-2-tuple(v_592))))) then (if not-caught-fail(v_593) then (if (not-caught-fail(v_594) && success?(is-true(success?(1-proj-3-tuple(v_594))))) then (if not-caught-fail(v_596) then (v_596,3-proj-3-tuple(v_594),1-proj-3-tuple(v_594)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {118}let v_598: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_597),2-proj-3-tuple(v_591),3-proj-3-tuple(v_591)))) in
        {119}let v_599: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_589)) && success?(symmetricstatepack(1-proj-3-tuple(v_597),2-proj-3-tuple(v_591),3-proj-3-tuple(v_591)))) then (if (not-caught-fail(v_598) && success?(is-true(success?(1-proj-3-tuple(v_598))))) then symmetricstatepack(1-proj-3-tuple(v_598),2-proj-3-tuple(v_598),hash(3-proj-3-tuple(v_598),3-proj-3-tuple(v_589))) else fail-any) else fail-any)) in
        {120}let v_600: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_589)) && success?(1-proj-7-tuple(v_588))) then (if (not-caught-fail(v_591) && success?(is-true(success?(1-proj-3-tuple(v_591))))) then (if (not-caught-fail(v_597) && success?(is-true(success?(1-proj-3-tuple(v_597))))) then (if not-caught-fail(v_599) then (v_599,2-proj-3-tuple(v_597),3-proj-3-tuple(v_597)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {121}let v_601: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_600),2-proj-7-tuple(v_588),3-proj-7-tuple(v_588),4-proj-7-tuple(v_588),5-proj-7-tuple(v_588),6-proj-7-tuple(v_588),7-proj-7-tuple(v_588))) in
        {122}let (hs_602: handshakestate,plaintext_d: bitstring,valid_603: bool) = (if (not-caught-fail(v_588) && success?(is-true(success?(1-proj-7-tuple(v_588))))) then (if (not-caught-fail(v_589) && success?(is-true(success?(1-proj-3-tuple(v_589))))) then (if not-caught-fail(v_590) then (if (not-caught-fail(v_600) && success?(is-true(success?(1-proj-3-tuple(v_600))))) then (if (v_590 && 3-proj-3-tuple(v_600)) then (if not-caught-fail(v_601) then (v_601,2-proj-3-tuple(v_600),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {123}event RecvMsg(alice,bob,stagepack_d(sid_a),plaintext_d);
        {124}event RecvEnd(valid_603)
    ) | (
        {126}event LeakS(phase0,alice);
        {127}out(pub, key_s(alice))
    ) | (
        {128}phase 1;
        {129}event LeakS(phase1,alice);
        {130}out(pub, key_s(alice))
    )
) | (
    {131}let s_604: keypair = keypairpack(empty,empty) in
    (
        {132}let e_605: keypair = keypairpack(empty,empty) in
        {133}let v_606: key = catch-fail(dhexp(key_s(charlie),g)) in
        {134}let rs_607: key = getpublickey((if not-caught-fail(v_606) then keypairpack(v_606,key_s(charlie)) else fail-any)) in
        {135}let re_608: key = empty in
        {136}let v_609: bitstring = catch-fail(hash(somename,empty)) in
        {137}let v_610: key = catch-fail(v_609) in
        {138}let v_611: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {139}let v_612: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_609) then (if not-caught-fail(v_610) then (if not-caught-fail(v_611) then symmetricstatepack(v_611,v_610,v_609) else fail-any) else fail-any) else fail-any))) in
        {140}let v_613: symmetricstate = catch-fail((if success?((if not-caught-fail(v_609) then (if not-caught-fail(v_610) then (if not-caught-fail(v_611) then symmetricstatepack(v_611,v_610,v_609) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_612) && success?(is-true(success?(1-proj-3-tuple(v_612))))) then symmetricstatepack(1-proj-3-tuple(v_612),2-proj-3-tuple(v_612),hash(3-proj-3-tuple(v_612),empty)) else fail-any) else fail-any)) in
        {141}let v_614: bitstring = catch-fail(symmetricstateunpack(v_613)) in
        {142}let v_615: symmetricstate = catch-fail((if (not-caught-fail(v_614) && success?(is-true(success?(1-proj-3-tuple(v_614))))) then symmetricstatepack(1-proj-3-tuple(v_614),2-proj-3-tuple(v_614),hash(3-proj-3-tuple(v_614),rs_607)) else fail-any)) in
        {143}let hs_616: handshakestate = (if not-caught-fail(v_613) then (if not-caught-fail(v_615) then handshakestatepack(v_615,s_604,e_605,rs_607,re_608,empty,true) else fail-any) else fail-any) in
        {144}insert statestore(alice,charlie,sid_a,statepack_a(hs_616))
    ) | (
        {174}get statestore(=alice,=charlie,=sid_a,statepack_a(hs_617: handshakestate)) in
        {145}let v_618: bitstring = catch-fail(handshakestateunpack(hs_617)) in
        {146}let v_619: bitstring = catch-fail((empty,empty,empty)) in
        {147}let v_620: key = catch-fail(dhexp(key_e(alice,charlie,sid_a),g)) in
        {148}let v_621: keypair = catch-fail((if not-caught-fail(v_620) then keypairpack(v_620,key_e(alice,charlie,sid_a)) else fail-any)) in
        {149}let v_622: bitstring = catch-fail(getpublickey(v_621)) in
        {150}let v_623: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_618))) in
        {151}let v_624: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_618)) then (if (not-caught-fail(v_623) && success?(is-true(success?(1-proj-3-tuple(v_623))))) then symmetricstatepack(1-proj-3-tuple(v_623),2-proj-3-tuple(v_623),hash(3-proj-3-tuple(v_623),v_622)) else fail-any) else fail-any)) in
        {152}let v_625: bitstring = catch-fail(keypairunpack(v_621)) in
        {153}let v_626: bitstring = catch-fail(symmetricstateunpack(v_624)) in
        {154}let v_627: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_626),(if success?(4-proj-7-tuple(v_618)) then (if (not-caught-fail(v_625) && success?(is-true(success?(1-proj-2-tuple(v_625))))) then dhexp(2-proj-2-tuple(v_625),4-proj-7-tuple(v_618)) else fail-any) else fail-any))) in
        {155}let v_628: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_626),(if success?(4-proj-7-tuple(v_618)) then (if (not-caught-fail(v_625) && success?(is-true(success?(1-proj-2-tuple(v_625))))) then dhexp(2-proj-2-tuple(v_625),4-proj-7-tuple(v_618)) else fail-any) else fail-any))) in
        {156}let v_629: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_626),(if success?(4-proj-7-tuple(v_618)) then (if (not-caught-fail(v_625) && success?(is-true(success?(1-proj-2-tuple(v_625))))) then dhexp(2-proj-2-tuple(v_625),4-proj-7-tuple(v_618)) else fail-any) else fail-any))) in
        {157}let v_630: bitstring = catch-fail((if (success?((if success?(4-proj-7-tuple(v_618)) then (if (not-caught-fail(v_625) && success?(is-true(success?(1-proj-2-tuple(v_625))))) then dhexp(2-proj-2-tuple(v_625),4-proj-7-tuple(v_618)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_626))) then (if not-caught-fail(v_627) then (if not-caught-fail(v_628) then (if not-caught-fail(v_629) then (v_627,v_628,v_629) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {158}let v_631: symmetricstate = catch-fail((if success?((if success?(4-proj-7-tuple(v_618)) then (if (not-caught-fail(v_625) && success?(is-true(success?(1-proj-2-tuple(v_625))))) then dhexp(2-proj-2-tuple(v_625),4-proj-7-tuple(v_618)) else fail-any) else fail-any)) then (if (not-caught-fail(v_626) && success?(is-true(success?(1-proj-3-tuple(v_626))))) then (if (not-caught-fail(v_630) && success?(is-true(success?(1-proj-3-tuple(v_630))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_630)) then cipherstatepack(2-proj-3-tuple(v_630),minnonce) else fail-any),1-proj-3-tuple(v_630),3-proj-3-tuple(v_626)) else fail-any) else fail-any) else fail-any)) in
        {159}let v_632: bitstring = catch-fail(symmetricstateunpack(v_631)) in
        {160}let v_633: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_632))) in
        {161}let v_634: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_633),2-proj-2-tuple(v_633),3-proj-3-tuple(v_632),msg_a(alice,charlie))) in
        {162}let v_635: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_632))) in
        {163}let v_636: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_633))) && success?(1-proj-3-tuple(v_632))) then (if (not-caught-fail(v_635) && success?(is-true(success?(1-proj-2-tuple(v_635))))) then cipherstatepack(1-proj-2-tuple(v_635),increment_nonce(2-proj-2-tuple(v_633))) else fail-any) else fail-any)) in
        {164}let v_637: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_632)) && success?(1-proj-3-tuple(v_632))) then (if (not-caught-fail(v_633) && success?(is-true(success?(1-proj-2-tuple(v_633))))) then (if not-caught-fail(v_634) then (if not-caught-fail(v_636) then (v_636,v_634) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {165}let v_638: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_637),2-proj-3-tuple(v_632),3-proj-3-tuple(v_632)))) in
        {166}let v_639: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_637)) && success?(symmetricstatepack(1-proj-2-tuple(v_637),2-proj-3-tuple(v_632),3-proj-3-tuple(v_632)))) then (if (not-caught-fail(v_638) && success?(is-true(success?(1-proj-3-tuple(v_638))))) then symmetricstatepack(1-proj-3-tuple(v_638),2-proj-3-tuple(v_638),hash(3-proj-3-tuple(v_638),2-proj-2-tuple(v_637))) else fail-any) else fail-any)) in
        {167}let v_640: bitstring = catch-fail((if (not-caught-fail(v_632) && success?(is-true(success?(1-proj-3-tuple(v_632))))) then (if (not-caught-fail(v_637) && success?(is-true(success?(1-proj-2-tuple(v_637))))) then (if not-caught-fail(v_639) then (v_639,2-proj-2-tuple(v_637)) else fail-any) else fail-any) else fail-any)) in
        {168}let v_641: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_640),2-proj-7-tuple(v_618),v_621,4-proj-7-tuple(v_618),5-proj-7-tuple(v_618),6-proj-7-tuple(v_618),7-proj-7-tuple(v_618))) in
        {169}let v_642: bitstring = catch-fail(concat3(v_622,2-proj-3-tuple(v_619),2-proj-2-tuple(v_640))) in
        {170}let (hs_643: handshakestate,message_a_644: bitstring) = (if (not-caught-fail(v_618) && success?(is-true(success?(1-proj-7-tuple(v_618))))) then (if (not-caught-fail(v_619) && success?(is-true(success?(1-proj-3-tuple(v_619))))) then (if not-caught-fail(v_621) then (if not-caught-fail(v_622) then (if not-caught-fail(v_624) then (if not-caught-fail(v_631) then (if (not-caught-fail(v_640) && success?(is-true(success?(1-proj-2-tuple(v_640))))) then (if not-caught-fail(v_641) then (if not-caught-fail(v_642) then (v_641,v_642) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {171}event SendMsg(alice,charlie,stagepack_a(sid_a),msg_a(alice,charlie));
        {172}insert statestore(alice,charlie,sid_a,statepack_b(hs_643));
        {173}out(pub, message_a_644)
    ) | (
        {211}get statestore(=alice,=charlie,=sid_a,statepack_b(hs_645: handshakestate)) in
        {175}in(pub, message_b_646: bitstring);
        {176}let v_647: bitstring = catch-fail(handshakestateunpack(hs_645)) in
        {177}let v_648: bitstring = catch-fail(deconcat3(message_b_646)) in
        {178}let v_649: bool = catch-fail(true) in
        {179}let v_650: key = catch-fail(1-proj-3-tuple(v_648)) in
        {180}let v_651: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_647))) in
        {181}let v_652: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_647)) then (if (not-caught-fail(v_651) && success?(is-true(success?(1-proj-3-tuple(v_651))))) then symmetricstatepack(1-proj-3-tuple(v_651),2-proj-3-tuple(v_651),hash(3-proj-3-tuple(v_651),v_650)) else fail-any) else fail-any)) in
        {182}let v_653: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_647))) in
        {183}let v_654: bitstring = catch-fail(symmetricstateunpack(v_652)) in
        {184}let v_655: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_654),(if success?(3-proj-7-tuple(v_647)) then (if (not-caught-fail(v_653) && success?(is-true(success?(1-proj-2-tuple(v_653))))) then dhexp(2-proj-2-tuple(v_653),v_650) else fail-any) else fail-any))) in
        {185}let v_656: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_654),(if success?(3-proj-7-tuple(v_647)) then (if (not-caught-fail(v_653) && success?(is-true(success?(1-proj-2-tuple(v_653))))) then dhexp(2-proj-2-tuple(v_653),v_650) else fail-any) else fail-any))) in
        {186}let v_657: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_654),(if success?(3-proj-7-tuple(v_647)) then (if (not-caught-fail(v_653) && success?(is-true(success?(1-proj-2-tuple(v_653))))) then dhexp(2-proj-2-tuple(v_653),v_650) else fail-any) else fail-any))) in
        {187}let v_658: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_647)) then (if (not-caught-fail(v_653) && success?(is-true(success?(1-proj-2-tuple(v_653))))) then dhexp(2-proj-2-tuple(v_653),v_650) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_654))) then (if not-caught-fail(v_655) then (if not-caught-fail(v_656) then (if not-caught-fail(v_657) then (v_655,v_656,v_657) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {188}let v_659: symmetricstate = catch-fail((if success?((if success?(3-proj-7-tuple(v_647)) then (if (not-caught-fail(v_653) && success?(is-true(success?(1-proj-2-tuple(v_653))))) then dhexp(2-proj-2-tuple(v_653),v_650) else fail-any) else fail-any)) then (if (not-caught-fail(v_654) && success?(is-true(success?(1-proj-3-tuple(v_654))))) then (if (not-caught-fail(v_658) && success?(is-true(success?(1-proj-3-tuple(v_658))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_658)) then cipherstatepack(2-proj-3-tuple(v_658),minnonce) else fail-any),1-proj-3-tuple(v_658),3-proj-3-tuple(v_654)) else fail-any) else fail-any) else fail-any)) in
        {189}let v_660: bitstring = catch-fail(symmetricstateunpack(v_659)) in
        {190}let v_661: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_660))) in
        {191}let v_662: aead = catch-fail(decrypt(1-proj-2-tuple(v_661),2-proj-2-tuple(v_661),3-proj-3-tuple(v_660),3-proj-3-tuple(v_648))) in
        {192}let v_663: bitstring = catch-fail(aeadunpack(v_662)) in
        {193}let v_664: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_660))) in
        {194}let v_665: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_661))) && success?(1-proj-3-tuple(v_660))) then (if (not-caught-fail(v_664) && success?(is-true(success?(1-proj-2-tuple(v_664))))) then cipherstatepack(1-proj-2-tuple(v_664),increment_nonce(2-proj-2-tuple(v_661))) else fail-any) else fail-any)) in
        {195}let v_666: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_648)) && (success?(3-proj-3-tuple(v_660)) && success?(1-proj-3-tuple(v_660)))) then (if (not-caught-fail(v_661) && success?(is-true(success?(1-proj-2-tuple(v_661))))) then (if not-caught-fail(v_662) then (if (not-caught-fail(v_663) && success?(is-true(success?(1-proj-3-tuple(v_663))))) then (if not-caught-fail(v_665) then (v_665,3-proj-3-tuple(v_663),1-proj-3-tuple(v_663)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {196}let v_667: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_666),2-proj-3-tuple(v_660),3-proj-3-tuple(v_660)))) in
        {197}let v_668: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_648)) && success?(symmetricstatepack(1-proj-3-tuple(v_666),2-proj-3-tuple(v_660),3-proj-3-tuple(v_660)))) then (if (not-caught-fail(v_667) && success?(is-true(success?(1-proj-3-tuple(v_667))))) then symmetricstatepack(1-proj-3-tuple(v_667),2-proj-3-tuple(v_667),hash(3-proj-3-tuple(v_667),3-proj-3-tuple(v_648))) else fail-any) else fail-any)) in
        {198}let v_669: bitstring = catch-fail((if success?(3-proj-3-tuple(v_648)) then (if (not-caught-fail(v_660) && success?(is-true(success?(1-proj-3-tuple(v_660))))) then (if (not-caught-fail(v_666) && success?(is-true(success?(1-proj-3-tuple(v_666))))) then (if not-caught-fail(v_668) then (v_668,2-proj-3-tuple(v_666),3-proj-3-tuple(v_666)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {199}let v_670: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_669),2-proj-7-tuple(v_647),3-proj-7-tuple(v_647),4-proj-7-tuple(v_647),v_650,6-proj-7-tuple(v_647),7-proj-7-tuple(v_647))) in
        {200}let v_671: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_669))) in
        {201}let v_672: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_671),zero)) in
        {202}let v_673: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_671),zero)) in
        {203}let v_674: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_671),zero)) in
        {204}let v_675: bitstring = catch-fail((if success?(2-proj-3-tuple(v_671)) then (if not-caught-fail(v_672) then (if not-caught-fail(v_673) then (if not-caught-fail(v_674) then (v_672,v_673,v_674) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {205}let v_676: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_675)) then cipherstatepack(1-proj-3-tuple(v_675),minnonce) else fail-any)) in
        {206}let v_677: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_675)) then cipherstatepack(2-proj-3-tuple(v_675),minnonce) else fail-any)) in
        {207}let v_678: bitstring = catch-fail((if success?(1-proj-3-tuple(v_669)) then (if (not-caught-fail(v_671) && success?(is-true(success?(1-proj-3-tuple(v_671))))) then (if (not-caught-fail(v_675) && success?(is-true(success?(1-proj-3-tuple(v_675))))) then (if not-caught-fail(v_676) then (if not-caught-fail(v_677) then (1-proj-3-tuple(v_669),v_676,v_677) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {208}let (hs_679: handshakestate,plaintext_b_680: bitstring,valid_681: bool,cs1_682: cipherstate,cs2_683: cipherstate) = (if (not-caught-fail(v_647) && success?(is-true(success?(1-proj-7-tuple(v_647))))) then (if (not-caught-fail(v_648) && success?(is-true(success?(1-proj-3-tuple(v_648))))) then (if not-caught-fail(v_649) then (if not-caught-fail(v_650) then (if not-caught-fail(v_652) then (if not-caught-fail(v_659) then (if (not-caught-fail(v_669) && success?(is-true(success?(1-proj-3-tuple(v_669))))) then (if (v_649 && 3-proj-3-tuple(v_669)) then (if not-caught-fail(v_670) then (if (not-caught-fail(v_678) && success?(is-true(success?(1-proj-3-tuple(v_678))))) then (v_670,2-proj-3-tuple(v_669),true,2-proj-3-tuple(v_678),3-proj-3-tuple(v_678)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {209}event RecvMsg(alice,charlie,stagepack_b(sid_a),plaintext_b_680);
        {210}insert statestore(alice,charlie,sid_a,statepack_c(hs_679,cs1_682,cs2_683))
    ) | (
        {212}!
        {231}get statestore(=alice,=charlie,=sid_a,statepack_c(hs_684: handshakestate,cs1_685: cipherstate,cs2_686: cipherstate)) in
        {213}let hs_687: handshakestate = handshakestatesetcs(hs_684,cs1_685) in
        {214}let v_688: bitstring = catch-fail(handshakestateunpack(hs_687)) in
        {215}let v_689: bitstring = catch-fail((empty,empty,empty)) in
        {216}let v_690: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_688))) in
        {217}let v_691: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_690))) in
        {218}let v_692: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_691),2-proj-2-tuple(v_691),3-proj-3-tuple(v_690),msg_c(alice,charlie))) in
        {219}let v_693: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_690))) in
        {220}let v_694: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_691))) && success?(1-proj-3-tuple(v_690))) then (if (not-caught-fail(v_693) && success?(is-true(success?(1-proj-2-tuple(v_693))))) then cipherstatepack(1-proj-2-tuple(v_693),increment_nonce(2-proj-2-tuple(v_691))) else fail-any) else fail-any)) in
        {221}let v_695: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_690)) && success?(1-proj-3-tuple(v_690))) then (if (not-caught-fail(v_691) && success?(is-true(success?(1-proj-2-tuple(v_691))))) then (if not-caught-fail(v_692) then (if not-caught-fail(v_694) then (v_694,v_692) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {222}let v_696: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_695),2-proj-3-tuple(v_690),3-proj-3-tuple(v_690)))) in
        {223}let v_697: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_695)) && success?(symmetricstatepack(1-proj-2-tuple(v_695),2-proj-3-tuple(v_690),3-proj-3-tuple(v_690)))) then (if (not-caught-fail(v_696) && success?(is-true(success?(1-proj-3-tuple(v_696))))) then symmetricstatepack(1-proj-3-tuple(v_696),2-proj-3-tuple(v_696),hash(3-proj-3-tuple(v_696),2-proj-2-tuple(v_695))) else fail-any) else fail-any)) in
        {224}let v_698: bitstring = catch-fail((if success?(1-proj-7-tuple(v_688)) then (if (not-caught-fail(v_690) && success?(is-true(success?(1-proj-3-tuple(v_690))))) then (if (not-caught-fail(v_695) && success?(is-true(success?(1-proj-2-tuple(v_695))))) then (if not-caught-fail(v_697) then (v_697,2-proj-2-tuple(v_695)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {225}let v_699: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_698),2-proj-7-tuple(v_688),3-proj-7-tuple(v_688),4-proj-7-tuple(v_688),5-proj-7-tuple(v_688),6-proj-7-tuple(v_688),7-proj-7-tuple(v_688))) in
        {226}let v_700: bitstring = catch-fail(concat3(1-proj-3-tuple(v_689),2-proj-3-tuple(v_689),2-proj-2-tuple(v_698))) in
        {227}let (hs_701: handshakestate,message_c_702: bitstring) = (if (not-caught-fail(v_688) && success?(is-true(success?(1-proj-7-tuple(v_688))))) then (if (not-caught-fail(v_689) && success?(is-true(success?(1-proj-3-tuple(v_689))))) then (if (not-caught-fail(v_698) && success?(is-true(success?(1-proj-2-tuple(v_698))))) then (if not-caught-fail(v_699) then (if not-caught-fail(v_700) then (v_699,v_700) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {228}event SendMsg(alice,charlie,stagepack_c(sid_a),msg_c(alice,charlie));
        {229}insert statestore(alice,charlie,sid_a,statepack_d(hs_701,handshakestategetcs(hs_701),cs2_686));
        {230}out(pub, message_c_702)
    ) | (
        {232}!
        {252}get statestore(=alice,=charlie,=sid_a,statepack_d(hs_703: handshakestate,cs1_704: cipherstate,cs2_705: cipherstate)) in
        {233}let hs_706: handshakestate = handshakestatesetcs(hs_703,cs2_705) in
        {234}in(pub, message_d_707: bitstring);
        {235}let v_708: bitstring = catch-fail(handshakestateunpack(hs_706)) in
        {236}let v_709: bitstring = catch-fail(deconcat3(message_d_707)) in
        {237}let v_710: bool = catch-fail(true) in
        {238}let v_711: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_708))) in
        {239}let v_712: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_711))) in
        {240}let v_713: aead = catch-fail(decrypt(1-proj-2-tuple(v_712),2-proj-2-tuple(v_712),3-proj-3-tuple(v_711),3-proj-3-tuple(v_709))) in
        {241}let v_714: bitstring = catch-fail(aeadunpack(v_713)) in
        {242}let v_715: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_711))) in
        {243}let v_716: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_712))) && success?(1-proj-3-tuple(v_711))) then (if (not-caught-fail(v_715) && success?(is-true(success?(1-proj-2-tuple(v_715))))) then cipherstatepack(1-proj-2-tuple(v_715),increment_nonce(2-proj-2-tuple(v_712))) else fail-any) else fail-any)) in
        {244}let v_717: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_709)) && (success?(3-proj-3-tuple(v_711)) && success?(1-proj-3-tuple(v_711)))) then (if (not-caught-fail(v_712) && success?(is-true(success?(1-proj-2-tuple(v_712))))) then (if not-caught-fail(v_713) then (if (not-caught-fail(v_714) && success?(is-true(success?(1-proj-3-tuple(v_714))))) then (if not-caught-fail(v_716) then (v_716,3-proj-3-tuple(v_714),1-proj-3-tuple(v_714)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {245}let v_718: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_717),2-proj-3-tuple(v_711),3-proj-3-tuple(v_711)))) in
        {246}let v_719: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_709)) && success?(symmetricstatepack(1-proj-3-tuple(v_717),2-proj-3-tuple(v_711),3-proj-3-tuple(v_711)))) then (if (not-caught-fail(v_718) && success?(is-true(success?(1-proj-3-tuple(v_718))))) then symmetricstatepack(1-proj-3-tuple(v_718),2-proj-3-tuple(v_718),hash(3-proj-3-tuple(v_718),3-proj-3-tuple(v_709))) else fail-any) else fail-any)) in
        {247}let v_720: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_709)) && success?(1-proj-7-tuple(v_708))) then (if (not-caught-fail(v_711) && success?(is-true(success?(1-proj-3-tuple(v_711))))) then (if (not-caught-fail(v_717) && success?(is-true(success?(1-proj-3-tuple(v_717))))) then (if not-caught-fail(v_719) then (v_719,2-proj-3-tuple(v_717),3-proj-3-tuple(v_717)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {248}let v_721: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_720),2-proj-7-tuple(v_708),3-proj-7-tuple(v_708),4-proj-7-tuple(v_708),5-proj-7-tuple(v_708),6-proj-7-tuple(v_708),7-proj-7-tuple(v_708))) in
        {249}let (hs_722: handshakestate,plaintext_d_723: bitstring,valid_724: bool) = (if (not-caught-fail(v_708) && success?(is-true(success?(1-proj-7-tuple(v_708))))) then (if (not-caught-fail(v_709) && success?(is-true(success?(1-proj-3-tuple(v_709))))) then (if not-caught-fail(v_710) then (if (not-caught-fail(v_720) && success?(is-true(success?(1-proj-3-tuple(v_720))))) then (if (v_710 && 3-proj-3-tuple(v_720)) then (if not-caught-fail(v_721) then (v_721,2-proj-3-tuple(v_720),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {250}event RecvMsg(alice,charlie,stagepack_d(sid_a),plaintext_d_723);
        {251}event RecvEnd(valid_724)
    ) | (
        {253}event LeakS(phase0,alice);
        {254}out(pub, key_s(alice))
    ) | (
        {255}phase 1;
        {256}event LeakS(phase1,alice);
        {257}out(pub, key_s(alice))
    )
) | (
    {258}let v_725: key = catch-fail(dhexp(key_s(bob),g)) in
    {259}let s_726: keypair = (if not-caught-fail(v_725) then keypairpack(v_725,key_s(bob)) else fail-any) in
    {260}out(pub, getpublickey(s_726));
    (
        {261}let e_727: keypair = keypairpack(empty,empty) in
        {262}let rs_728: key = empty in
        {263}let re_729: key = empty in
        {264}let v_730: bitstring = catch-fail(hash(somename,empty)) in
        {265}let v_731: key = catch-fail(v_730) in
        {266}let v_732: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {267}let v_733: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_730) then (if not-caught-fail(v_731) then (if not-caught-fail(v_732) then symmetricstatepack(v_732,v_731,v_730) else fail-any) else fail-any) else fail-any))) in
        {268}let v_734: symmetricstate = catch-fail((if success?((if not-caught-fail(v_730) then (if not-caught-fail(v_731) then (if not-caught-fail(v_732) then symmetricstatepack(v_732,v_731,v_730) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_733) && success?(is-true(success?(1-proj-3-tuple(v_733))))) then symmetricstatepack(1-proj-3-tuple(v_733),2-proj-3-tuple(v_733),hash(3-proj-3-tuple(v_733),empty)) else fail-any) else fail-any)) in
        {269}let v_735: bitstring = catch-fail(symmetricstateunpack(v_734)) in
        {270}let v_736: symmetricstate = catch-fail((if success?(getpublickey(s_726)) then (if (not-caught-fail(v_735) && success?(is-true(success?(1-proj-3-tuple(v_735))))) then symmetricstatepack(1-proj-3-tuple(v_735),2-proj-3-tuple(v_735),hash(3-proj-3-tuple(v_735),getpublickey(s_726))) else fail-any) else fail-any)) in
        {271}let hs_737: handshakestate = (if not-caught-fail(v_734) then (if not-caught-fail(v_736) then handshakestatepack(v_736,s_726,e_727,rs_728,re_729,empty,false) else fail-any) else fail-any) in
        {272}insert statestore(bob,alice,sid_a,statepack_a(hs_737))
    ) | (
        {301}get statestore(=bob,=alice,=sid_a,statepack_a(hs_738: handshakestate)) in
        {273}in(pub, message_a_739: bitstring);
        {274}let v_740: bitstring = catch-fail(handshakestateunpack(hs_738)) in
        {275}let v_741: bitstring = catch-fail(deconcat3(message_a_739)) in
        {276}let v_742: bool = catch-fail(true) in
        {277}let v_743: key = catch-fail(1-proj-3-tuple(v_741)) in
        {278}let v_744: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_740))) in
        {279}let v_745: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_740)) then (if (not-caught-fail(v_744) && success?(is-true(success?(1-proj-3-tuple(v_744))))) then symmetricstatepack(1-proj-3-tuple(v_744),2-proj-3-tuple(v_744),hash(3-proj-3-tuple(v_744),v_743)) else fail-any) else fail-any)) in
        {280}let v_746: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_740))) in
        {281}let v_747: bitstring = catch-fail(symmetricstateunpack(v_745)) in
        {282}let v_748: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_747),(if success?(2-proj-7-tuple(v_740)) then (if (not-caught-fail(v_746) && success?(is-true(success?(1-proj-2-tuple(v_746))))) then dhexp(2-proj-2-tuple(v_746),v_743) else fail-any) else fail-any))) in
        {283}let v_749: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_747),(if success?(2-proj-7-tuple(v_740)) then (if (not-caught-fail(v_746) && success?(is-true(success?(1-proj-2-tuple(v_746))))) then dhexp(2-proj-2-tuple(v_746),v_743) else fail-any) else fail-any))) in
        {284}let v_750: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_747),(if success?(2-proj-7-tuple(v_740)) then (if (not-caught-fail(v_746) && success?(is-true(success?(1-proj-2-tuple(v_746))))) then dhexp(2-proj-2-tuple(v_746),v_743) else fail-any) else fail-any))) in
        {285}let v_751: bitstring = catch-fail((if (success?((if success?(2-proj-7-tuple(v_740)) then (if (not-caught-fail(v_746) && success?(is-true(success?(1-proj-2-tuple(v_746))))) then dhexp(2-proj-2-tuple(v_746),v_743) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_747))) then (if not-caught-fail(v_748) then (if not-caught-fail(v_749) then (if not-caught-fail(v_750) then (v_748,v_749,v_750) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {286}let v_752: symmetricstate = catch-fail((if success?((if success?(2-proj-7-tuple(v_740)) then (if (not-caught-fail(v_746) && success?(is-true(success?(1-proj-2-tuple(v_746))))) then dhexp(2-proj-2-tuple(v_746),v_743) else fail-any) else fail-any)) then (if (not-caught-fail(v_747) && success?(is-true(success?(1-proj-3-tuple(v_747))))) then (if (not-caught-fail(v_751) && success?(is-true(success?(1-proj-3-tuple(v_751))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_751)) then cipherstatepack(2-proj-3-tuple(v_751),minnonce) else fail-any),1-proj-3-tuple(v_751),3-proj-3-tuple(v_747)) else fail-any) else fail-any) else fail-any)) in
        {287}let v_753: bitstring = catch-fail(symmetricstateunpack(v_752)) in
        {288}let v_754: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_753))) in
        {289}let v_755: aead = catch-fail(decrypt(1-proj-2-tuple(v_754),2-proj-2-tuple(v_754),3-proj-3-tuple(v_753),3-proj-3-tuple(v_741))) in
        {290}let v_756: bitstring = catch-fail(aeadunpack(v_755)) in
        {291}let v_757: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_753))) in
        {292}let v_758: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_754))) && success?(1-proj-3-tuple(v_753))) then (if (not-caught-fail(v_757) && success?(is-true(success?(1-proj-2-tuple(v_757))))) then cipherstatepack(1-proj-2-tuple(v_757),increment_nonce(2-proj-2-tuple(v_754))) else fail-any) else fail-any)) in
        {293}let v_759: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_741)) && (success?(3-proj-3-tuple(v_753)) && success?(1-proj-3-tuple(v_753)))) then (if (not-caught-fail(v_754) && success?(is-true(success?(1-proj-2-tuple(v_754))))) then (if not-caught-fail(v_755) then (if (not-caught-fail(v_756) && success?(is-true(success?(1-proj-3-tuple(v_756))))) then (if not-caught-fail(v_758) then (v_758,3-proj-3-tuple(v_756),1-proj-3-tuple(v_756)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {294}let v_760: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_759),2-proj-3-tuple(v_753),3-proj-3-tuple(v_753)))) in
        {295}let v_761: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_741)) && success?(symmetricstatepack(1-proj-3-tuple(v_759),2-proj-3-tuple(v_753),3-proj-3-tuple(v_753)))) then (if (not-caught-fail(v_760) && success?(is-true(success?(1-proj-3-tuple(v_760))))) then symmetricstatepack(1-proj-3-tuple(v_760),2-proj-3-tuple(v_760),hash(3-proj-3-tuple(v_760),3-proj-3-tuple(v_741))) else fail-any) else fail-any)) in
        {296}let v_762: bitstring = catch-fail((if success?(3-proj-3-tuple(v_741)) then (if (not-caught-fail(v_753) && success?(is-true(success?(1-proj-3-tuple(v_753))))) then (if (not-caught-fail(v_759) && success?(is-true(success?(1-proj-3-tuple(v_759))))) then (if not-caught-fail(v_761) then (v_761,2-proj-3-tuple(v_759),3-proj-3-tuple(v_759)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {297}let v_763: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_762),2-proj-7-tuple(v_740),3-proj-7-tuple(v_740),4-proj-7-tuple(v_740),v_743,6-proj-7-tuple(v_740),7-proj-7-tuple(v_740))) in
        {298}let (hs_764: handshakestate,plaintext_a: bitstring,valid_765: bool) = (if (not-caught-fail(v_740) && success?(is-true(success?(1-proj-7-tuple(v_740))))) then (if (not-caught-fail(v_741) && success?(is-true(success?(1-proj-3-tuple(v_741))))) then (if not-caught-fail(v_742) then (if not-caught-fail(v_743) then (if not-caught-fail(v_745) then (if not-caught-fail(v_752) then (if (not-caught-fail(v_762) && success?(is-true(success?(1-proj-3-tuple(v_762))))) then (if (v_742 && 3-proj-3-tuple(v_762)) then (if not-caught-fail(v_763) then (v_763,2-proj-3-tuple(v_762),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {299}event RecvMsg(bob,alice,stagepack_a(sid_a),plaintext_a);
        {300}insert statestore(bob,alice,sid_a,statepack_b(hs_764))
    ) | (
        {339}get statestore(=bob,=alice,=sid_a,statepack_b(hs_766: handshakestate)) in
        {302}let v_767: bitstring = catch-fail(handshakestateunpack(hs_766)) in
        {303}let v_768: bitstring = catch-fail((empty,empty,empty)) in
        {304}let v_769: key = catch-fail(dhexp(key_e(bob,alice,sid_a),g)) in
        {305}let v_770: keypair = catch-fail((if not-caught-fail(v_769) then keypairpack(v_769,key_e(bob,alice,sid_a)) else fail-any)) in
        {306}let v_771: bitstring = catch-fail(getpublickey(v_770)) in
        {307}let v_772: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_767))) in
        {308}let v_773: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_767)) then (if (not-caught-fail(v_772) && success?(is-true(success?(1-proj-3-tuple(v_772))))) then symmetricstatepack(1-proj-3-tuple(v_772),2-proj-3-tuple(v_772),hash(3-proj-3-tuple(v_772),v_771)) else fail-any) else fail-any)) in
        {309}let v_774: bitstring = catch-fail(keypairunpack(v_770)) in
        {310}let v_775: bitstring = catch-fail(symmetricstateunpack(v_773)) in
        {311}let v_776: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_775),(if success?(5-proj-7-tuple(v_767)) then (if (not-caught-fail(v_774) && success?(is-true(success?(1-proj-2-tuple(v_774))))) then dhexp(2-proj-2-tuple(v_774),5-proj-7-tuple(v_767)) else fail-any) else fail-any))) in
        {312}let v_777: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_775),(if success?(5-proj-7-tuple(v_767)) then (if (not-caught-fail(v_774) && success?(is-true(success?(1-proj-2-tuple(v_774))))) then dhexp(2-proj-2-tuple(v_774),5-proj-7-tuple(v_767)) else fail-any) else fail-any))) in
        {313}let v_778: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_775),(if success?(5-proj-7-tuple(v_767)) then (if (not-caught-fail(v_774) && success?(is-true(success?(1-proj-2-tuple(v_774))))) then dhexp(2-proj-2-tuple(v_774),5-proj-7-tuple(v_767)) else fail-any) else fail-any))) in
        {314}let v_779: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_767)) then (if (not-caught-fail(v_774) && success?(is-true(success?(1-proj-2-tuple(v_774))))) then dhexp(2-proj-2-tuple(v_774),5-proj-7-tuple(v_767)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_775))) then (if not-caught-fail(v_776) then (if not-caught-fail(v_777) then (if not-caught-fail(v_778) then (v_776,v_777,v_778) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {315}let v_780: symmetricstate = catch-fail((if success?((if success?(5-proj-7-tuple(v_767)) then (if (not-caught-fail(v_774) && success?(is-true(success?(1-proj-2-tuple(v_774))))) then dhexp(2-proj-2-tuple(v_774),5-proj-7-tuple(v_767)) else fail-any) else fail-any)) then (if (not-caught-fail(v_775) && success?(is-true(success?(1-proj-3-tuple(v_775))))) then (if (not-caught-fail(v_779) && success?(is-true(success?(1-proj-3-tuple(v_779))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_779)) then cipherstatepack(2-proj-3-tuple(v_779),minnonce) else fail-any),1-proj-3-tuple(v_779),3-proj-3-tuple(v_775)) else fail-any) else fail-any) else fail-any)) in
        {316}let v_781: bitstring = catch-fail(symmetricstateunpack(v_780)) in
        {317}let v_782: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_781))) in
        {318}let v_783: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_782),2-proj-2-tuple(v_782),3-proj-3-tuple(v_781),msg_b(bob,alice))) in
        {319}let v_784: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_781))) in
        {320}let v_785: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_782))) && success?(1-proj-3-tuple(v_781))) then (if (not-caught-fail(v_784) && success?(is-true(success?(1-proj-2-tuple(v_784))))) then cipherstatepack(1-proj-2-tuple(v_784),increment_nonce(2-proj-2-tuple(v_782))) else fail-any) else fail-any)) in
        {321}let v_786: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_781)) && success?(1-proj-3-tuple(v_781))) then (if (not-caught-fail(v_782) && success?(is-true(success?(1-proj-2-tuple(v_782))))) then (if not-caught-fail(v_783) then (if not-caught-fail(v_785) then (v_785,v_783) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {322}let v_787: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_786),2-proj-3-tuple(v_781),3-proj-3-tuple(v_781)))) in
        {323}let v_788: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_786)) && success?(symmetricstatepack(1-proj-2-tuple(v_786),2-proj-3-tuple(v_781),3-proj-3-tuple(v_781)))) then (if (not-caught-fail(v_787) && success?(is-true(success?(1-proj-3-tuple(v_787))))) then symmetricstatepack(1-proj-3-tuple(v_787),2-proj-3-tuple(v_787),hash(3-proj-3-tuple(v_787),2-proj-2-tuple(v_786))) else fail-any) else fail-any)) in
        {324}let v_789: bitstring = catch-fail((if (not-caught-fail(v_781) && success?(is-true(success?(1-proj-3-tuple(v_781))))) then (if (not-caught-fail(v_786) && success?(is-true(success?(1-proj-2-tuple(v_786))))) then (if not-caught-fail(v_788) then (v_788,2-proj-2-tuple(v_786)) else fail-any) else fail-any) else fail-any)) in
        {325}let v_790: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_789),2-proj-7-tuple(v_767),v_770,4-proj-7-tuple(v_767),5-proj-7-tuple(v_767),6-proj-7-tuple(v_767),7-proj-7-tuple(v_767))) in
        {326}let v_791: bitstring = catch-fail(concat3(v_771,2-proj-3-tuple(v_768),2-proj-2-tuple(v_789))) in
        {327}let v_792: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_789))) in
        {328}let v_793: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_792),zero)) in
        {329}let v_794: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_792),zero)) in
        {330}let v_795: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_792),zero)) in
        {331}let v_796: bitstring = catch-fail((if success?(2-proj-3-tuple(v_792)) then (if not-caught-fail(v_793) then (if not-caught-fail(v_794) then (if not-caught-fail(v_795) then (v_793,v_794,v_795) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {332}let v_797: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_796)) then cipherstatepack(1-proj-3-tuple(v_796),minnonce) else fail-any)) in
        {333}let v_798: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_796)) then cipherstatepack(2-proj-3-tuple(v_796),minnonce) else fail-any)) in
        {334}let v_799: bitstring = catch-fail((if success?(1-proj-2-tuple(v_789)) then (if (not-caught-fail(v_792) && success?(is-true(success?(1-proj-3-tuple(v_792))))) then (if (not-caught-fail(v_796) && success?(is-true(success?(1-proj-3-tuple(v_796))))) then (if not-caught-fail(v_797) then (if not-caught-fail(v_798) then (1-proj-2-tuple(v_789),v_797,v_798) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {335}let (hs_800: handshakestate,message_b_801: bitstring,cs1_802: cipherstate,cs2_803: cipherstate) = (if (not-caught-fail(v_767) && success?(is-true(success?(1-proj-7-tuple(v_767))))) then (if (not-caught-fail(v_768) && success?(is-true(success?(1-proj-3-tuple(v_768))))) then (if not-caught-fail(v_770) then (if not-caught-fail(v_771) then (if not-caught-fail(v_773) then (if not-caught-fail(v_780) then (if (not-caught-fail(v_789) && success?(is-true(success?(1-proj-2-tuple(v_789))))) then (if not-caught-fail(v_790) then (if not-caught-fail(v_791) then (if (not-caught-fail(v_799) && success?(is-true(success?(1-proj-3-tuple(v_799))))) then (v_790,v_791,2-proj-3-tuple(v_799),3-proj-3-tuple(v_799)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {336}event SendMsg(bob,alice,stagepack_b(sid_a),msg_b(bob,alice));
        {337}insert statestore(bob,alice,sid_a,statepack_c(hs_800,cs1_802,cs2_803));
        {338}out(pub, message_b_801)
    ) | (
        {340}!
        {360}get statestore(=bob,=alice,=sid_a,statepack_c(hs_804: handshakestate,cs1_805: cipherstate,cs2_806: cipherstate)) in
        {341}let hs_807: handshakestate = handshakestatesetcs(hs_804,cs1_805) in
        {342}in(pub, message_c_808: bitstring);
        {343}let v_809: bitstring = catch-fail(handshakestateunpack(hs_807)) in
        {344}let v_810: bitstring = catch-fail(deconcat3(message_c_808)) in
        {345}let v_811: bool = catch-fail(true) in
        {346}let v_812: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_809))) in
        {347}let v_813: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_812))) in
        {348}let v_814: aead = catch-fail(decrypt(1-proj-2-tuple(v_813),2-proj-2-tuple(v_813),3-proj-3-tuple(v_812),3-proj-3-tuple(v_810))) in
        {349}let v_815: bitstring = catch-fail(aeadunpack(v_814)) in
        {350}let v_816: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_812))) in
        {351}let v_817: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_813))) && success?(1-proj-3-tuple(v_812))) then (if (not-caught-fail(v_816) && success?(is-true(success?(1-proj-2-tuple(v_816))))) then cipherstatepack(1-proj-2-tuple(v_816),increment_nonce(2-proj-2-tuple(v_813))) else fail-any) else fail-any)) in
        {352}let v_818: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_810)) && (success?(3-proj-3-tuple(v_812)) && success?(1-proj-3-tuple(v_812)))) then (if (not-caught-fail(v_813) && success?(is-true(success?(1-proj-2-tuple(v_813))))) then (if not-caught-fail(v_814) then (if (not-caught-fail(v_815) && success?(is-true(success?(1-proj-3-tuple(v_815))))) then (if not-caught-fail(v_817) then (v_817,3-proj-3-tuple(v_815),1-proj-3-tuple(v_815)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {353}let v_819: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_818),2-proj-3-tuple(v_812),3-proj-3-tuple(v_812)))) in
        {354}let v_820: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_810)) && success?(symmetricstatepack(1-proj-3-tuple(v_818),2-proj-3-tuple(v_812),3-proj-3-tuple(v_812)))) then (if (not-caught-fail(v_819) && success?(is-true(success?(1-proj-3-tuple(v_819))))) then symmetricstatepack(1-proj-3-tuple(v_819),2-proj-3-tuple(v_819),hash(3-proj-3-tuple(v_819),3-proj-3-tuple(v_810))) else fail-any) else fail-any)) in
        {355}let v_821: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_810)) && success?(1-proj-7-tuple(v_809))) then (if (not-caught-fail(v_812) && success?(is-true(success?(1-proj-3-tuple(v_812))))) then (if (not-caught-fail(v_818) && success?(is-true(success?(1-proj-3-tuple(v_818))))) then (if not-caught-fail(v_820) then (v_820,2-proj-3-tuple(v_818),3-proj-3-tuple(v_818)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {356}let v_822: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_821),2-proj-7-tuple(v_809),3-proj-7-tuple(v_809),4-proj-7-tuple(v_809),5-proj-7-tuple(v_809),6-proj-7-tuple(v_809),7-proj-7-tuple(v_809))) in
        {357}let (hs_823: handshakestate,plaintext_c: bitstring,valid_824: bool) = (if (not-caught-fail(v_809) && success?(is-true(success?(1-proj-7-tuple(v_809))))) then (if (not-caught-fail(v_810) && success?(is-true(success?(1-proj-3-tuple(v_810))))) then (if not-caught-fail(v_811) then (if (not-caught-fail(v_821) && success?(is-true(success?(1-proj-3-tuple(v_821))))) then (if (v_811 && 3-proj-3-tuple(v_821)) then (if not-caught-fail(v_822) then (v_822,2-proj-3-tuple(v_821),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {358}event RecvMsg(bob,alice,stagepack_c(sid_a),plaintext_c);
        {359}insert statestore(bob,alice,sid_a,statepack_d(hs_823,handshakestategetcs(hs_823),cs2_806))
    ) | (
        {361}!
        {379}get statestore(=bob,=alice,=sid_a,statepack_d(hs_825: handshakestate,cs1_826: cipherstate,cs2_827: cipherstate)) in
        {362}let hs_828: handshakestate = handshakestatesetcs(hs_825,cs2_827) in
        {363}let v_829: bitstring = catch-fail(handshakestateunpack(hs_828)) in
        {364}let v_830: bitstring = catch-fail((empty,empty,empty)) in
        {365}let v_831: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_829))) in
        {366}let v_832: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_831))) in
        {367}let v_833: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_832),2-proj-2-tuple(v_832),3-proj-3-tuple(v_831),msg_d(bob,alice))) in
        {368}let v_834: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_831))) in
        {369}let v_835: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_832))) && success?(1-proj-3-tuple(v_831))) then (if (not-caught-fail(v_834) && success?(is-true(success?(1-proj-2-tuple(v_834))))) then cipherstatepack(1-proj-2-tuple(v_834),increment_nonce(2-proj-2-tuple(v_832))) else fail-any) else fail-any)) in
        {370}let v_836: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_831)) && success?(1-proj-3-tuple(v_831))) then (if (not-caught-fail(v_832) && success?(is-true(success?(1-proj-2-tuple(v_832))))) then (if not-caught-fail(v_833) then (if not-caught-fail(v_835) then (v_835,v_833) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {371}let v_837: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_836),2-proj-3-tuple(v_831),3-proj-3-tuple(v_831)))) in
        {372}let v_838: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_836)) && success?(symmetricstatepack(1-proj-2-tuple(v_836),2-proj-3-tuple(v_831),3-proj-3-tuple(v_831)))) then (if (not-caught-fail(v_837) && success?(is-true(success?(1-proj-3-tuple(v_837))))) then symmetricstatepack(1-proj-3-tuple(v_837),2-proj-3-tuple(v_837),hash(3-proj-3-tuple(v_837),2-proj-2-tuple(v_836))) else fail-any) else fail-any)) in
        {373}let v_839: bitstring = catch-fail((if success?(1-proj-7-tuple(v_829)) then (if (not-caught-fail(v_831) && success?(is-true(success?(1-proj-3-tuple(v_831))))) then (if (not-caught-fail(v_836) && success?(is-true(success?(1-proj-2-tuple(v_836))))) then (if not-caught-fail(v_838) then (v_838,2-proj-2-tuple(v_836)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {374}let v_840: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_839),2-proj-7-tuple(v_829),3-proj-7-tuple(v_829),4-proj-7-tuple(v_829),5-proj-7-tuple(v_829),6-proj-7-tuple(v_829),7-proj-7-tuple(v_829))) in
        {375}let v_841: bitstring = catch-fail(concat3(1-proj-3-tuple(v_830),2-proj-3-tuple(v_830),2-proj-2-tuple(v_839))) in
        {376}let (hs_842: handshakestate,message_d_843: bitstring) = (if (not-caught-fail(v_829) && success?(is-true(success?(1-proj-7-tuple(v_829))))) then (if (not-caught-fail(v_830) && success?(is-true(success?(1-proj-3-tuple(v_830))))) then (if (not-caught-fail(v_839) && success?(is-true(success?(1-proj-2-tuple(v_839))))) then (if not-caught-fail(v_840) then (if not-caught-fail(v_841) then (v_840,v_841) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {377}event SendMsg(bob,alice,stagepack_d(sid_a),msg_d(bob,alice));
        {378}out(pub, message_d_843)
    ) | (
        {380}event LeakS(phase0,bob);
        {381}out(pub, key_s(bob))
    ) | (
        {382}phase 1;
        {383}event LeakS(phase1,bob);
        {384}out(pub, key_s(bob))
    )
) | (
    {385}let v_844: key = catch-fail(dhexp(key_s(bob),g)) in
    {386}let s_845: keypair = (if not-caught-fail(v_844) then keypairpack(v_844,key_s(bob)) else fail-any) in
    {387}out(pub, getpublickey(s_845));
    (
        {388}let e_846: keypair = keypairpack(empty,empty) in
        {389}let rs_847: key = empty in
        {390}let re_848: key = empty in
        {391}let v_849: bitstring = catch-fail(hash(somename,empty)) in
        {392}let v_850: key = catch-fail(v_849) in
        {393}let v_851: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {394}let v_852: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_849) then (if not-caught-fail(v_850) then (if not-caught-fail(v_851) then symmetricstatepack(v_851,v_850,v_849) else fail-any) else fail-any) else fail-any))) in
        {395}let v_853: symmetricstate = catch-fail((if success?((if not-caught-fail(v_849) then (if not-caught-fail(v_850) then (if not-caught-fail(v_851) then symmetricstatepack(v_851,v_850,v_849) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_852) && success?(is-true(success?(1-proj-3-tuple(v_852))))) then symmetricstatepack(1-proj-3-tuple(v_852),2-proj-3-tuple(v_852),hash(3-proj-3-tuple(v_852),empty)) else fail-any) else fail-any)) in
        {396}let v_854: bitstring = catch-fail(symmetricstateunpack(v_853)) in
        {397}let v_855: symmetricstate = catch-fail((if success?(getpublickey(s_845)) then (if (not-caught-fail(v_854) && success?(is-true(success?(1-proj-3-tuple(v_854))))) then symmetricstatepack(1-proj-3-tuple(v_854),2-proj-3-tuple(v_854),hash(3-proj-3-tuple(v_854),getpublickey(s_845))) else fail-any) else fail-any)) in
        {398}let hs_856: handshakestate = (if not-caught-fail(v_853) then (if not-caught-fail(v_855) then handshakestatepack(v_855,s_845,e_846,rs_847,re_848,empty,false) else fail-any) else fail-any) in
        {399}insert statestore(bob,charlie,sid_a,statepack_a(hs_856))
    ) | (
        {428}get statestore(=bob,=charlie,=sid_a,statepack_a(hs_857: handshakestate)) in
        {400}in(pub, message_a_858: bitstring);
        {401}let v_859: bitstring = catch-fail(handshakestateunpack(hs_857)) in
        {402}let v_860: bitstring = catch-fail(deconcat3(message_a_858)) in
        {403}let v_861: bool = catch-fail(true) in
        {404}let v_862: key = catch-fail(1-proj-3-tuple(v_860)) in
        {405}let v_863: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_859))) in
        {406}let v_864: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_859)) then (if (not-caught-fail(v_863) && success?(is-true(success?(1-proj-3-tuple(v_863))))) then symmetricstatepack(1-proj-3-tuple(v_863),2-proj-3-tuple(v_863),hash(3-proj-3-tuple(v_863),v_862)) else fail-any) else fail-any)) in
        {407}let v_865: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_859))) in
        {408}let v_866: bitstring = catch-fail(symmetricstateunpack(v_864)) in
        {409}let v_867: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_866),(if success?(2-proj-7-tuple(v_859)) then (if (not-caught-fail(v_865) && success?(is-true(success?(1-proj-2-tuple(v_865))))) then dhexp(2-proj-2-tuple(v_865),v_862) else fail-any) else fail-any))) in
        {410}let v_868: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_866),(if success?(2-proj-7-tuple(v_859)) then (if (not-caught-fail(v_865) && success?(is-true(success?(1-proj-2-tuple(v_865))))) then dhexp(2-proj-2-tuple(v_865),v_862) else fail-any) else fail-any))) in
        {411}let v_869: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_866),(if success?(2-proj-7-tuple(v_859)) then (if (not-caught-fail(v_865) && success?(is-true(success?(1-proj-2-tuple(v_865))))) then dhexp(2-proj-2-tuple(v_865),v_862) else fail-any) else fail-any))) in
        {412}let v_870: bitstring = catch-fail((if (success?((if success?(2-proj-7-tuple(v_859)) then (if (not-caught-fail(v_865) && success?(is-true(success?(1-proj-2-tuple(v_865))))) then dhexp(2-proj-2-tuple(v_865),v_862) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_866))) then (if not-caught-fail(v_867) then (if not-caught-fail(v_868) then (if not-caught-fail(v_869) then (v_867,v_868,v_869) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {413}let v_871: symmetricstate = catch-fail((if success?((if success?(2-proj-7-tuple(v_859)) then (if (not-caught-fail(v_865) && success?(is-true(success?(1-proj-2-tuple(v_865))))) then dhexp(2-proj-2-tuple(v_865),v_862) else fail-any) else fail-any)) then (if (not-caught-fail(v_866) && success?(is-true(success?(1-proj-3-tuple(v_866))))) then (if (not-caught-fail(v_870) && success?(is-true(success?(1-proj-3-tuple(v_870))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_870)) then cipherstatepack(2-proj-3-tuple(v_870),minnonce) else fail-any),1-proj-3-tuple(v_870),3-proj-3-tuple(v_866)) else fail-any) else fail-any) else fail-any)) in
        {414}let v_872: bitstring = catch-fail(symmetricstateunpack(v_871)) in
        {415}let v_873: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_872))) in
        {416}let v_874: aead = catch-fail(decrypt(1-proj-2-tuple(v_873),2-proj-2-tuple(v_873),3-proj-3-tuple(v_872),3-proj-3-tuple(v_860))) in
        {417}let v_875: bitstring = catch-fail(aeadunpack(v_874)) in
        {418}let v_876: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_872))) in
        {419}let v_877: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_873))) && success?(1-proj-3-tuple(v_872))) then (if (not-caught-fail(v_876) && success?(is-true(success?(1-proj-2-tuple(v_876))))) then cipherstatepack(1-proj-2-tuple(v_876),increment_nonce(2-proj-2-tuple(v_873))) else fail-any) else fail-any)) in
        {420}let v_878: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_860)) && (success?(3-proj-3-tuple(v_872)) && success?(1-proj-3-tuple(v_872)))) then (if (not-caught-fail(v_873) && success?(is-true(success?(1-proj-2-tuple(v_873))))) then (if not-caught-fail(v_874) then (if (not-caught-fail(v_875) && success?(is-true(success?(1-proj-3-tuple(v_875))))) then (if not-caught-fail(v_877) then (v_877,3-proj-3-tuple(v_875),1-proj-3-tuple(v_875)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {421}let v_879: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_878),2-proj-3-tuple(v_872),3-proj-3-tuple(v_872)))) in
        {422}let v_880: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_860)) && success?(symmetricstatepack(1-proj-3-tuple(v_878),2-proj-3-tuple(v_872),3-proj-3-tuple(v_872)))) then (if (not-caught-fail(v_879) && success?(is-true(success?(1-proj-3-tuple(v_879))))) then symmetricstatepack(1-proj-3-tuple(v_879),2-proj-3-tuple(v_879),hash(3-proj-3-tuple(v_879),3-proj-3-tuple(v_860))) else fail-any) else fail-any)) in
        {423}let v_881: bitstring = catch-fail((if success?(3-proj-3-tuple(v_860)) then (if (not-caught-fail(v_872) && success?(is-true(success?(1-proj-3-tuple(v_872))))) then (if (not-caught-fail(v_878) && success?(is-true(success?(1-proj-3-tuple(v_878))))) then (if not-caught-fail(v_880) then (v_880,2-proj-3-tuple(v_878),3-proj-3-tuple(v_878)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {424}let v_882: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_881),2-proj-7-tuple(v_859),3-proj-7-tuple(v_859),4-proj-7-tuple(v_859),v_862,6-proj-7-tuple(v_859),7-proj-7-tuple(v_859))) in
        {425}let (hs_883: handshakestate,plaintext_a_884: bitstring,valid_885: bool) = (if (not-caught-fail(v_859) && success?(is-true(success?(1-proj-7-tuple(v_859))))) then (if (not-caught-fail(v_860) && success?(is-true(success?(1-proj-3-tuple(v_860))))) then (if not-caught-fail(v_861) then (if not-caught-fail(v_862) then (if not-caught-fail(v_864) then (if not-caught-fail(v_871) then (if (not-caught-fail(v_881) && success?(is-true(success?(1-proj-3-tuple(v_881))))) then (if (v_861 && 3-proj-3-tuple(v_881)) then (if not-caught-fail(v_882) then (v_882,2-proj-3-tuple(v_881),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {426}event RecvMsg(bob,charlie,stagepack_a(sid_a),plaintext_a_884);
        {427}insert statestore(bob,charlie,sid_a,statepack_b(hs_883))
    ) | (
        {466}get statestore(=bob,=charlie,=sid_a,statepack_b(hs_886: handshakestate)) in
        {429}let v_887: bitstring = catch-fail(handshakestateunpack(hs_886)) in
        {430}let v_888: bitstring = catch-fail((empty,empty,empty)) in
        {431}let v_889: key = catch-fail(dhexp(key_e(bob,charlie,sid_a),g)) in
        {432}let v_890: keypair = catch-fail((if not-caught-fail(v_889) then keypairpack(v_889,key_e(bob,charlie,sid_a)) else fail-any)) in
        {433}let v_891: bitstring = catch-fail(getpublickey(v_890)) in
        {434}let v_892: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_887))) in
        {435}let v_893: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_887)) then (if (not-caught-fail(v_892) && success?(is-true(success?(1-proj-3-tuple(v_892))))) then symmetricstatepack(1-proj-3-tuple(v_892),2-proj-3-tuple(v_892),hash(3-proj-3-tuple(v_892),v_891)) else fail-any) else fail-any)) in
        {436}let v_894: bitstring = catch-fail(keypairunpack(v_890)) in
        {437}let v_895: bitstring = catch-fail(symmetricstateunpack(v_893)) in
        {438}let v_896: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_895),(if success?(5-proj-7-tuple(v_887)) then (if (not-caught-fail(v_894) && success?(is-true(success?(1-proj-2-tuple(v_894))))) then dhexp(2-proj-2-tuple(v_894),5-proj-7-tuple(v_887)) else fail-any) else fail-any))) in
        {439}let v_897: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_895),(if success?(5-proj-7-tuple(v_887)) then (if (not-caught-fail(v_894) && success?(is-true(success?(1-proj-2-tuple(v_894))))) then dhexp(2-proj-2-tuple(v_894),5-proj-7-tuple(v_887)) else fail-any) else fail-any))) in
        {440}let v_898: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_895),(if success?(5-proj-7-tuple(v_887)) then (if (not-caught-fail(v_894) && success?(is-true(success?(1-proj-2-tuple(v_894))))) then dhexp(2-proj-2-tuple(v_894),5-proj-7-tuple(v_887)) else fail-any) else fail-any))) in
        {441}let v_899: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_887)) then (if (not-caught-fail(v_894) && success?(is-true(success?(1-proj-2-tuple(v_894))))) then dhexp(2-proj-2-tuple(v_894),5-proj-7-tuple(v_887)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_895))) then (if not-caught-fail(v_896) then (if not-caught-fail(v_897) then (if not-caught-fail(v_898) then (v_896,v_897,v_898) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {442}let v_900: symmetricstate = catch-fail((if success?((if success?(5-proj-7-tuple(v_887)) then (if (not-caught-fail(v_894) && success?(is-true(success?(1-proj-2-tuple(v_894))))) then dhexp(2-proj-2-tuple(v_894),5-proj-7-tuple(v_887)) else fail-any) else fail-any)) then (if (not-caught-fail(v_895) && success?(is-true(success?(1-proj-3-tuple(v_895))))) then (if (not-caught-fail(v_899) && success?(is-true(success?(1-proj-3-tuple(v_899))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_899)) then cipherstatepack(2-proj-3-tuple(v_899),minnonce) else fail-any),1-proj-3-tuple(v_899),3-proj-3-tuple(v_895)) else fail-any) else fail-any) else fail-any)) in
        {443}let v_901: bitstring = catch-fail(symmetricstateunpack(v_900)) in
        {444}let v_902: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_901))) in
        {445}let v_903: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_902),2-proj-2-tuple(v_902),3-proj-3-tuple(v_901),msg_b(bob,charlie))) in
        {446}let v_904: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_901))) in
        {447}let v_905: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_902))) && success?(1-proj-3-tuple(v_901))) then (if (not-caught-fail(v_904) && success?(is-true(success?(1-proj-2-tuple(v_904))))) then cipherstatepack(1-proj-2-tuple(v_904),increment_nonce(2-proj-2-tuple(v_902))) else fail-any) else fail-any)) in
        {448}let v_906: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_901)) && success?(1-proj-3-tuple(v_901))) then (if (not-caught-fail(v_902) && success?(is-true(success?(1-proj-2-tuple(v_902))))) then (if not-caught-fail(v_903) then (if not-caught-fail(v_905) then (v_905,v_903) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {449}let v_907: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_906),2-proj-3-tuple(v_901),3-proj-3-tuple(v_901)))) in
        {450}let v_908: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_906)) && success?(symmetricstatepack(1-proj-2-tuple(v_906),2-proj-3-tuple(v_901),3-proj-3-tuple(v_901)))) then (if (not-caught-fail(v_907) && success?(is-true(success?(1-proj-3-tuple(v_907))))) then symmetricstatepack(1-proj-3-tuple(v_907),2-proj-3-tuple(v_907),hash(3-proj-3-tuple(v_907),2-proj-2-tuple(v_906))) else fail-any) else fail-any)) in
        {451}let v_909: bitstring = catch-fail((if (not-caught-fail(v_901) && success?(is-true(success?(1-proj-3-tuple(v_901))))) then (if (not-caught-fail(v_906) && success?(is-true(success?(1-proj-2-tuple(v_906))))) then (if not-caught-fail(v_908) then (v_908,2-proj-2-tuple(v_906)) else fail-any) else fail-any) else fail-any)) in
        {452}let v_910: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_909),2-proj-7-tuple(v_887),v_890,4-proj-7-tuple(v_887),5-proj-7-tuple(v_887),6-proj-7-tuple(v_887),7-proj-7-tuple(v_887))) in
        {453}let v_911: bitstring = catch-fail(concat3(v_891,2-proj-3-tuple(v_888),2-proj-2-tuple(v_909))) in
        {454}let v_912: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_909))) in
        {455}let v_913: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_912),zero)) in
        {456}let v_914: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_912),zero)) in
        {457}let v_915: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_912),zero)) in
        {458}let v_916: bitstring = catch-fail((if success?(2-proj-3-tuple(v_912)) then (if not-caught-fail(v_913) then (if not-caught-fail(v_914) then (if not-caught-fail(v_915) then (v_913,v_914,v_915) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {459}let v_917: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_916)) then cipherstatepack(1-proj-3-tuple(v_916),minnonce) else fail-any)) in
        {460}let v_918: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_916)) then cipherstatepack(2-proj-3-tuple(v_916),minnonce) else fail-any)) in
        {461}let v_919: bitstring = catch-fail((if success?(1-proj-2-tuple(v_909)) then (if (not-caught-fail(v_912) && success?(is-true(success?(1-proj-3-tuple(v_912))))) then (if (not-caught-fail(v_916) && success?(is-true(success?(1-proj-3-tuple(v_916))))) then (if not-caught-fail(v_917) then (if not-caught-fail(v_918) then (1-proj-2-tuple(v_909),v_917,v_918) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {462}let (hs_920: handshakestate,message_b_921: bitstring,cs1_922: cipherstate,cs2_923: cipherstate) = (if (not-caught-fail(v_887) && success?(is-true(success?(1-proj-7-tuple(v_887))))) then (if (not-caught-fail(v_888) && success?(is-true(success?(1-proj-3-tuple(v_888))))) then (if not-caught-fail(v_890) then (if not-caught-fail(v_891) then (if not-caught-fail(v_893) then (if not-caught-fail(v_900) then (if (not-caught-fail(v_909) && success?(is-true(success?(1-proj-2-tuple(v_909))))) then (if not-caught-fail(v_910) then (if not-caught-fail(v_911) then (if (not-caught-fail(v_919) && success?(is-true(success?(1-proj-3-tuple(v_919))))) then (v_910,v_911,2-proj-3-tuple(v_919),3-proj-3-tuple(v_919)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {463}event SendMsg(bob,charlie,stagepack_b(sid_a),msg_b(bob,charlie));
        {464}insert statestore(bob,charlie,sid_a,statepack_c(hs_920,cs1_922,cs2_923));
        {465}out(pub, message_b_921)
    ) | (
        {467}!
        {487}get statestore(=bob,=charlie,=sid_a,statepack_c(hs_924: handshakestate,cs1_925: cipherstate,cs2_926: cipherstate)) in
        {468}let hs_927: handshakestate = handshakestatesetcs(hs_924,cs1_925) in
        {469}in(pub, message_c_928: bitstring);
        {470}let v_929: bitstring = catch-fail(handshakestateunpack(hs_927)) in
        {471}let v_930: bitstring = catch-fail(deconcat3(message_c_928)) in
        {472}let v_931: bool = catch-fail(true) in
        {473}let v_932: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_929))) in
        {474}let v_933: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_932))) in
        {475}let v_934: aead = catch-fail(decrypt(1-proj-2-tuple(v_933),2-proj-2-tuple(v_933),3-proj-3-tuple(v_932),3-proj-3-tuple(v_930))) in
        {476}let v_935: bitstring = catch-fail(aeadunpack(v_934)) in
        {477}let v_936: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_932))) in
        {478}let v_937: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_933))) && success?(1-proj-3-tuple(v_932))) then (if (not-caught-fail(v_936) && success?(is-true(success?(1-proj-2-tuple(v_936))))) then cipherstatepack(1-proj-2-tuple(v_936),increment_nonce(2-proj-2-tuple(v_933))) else fail-any) else fail-any)) in
        {479}let v_938: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_930)) && (success?(3-proj-3-tuple(v_932)) && success?(1-proj-3-tuple(v_932)))) then (if (not-caught-fail(v_933) && success?(is-true(success?(1-proj-2-tuple(v_933))))) then (if not-caught-fail(v_934) then (if (not-caught-fail(v_935) && success?(is-true(success?(1-proj-3-tuple(v_935))))) then (if not-caught-fail(v_937) then (v_937,3-proj-3-tuple(v_935),1-proj-3-tuple(v_935)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {480}let v_939: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_938),2-proj-3-tuple(v_932),3-proj-3-tuple(v_932)))) in
        {481}let v_940: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_930)) && success?(symmetricstatepack(1-proj-3-tuple(v_938),2-proj-3-tuple(v_932),3-proj-3-tuple(v_932)))) then (if (not-caught-fail(v_939) && success?(is-true(success?(1-proj-3-tuple(v_939))))) then symmetricstatepack(1-proj-3-tuple(v_939),2-proj-3-tuple(v_939),hash(3-proj-3-tuple(v_939),3-proj-3-tuple(v_930))) else fail-any) else fail-any)) in
        {482}let v_941: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_930)) && success?(1-proj-7-tuple(v_929))) then (if (not-caught-fail(v_932) && success?(is-true(success?(1-proj-3-tuple(v_932))))) then (if (not-caught-fail(v_938) && success?(is-true(success?(1-proj-3-tuple(v_938))))) then (if not-caught-fail(v_940) then (v_940,2-proj-3-tuple(v_938),3-proj-3-tuple(v_938)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {483}let v_942: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_941),2-proj-7-tuple(v_929),3-proj-7-tuple(v_929),4-proj-7-tuple(v_929),5-proj-7-tuple(v_929),6-proj-7-tuple(v_929),7-proj-7-tuple(v_929))) in
        {484}let (hs_943: handshakestate,plaintext_c_944: bitstring,valid_945: bool) = (if (not-caught-fail(v_929) && success?(is-true(success?(1-proj-7-tuple(v_929))))) then (if (not-caught-fail(v_930) && success?(is-true(success?(1-proj-3-tuple(v_930))))) then (if not-caught-fail(v_931) then (if (not-caught-fail(v_941) && success?(is-true(success?(1-proj-3-tuple(v_941))))) then (if (v_931 && 3-proj-3-tuple(v_941)) then (if not-caught-fail(v_942) then (v_942,2-proj-3-tuple(v_941),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {485}event RecvMsg(bob,charlie,stagepack_c(sid_a),plaintext_c_944);
        {486}insert statestore(bob,charlie,sid_a,statepack_d(hs_943,handshakestategetcs(hs_943),cs2_926))
    ) | (
        {488}!
        {506}get statestore(=bob,=charlie,=sid_a,statepack_d(hs_946: handshakestate,cs1_947: cipherstate,cs2_948: cipherstate)) in
        {489}let hs_949: handshakestate = handshakestatesetcs(hs_946,cs2_948) in
        {490}let v_950: bitstring = catch-fail(handshakestateunpack(hs_949)) in
        {491}let v_951: bitstring = catch-fail((empty,empty,empty)) in
        {492}let v_952: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_950))) in
        {493}let v_953: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_952))) in
        {494}let v_954: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_953),2-proj-2-tuple(v_953),3-proj-3-tuple(v_952),msg_d(bob,charlie))) in
        {495}let v_955: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_952))) in
        {496}let v_956: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_953))) && success?(1-proj-3-tuple(v_952))) then (if (not-caught-fail(v_955) && success?(is-true(success?(1-proj-2-tuple(v_955))))) then cipherstatepack(1-proj-2-tuple(v_955),increment_nonce(2-proj-2-tuple(v_953))) else fail-any) else fail-any)) in
        {497}let v_957: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_952)) && success?(1-proj-3-tuple(v_952))) then (if (not-caught-fail(v_953) && success?(is-true(success?(1-proj-2-tuple(v_953))))) then (if not-caught-fail(v_954) then (if not-caught-fail(v_956) then (v_956,v_954) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {498}let v_958: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_957),2-proj-3-tuple(v_952),3-proj-3-tuple(v_952)))) in
        {499}let v_959: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_957)) && success?(symmetricstatepack(1-proj-2-tuple(v_957),2-proj-3-tuple(v_952),3-proj-3-tuple(v_952)))) then (if (not-caught-fail(v_958) && success?(is-true(success?(1-proj-3-tuple(v_958))))) then symmetricstatepack(1-proj-3-tuple(v_958),2-proj-3-tuple(v_958),hash(3-proj-3-tuple(v_958),2-proj-2-tuple(v_957))) else fail-any) else fail-any)) in
        {500}let v_960: bitstring = catch-fail((if success?(1-proj-7-tuple(v_950)) then (if (not-caught-fail(v_952) && success?(is-true(success?(1-proj-3-tuple(v_952))))) then (if (not-caught-fail(v_957) && success?(is-true(success?(1-proj-2-tuple(v_957))))) then (if not-caught-fail(v_959) then (v_959,2-proj-2-tuple(v_957)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {501}let v_961: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_960),2-proj-7-tuple(v_950),3-proj-7-tuple(v_950),4-proj-7-tuple(v_950),5-proj-7-tuple(v_950),6-proj-7-tuple(v_950),7-proj-7-tuple(v_950))) in
        {502}let v_962: bitstring = catch-fail(concat3(1-proj-3-tuple(v_951),2-proj-3-tuple(v_951),2-proj-2-tuple(v_960))) in
        {503}let (hs_963: handshakestate,message_d_964: bitstring) = (if (not-caught-fail(v_950) && success?(is-true(success?(1-proj-7-tuple(v_950))))) then (if (not-caught-fail(v_951) && success?(is-true(success?(1-proj-3-tuple(v_951))))) then (if (not-caught-fail(v_960) && success?(is-true(success?(1-proj-2-tuple(v_960))))) then (if not-caught-fail(v_961) then (if not-caught-fail(v_962) then (v_961,v_962) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {504}event SendMsg(bob,charlie,stagepack_d(sid_a),msg_d(bob,charlie));
        {505}out(pub, message_d_964)
    ) | (
        {507}event LeakS(phase0,bob);
        {508}out(pub, key_s(bob))
    ) | (
        {509}phase 1;
        {510}event LeakS(phase1,bob);
        {511}out(pub, key_s(bob))
    )
)

-- Query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a_1084),m)) || sid_a_1084 <> sid_b; event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1083,stagepack_a(sid_a_1084),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) || sid_a_1084 <> sid_b; event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1083,stagepack_a(sid_a_1084),m)) || event(LeakS(phase0,alice)) || sid_a_1084 <> sid_b; event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a_1084),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) || sid_a_1084 <> sid_b; event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a_1084),m)) || event(LeakS(phase0,alice)) || sid_a_1084 <> sid_b; not attacker_p1(msg_a(alice,bob)); attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob)); attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice))); attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stagepack_b(sid_a_1084),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || sid_b <> sid_a_1084; event(RecvMsg(alice,bob,stagepack_b(sid_a_1084),m)) ==> event(SendMsg(bob,c_1083,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) || sid_b <> sid_a_1084; event(RecvMsg(alice,bob,stagepack_b(sid_a_1084),m)) ==> event(SendMsg(bob,c_1083,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || sid_b <> sid_a_1084; event(RecvMsg(alice,bob,stagepack_b(sid_a_1084),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) || sid_b <> sid_a_1084; event(RecvMsg(alice,bob,stagepack_b(sid_a_1084),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || sid_b <> sid_a_1084; not attacker_p1(msg_b(bob,alice)); attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice)); attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob))); attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a_1084),m)) || sid_a_1084 <> sid_b; event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1083,stagepack_c(sid_a_1084),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) || sid_a_1084 <> sid_b; event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1083,stagepack_c(sid_a_1084),m)) || event(LeakS(phase0,alice)) || sid_a_1084 <> sid_b; event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a_1084),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) || sid_a_1084 <> sid_b; event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a_1084),m)) || event(LeakS(phase0,alice)) || sid_a_1084 <> sid_b; not attacker_p1(msg_c(alice,bob)); attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob)); attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice))); attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stagepack_d(sid_a_1084),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || sid_b <> sid_a_1084; event(RecvMsg(alice,bob,stagepack_d(sid_a_1084),m)) ==> event(SendMsg(bob,c_1083,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) || sid_b <> sid_a_1084; event(RecvMsg(alice,bob,stagepack_d(sid_a_1084),m)) ==> event(SendMsg(bob,c_1083,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || sid_b <> sid_a_1084; event(RecvMsg(alice,bob,stagepack_d(sid_a_1084),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) || sid_b <> sid_a_1084; event(RecvMsg(alice,bob,stagepack_d(sid_a_1084),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || sid_b <> sid_a_1084; not attacker_p1(msg_d(bob,alice)); attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice)); attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob))); attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice)); not event(RecvEnd(true))
Completing...
200 rules inserted. The rule base contains 200 rules. 88 rules in the queue.
400 rules inserted. The rule base contains 388 rules. 70 rules in the queue.
600 rules inserted. The rule base contains 578 rules. 168 rules in the queue.
800 rules inserted. The rule base contains 770 rules. 162 rules in the queue.
1000 rules inserted. The rule base contains 961 rules. 225 rules in the queue.
1200 rules inserted. The rule base contains 1135 rules. 202 rules in the queue.
1400 rules inserted. The rule base contains 1304 rules. 219 rules in the queue.
1600 rules inserted. The rule base contains 1394 rules. 203 rules in the queue.
1800 rules inserted. The rule base contains 1541 rules. 227 rules in the queue.
2000 rules inserted. The rule base contains 1672 rules. 235 rules in the queue.
2200 rules inserted. The rule base contains 1810 rules. 258 rules in the queue.
2400 rules inserted. The rule base contains 1888 rules. 253 rules in the queue.
2600 rules inserted. The rule base contains 2052 rules. 239 rules in the queue.
2800 rules inserted. The rule base contains 2203 rules. 255 rules in the queue.
3000 rules inserted. The rule base contains 2359 rules. 217 rules in the queue.
3200 rules inserted. The rule base contains 2485 rules. 191 rules in the queue.
3400 rules inserted. The rule base contains 2605 rules. 196 rules in the queue.
3600 rules inserted. The rule base contains 2744 rules. 205 rules in the queue.
3800 rules inserted. The rule base contains 2871 rules. 219 rules in the queue.
4000 rules inserted. The rule base contains 2987 rules. 240 rules in the queue.
4200 rules inserted. The rule base contains 3131 rules. 193 rules in the queue.
4400 rules inserted. The rule base contains 3264 rules. 158 rules in the queue.
4600 rules inserted. The rule base contains 3396 rules. 159 rules in the queue.
4800 rules inserted. The rule base contains 3482 rules. 146 rules in the queue.
5000 rules inserted. The rule base contains 3570 rules. 52 rules in the queue.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a_1084),m)) || sid_a_1084 <> sid_b
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid_a[!1 = @sid_26266984]),msg_a(alice,bob))) -> end(RecvMsg(bob,alice,stagepack_a(sid_a[!1 = @sid_26266985]),msg_a(alice,bob)))
RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a_1084),m)) || sid_a_1084 <> sid_b is true.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1083,stagepack_a(sid_a_1084),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) || sid_a_1084 <> sid_b
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid_a[!1 = @sid_26266993]),msg_a(alice,bob))) -> end(RecvMsg(bob,alice,stagepack_a(sid_a[!1 = @sid_26266994]),msg_a(alice,bob)))
RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1083,stagepack_a(sid_a_1084),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) || sid_a_1084 <> sid_b is true.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1083,stagepack_a(sid_a_1084),m)) || event(LeakS(phase0,alice)) || sid_a_1084 <> sid_b
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid_a[!1 = @sid_26267003]),msg_a(alice,bob))) -> end(RecvMsg(bob,alice,stagepack_a(sid_a[!1 = @sid_26267004]),msg_a(alice,bob)))
RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1083,stagepack_a(sid_a_1084),m)) || event(LeakS(phase0,alice)) || sid_a_1084 <> sid_b is true.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a_1084),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) || sid_a_1084 <> sid_b
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid_a[!1 = @sid_26267013]),msg_a(alice,bob))) -> end(RecvMsg(bob,alice,stagepack_a(sid_a[!1 = @sid_26267014]),msg_a(alice,bob)))
RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a_1084),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) || sid_a_1084 <> sid_b is true.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a_1084),m)) || event(LeakS(phase0,alice)) || sid_a_1084 <> sid_b
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid_a[!1 = @sid_26267022]),msg_a(alice,bob))) -> end(RecvMsg(bob,alice,stagepack_a(sid_a[!1 = @sid_26267023]),msg_a(alice,bob)))
RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a_1084),m)) || event(LeakS(phase0,alice)) || sid_a_1084 <> sid_b is true.
Starting query not attacker_p1(msg_a(alice,bob))
goal reachable: begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid_a[!1 = @sid_26267029]),msg_a(alice,bob))) -> attacker_p1(msg_a(alice,bob))
Abbreviations:
sid = sid_a[!1 = @sid_26267090]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {17}.
table(statestore(alice,bob,sid,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

3. The entry statestore(alice,bob,sid,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 2 may be read at get {47}.
The event SendMsg(alice,bob,stagepack_a(sid),msg_a(alice,bob)) may be executed at {44}.
So the message concat3(dhexp(key_e(alice,bob,sid),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid),g)),msg_a(alice,bob))) may be sent on channel pub at output {46}.
mess(pub,concat3(dhexp(key_e(alice,bob,sid),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid),g)),msg_a(alice,bob)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(dhexp(key_e(alice,bob,sid),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid),g)),msg_a(alice,bob))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e(alice,bob,sid),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid),g)),msg_a(alice,bob))) by listening on this channel.
attacker(concat3(dhexp(key_e(alice,bob,sid),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid),g)),msg_a(alice,bob)))).

5. By 4, the attacker may know concat3(dhexp(key_e(alice,bob,sid),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid),g)),msg_a(alice,bob))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid),g)),msg_a(alice,bob)).
attacker(encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid),g)),msg_a(alice,bob))).

6. By 5, the attacker may know encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid),g)),msg_a(alice,bob)).
So the attacker may know encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid),g)),msg_a(alice,bob)) in phase 1.
attacker_p1(encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid),g)),msg_a(alice,bob))).

7. By 4, the attacker may know concat3(dhexp(key_e(alice,bob,sid),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid),g)),msg_a(alice,bob))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_e(alice,bob,sid),g).
attacker(dhexp(key_e(alice,bob,sid),g)).

8. The message dhexp(key_s(bob),g) may be sent on channel pub at output {260}.
mess(pub,dhexp(key_s(bob),g)).

9. By 1, the attacker may have the channel pub.
By 8, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

10. Using the function empty the attacker may obtain empty.
attacker(empty).

11. Using the function somename the attacker may obtain somename.
attacker(somename).

12. By 11, the attacker may know somename.
By 10, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

13. By 12, the attacker may know hash(somename,empty).
By 10, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

14. By 13, the attacker may know hash(hash(somename,empty),empty).
By 9, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))).

15. By 14, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)).
By 7, the attacker may know dhexp(key_e(alice,bob,sid),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid),g))).

16. By 15, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid),g)).
So the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid),g)) in phase 1.
attacker_p1(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid),g))).

17. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

18. The event LeakS(phase0,bob) may be executed at {380}.
So the message key_s(bob) may be sent on channel pub at output {381}.
mess(pub,key_s(bob)).

19. By 1, the attacker may have the channel pub.
By 18, the message key_s(bob) may be sent on this channel.
So the attacker may obtain the message key_s(bob) by listening on this channel.
attacker(key_s(bob)).

20. By 19, the attacker may know key_s(bob).
By 7, the attacker may know dhexp(key_e(alice,bob,sid),g).
Using the function dhexp the attacker may obtain dhexp(key_e(alice,bob,sid),dhexp(key_s(bob),g)).
attacker(dhexp(key_e(alice,bob,sid),dhexp(key_s(bob),g))).

21. By 12, the attacker may know hash(somename,empty).
By 20, the attacker may know dhexp(key_e(alice,bob,sid),dhexp(key_s(bob),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid),dhexp(key_s(bob),g))).
attacker(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid),dhexp(key_s(bob),g)))).

22. By 21, the attacker may know hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid),dhexp(key_s(bob),g))).
So the attacker may know hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid),dhexp(key_s(bob),g))) in phase 1.
attacker_p1(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid),dhexp(key_s(bob),g)))).

23. By 22, the attacker may know hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid),dhexp(key_s(bob),g))) in phase 1.
By 17, the attacker may know minnonce in phase 1.
By 16, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid),g)) in phase 1.
By 6, the attacker may know encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid),g)),msg_a(alice,bob)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid),g)),msg_a(alice,bob)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid),g)),msg_a(alice,bob))).

24. By 23, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid),g)),msg_a(alice,bob)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob) in phase 1.
attacker_p1(msg_a(alice,bob)).


RESULT not attacker_p1(msg_a(alice,bob)) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob))
goal reachable: begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid_a[!1 = @sid_26267113]),msg_a(alice,bob))) -> attacker_p1(msg_a(alice,bob))
goal reachable: begin(LeakS(phase1,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid_a[!1 = @sid_26267115]),msg_a(alice,bob))) -> attacker_p1(msg_a(alice,bob))
RESULT attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob)) is true.
Starting query attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice)))
goal reachable: begin(LeakS(phase1,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid_a[!1 = @sid_26267123]),msg_a(alice,bob))) -> attacker_p1(msg_a(alice,bob))
Abbreviations:
sid_26267205 = sid_a[!1 = @sid_26267182]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_26267205,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {17}.
table(statestore(alice,bob,sid_26267205,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

3. The entry statestore(alice,bob,sid_26267205,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 2 may be read at get {47}.
The event SendMsg(alice,bob,stagepack_a(sid_26267205),msg_a(alice,bob)) may be executed at {44}.
So the message concat3(dhexp(key_e(alice,bob,sid_26267205),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_26267205),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267205),g)),msg_a(alice,bob))) may be sent on channel pub at output {46}.
mess(pub,concat3(dhexp(key_e(alice,bob,sid_26267205),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_26267205),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267205),g)),msg_a(alice,bob)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(dhexp(key_e(alice,bob,sid_26267205),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_26267205),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267205),g)),msg_a(alice,bob))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e(alice,bob,sid_26267205),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_26267205),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267205),g)),msg_a(alice,bob))) by listening on this channel.
attacker(concat3(dhexp(key_e(alice,bob,sid_26267205),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_26267205),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267205),g)),msg_a(alice,bob)))).

5. By 4, the attacker may know concat3(dhexp(key_e(alice,bob,sid_26267205),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_26267205),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267205),g)),msg_a(alice,bob))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_26267205),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267205),g)),msg_a(alice,bob)).
attacker(encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_26267205),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267205),g)),msg_a(alice,bob))).

6. By 5, the attacker may know encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_26267205),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267205),g)),msg_a(alice,bob)).
So the attacker may know encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_26267205),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267205),g)),msg_a(alice,bob)) in phase 1.
attacker_p1(encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_26267205),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267205),g)),msg_a(alice,bob))).

7. By 4, the attacker may know concat3(dhexp(key_e(alice,bob,sid_26267205),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_26267205),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267205),g)),msg_a(alice,bob))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_e(alice,bob,sid_26267205),g).
attacker(dhexp(key_e(alice,bob,sid_26267205),g)).

8. By 7, the attacker may know dhexp(key_e(alice,bob,sid_26267205),g).
So the attacker may know dhexp(key_e(alice,bob,sid_26267205),g) in phase 1.
attacker_p1(dhexp(key_e(alice,bob,sid_26267205),g)).

9. Using the function g the attacker may obtain g in phase 1.
attacker_p1(g).

10. Using the function pub the attacker may obtain pub in phase 1.
attacker_p1(pub).

11. The event LeakS(phase1,bob) may be executed at {383}.
So the message key_s(bob) may be sent on channel pub in phase 1 at output {384}.
mess_p1(pub,key_s(bob)).

12. By 10, the attacker may have the channel pub in phase 1.
By 11, the message key_s(bob) in phase 1 may be sent on this channel.
So the attacker may obtain the message key_s(bob) in phase 1 by listening on this channel.
attacker_p1(key_s(bob)).

13. By 12, the attacker may know key_s(bob) in phase 1.
By 9, the attacker may know g in phase 1.
Using the function dhexp the attacker may obtain dhexp(key_s(bob),g) in phase 1.
attacker_p1(dhexp(key_s(bob),g)).

14. Using the function empty the attacker may obtain empty in phase 1.
attacker_p1(empty).

15. Using the function somename the attacker may obtain somename in phase 1.
attacker_p1(somename).

16. By 15, the attacker may know somename in phase 1.
By 14, the attacker may know empty in phase 1.
Using the function hash the attacker may obtain hash(somename,empty) in phase 1.
attacker_p1(hash(somename,empty)).

17. By 16, the attacker may know hash(somename,empty) in phase 1.
By 14, the attacker may know empty in phase 1.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty) in phase 1.
attacker_p1(hash(hash(somename,empty),empty)).

18. By 17, the attacker may know hash(hash(somename,empty),empty) in phase 1.
By 13, the attacker may know dhexp(key_s(bob),g) in phase 1.
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)) in phase 1.
attacker_p1(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))).

19. By 18, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)) in phase 1.
By 8, the attacker may know dhexp(key_e(alice,bob,sid_26267205),g) in phase 1.
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267205),g)) in phase 1.
attacker_p1(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267205),g))).

20. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

21. By 12, the attacker may know key_s(bob) in phase 1.
By 8, the attacker may know dhexp(key_e(alice,bob,sid_26267205),g) in phase 1.
Using the function dhexp the attacker may obtain dhexp(key_e(alice,bob,sid_26267205),dhexp(key_s(bob),g)) in phase 1.
attacker_p1(dhexp(key_e(alice,bob,sid_26267205),dhexp(key_s(bob),g))).

22. By 16, the attacker may know hash(somename,empty) in phase 1.
By 21, the attacker may know dhexp(key_e(alice,bob,sid_26267205),dhexp(key_s(bob),g)) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_26267205),dhexp(key_s(bob),g))) in phase 1.
attacker_p1(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_26267205),dhexp(key_s(bob),g)))).

23. By 22, the attacker may know hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_26267205),dhexp(key_s(bob),g))) in phase 1.
By 20, the attacker may know minnonce in phase 1.
By 19, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267205),g)) in phase 1.
By 6, the attacker may know encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_26267205),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267205),g)),msg_a(alice,bob)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267205),g)),msg_a(alice,bob)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267205),g)),msg_a(alice,bob))).

24. By 23, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267205),g)),msg_a(alice,bob)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob) in phase 1.
attacker_p1(msg_a(alice,bob)).


RESULT attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice))) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob))
goal reachable: begin(LeakS(phase1,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid_a[!1 = @sid_26267208]),msg_a(alice,bob))) -> attacker_p1(msg_a(alice,bob))
Abbreviations:
sid_26267289 = sid_a[!1 = @sid_26267266]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_26267289,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {17}.
table(statestore(alice,bob,sid_26267289,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

3. The entry statestore(alice,bob,sid_26267289,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 2 may be read at get {47}.
The event SendMsg(alice,bob,stagepack_a(sid_26267289),msg_a(alice,bob)) may be executed at {44}.
So the message concat3(dhexp(key_e(alice,bob,sid_26267289),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_26267289),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267289),g)),msg_a(alice,bob))) may be sent on channel pub at output {46}.
mess(pub,concat3(dhexp(key_e(alice,bob,sid_26267289),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_26267289),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267289),g)),msg_a(alice,bob)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(dhexp(key_e(alice,bob,sid_26267289),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_26267289),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267289),g)),msg_a(alice,bob))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e(alice,bob,sid_26267289),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_26267289),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267289),g)),msg_a(alice,bob))) by listening on this channel.
attacker(concat3(dhexp(key_e(alice,bob,sid_26267289),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_26267289),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267289),g)),msg_a(alice,bob)))).

5. By 4, the attacker may know concat3(dhexp(key_e(alice,bob,sid_26267289),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_26267289),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267289),g)),msg_a(alice,bob))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_26267289),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267289),g)),msg_a(alice,bob)).
attacker(encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_26267289),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267289),g)),msg_a(alice,bob))).

6. By 5, the attacker may know encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_26267289),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267289),g)),msg_a(alice,bob)).
So the attacker may know encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_26267289),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267289),g)),msg_a(alice,bob)) in phase 1.
attacker_p1(encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_26267289),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267289),g)),msg_a(alice,bob))).

7. By 4, the attacker may know concat3(dhexp(key_e(alice,bob,sid_26267289),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_26267289),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267289),g)),msg_a(alice,bob))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_e(alice,bob,sid_26267289),g).
attacker(dhexp(key_e(alice,bob,sid_26267289),g)).

8. By 7, the attacker may know dhexp(key_e(alice,bob,sid_26267289),g).
So the attacker may know dhexp(key_e(alice,bob,sid_26267289),g) in phase 1.
attacker_p1(dhexp(key_e(alice,bob,sid_26267289),g)).

9. Using the function g the attacker may obtain g in phase 1.
attacker_p1(g).

10. Using the function pub the attacker may obtain pub in phase 1.
attacker_p1(pub).

11. The event LeakS(phase1,bob) may be executed at {383}.
So the message key_s(bob) may be sent on channel pub in phase 1 at output {384}.
mess_p1(pub,key_s(bob)).

12. By 10, the attacker may have the channel pub in phase 1.
By 11, the message key_s(bob) in phase 1 may be sent on this channel.
So the attacker may obtain the message key_s(bob) in phase 1 by listening on this channel.
attacker_p1(key_s(bob)).

13. By 12, the attacker may know key_s(bob) in phase 1.
By 9, the attacker may know g in phase 1.
Using the function dhexp the attacker may obtain dhexp(key_s(bob),g) in phase 1.
attacker_p1(dhexp(key_s(bob),g)).

14. Using the function empty the attacker may obtain empty in phase 1.
attacker_p1(empty).

15. Using the function somename the attacker may obtain somename in phase 1.
attacker_p1(somename).

16. By 15, the attacker may know somename in phase 1.
By 14, the attacker may know empty in phase 1.
Using the function hash the attacker may obtain hash(somename,empty) in phase 1.
attacker_p1(hash(somename,empty)).

17. By 16, the attacker may know hash(somename,empty) in phase 1.
By 14, the attacker may know empty in phase 1.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty) in phase 1.
attacker_p1(hash(hash(somename,empty),empty)).

18. By 17, the attacker may know hash(hash(somename,empty),empty) in phase 1.
By 13, the attacker may know dhexp(key_s(bob),g) in phase 1.
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)) in phase 1.
attacker_p1(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))).

19. By 18, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)) in phase 1.
By 8, the attacker may know dhexp(key_e(alice,bob,sid_26267289),g) in phase 1.
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267289),g)) in phase 1.
attacker_p1(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267289),g))).

20. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

21. By 12, the attacker may know key_s(bob) in phase 1.
By 8, the attacker may know dhexp(key_e(alice,bob,sid_26267289),g) in phase 1.
Using the function dhexp the attacker may obtain dhexp(key_e(alice,bob,sid_26267289),dhexp(key_s(bob),g)) in phase 1.
attacker_p1(dhexp(key_e(alice,bob,sid_26267289),dhexp(key_s(bob),g))).

22. By 16, the attacker may know hash(somename,empty) in phase 1.
By 21, the attacker may know dhexp(key_e(alice,bob,sid_26267289),dhexp(key_s(bob),g)) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_26267289),dhexp(key_s(bob),g))) in phase 1.
attacker_p1(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_26267289),dhexp(key_s(bob),g)))).

23. By 22, the attacker may know hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_26267289),dhexp(key_s(bob),g))) in phase 1.
By 20, the attacker may know minnonce in phase 1.
By 19, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267289),g)) in phase 1.
By 6, the attacker may know encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_26267289),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267289),g)),msg_a(alice,bob)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267289),g)),msg_a(alice,bob)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267289),g)),msg_a(alice,bob))).

24. By 23, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267289),g)),msg_a(alice,bob)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob) in phase 1.
attacker_p1(msg_a(alice,bob)).


RESULT attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a_1084),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || sid_b <> sid_a_1084
goal reachable: begin(SendMsg(bob,charlie,stagepack_b(sid_a[!1 = @sid_26267292]),msg_b(bob,charlie))) && begin(SendMsg(alice,bob,stagepack_a(sid_a[!1 = @sid_26267293]),msg_a(alice,bob))) -> end(RecvMsg(alice,bob,stagepack_b(sid_a[!1 = @sid_26267293]),msg_b(bob,charlie)))
Abbreviations:
sid_26267366 = sid_a[!1 = @sid_26267356]
sid_26267367 = sid_a[!1 = @sid_26267329]

1. The entry statestore(alice,bob,sid_26267366,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {17}.
table(statestore(alice,bob,sid_26267366,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

2. The entry statestore(alice,bob,sid_26267366,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 1 may be read at get {47}.
The event SendMsg(alice,bob,stagepack_a(sid_26267366),msg_a(alice,bob)) may be executed at {44}.
So the entry statestore(alice,bob,sid_26267366,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267366),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267366),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267366),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267366),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267366),g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26267366),g),key_e(alice,bob,sid_26267366)),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {45}.
table(statestore(alice,bob,sid_26267366,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267366),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267366),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267366),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267366),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267366),g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26267366),g),key_e(alice,bob,sid_26267366)),dhexp(key_s(bob),g),empty,empty,true)))).

3. The entry statestore(bob,charlie,sid_26267367,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {399}.
table(statestore(bob,charlie,sid_26267367,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false)))).

4. The entry statestore(alice,bob,sid_26267366,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 1 may be read at get {47}.
The event SendMsg(alice,bob,stagepack_a(sid_26267366),msg_a(alice,bob)) may be executed at {44}.
So the message concat3(dhexp(key_e(alice,bob,sid_26267366),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267366),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267366),g)),msg_a(alice,bob))) may be sent on channel pub at output {46}.
mess(pub,concat3(dhexp(key_e(alice,bob,sid_26267366),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267366),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267366),g)),msg_a(alice,bob)))).

5. The entry statestore(bob,charlie,sid_26267367,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 3 may be read at get {428}.
The message concat3(dhexp(key_e(alice,bob,sid_26267366),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267366),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267366),g)),msg_a(alice,bob))) that may be sent on channel pub by 4 may be received at input {400}.
We have dhexp(key_e(alice,bob,sid_26267366),g) <> caught-fail.
So the entry statestore(bob,charlie,sid_26267367,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267366),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267366),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267366),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267366),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267366),g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_26267366),g),empty,false))) may be inserted in a table at insert {427}.
table(statestore(bob,charlie,sid_26267367,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267366),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267366),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267366),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267366),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267366),g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_26267366),g),empty,false)))).

6. The entry statestore(bob,charlie,sid_26267367,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267366),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267366),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267366),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267366),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267366),g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_26267366),g),empty,false))) that may be in a table by 5 may be read at get {466}.
The event SendMsg(bob,charlie,stagepack_b(sid_26267367),msg_b(bob,charlie)) may be executed at {463}.
So the message concat3(dhexp(key_e(bob,charlie,sid_26267367),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267366),g))),dhexp(key_e(alice,bob,sid_26267366),dhexp(key_e(bob,charlie,sid_26267367),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267366),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267366),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267366),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267367),g)),msg_b(bob,charlie))) may be sent on channel pub at output {465}.
mess(pub,concat3(dhexp(key_e(bob,charlie,sid_26267367),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267366),g))),dhexp(key_e(alice,bob,sid_26267366),dhexp(key_e(bob,charlie,sid_26267367),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267366),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267366),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267366),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267367),g)),msg_b(bob,charlie)))).

7. The entry statestore(alice,bob,sid_26267366,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267366),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267366),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267366),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267366),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267366),g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26267366),g),key_e(alice,bob,sid_26267366)),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 2 may be read at get {84}.
The message concat3(dhexp(key_e(bob,charlie,sid_26267367),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267366),g))),dhexp(key_e(alice,bob,sid_26267366),dhexp(key_e(bob,charlie,sid_26267367),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267366),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267366),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267366),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267367),g)),msg_b(bob,charlie))) that may be sent on channel pub by 6 may be received at input {48}.
We have dhexp(key_e(bob,charlie,sid_26267367),g) <> caught-fail.
So event RecvMsg(alice,bob,stagepack_b(sid_26267366),msg_b(bob,charlie)) may be executed at {82}.
end(RecvMsg(alice,bob,stagepack_b(sid_26267366),msg_b(bob,charlie))).


RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a_1084),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || sid_b <> sid_a_1084 cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a_1084),m)) ==> event(SendMsg(bob,c_1083,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) || sid_b <> sid_a_1084
goal reachable: begin(SendMsg(bob,charlie,stagepack_b(sid_a[!1 = @sid_26267370]),msg_b(bob,charlie))) && begin(SendMsg(alice,bob,stagepack_a(sid_a[!1 = @sid_26267371]),msg_a(alice,bob))) -> end(RecvMsg(alice,bob,stagepack_b(sid_a[!1 = @sid_26267371]),msg_b(bob,charlie)))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid_a[!1 = @sid_26267374]),msg_b(bob,alice))) && begin(SendMsg(alice,bob,stagepack_a(sid_a[!1 = @sid_26267375]),msg_a(alice,bob))) -> end(RecvMsg(alice,bob,stagepack_b(sid_a[!1 = @sid_26267375]),msg_b(bob,alice)))
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a_1084),m)) ==> event(SendMsg(bob,c_1083,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) || sid_b <> sid_a_1084 is true.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a_1084),m)) ==> event(SendMsg(bob,c_1083,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || sid_b <> sid_a_1084
goal reachable: begin(SendMsg(bob,charlie,stagepack_b(sid_a[!1 = @sid_26267384]),msg_b(bob,charlie))) && begin(SendMsg(alice,bob,stagepack_a(sid_a[!1 = @sid_26267385]),msg_a(alice,bob))) -> end(RecvMsg(alice,bob,stagepack_b(sid_a[!1 = @sid_26267385]),msg_b(bob,charlie)))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid_a[!1 = @sid_26267388]),msg_b(bob,alice))) && begin(SendMsg(alice,bob,stagepack_a(sid_a[!1 = @sid_26267389]),msg_a(alice,bob))) -> end(RecvMsg(alice,bob,stagepack_b(sid_a[!1 = @sid_26267389]),msg_b(bob,alice)))
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a_1084),m)) ==> event(SendMsg(bob,c_1083,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || sid_b <> sid_a_1084 is true.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a_1084),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) || sid_b <> sid_a_1084
goal reachable: begin(SendMsg(bob,charlie,stagepack_b(sid_a[!1 = @sid_26267398]),msg_b(bob,charlie))) && begin(SendMsg(alice,bob,stagepack_a(sid_a[!1 = @sid_26267399]),msg_a(alice,bob))) -> end(RecvMsg(alice,bob,stagepack_b(sid_a[!1 = @sid_26267399]),msg_b(bob,charlie)))
Abbreviations:
sid_26267472 = sid_a[!1 = @sid_26267462]
sid_26267473 = sid_a[!1 = @sid_26267435]

1. The entry statestore(alice,bob,sid_26267472,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {17}.
table(statestore(alice,bob,sid_26267472,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

2. The entry statestore(alice,bob,sid_26267472,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 1 may be read at get {47}.
The event SendMsg(alice,bob,stagepack_a(sid_26267472),msg_a(alice,bob)) may be executed at {44}.
So the entry statestore(alice,bob,sid_26267472,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267472),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267472),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267472),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267472),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267472),g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26267472),g),key_e(alice,bob,sid_26267472)),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {45}.
table(statestore(alice,bob,sid_26267472,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267472),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267472),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267472),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267472),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267472),g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26267472),g),key_e(alice,bob,sid_26267472)),dhexp(key_s(bob),g),empty,empty,true)))).

3. The entry statestore(bob,charlie,sid_26267473,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {399}.
table(statestore(bob,charlie,sid_26267473,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false)))).

4. The entry statestore(alice,bob,sid_26267472,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 1 may be read at get {47}.
The event SendMsg(alice,bob,stagepack_a(sid_26267472),msg_a(alice,bob)) may be executed at {44}.
So the message concat3(dhexp(key_e(alice,bob,sid_26267472),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267472),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267472),g)),msg_a(alice,bob))) may be sent on channel pub at output {46}.
mess(pub,concat3(dhexp(key_e(alice,bob,sid_26267472),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267472),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267472),g)),msg_a(alice,bob)))).

5. The entry statestore(bob,charlie,sid_26267473,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 3 may be read at get {428}.
The message concat3(dhexp(key_e(alice,bob,sid_26267472),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267472),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267472),g)),msg_a(alice,bob))) that may be sent on channel pub by 4 may be received at input {400}.
We have dhexp(key_e(alice,bob,sid_26267472),g) <> caught-fail.
So the entry statestore(bob,charlie,sid_26267473,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267472),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267472),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267472),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267472),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267472),g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_26267472),g),empty,false))) may be inserted in a table at insert {427}.
table(statestore(bob,charlie,sid_26267473,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267472),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267472),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267472),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267472),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267472),g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_26267472),g),empty,false)))).

6. The entry statestore(bob,charlie,sid_26267473,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267472),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267472),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267472),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267472),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267472),g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_26267472),g),empty,false))) that may be in a table by 5 may be read at get {466}.
The event SendMsg(bob,charlie,stagepack_b(sid_26267473),msg_b(bob,charlie)) may be executed at {463}.
So the message concat3(dhexp(key_e(bob,charlie,sid_26267473),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267472),g))),dhexp(key_e(alice,bob,sid_26267472),dhexp(key_e(bob,charlie,sid_26267473),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267472),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267472),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267472),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267473),g)),msg_b(bob,charlie))) may be sent on channel pub at output {465}.
mess(pub,concat3(dhexp(key_e(bob,charlie,sid_26267473),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267472),g))),dhexp(key_e(alice,bob,sid_26267472),dhexp(key_e(bob,charlie,sid_26267473),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267472),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267472),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267472),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267473),g)),msg_b(bob,charlie)))).

7. The entry statestore(alice,bob,sid_26267472,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267472),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267472),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267472),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267472),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267472),g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26267472),g),key_e(alice,bob,sid_26267472)),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 2 may be read at get {84}.
The message concat3(dhexp(key_e(bob,charlie,sid_26267473),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267472),g))),dhexp(key_e(alice,bob,sid_26267472),dhexp(key_e(bob,charlie,sid_26267473),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267472),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267472),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267472),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267473),g)),msg_b(bob,charlie))) that may be sent on channel pub by 6 may be received at input {48}.
We have dhexp(key_e(bob,charlie,sid_26267473),g) <> caught-fail.
So event RecvMsg(alice,bob,stagepack_b(sid_26267472),msg_b(bob,charlie)) may be executed at {82}.
end(RecvMsg(alice,bob,stagepack_b(sid_26267472),msg_b(bob,charlie))).


RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a_1084),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) || sid_b <> sid_a_1084 cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a_1084),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || sid_b <> sid_a_1084
goal reachable: begin(SendMsg(bob,charlie,stagepack_b(sid_a[!1 = @sid_26267476]),msg_b(bob,charlie))) && begin(SendMsg(alice,bob,stagepack_a(sid_a[!1 = @sid_26267477]),msg_a(alice,bob))) -> end(RecvMsg(alice,bob,stagepack_b(sid_a[!1 = @sid_26267477]),msg_b(bob,charlie)))
Abbreviations:
sid_26267550 = sid_a[!1 = @sid_26267540]
sid_26267551 = sid_a[!1 = @sid_26267513]

1. The entry statestore(alice,bob,sid_26267550,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {17}.
table(statestore(alice,bob,sid_26267550,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

2. The entry statestore(alice,bob,sid_26267550,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 1 may be read at get {47}.
The event SendMsg(alice,bob,stagepack_a(sid_26267550),msg_a(alice,bob)) may be executed at {44}.
So the entry statestore(alice,bob,sid_26267550,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267550),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267550),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267550),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267550),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267550),g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26267550),g),key_e(alice,bob,sid_26267550)),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {45}.
table(statestore(alice,bob,sid_26267550,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267550),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267550),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267550),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267550),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267550),g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26267550),g),key_e(alice,bob,sid_26267550)),dhexp(key_s(bob),g),empty,empty,true)))).

3. The entry statestore(bob,charlie,sid_26267551,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {399}.
table(statestore(bob,charlie,sid_26267551,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false)))).

4. The entry statestore(alice,bob,sid_26267550,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 1 may be read at get {47}.
The event SendMsg(alice,bob,stagepack_a(sid_26267550),msg_a(alice,bob)) may be executed at {44}.
So the message concat3(dhexp(key_e(alice,bob,sid_26267550),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267550),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267550),g)),msg_a(alice,bob))) may be sent on channel pub at output {46}.
mess(pub,concat3(dhexp(key_e(alice,bob,sid_26267550),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267550),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267550),g)),msg_a(alice,bob)))).

5. The entry statestore(bob,charlie,sid_26267551,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 3 may be read at get {428}.
The message concat3(dhexp(key_e(alice,bob,sid_26267550),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267550),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267550),g)),msg_a(alice,bob))) that may be sent on channel pub by 4 may be received at input {400}.
We have dhexp(key_e(alice,bob,sid_26267550),g) <> caught-fail.
So the entry statestore(bob,charlie,sid_26267551,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267550),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267550),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267550),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267550),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267550),g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_26267550),g),empty,false))) may be inserted in a table at insert {427}.
table(statestore(bob,charlie,sid_26267551,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267550),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267550),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267550),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267550),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267550),g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_26267550),g),empty,false)))).

6. The entry statestore(bob,charlie,sid_26267551,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267550),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267550),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267550),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267550),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267550),g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_26267550),g),empty,false))) that may be in a table by 5 may be read at get {466}.
The event SendMsg(bob,charlie,stagepack_b(sid_26267551),msg_b(bob,charlie)) may be executed at {463}.
So the message concat3(dhexp(key_e(bob,charlie,sid_26267551),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267550),g))),dhexp(key_e(alice,bob,sid_26267550),dhexp(key_e(bob,charlie,sid_26267551),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267550),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267550),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267550),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267551),g)),msg_b(bob,charlie))) may be sent on channel pub at output {465}.
mess(pub,concat3(dhexp(key_e(bob,charlie,sid_26267551),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267550),g))),dhexp(key_e(alice,bob,sid_26267550),dhexp(key_e(bob,charlie,sid_26267551),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267550),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267550),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267550),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267551),g)),msg_b(bob,charlie)))).

7. The entry statestore(alice,bob,sid_26267550,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267550),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267550),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267550),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267550),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267550),g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26267550),g),key_e(alice,bob,sid_26267550)),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 2 may be read at get {84}.
The message concat3(dhexp(key_e(bob,charlie,sid_26267551),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267550),g))),dhexp(key_e(alice,bob,sid_26267550),dhexp(key_e(bob,charlie,sid_26267551),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267550),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267550),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267550),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267551),g)),msg_b(bob,charlie))) that may be sent on channel pub by 6 may be received at input {48}.
We have dhexp(key_e(bob,charlie,sid_26267551),g) <> caught-fail.
So event RecvMsg(alice,bob,stagepack_b(sid_26267550),msg_b(bob,charlie)) may be executed at {82}.
end(RecvMsg(alice,bob,stagepack_b(sid_26267550),msg_b(bob,charlie))).


RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a_1084),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || sid_b <> sid_a_1084 cannot be proved.
Starting query not attacker_p1(msg_b(bob,alice))
RESULT not attacker_p1(msg_b(bob,alice)) is true.
Starting query attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice))
RESULT attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice)) is true.
Starting query attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob)))
RESULT attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob))) is true.
Starting query attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice))
RESULT attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a_1084),m)) || sid_a_1084 <> sid_b
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid_a[!1 = @sid_26267555]),msg_c(alice,bob))) && begin(SendMsg(bob,alice,stagepack_b(sid_a[!1 = @sid_26267556]),msg_b(bob,alice))) && begin(SendMsg(alice,bob,stagepack_a(sid_a[!1 = @sid_26267555]),msg_a(alice,bob))) -> end(RecvMsg(bob,alice,stagepack_c(sid_a[!1 = @sid_26267556]),msg_c(alice,bob)))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a_1084),m)) || sid_a_1084 <> sid_b is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1083,stagepack_c(sid_a_1084),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) || sid_a_1084 <> sid_b
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid_a[!1 = @sid_26267564]),msg_c(alice,bob))) && begin(SendMsg(bob,alice,stagepack_b(sid_a[!1 = @sid_26267565]),msg_b(bob,alice))) && begin(SendMsg(alice,bob,stagepack_a(sid_a[!1 = @sid_26267564]),msg_a(alice,bob))) -> end(RecvMsg(bob,alice,stagepack_c(sid_a[!1 = @sid_26267565]),msg_c(alice,bob)))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1083,stagepack_c(sid_a_1084),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) || sid_a_1084 <> sid_b is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1083,stagepack_c(sid_a_1084),m)) || event(LeakS(phase0,alice)) || sid_a_1084 <> sid_b
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid_a[!1 = @sid_26267574]),msg_c(alice,bob))) && begin(SendMsg(bob,alice,stagepack_b(sid_a[!1 = @sid_26267575]),msg_b(bob,alice))) && begin(SendMsg(alice,bob,stagepack_a(sid_a[!1 = @sid_26267574]),msg_a(alice,bob))) -> end(RecvMsg(bob,alice,stagepack_c(sid_a[!1 = @sid_26267575]),msg_c(alice,bob)))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1083,stagepack_c(sid_a_1084),m)) || event(LeakS(phase0,alice)) || sid_a_1084 <> sid_b is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a_1084),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) || sid_a_1084 <> sid_b
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid_a[!1 = @sid_26267584]),msg_c(alice,bob))) && begin(SendMsg(bob,alice,stagepack_b(sid_a[!1 = @sid_26267585]),msg_b(bob,alice))) && begin(SendMsg(alice,bob,stagepack_a(sid_a[!1 = @sid_26267584]),msg_a(alice,bob))) -> end(RecvMsg(bob,alice,stagepack_c(sid_a[!1 = @sid_26267585]),msg_c(alice,bob)))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a_1084),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) || sid_a_1084 <> sid_b is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a_1084),m)) || event(LeakS(phase0,alice)) || sid_a_1084 <> sid_b
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid_a[!1 = @sid_26267593]),msg_c(alice,bob))) && begin(SendMsg(bob,alice,stagepack_b(sid_a[!1 = @sid_26267594]),msg_b(bob,alice))) && begin(SendMsg(alice,bob,stagepack_a(sid_a[!1 = @sid_26267593]),msg_a(alice,bob))) -> end(RecvMsg(bob,alice,stagepack_c(sid_a[!1 = @sid_26267594]),msg_c(alice,bob)))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a_1084),m)) || event(LeakS(phase0,alice)) || sid_a_1084 <> sid_b is true.
Starting query not attacker_p1(msg_c(alice,bob))
RESULT not attacker_p1(msg_c(alice,bob)) is true.
Starting query attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob))
RESULT attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob)) is true.
Starting query attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice)))
RESULT attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice))) is true.
Starting query attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob))
RESULT attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a_1084),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || sid_b <> sid_a_1084
goal reachable: begin(SendMsg(bob,charlie,stagepack_d(sid_a[!1 = @sid_26267603]),msg_d(bob,charlie))) && begin(SendMsg(alice,bob,stagepack_c(sid_a[!1 = @sid_26267604]),msg_c(alice,bob))) && begin(SendMsg(bob,charlie,stagepack_b(sid_a[!1 = @sid_26267603]),msg_b(bob,charlie))) && begin(SendMsg(alice,bob,stagepack_a(sid_a[!1 = @sid_26267604]),msg_a(alice,bob))) -> end(RecvMsg(alice,bob,stagepack_d(sid_a[!1 = @sid_26267604]),msg_d(bob,charlie)))
Abbreviations:
sid_26267850 = sid_a[!1 = @sid_26267837]
sid_26267851 = sid_a[!1 = @sid_26267782]

1. The entry statestore(alice,bob,sid_26267850,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {17}.
table(statestore(alice,bob,sid_26267850,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

2. The entry statestore(alice,bob,sid_26267850,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 1 may be read at get {47}.
The event SendMsg(alice,bob,stagepack_a(sid_26267850),msg_a(alice,bob)) may be executed at {44}.
So the entry statestore(alice,bob,sid_26267850,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26267850),g),key_e(alice,bob,sid_26267850)),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {45}.
table(statestore(alice,bob,sid_26267850,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26267850),g),key_e(alice,bob,sid_26267850)),dhexp(key_s(bob),g),empty,empty,true)))).

3. The entry statestore(bob,charlie,sid_26267851,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {399}.
table(statestore(bob,charlie,sid_26267851,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false)))).

4. The entry statestore(alice,bob,sid_26267850,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 1 may be read at get {47}.
The event SendMsg(alice,bob,stagepack_a(sid_26267850),msg_a(alice,bob)) may be executed at {44}.
So the message concat3(dhexp(key_e(alice,bob,sid_26267850),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))) may be sent on channel pub at output {46}.
mess(pub,concat3(dhexp(key_e(alice,bob,sid_26267850),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob)))).

5. The entry statestore(bob,charlie,sid_26267851,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 3 may be read at get {428}.
The message concat3(dhexp(key_e(alice,bob,sid_26267850),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))) that may be sent on channel pub by 4 may be received at input {400}.
We have dhexp(key_e(alice,bob,sid_26267850),g) <> caught-fail.
So the entry statestore(bob,charlie,sid_26267851,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_26267850),g),empty,false))) may be inserted in a table at insert {427}.
table(statestore(bob,charlie,sid_26267851,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_26267850),g),empty,false)))).

6. The entry statestore(bob,charlie,sid_26267851,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_26267850),g),empty,false))) that may be in a table by 5 may be read at get {466}.
The event SendMsg(bob,charlie,stagepack_b(sid_26267851),msg_b(bob,charlie)) may be executed at {463}.
So the message concat3(dhexp(key_e(bob,charlie,sid_26267851),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),msg_b(bob,charlie))) may be sent on channel pub at output {465}.
mess(pub,concat3(dhexp(key_e(bob,charlie,sid_26267851),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),msg_b(bob,charlie)))).

7. The entry statestore(alice,bob,sid_26267850,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26267850),g),key_e(alice,bob,sid_26267850)),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 2 may be read at get {84}.
The message concat3(dhexp(key_e(bob,charlie,sid_26267851),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),msg_b(bob,charlie))) that may be sent on channel pub by 6 may be received at input {48}.
We have dhexp(key_e(bob,charlie,sid_26267851),g) <> caught-fail.
So the entry statestore(alice,bob,sid_26267850,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26267850),g),key_e(alice,bob,sid_26267850)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_26267851),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),minnonce))) may be inserted in a table at insert {83}.
table(statestore(alice,bob,sid_26267850,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26267850),g),key_e(alice,bob,sid_26267850)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_26267851),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),minnonce)))).

8. The entry statestore(alice,bob,sid_26267850,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26267850),g),key_e(alice,bob,sid_26267850)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_26267851),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),minnonce))) that may be in a table by 7 may be read at get {104}.
The event SendMsg(alice,bob,stagepack_c(sid_26267850),msg_c(alice,bob)) may be executed at {101}.
So the entry statestore(alice,bob,sid_26267850,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),msg_b(bob,charlie))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26267850),g),key_e(alice,bob,sid_26267850)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_26267851),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),minnonce))) may be inserted in a table at insert {102}.
table(statestore(alice,bob,sid_26267850,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),msg_b(bob,charlie))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26267850),g),key_e(alice,bob,sid_26267850)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_26267851),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),minnonce)))).

9. The entry statestore(bob,charlie,sid_26267851,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_26267850),g),empty,false))) that may be in a table by 5 may be read at get {466}.
The event SendMsg(bob,charlie,stagepack_b(sid_26267851),msg_b(bob,charlie)) may be executed at {463}.
So the entry statestore(bob,charlie,sid_26267851,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),msg_b(bob,charlie)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_26267851),g),key_e(bob,charlie,sid_26267851)),empty,dhexp(key_e(alice,bob,sid_26267850),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),minnonce))) may be inserted in a table at insert {464}.
table(statestore(bob,charlie,sid_26267851,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),msg_b(bob,charlie)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_26267851),g),key_e(bob,charlie,sid_26267851)),empty,dhexp(key_e(alice,bob,sid_26267850),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),minnonce)))).

10. The entry statestore(alice,bob,sid_26267850,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26267850),g),key_e(alice,bob,sid_26267850)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_26267851),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),minnonce))) that may be in a table by 7 may be read at get {104}.
The event SendMsg(alice,bob,stagepack_c(sid_26267850),msg_c(alice,bob)) may be executed at {101}.
So the message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),msg_b(bob,charlie))),msg_c(alice,bob))) may be sent on channel pub at output {103}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),msg_b(bob,charlie))),msg_c(alice,bob)))).

11. The entry statestore(bob,charlie,sid_26267851,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),msg_b(bob,charlie)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_26267851),g),key_e(bob,charlie,sid_26267851)),empty,dhexp(key_e(alice,bob,sid_26267850),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),minnonce))) that may be in a table by 9 may be read at get {487}.
The message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),msg_b(bob,charlie))),msg_c(alice,bob))) that may be sent on channel pub by 10 may be received at input {469}.
So the entry statestore(bob,charlie,sid_26267851,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),msg_b(bob,charlie))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_26267851),g),key_e(bob,charlie,sid_26267851)),empty,dhexp(key_e(alice,bob,sid_26267850),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),minnonce))) may be inserted in a table at insert {486}.
table(statestore(bob,charlie,sid_26267851,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),msg_b(bob,charlie))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_26267851),g),key_e(bob,charlie,sid_26267851)),empty,dhexp(key_e(alice,bob,sid_26267850),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),minnonce)))).

12. The entry statestore(bob,charlie,sid_26267851,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),msg_b(bob,charlie))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_26267851),g),key_e(bob,charlie,sid_26267851)),empty,dhexp(key_e(alice,bob,sid_26267850),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),minnonce))) that may be in a table by 11 may be read at get {506}.
The event SendMsg(bob,charlie,stagepack_d(sid_26267851),msg_d(bob,charlie)) may be executed at {504}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),msg_b(bob,charlie))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),msg_b(bob,charlie))),msg_c(alice,bob))),msg_d(bob,charlie))) may be sent on channel pub at output {505}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),msg_b(bob,charlie))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),msg_b(bob,charlie))),msg_c(alice,bob))),msg_d(bob,charlie)))).

13. The entry statestore(alice,bob,sid_26267850,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),msg_b(bob,charlie))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26267850),g),key_e(alice,bob,sid_26267850)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_26267851),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),minnonce))) that may be in a table by 8 may be read at get {125}.
The message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),msg_b(bob,charlie))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),dhexp(key_e(alice,bob,sid_26267850),dhexp(key_e(bob,charlie,sid_26267851),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26267850),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26267850),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26267851),g)),msg_b(bob,charlie))),msg_c(alice,bob))),msg_d(bob,charlie))) that may be sent on channel pub by 12 may be received at input {107}.
So event RecvMsg(alice,bob,stagepack_d(sid_26267850),msg_d(bob,charlie)) may be executed at {123}.
end(RecvMsg(alice,bob,stagepack_d(sid_26267850),msg_d(bob,charlie))).


RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a_1084),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || sid_b <> sid_a_1084 cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a_1084),m)) ==> event(SendMsg(bob,c_1083,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) || sid_b <> sid_a_1084
goal reachable: begin(SendMsg(bob,charlie,stagepack_d(sid_a[!1 = @sid_26267854]),msg_d(bob,charlie))) && begin(SendMsg(alice,bob,stagepack_c(sid_a[!1 = @sid_26267855]),msg_c(alice,bob))) && begin(SendMsg(bob,charlie,stagepack_b(sid_a[!1 = @sid_26267854]),msg_b(bob,charlie))) && begin(SendMsg(alice,bob,stagepack_a(sid_a[!1 = @sid_26267855]),msg_a(alice,bob))) -> end(RecvMsg(alice,bob,stagepack_d(sid_a[!1 = @sid_26267855]),msg_d(bob,charlie)))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid_a[!1 = @sid_26267858]),msg_d(bob,alice))) && begin(SendMsg(alice,bob,stagepack_c(sid_a[!1 = @sid_26267859]),msg_c(alice,bob))) && begin(SendMsg(bob,alice,stagepack_b(sid_a[!1 = @sid_26267858]),msg_b(bob,alice))) && begin(SendMsg(alice,bob,stagepack_a(sid_a[!1 = @sid_26267859]),msg_a(alice,bob))) -> end(RecvMsg(alice,bob,stagepack_d(sid_a[!1 = @sid_26267859]),msg_d(bob,alice)))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a_1084),m)) ==> event(SendMsg(bob,c_1083,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) || sid_b <> sid_a_1084 is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a_1084),m)) ==> event(SendMsg(bob,c_1083,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || sid_b <> sid_a_1084
goal reachable: begin(SendMsg(bob,charlie,stagepack_d(sid_a[!1 = @sid_26267868]),msg_d(bob,charlie))) && begin(SendMsg(alice,bob,stagepack_c(sid_a[!1 = @sid_26267869]),msg_c(alice,bob))) && begin(SendMsg(bob,charlie,stagepack_b(sid_a[!1 = @sid_26267868]),msg_b(bob,charlie))) && begin(SendMsg(alice,bob,stagepack_a(sid_a[!1 = @sid_26267869]),msg_a(alice,bob))) -> end(RecvMsg(alice,bob,stagepack_d(sid_a[!1 = @sid_26267869]),msg_d(bob,charlie)))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid_a[!1 = @sid_26267872]),msg_d(bob,alice))) && begin(SendMsg(alice,bob,stagepack_c(sid_a[!1 = @sid_26267873]),msg_c(alice,bob))) && begin(SendMsg(bob,alice,stagepack_b(sid_a[!1 = @sid_26267872]),msg_b(bob,alice))) && begin(SendMsg(alice,bob,stagepack_a(sid_a[!1 = @sid_26267873]),msg_a(alice,bob))) -> end(RecvMsg(alice,bob,stagepack_d(sid_a[!1 = @sid_26267873]),msg_d(bob,alice)))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a_1084),m)) ==> event(SendMsg(bob,c_1083,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || sid_b <> sid_a_1084 is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a_1084),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) || sid_b <> sid_a_1084
goal reachable: begin(SendMsg(bob,charlie,stagepack_d(sid_a[!1 = @sid_26267882]),msg_d(bob,charlie))) && begin(SendMsg(alice,bob,stagepack_c(sid_a[!1 = @sid_26267883]),msg_c(alice,bob))) && begin(SendMsg(bob,charlie,stagepack_b(sid_a[!1 = @sid_26267882]),msg_b(bob,charlie))) && begin(SendMsg(alice,bob,stagepack_a(sid_a[!1 = @sid_26267883]),msg_a(alice,bob))) -> end(RecvMsg(alice,bob,stagepack_d(sid_a[!1 = @sid_26267883]),msg_d(bob,charlie)))
Abbreviations:
sid_26268129 = sid_a[!1 = @sid_26268116]
sid_26268130 = sid_a[!1 = @sid_26268061]

1. The entry statestore(alice,bob,sid_26268129,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {17}.
table(statestore(alice,bob,sid_26268129,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

2. The entry statestore(alice,bob,sid_26268129,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 1 may be read at get {47}.
The event SendMsg(alice,bob,stagepack_a(sid_26268129),msg_a(alice,bob)) may be executed at {44}.
So the entry statestore(alice,bob,sid_26268129,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26268129),g),key_e(alice,bob,sid_26268129)),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {45}.
table(statestore(alice,bob,sid_26268129,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26268129),g),key_e(alice,bob,sid_26268129)),dhexp(key_s(bob),g),empty,empty,true)))).

3. The entry statestore(bob,charlie,sid_26268130,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {399}.
table(statestore(bob,charlie,sid_26268130,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false)))).

4. The entry statestore(alice,bob,sid_26268129,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 1 may be read at get {47}.
The event SendMsg(alice,bob,stagepack_a(sid_26268129),msg_a(alice,bob)) may be executed at {44}.
So the message concat3(dhexp(key_e(alice,bob,sid_26268129),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))) may be sent on channel pub at output {46}.
mess(pub,concat3(dhexp(key_e(alice,bob,sid_26268129),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob)))).

5. The entry statestore(bob,charlie,sid_26268130,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 3 may be read at get {428}.
The message concat3(dhexp(key_e(alice,bob,sid_26268129),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))) that may be sent on channel pub by 4 may be received at input {400}.
We have dhexp(key_e(alice,bob,sid_26268129),g) <> caught-fail.
So the entry statestore(bob,charlie,sid_26268130,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_26268129),g),empty,false))) may be inserted in a table at insert {427}.
table(statestore(bob,charlie,sid_26268130,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_26268129),g),empty,false)))).

6. The entry statestore(bob,charlie,sid_26268130,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_26268129),g),empty,false))) that may be in a table by 5 may be read at get {466}.
The event SendMsg(bob,charlie,stagepack_b(sid_26268130),msg_b(bob,charlie)) may be executed at {463}.
So the message concat3(dhexp(key_e(bob,charlie,sid_26268130),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),msg_b(bob,charlie))) may be sent on channel pub at output {465}.
mess(pub,concat3(dhexp(key_e(bob,charlie,sid_26268130),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),msg_b(bob,charlie)))).

7. The entry statestore(alice,bob,sid_26268129,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26268129),g),key_e(alice,bob,sid_26268129)),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 2 may be read at get {84}.
The message concat3(dhexp(key_e(bob,charlie,sid_26268130),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),msg_b(bob,charlie))) that may be sent on channel pub by 6 may be received at input {48}.
We have dhexp(key_e(bob,charlie,sid_26268130),g) <> caught-fail.
So the entry statestore(alice,bob,sid_26268129,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26268129),g),key_e(alice,bob,sid_26268129)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_26268130),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),minnonce))) may be inserted in a table at insert {83}.
table(statestore(alice,bob,sid_26268129,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26268129),g),key_e(alice,bob,sid_26268129)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_26268130),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),minnonce)))).

8. The entry statestore(alice,bob,sid_26268129,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26268129),g),key_e(alice,bob,sid_26268129)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_26268130),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),minnonce))) that may be in a table by 7 may be read at get {104}.
The event SendMsg(alice,bob,stagepack_c(sid_26268129),msg_c(alice,bob)) may be executed at {101}.
So the entry statestore(alice,bob,sid_26268129,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),msg_b(bob,charlie))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26268129),g),key_e(alice,bob,sid_26268129)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_26268130),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),minnonce))) may be inserted in a table at insert {102}.
table(statestore(alice,bob,sid_26268129,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),msg_b(bob,charlie))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26268129),g),key_e(alice,bob,sid_26268129)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_26268130),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),minnonce)))).

9. The entry statestore(bob,charlie,sid_26268130,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_26268129),g),empty,false))) that may be in a table by 5 may be read at get {466}.
The event SendMsg(bob,charlie,stagepack_b(sid_26268130),msg_b(bob,charlie)) may be executed at {463}.
So the entry statestore(bob,charlie,sid_26268130,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),msg_b(bob,charlie)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_26268130),g),key_e(bob,charlie,sid_26268130)),empty,dhexp(key_e(alice,bob,sid_26268129),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),minnonce))) may be inserted in a table at insert {464}.
table(statestore(bob,charlie,sid_26268130,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),msg_b(bob,charlie)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_26268130),g),key_e(bob,charlie,sid_26268130)),empty,dhexp(key_e(alice,bob,sid_26268129),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),minnonce)))).

10. The entry statestore(alice,bob,sid_26268129,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26268129),g),key_e(alice,bob,sid_26268129)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_26268130),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),minnonce))) that may be in a table by 7 may be read at get {104}.
The event SendMsg(alice,bob,stagepack_c(sid_26268129),msg_c(alice,bob)) may be executed at {101}.
So the message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),msg_b(bob,charlie))),msg_c(alice,bob))) may be sent on channel pub at output {103}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),msg_b(bob,charlie))),msg_c(alice,bob)))).

11. The entry statestore(bob,charlie,sid_26268130,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),msg_b(bob,charlie)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_26268130),g),key_e(bob,charlie,sid_26268130)),empty,dhexp(key_e(alice,bob,sid_26268129),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),minnonce))) that may be in a table by 9 may be read at get {487}.
The message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),msg_b(bob,charlie))),msg_c(alice,bob))) that may be sent on channel pub by 10 may be received at input {469}.
So the entry statestore(bob,charlie,sid_26268130,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),msg_b(bob,charlie))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_26268130),g),key_e(bob,charlie,sid_26268130)),empty,dhexp(key_e(alice,bob,sid_26268129),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),minnonce))) may be inserted in a table at insert {486}.
table(statestore(bob,charlie,sid_26268130,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),msg_b(bob,charlie))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_26268130),g),key_e(bob,charlie,sid_26268130)),empty,dhexp(key_e(alice,bob,sid_26268129),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),minnonce)))).

12. The entry statestore(bob,charlie,sid_26268130,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),msg_b(bob,charlie))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_26268130),g),key_e(bob,charlie,sid_26268130)),empty,dhexp(key_e(alice,bob,sid_26268129),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),minnonce))) that may be in a table by 11 may be read at get {506}.
The event SendMsg(bob,charlie,stagepack_d(sid_26268130),msg_d(bob,charlie)) may be executed at {504}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),msg_b(bob,charlie))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),msg_b(bob,charlie))),msg_c(alice,bob))),msg_d(bob,charlie))) may be sent on channel pub at output {505}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),msg_b(bob,charlie))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),msg_b(bob,charlie))),msg_c(alice,bob))),msg_d(bob,charlie)))).

13. The entry statestore(alice,bob,sid_26268129,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),msg_b(bob,charlie))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26268129),g),key_e(alice,bob,sid_26268129)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_26268130),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),minnonce))) that may be in a table by 8 may be read at get {125}.
The message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),msg_b(bob,charlie))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),dhexp(key_e(alice,bob,sid_26268129),dhexp(key_e(bob,charlie,sid_26268130),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268129),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268129),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268130),g)),msg_b(bob,charlie))),msg_c(alice,bob))),msg_d(bob,charlie))) that may be sent on channel pub by 12 may be received at input {107}.
So event RecvMsg(alice,bob,stagepack_d(sid_26268129),msg_d(bob,charlie)) may be executed at {123}.
end(RecvMsg(alice,bob,stagepack_d(sid_26268129),msg_d(bob,charlie))).


RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a_1084),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) || sid_b <> sid_a_1084 cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a_1084),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || sid_b <> sid_a_1084
goal reachable: begin(SendMsg(bob,charlie,stagepack_d(sid_a[!1 = @sid_26268133]),msg_d(bob,charlie))) && begin(SendMsg(alice,bob,stagepack_c(sid_a[!1 = @sid_26268134]),msg_c(alice,bob))) && begin(SendMsg(bob,charlie,stagepack_b(sid_a[!1 = @sid_26268133]),msg_b(bob,charlie))) && begin(SendMsg(alice,bob,stagepack_a(sid_a[!1 = @sid_26268134]),msg_a(alice,bob))) -> end(RecvMsg(alice,bob,stagepack_d(sid_a[!1 = @sid_26268134]),msg_d(bob,charlie)))
Abbreviations:
sid_26268380 = sid_a[!1 = @sid_26268367]
sid_26268381 = sid_a[!1 = @sid_26268312]

1. The entry statestore(alice,bob,sid_26268380,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {17}.
table(statestore(alice,bob,sid_26268380,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

2. The entry statestore(alice,bob,sid_26268380,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 1 may be read at get {47}.
The event SendMsg(alice,bob,stagepack_a(sid_26268380),msg_a(alice,bob)) may be executed at {44}.
So the entry statestore(alice,bob,sid_26268380,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26268380),g),key_e(alice,bob,sid_26268380)),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {45}.
table(statestore(alice,bob,sid_26268380,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26268380),g),key_e(alice,bob,sid_26268380)),dhexp(key_s(bob),g),empty,empty,true)))).

3. The entry statestore(bob,charlie,sid_26268381,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {399}.
table(statestore(bob,charlie,sid_26268381,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false)))).

4. The entry statestore(alice,bob,sid_26268380,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 1 may be read at get {47}.
The event SendMsg(alice,bob,stagepack_a(sid_26268380),msg_a(alice,bob)) may be executed at {44}.
So the message concat3(dhexp(key_e(alice,bob,sid_26268380),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))) may be sent on channel pub at output {46}.
mess(pub,concat3(dhexp(key_e(alice,bob,sid_26268380),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob)))).

5. The entry statestore(bob,charlie,sid_26268381,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 3 may be read at get {428}.
The message concat3(dhexp(key_e(alice,bob,sid_26268380),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))) that may be sent on channel pub by 4 may be received at input {400}.
We have dhexp(key_e(alice,bob,sid_26268380),g) <> caught-fail.
So the entry statestore(bob,charlie,sid_26268381,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_26268380),g),empty,false))) may be inserted in a table at insert {427}.
table(statestore(bob,charlie,sid_26268381,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_26268380),g),empty,false)))).

6. The entry statestore(bob,charlie,sid_26268381,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_26268380),g),empty,false))) that may be in a table by 5 may be read at get {466}.
The event SendMsg(bob,charlie,stagepack_b(sid_26268381),msg_b(bob,charlie)) may be executed at {463}.
So the message concat3(dhexp(key_e(bob,charlie,sid_26268381),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),msg_b(bob,charlie))) may be sent on channel pub at output {465}.
mess(pub,concat3(dhexp(key_e(bob,charlie,sid_26268381),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),msg_b(bob,charlie)))).

7. The entry statestore(alice,bob,sid_26268380,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26268380),g),key_e(alice,bob,sid_26268380)),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 2 may be read at get {84}.
The message concat3(dhexp(key_e(bob,charlie,sid_26268381),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),msg_b(bob,charlie))) that may be sent on channel pub by 6 may be received at input {48}.
We have dhexp(key_e(bob,charlie,sid_26268381),g) <> caught-fail.
So the entry statestore(alice,bob,sid_26268380,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26268380),g),key_e(alice,bob,sid_26268380)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_26268381),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),minnonce))) may be inserted in a table at insert {83}.
table(statestore(alice,bob,sid_26268380,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26268380),g),key_e(alice,bob,sid_26268380)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_26268381),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),minnonce)))).

8. The entry statestore(alice,bob,sid_26268380,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26268380),g),key_e(alice,bob,sid_26268380)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_26268381),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),minnonce))) that may be in a table by 7 may be read at get {104}.
The event SendMsg(alice,bob,stagepack_c(sid_26268380),msg_c(alice,bob)) may be executed at {101}.
So the entry statestore(alice,bob,sid_26268380,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),msg_b(bob,charlie))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26268380),g),key_e(alice,bob,sid_26268380)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_26268381),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),minnonce))) may be inserted in a table at insert {102}.
table(statestore(alice,bob,sid_26268380,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),msg_b(bob,charlie))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26268380),g),key_e(alice,bob,sid_26268380)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_26268381),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),minnonce)))).

9. The entry statestore(bob,charlie,sid_26268381,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_26268380),g),empty,false))) that may be in a table by 5 may be read at get {466}.
The event SendMsg(bob,charlie,stagepack_b(sid_26268381),msg_b(bob,charlie)) may be executed at {463}.
So the entry statestore(bob,charlie,sid_26268381,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),msg_b(bob,charlie)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_26268381),g),key_e(bob,charlie,sid_26268381)),empty,dhexp(key_e(alice,bob,sid_26268380),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),minnonce))) may be inserted in a table at insert {464}.
table(statestore(bob,charlie,sid_26268381,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),msg_b(bob,charlie)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_26268381),g),key_e(bob,charlie,sid_26268381)),empty,dhexp(key_e(alice,bob,sid_26268380),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),minnonce)))).

10. The entry statestore(alice,bob,sid_26268380,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26268380),g),key_e(alice,bob,sid_26268380)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_26268381),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),minnonce))) that may be in a table by 7 may be read at get {104}.
The event SendMsg(alice,bob,stagepack_c(sid_26268380),msg_c(alice,bob)) may be executed at {101}.
So the message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),msg_b(bob,charlie))),msg_c(alice,bob))) may be sent on channel pub at output {103}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),msg_b(bob,charlie))),msg_c(alice,bob)))).

11. The entry statestore(bob,charlie,sid_26268381,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),msg_b(bob,charlie)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_26268381),g),key_e(bob,charlie,sid_26268381)),empty,dhexp(key_e(alice,bob,sid_26268380),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),minnonce))) that may be in a table by 9 may be read at get {487}.
The message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),msg_b(bob,charlie))),msg_c(alice,bob))) that may be sent on channel pub by 10 may be received at input {469}.
So the entry statestore(bob,charlie,sid_26268381,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),msg_b(bob,charlie))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_26268381),g),key_e(bob,charlie,sid_26268381)),empty,dhexp(key_e(alice,bob,sid_26268380),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),minnonce))) may be inserted in a table at insert {486}.
table(statestore(bob,charlie,sid_26268381,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),msg_b(bob,charlie))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_26268381),g),key_e(bob,charlie,sid_26268381)),empty,dhexp(key_e(alice,bob,sid_26268380),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),minnonce)))).

12. The entry statestore(bob,charlie,sid_26268381,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),msg_b(bob,charlie))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_26268381),g),key_e(bob,charlie,sid_26268381)),empty,dhexp(key_e(alice,bob,sid_26268380),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),minnonce))) that may be in a table by 11 may be read at get {506}.
The event SendMsg(bob,charlie,stagepack_d(sid_26268381),msg_d(bob,charlie)) may be executed at {504}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),msg_b(bob,charlie))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),msg_b(bob,charlie))),msg_c(alice,bob))),msg_d(bob,charlie))) may be sent on channel pub at output {505}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),msg_b(bob,charlie))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),msg_b(bob,charlie))),msg_c(alice,bob))),msg_d(bob,charlie)))).

13. The entry statestore(alice,bob,sid_26268380,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),msg_b(bob,charlie))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26268380),g),key_e(alice,bob,sid_26268380)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_26268381),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),minnonce))) that may be in a table by 8 may be read at get {125}.
The message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),msg_b(bob,charlie))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),dhexp(key_e(alice,bob,sid_26268380),dhexp(key_e(bob,charlie,sid_26268381),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268380),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268380),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268381),g)),msg_b(bob,charlie))),msg_c(alice,bob))),msg_d(bob,charlie))) that may be sent on channel pub by 12 may be received at input {107}.
So event RecvMsg(alice,bob,stagepack_d(sid_26268380),msg_d(bob,charlie)) may be executed at {123}.
end(RecvMsg(alice,bob,stagepack_d(sid_26268380),msg_d(bob,charlie))).


RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a_1084),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || sid_b <> sid_a_1084 cannot be proved.
Starting query not attacker_p1(msg_d(bob,alice))
RESULT not attacker_p1(msg_d(bob,alice)) is true.
Starting query attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice))
RESULT attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice)) is true.
Starting query attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob)))
RESULT attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob))) is true.
Starting query attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice))
RESULT attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice)) is true.
Starting query not event(RecvEnd(true))
goal reachable: begin(SendMsg(bob,charlie,stagepack_d(sid_a[!1 = @sid_26268383]),msg_d(bob,charlie))) && begin(SendMsg(alice,bob,stagepack_c(sid_a[!1 = @sid_26268384]),msg_c(alice,bob))) && begin(SendMsg(bob,charlie,stagepack_b(sid_a[!1 = @sid_26268383]),msg_b(bob,charlie))) && begin(SendMsg(alice,bob,stagepack_a(sid_a[!1 = @sid_26268384]),msg_a(alice,bob))) -> end(RecvEnd(true))
Abbreviations:
sid_26268629 = sid_a[!1 = @sid_26268618]
sid_26268630 = sid_a[!1 = @sid_26268563]

1. The entry statestore(alice,bob,sid_26268629,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {17}.
table(statestore(alice,bob,sid_26268629,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

2. The entry statestore(alice,bob,sid_26268629,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 1 may be read at get {47}.
The event SendMsg(alice,bob,stagepack_a(sid_26268629),msg_a(alice,bob)) may be executed at {44}.
So the entry statestore(alice,bob,sid_26268629,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26268629),g),key_e(alice,bob,sid_26268629)),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {45}.
table(statestore(alice,bob,sid_26268629,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26268629),g),key_e(alice,bob,sid_26268629)),dhexp(key_s(bob),g),empty,empty,true)))).

3. The entry statestore(bob,charlie,sid_26268630,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {399}.
table(statestore(bob,charlie,sid_26268630,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false)))).

4. The entry statestore(alice,bob,sid_26268629,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 1 may be read at get {47}.
The event SendMsg(alice,bob,stagepack_a(sid_26268629),msg_a(alice,bob)) may be executed at {44}.
So the message concat3(dhexp(key_e(alice,bob,sid_26268629),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))) may be sent on channel pub at output {46}.
mess(pub,concat3(dhexp(key_e(alice,bob,sid_26268629),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob)))).

5. The entry statestore(bob,charlie,sid_26268630,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 3 may be read at get {428}.
The message concat3(dhexp(key_e(alice,bob,sid_26268629),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))) that may be sent on channel pub by 4 may be received at input {400}.
We have dhexp(key_e(alice,bob,sid_26268629),g) <> caught-fail.
So the entry statestore(bob,charlie,sid_26268630,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_26268629),g),empty,false))) may be inserted in a table at insert {427}.
table(statestore(bob,charlie,sid_26268630,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_26268629),g),empty,false)))).

6. The entry statestore(bob,charlie,sid_26268630,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_26268629),g),empty,false))) that may be in a table by 5 may be read at get {466}.
The event SendMsg(bob,charlie,stagepack_b(sid_26268630),msg_b(bob,charlie)) may be executed at {463}.
So the message concat3(dhexp(key_e(bob,charlie,sid_26268630),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),msg_b(bob,charlie))) may be sent on channel pub at output {465}.
mess(pub,concat3(dhexp(key_e(bob,charlie,sid_26268630),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),msg_b(bob,charlie)))).

7. The entry statestore(alice,bob,sid_26268629,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26268629),g),key_e(alice,bob,sid_26268629)),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 2 may be read at get {84}.
The message concat3(dhexp(key_e(bob,charlie,sid_26268630),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),msg_b(bob,charlie))) that may be sent on channel pub by 6 may be received at input {48}.
We have dhexp(key_e(bob,charlie,sid_26268630),g) <> caught-fail.
So the entry statestore(alice,bob,sid_26268629,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26268629),g),key_e(alice,bob,sid_26268629)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_26268630),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),minnonce))) may be inserted in a table at insert {83}.
table(statestore(alice,bob,sid_26268629,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26268629),g),key_e(alice,bob,sid_26268629)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_26268630),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),minnonce)))).

8. The entry statestore(alice,bob,sid_26268629,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26268629),g),key_e(alice,bob,sid_26268629)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_26268630),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),minnonce))) that may be in a table by 7 may be read at get {104}.
The event SendMsg(alice,bob,stagepack_c(sid_26268629),msg_c(alice,bob)) may be executed at {101}.
So the entry statestore(alice,bob,sid_26268629,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),msg_b(bob,charlie))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26268629),g),key_e(alice,bob,sid_26268629)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_26268630),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),minnonce))) may be inserted in a table at insert {102}.
table(statestore(alice,bob,sid_26268629,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),msg_b(bob,charlie))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26268629),g),key_e(alice,bob,sid_26268629)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_26268630),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),minnonce)))).

9. The entry statestore(bob,charlie,sid_26268630,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_26268629),g),empty,false))) that may be in a table by 5 may be read at get {466}.
The event SendMsg(bob,charlie,stagepack_b(sid_26268630),msg_b(bob,charlie)) may be executed at {463}.
So the entry statestore(bob,charlie,sid_26268630,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),msg_b(bob,charlie)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_26268630),g),key_e(bob,charlie,sid_26268630)),empty,dhexp(key_e(alice,bob,sid_26268629),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),minnonce))) may be inserted in a table at insert {464}.
table(statestore(bob,charlie,sid_26268630,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),msg_b(bob,charlie)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_26268630),g),key_e(bob,charlie,sid_26268630)),empty,dhexp(key_e(alice,bob,sid_26268629),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),minnonce)))).

10. The entry statestore(alice,bob,sid_26268629,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26268629),g),key_e(alice,bob,sid_26268629)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_26268630),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),minnonce))) that may be in a table by 7 may be read at get {104}.
The event SendMsg(alice,bob,stagepack_c(sid_26268629),msg_c(alice,bob)) may be executed at {101}.
So the message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),msg_b(bob,charlie))),msg_c(alice,bob))) may be sent on channel pub at output {103}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),msg_b(bob,charlie))),msg_c(alice,bob)))).

11. The entry statestore(bob,charlie,sid_26268630,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),msg_b(bob,charlie)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_26268630),g),key_e(bob,charlie,sid_26268630)),empty,dhexp(key_e(alice,bob,sid_26268629),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),minnonce))) that may be in a table by 9 may be read at get {487}.
The message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),msg_b(bob,charlie))),msg_c(alice,bob))) that may be sent on channel pub by 10 may be received at input {469}.
So the entry statestore(bob,charlie,sid_26268630,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),msg_b(bob,charlie))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_26268630),g),key_e(bob,charlie,sid_26268630)),empty,dhexp(key_e(alice,bob,sid_26268629),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),minnonce))) may be inserted in a table at insert {486}.
table(statestore(bob,charlie,sid_26268630,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),msg_b(bob,charlie))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_26268630),g),key_e(bob,charlie,sid_26268630)),empty,dhexp(key_e(alice,bob,sid_26268629),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),minnonce)))).

12. The entry statestore(bob,charlie,sid_26268630,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),msg_b(bob,charlie))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_26268630),g),key_e(bob,charlie,sid_26268630)),empty,dhexp(key_e(alice,bob,sid_26268629),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),minnonce))) that may be in a table by 11 may be read at get {506}.
The event SendMsg(bob,charlie,stagepack_d(sid_26268630),msg_d(bob,charlie)) may be executed at {504}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),msg_b(bob,charlie))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),msg_b(bob,charlie))),msg_c(alice,bob))),msg_d(bob,charlie))) may be sent on channel pub at output {505}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),msg_b(bob,charlie))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),msg_b(bob,charlie))),msg_c(alice,bob))),msg_d(bob,charlie)))).

13. The entry statestore(alice,bob,sid_26268629,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),msg_b(bob,charlie))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_26268629),g),key_e(alice,bob,sid_26268629)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_26268630),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),minnonce))) that may be in a table by 8 may be read at get {125}.
The message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),msg_b(bob,charlie))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),dhexp(key_e(alice,bob,sid_26268629),dhexp(key_e(bob,charlie,sid_26268630),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_26268629),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_26268629),g)),msg_a(alice,bob))),dhexp(key_e(bob,charlie,sid_26268630),g)),msg_b(bob,charlie))),msg_c(alice,bob))),msg_d(bob,charlie))) that may be sent on channel pub by 12 may be received at input {107}.
So event RecvEnd(true) may be executed at {124}.
end(RecvEnd(true)).


RESULT not event(RecvEnd(true)) cannot be proved.
