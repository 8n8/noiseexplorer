File "NK.noise.passive.pv", line 240, characters 7-8:
Warning: identifier ck rebound.
File "NK.noise.passive.pv", line 249, characters 7-8:
Warning: identifier ck rebound.
File "NK.noise.passive.pv", line 250, characters 7-8:
Warning: identifier cs rebound.
File "NK.noise.passive.pv", line 250, character 36:
Warning: identifier h rebound.
File "NK.noise.passive.pv", line 259, characters 7-8:
Warning: identifier cs rebound.
File "NK.noise.passive.pv", line 260, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 265, characters 7-8:
Warning: identifier cs rebound.
File "NK.noise.passive.pv", line 266, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 280, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 285, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 292, character 6:
Warning: identifier e rebound.
File "NK.noise.passive.pv", line 293, characters 6-7:
Warning: identifier ne rebound.
File "NK.noise.passive.pv", line 294, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 296, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 297, characters 7-8:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 297, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NK.noise.passive.pv", line 298, characters 6-7:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 306, character 6:
Warning: identifier e rebound.
File "NK.noise.passive.pv", line 307, characters 6-7:
Warning: identifier ne rebound.
File "NK.noise.passive.pv", line 308, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 310, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 311, characters 7-8:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 311, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NK.noise.passive.pv", line 312, characters 6-7:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 319, characters 7-8:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 319, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NK.noise.passive.pv", line 320, characters 6-7:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 327, characters 7-8:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 327, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NK.noise.passive.pv", line 328, characters 6-7:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 337, characters 6-7:
Warning: identifier re rebound.
File "NK.noise.passive.pv", line 338, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 340, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 341, characters 7-8:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 343, characters 7-8:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 351, characters 6-7:
Warning: identifier re rebound.
File "NK.noise.passive.pv", line 352, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 354, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 355, characters 7-8:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 357, characters 7-8:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 365, characters 7-8:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 367, characters 7-8:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 375, characters 7-8:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 377, characters 7-8:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 524, characters 8-9:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 375, characters 7-8:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 377, characters 7-8:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 265, characters 7-8:
Warning: identifier cs rebound.
File "NK.noise.passive.pv", line 266, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 516, characters 8-9:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 319, characters 7-8:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 319, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NK.noise.passive.pv", line 320, characters 6-7:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 259, characters 7-8:
Warning: identifier cs rebound.
File "NK.noise.passive.pv", line 260, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 509, characters 8-9:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 351, characters 6-7:
Warning: identifier re rebound.
File "NK.noise.passive.pv", line 352, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 354, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 355, characters 7-8:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 357, characters 7-8:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 240, characters 7-8:
Warning: identifier ck rebound.
File "NK.noise.passive.pv", line 265, characters 7-8:
Warning: identifier cs rebound.
File "NK.noise.passive.pv", line 266, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 501, characters 8-9:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 292, character 6:
Warning: identifier e rebound.
File "NK.noise.passive.pv", line 293, characters 6-7:
Warning: identifier ne rebound.
File "NK.noise.passive.pv", line 294, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 296, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 297, characters 7-8:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 297, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NK.noise.passive.pv", line 298, characters 6-7:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 240, characters 7-8:
Warning: identifier ck rebound.
File "NK.noise.passive.pv", line 259, characters 7-8:
Warning: identifier cs rebound.
File "NK.noise.passive.pv", line 260, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 280, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 574, characters 8-9:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 327, characters 7-8:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 327, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NK.noise.passive.pv", line 328, characters 6-7:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 259, characters 7-8:
Warning: identifier cs rebound.
File "NK.noise.passive.pv", line 260, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 567, characters 8-9:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 365, characters 7-8:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 367, characters 7-8:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 265, characters 7-8:
Warning: identifier cs rebound.
File "NK.noise.passive.pv", line 266, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 559, characters 8-9:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 306, character 6:
Warning: identifier e rebound.
File "NK.noise.passive.pv", line 307, characters 6-7:
Warning: identifier ne rebound.
File "NK.noise.passive.pv", line 308, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 310, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 311, characters 7-8:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 311, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NK.noise.passive.pv", line 312, characters 6-7:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 240, characters 7-8:
Warning: identifier ck rebound.
File "NK.noise.passive.pv", line 259, characters 7-8:
Warning: identifier cs rebound.
File "NK.noise.passive.pv", line 260, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 552, characters 8-9:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 337, characters 6-7:
Warning: identifier re rebound.
File "NK.noise.passive.pv", line 338, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 340, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 341, characters 7-8:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 343, characters 7-8:
Warning: identifier hs rebound.
File "NK.noise.passive.pv", line 240, characters 7-8:
Warning: identifier ck rebound.
File "NK.noise.passive.pv", line 265, characters 7-8:
Warning: identifier cs rebound.
File "NK.noise.passive.pv", line 266, characters 6-7:
Warning: identifier ss rebound.
File "NK.noise.passive.pv", line 285, characters 6-7:
Warning: identifier ss rebound.
Linear part:
dhexp(b_49,dhexp(a_48,g)) = dhexp(a_48,dhexp(b_49,g))
Completing equations...
Completed equations:
dhexp(b_49,dhexp(a_48,g)) = dhexp(a_48,dhexp(b_49,g))
Convergent part:
Completing equations...
Completed equations:
Process:
{1}out(pub, key_s(charlie));
{2}!
(
    {3}let them: principal = bob in
    {4}let me: principal = alice in
    {5}let s_446: keypair = keypairpack(empty,empty) in
    (
        {6}let e_447: keypair = keypairpack(empty,empty) in
        {7}let v_448: key = catch-fail(dhexp(key_s(them),g)) in
        {8}let rs_449: key = getpublickey((if not-caught-fail(v_448) then keypairpack(v_448,key_s(them)) else fail-any)) in
        {9}let re_450: key = empty in
        {10}let v_451: bitstring = catch-fail(hash(somename,empty)) in
        {11}let v_452: key = catch-fail(v_451) in
        {12}let v_453: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {13}let v_454: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_451) then (if not-caught-fail(v_452) then (if not-caught-fail(v_453) then symmetricstatepack(v_453,v_452,v_451) else fail-any) else fail-any) else fail-any))) in
        {14}let v_455: symmetricstate = catch-fail((if success?((if not-caught-fail(v_451) then (if not-caught-fail(v_452) then (if not-caught-fail(v_453) then symmetricstatepack(v_453,v_452,v_451) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_454) && success?(is-true(success?(1-proj-3-tuple(v_454))))) then symmetricstatepack(1-proj-3-tuple(v_454),2-proj-3-tuple(v_454),hash(3-proj-3-tuple(v_454),empty)) else fail-any) else fail-any)) in
        {15}let v_456: bitstring = catch-fail(symmetricstateunpack(v_455)) in
        {16}let v_457: symmetricstate = catch-fail((if (not-caught-fail(v_456) && success?(is-true(success?(1-proj-3-tuple(v_456))))) then symmetricstatepack(1-proj-3-tuple(v_456),2-proj-3-tuple(v_456),hash(3-proj-3-tuple(v_456),rs_449)) else fail-any)) in
        {17}let hs: handshakestate = (if not-caught-fail(v_455) then (if not-caught-fail(v_457) then handshakestatepack(v_457,s_446,e_447,rs_449,re_450,empty,true) else fail-any) else fail-any) in
        {18}insert statestore(me,them,statepack_a(hs))
    ) | (
        {49}get statestore(=me,=them,statepack_a(hs_458: handshakestate)) in
        {19}let v_459: bitstring = catch-fail(handshakestateunpack(hs_458)) in
        {20}let v_460: bitstring = catch-fail((empty,empty,empty)) in
        {21}new key_e[me,them]: key;
        {22}let v_461: key = catch-fail(dhexp(key_e,g)) in
        {23}let v_462: keypair = catch-fail((if not-caught-fail(v_461) then keypairpack(v_461,key_e) else fail-any)) in
        {24}let v_463: bitstring = catch-fail(getpublickey(v_462)) in
        {25}let v_464: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_459))) in
        {26}let v_465: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_459)) then (if (not-caught-fail(v_464) && success?(is-true(success?(1-proj-3-tuple(v_464))))) then symmetricstatepack(1-proj-3-tuple(v_464),2-proj-3-tuple(v_464),hash(3-proj-3-tuple(v_464),v_463)) else fail-any) else fail-any)) in
        {27}let v_466: bitstring = catch-fail(keypairunpack(v_462)) in
        {28}let v_467: bitstring = catch-fail(symmetricstateunpack(v_465)) in
        {29}let v_468: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_467),(if success?(4-proj-7-tuple(v_459)) then (if (not-caught-fail(v_466) && success?(is-true(success?(1-proj-2-tuple(v_466))))) then dhexp(2-proj-2-tuple(v_466),4-proj-7-tuple(v_459)) else fail-any) else fail-any))) in
        {30}let v_469: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_467),(if success?(4-proj-7-tuple(v_459)) then (if (not-caught-fail(v_466) && success?(is-true(success?(1-proj-2-tuple(v_466))))) then dhexp(2-proj-2-tuple(v_466),4-proj-7-tuple(v_459)) else fail-any) else fail-any))) in
        {31}let v_470: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_467),(if success?(4-proj-7-tuple(v_459)) then (if (not-caught-fail(v_466) && success?(is-true(success?(1-proj-2-tuple(v_466))))) then dhexp(2-proj-2-tuple(v_466),4-proj-7-tuple(v_459)) else fail-any) else fail-any))) in
        {32}let v_471: bitstring = catch-fail((if (success?((if success?(4-proj-7-tuple(v_459)) then (if (not-caught-fail(v_466) && success?(is-true(success?(1-proj-2-tuple(v_466))))) then dhexp(2-proj-2-tuple(v_466),4-proj-7-tuple(v_459)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_467))) then (if not-caught-fail(v_468) then (if not-caught-fail(v_469) then (if not-caught-fail(v_470) then (v_468,v_469,v_470) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {33}let v_472: symmetricstate = catch-fail((if success?((if success?(4-proj-7-tuple(v_459)) then (if (not-caught-fail(v_466) && success?(is-true(success?(1-proj-2-tuple(v_466))))) then dhexp(2-proj-2-tuple(v_466),4-proj-7-tuple(v_459)) else fail-any) else fail-any)) then (if (not-caught-fail(v_467) && success?(is-true(success?(1-proj-3-tuple(v_467))))) then (if (not-caught-fail(v_471) && success?(is-true(success?(1-proj-3-tuple(v_471))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_471)) then cipherstatepack(2-proj-3-tuple(v_471),minnonce) else fail-any),1-proj-3-tuple(v_471),3-proj-3-tuple(v_467)) else fail-any) else fail-any) else fail-any)) in
        {34}let v_473: bitstring = catch-fail(symmetricstateunpack(v_472)) in
        {35}let v_474: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_473))) in
        {36}let v_475: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_474),2-proj-2-tuple(v_474),3-proj-3-tuple(v_473),msg_a(me,them))) in
        {37}let v_476: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_473))) in
        {38}let v_477: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_474))) && success?(1-proj-3-tuple(v_473))) then (if (not-caught-fail(v_476) && success?(is-true(success?(1-proj-2-tuple(v_476))))) then cipherstatepack(1-proj-2-tuple(v_476),increment_nonce(2-proj-2-tuple(v_474))) else fail-any) else fail-any)) in
        {39}let v_478: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_473)) && success?(1-proj-3-tuple(v_473))) then (if (not-caught-fail(v_474) && success?(is-true(success?(1-proj-2-tuple(v_474))))) then (if not-caught-fail(v_475) then (if not-caught-fail(v_477) then (v_477,v_475) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {40}let v_479: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_478),2-proj-3-tuple(v_473),3-proj-3-tuple(v_473)))) in
        {41}let v_480: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_478)) && success?(symmetricstatepack(1-proj-2-tuple(v_478),2-proj-3-tuple(v_473),3-proj-3-tuple(v_473)))) then (if (not-caught-fail(v_479) && success?(is-true(success?(1-proj-3-tuple(v_479))))) then symmetricstatepack(1-proj-3-tuple(v_479),2-proj-3-tuple(v_479),hash(3-proj-3-tuple(v_479),2-proj-2-tuple(v_478))) else fail-any) else fail-any)) in
        {42}let v_481: bitstring = catch-fail((if (not-caught-fail(v_473) && success?(is-true(success?(1-proj-3-tuple(v_473))))) then (if (not-caught-fail(v_478) && success?(is-true(success?(1-proj-2-tuple(v_478))))) then (if not-caught-fail(v_480) then (v_480,2-proj-2-tuple(v_478)) else fail-any) else fail-any) else fail-any)) in
        {43}let v_482: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_481),2-proj-7-tuple(v_459),v_462,4-proj-7-tuple(v_459),5-proj-7-tuple(v_459),6-proj-7-tuple(v_459),7-proj-7-tuple(v_459))) in
        {44}let v_483: bitstring = catch-fail(concat3(v_463,2-proj-3-tuple(v_460),2-proj-2-tuple(v_481))) in
        {45}let (hs_484: handshakestate,re_485: key,message_a: bitstring) = (if (not-caught-fail(v_459) && success?(is-true(success?(1-proj-7-tuple(v_459))))) then (if (not-caught-fail(v_460) && success?(is-true(success?(1-proj-3-tuple(v_460))))) then (if not-caught-fail(v_462) then (if not-caught-fail(v_463) then (if not-caught-fail(v_465) then (if not-caught-fail(v_472) then (if (not-caught-fail(v_481) && success?(is-true(success?(1-proj-2-tuple(v_481))))) then (if not-caught-fail(v_482) then (if not-caught-fail(v_483) then (v_482,5-proj-7-tuple(v_459),v_483) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {46}event SendMsg(me,them,stage_a,msg_a(me,them),true);
        {47}insert statestore(me,them,statepack_b(hs_484));
        {48}out(pub, message_a)
    ) | (
        {78}get statestore(=me,=them,statepack_b(hs_486: handshakestate)) in
        {50}in(pub, message_b: bitstring);
        {51}let v_487: bitstring = catch-fail(handshakestateunpack(hs_486)) in
        {52}let v_488: bitstring = catch-fail(deconcat3(message_b)) in
        {53}let v_489: bool = catch-fail(true) in
        {54}let v_490: key = catch-fail(1-proj-3-tuple(v_488)) in
        {55}let v_491: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_487))) in
        {56}let v_492: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_487)) then (if (not-caught-fail(v_491) && success?(is-true(success?(1-proj-3-tuple(v_491))))) then symmetricstatepack(1-proj-3-tuple(v_491),2-proj-3-tuple(v_491),hash(3-proj-3-tuple(v_491),v_490)) else fail-any) else fail-any)) in
        {57}let v_493: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_487))) in
        {58}let v_494: bitstring = catch-fail(symmetricstateunpack(v_492)) in
        {59}let v_495: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_494),(if success?(3-proj-7-tuple(v_487)) then (if (not-caught-fail(v_493) && success?(is-true(success?(1-proj-2-tuple(v_493))))) then dhexp(2-proj-2-tuple(v_493),v_490) else fail-any) else fail-any))) in
        {60}let v_496: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_494),(if success?(3-proj-7-tuple(v_487)) then (if (not-caught-fail(v_493) && success?(is-true(success?(1-proj-2-tuple(v_493))))) then dhexp(2-proj-2-tuple(v_493),v_490) else fail-any) else fail-any))) in
        {61}let v_497: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_494),(if success?(3-proj-7-tuple(v_487)) then (if (not-caught-fail(v_493) && success?(is-true(success?(1-proj-2-tuple(v_493))))) then dhexp(2-proj-2-tuple(v_493),v_490) else fail-any) else fail-any))) in
        {62}let v_498: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_487)) then (if (not-caught-fail(v_493) && success?(is-true(success?(1-proj-2-tuple(v_493))))) then dhexp(2-proj-2-tuple(v_493),v_490) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_494))) then (if not-caught-fail(v_495) then (if not-caught-fail(v_496) then (if not-caught-fail(v_497) then (v_495,v_496,v_497) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {63}let v_499: symmetricstate = catch-fail((if success?((if success?(3-proj-7-tuple(v_487)) then (if (not-caught-fail(v_493) && success?(is-true(success?(1-proj-2-tuple(v_493))))) then dhexp(2-proj-2-tuple(v_493),v_490) else fail-any) else fail-any)) then (if (not-caught-fail(v_494) && success?(is-true(success?(1-proj-3-tuple(v_494))))) then (if (not-caught-fail(v_498) && success?(is-true(success?(1-proj-3-tuple(v_498))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_498)) then cipherstatepack(2-proj-3-tuple(v_498),minnonce) else fail-any),1-proj-3-tuple(v_498),3-proj-3-tuple(v_494)) else fail-any) else fail-any) else fail-any)) in
        {64}let v_500: bitstring = catch-fail(symmetricstateunpack(v_499)) in
        {65}let v_501: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_500))) in
        {66}let v_502: aead = catch-fail(decrypt(1-proj-2-tuple(v_501),2-proj-2-tuple(v_501),3-proj-3-tuple(v_500),3-proj-3-tuple(v_488))) in
        {67}let v_503: bitstring = catch-fail(aeadunpack(v_502)) in
        {68}let v_504: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_500))) in
        {69}let v_505: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_501))) && success?(1-proj-3-tuple(v_500))) then (if (not-caught-fail(v_504) && success?(is-true(success?(1-proj-2-tuple(v_504))))) then cipherstatepack(1-proj-2-tuple(v_504),increment_nonce(2-proj-2-tuple(v_501))) else fail-any) else fail-any)) in
        {70}let v_506: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_488)) && (success?(3-proj-3-tuple(v_500)) && success?(1-proj-3-tuple(v_500)))) then (if (not-caught-fail(v_501) && success?(is-true(success?(1-proj-2-tuple(v_501))))) then (if not-caught-fail(v_502) then (if (not-caught-fail(v_503) && success?(is-true(success?(1-proj-3-tuple(v_503))))) then (if not-caught-fail(v_505) then (v_505,3-proj-3-tuple(v_503),1-proj-3-tuple(v_503)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {71}let v_507: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_506),2-proj-3-tuple(v_500),3-proj-3-tuple(v_500)))) in
        {72}let v_508: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_488)) && success?(symmetricstatepack(1-proj-3-tuple(v_506),2-proj-3-tuple(v_500),3-proj-3-tuple(v_500)))) then (if (not-caught-fail(v_507) && success?(is-true(success?(1-proj-3-tuple(v_507))))) then symmetricstatepack(1-proj-3-tuple(v_507),2-proj-3-tuple(v_507),hash(3-proj-3-tuple(v_507),3-proj-3-tuple(v_488))) else fail-any) else fail-any)) in
        {73}let v_509: bitstring = catch-fail((if success?(3-proj-3-tuple(v_488)) then (if (not-caught-fail(v_500) && success?(is-true(success?(1-proj-3-tuple(v_500))))) then (if (not-caught-fail(v_506) && success?(is-true(success?(1-proj-3-tuple(v_506))))) then (if not-caught-fail(v_508) then (v_508,2-proj-3-tuple(v_506),3-proj-3-tuple(v_506)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {74}let v_510: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_509),2-proj-7-tuple(v_487),3-proj-7-tuple(v_487),4-proj-7-tuple(v_487),v_490,6-proj-7-tuple(v_487),7-proj-7-tuple(v_487))) in
        {75}let (hs_511: handshakestate,re_512: key,plaintext_b: bitstring,valid: bool) = (if (not-caught-fail(v_487) && success?(is-true(success?(1-proj-7-tuple(v_487))))) then (if (not-caught-fail(v_488) && success?(is-true(success?(1-proj-3-tuple(v_488))))) then (if not-caught-fail(v_489) then (if not-caught-fail(v_490) then (if not-caught-fail(v_492) then (if not-caught-fail(v_499) then (if (not-caught-fail(v_509) && success?(is-true(success?(1-proj-3-tuple(v_509))))) then (if (v_489 && 3-proj-3-tuple(v_509)) then (if not-caught-fail(v_510) then (v_510,getpublickey(3-proj-7-tuple(v_487)),2-proj-3-tuple(v_509),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {76}event RecvMsg(me,them,stage_b,plaintext_b,valid);
        {77}insert statestore(me,them,statepack_c(hs_511))
    ) | (
        {96}get statestore(=me,=them,statepack_c(hs_513: handshakestate)) in
        {79}let v_514: bitstring = catch-fail(handshakestateunpack(hs_513)) in
        {80}let v_515: bitstring = catch-fail((empty,empty,empty)) in
        {81}let v_516: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_514))) in
        {82}let v_517: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_516))) in
        {83}let v_518: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_517),2-proj-2-tuple(v_517),3-proj-3-tuple(v_516),msg_c(me,them))) in
        {84}let v_519: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_516))) in
        {85}let v_520: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_517))) && success?(1-proj-3-tuple(v_516))) then (if (not-caught-fail(v_519) && success?(is-true(success?(1-proj-2-tuple(v_519))))) then cipherstatepack(1-proj-2-tuple(v_519),increment_nonce(2-proj-2-tuple(v_517))) else fail-any) else fail-any)) in
        {86}let v_521: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_516)) && success?(1-proj-3-tuple(v_516))) then (if (not-caught-fail(v_517) && success?(is-true(success?(1-proj-2-tuple(v_517))))) then (if not-caught-fail(v_518) then (if not-caught-fail(v_520) then (v_520,v_518) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {87}let v_522: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_521),2-proj-3-tuple(v_516),3-proj-3-tuple(v_516)))) in
        {88}let v_523: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_521)) && success?(symmetricstatepack(1-proj-2-tuple(v_521),2-proj-3-tuple(v_516),3-proj-3-tuple(v_516)))) then (if (not-caught-fail(v_522) && success?(is-true(success?(1-proj-3-tuple(v_522))))) then symmetricstatepack(1-proj-3-tuple(v_522),2-proj-3-tuple(v_522),hash(3-proj-3-tuple(v_522),2-proj-2-tuple(v_521))) else fail-any) else fail-any)) in
        {89}let v_524: bitstring = catch-fail((if success?(1-proj-7-tuple(v_514)) then (if (not-caught-fail(v_516) && success?(is-true(success?(1-proj-3-tuple(v_516))))) then (if (not-caught-fail(v_521) && success?(is-true(success?(1-proj-2-tuple(v_521))))) then (if not-caught-fail(v_523) then (v_523,2-proj-2-tuple(v_521)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {90}let v_525: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_524),2-proj-7-tuple(v_514),3-proj-7-tuple(v_514),4-proj-7-tuple(v_514),5-proj-7-tuple(v_514),6-proj-7-tuple(v_514),7-proj-7-tuple(v_514))) in
        {91}let v_526: bitstring = catch-fail(concat3(1-proj-3-tuple(v_515),2-proj-3-tuple(v_515),2-proj-2-tuple(v_524))) in
        {92}let (hs_527: handshakestate,re_528: key,message_c: bitstring) = (if (not-caught-fail(v_514) && success?(is-true(success?(1-proj-7-tuple(v_514))))) then (if (not-caught-fail(v_515) && success?(is-true(success?(1-proj-3-tuple(v_515))))) then (if (not-caught-fail(v_524) && success?(is-true(success?(1-proj-2-tuple(v_524))))) then (if not-caught-fail(v_525) then (if not-caught-fail(v_526) then (v_525,5-proj-7-tuple(v_514),v_526) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {93}event SendMsg(me,them,stage_c,msg_c(me,them),true);
        {94}insert statestore(me,them,statepack_d(hs_527));
        {95}out(pub, message_c)
    ) | (
        {124}get statestore(=me,=them,statepack_d(hs_529: handshakestate)) in
        {97}in(pub, message_d: bitstring);
        {98}let v_530: bitstring = catch-fail(handshakestateunpack(hs_529)) in
        {99}let v_531: bitstring = catch-fail(deconcat3(message_d)) in
        {100}let v_532: bool = catch-fail(true) in
        {101}let v_533: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_530))) in
        {102}let v_534: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_533))) in
        {103}let v_535: aead = catch-fail(decrypt(1-proj-2-tuple(v_534),2-proj-2-tuple(v_534),3-proj-3-tuple(v_533),3-proj-3-tuple(v_531))) in
        {104}let v_536: bitstring = catch-fail(aeadunpack(v_535)) in
        {105}let v_537: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_533))) in
        {106}let v_538: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_534))) && success?(1-proj-3-tuple(v_533))) then (if (not-caught-fail(v_537) && success?(is-true(success?(1-proj-2-tuple(v_537))))) then cipherstatepack(1-proj-2-tuple(v_537),increment_nonce(2-proj-2-tuple(v_534))) else fail-any) else fail-any)) in
        {107}let v_539: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_531)) && (success?(3-proj-3-tuple(v_533)) && success?(1-proj-3-tuple(v_533)))) then (if (not-caught-fail(v_534) && success?(is-true(success?(1-proj-2-tuple(v_534))))) then (if not-caught-fail(v_535) then (if (not-caught-fail(v_536) && success?(is-true(success?(1-proj-3-tuple(v_536))))) then (if not-caught-fail(v_538) then (v_538,3-proj-3-tuple(v_536),1-proj-3-tuple(v_536)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {108}let v_540: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_539),2-proj-3-tuple(v_533),3-proj-3-tuple(v_533)))) in
        {109}let v_541: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_531)) && success?(symmetricstatepack(1-proj-3-tuple(v_539),2-proj-3-tuple(v_533),3-proj-3-tuple(v_533)))) then (if (not-caught-fail(v_540) && success?(is-true(success?(1-proj-3-tuple(v_540))))) then symmetricstatepack(1-proj-3-tuple(v_540),2-proj-3-tuple(v_540),hash(3-proj-3-tuple(v_540),3-proj-3-tuple(v_531))) else fail-any) else fail-any)) in
        {110}let v_542: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_531)) && success?(1-proj-7-tuple(v_530))) then (if (not-caught-fail(v_533) && success?(is-true(success?(1-proj-3-tuple(v_533))))) then (if (not-caught-fail(v_539) && success?(is-true(success?(1-proj-3-tuple(v_539))))) then (if not-caught-fail(v_541) then (v_541,2-proj-3-tuple(v_539),3-proj-3-tuple(v_539)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {111}let v_543: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_542),2-proj-7-tuple(v_530),3-proj-7-tuple(v_530),4-proj-7-tuple(v_530),5-proj-7-tuple(v_530),6-proj-7-tuple(v_530),7-proj-7-tuple(v_530))) in
        {112}let v_544: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_542))) in
        {113}let v_545: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_544),zero)) in
        {114}let v_546: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_544),zero)) in
        {115}let v_547: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_544),zero)) in
        {116}let v_548: bitstring = catch-fail((if success?(2-proj-3-tuple(v_544)) then (if not-caught-fail(v_545) then (if not-caught-fail(v_546) then (if not-caught-fail(v_547) then (v_545,v_546,v_547) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {117}let v_549: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_548)) then cipherstatepack(1-proj-3-tuple(v_548),minnonce) else fail-any)) in
        {118}let v_550: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_548)) then cipherstatepack(2-proj-3-tuple(v_548),minnonce) else fail-any)) in
        {119}let v_551: bitstring = catch-fail((if success?(1-proj-3-tuple(v_542)) then (if (not-caught-fail(v_544) && success?(is-true(success?(1-proj-3-tuple(v_544))))) then (if (not-caught-fail(v_548) && success?(is-true(success?(1-proj-3-tuple(v_548))))) then (if not-caught-fail(v_549) then (if not-caught-fail(v_550) then (1-proj-3-tuple(v_542),v_549,v_550) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {120}let (hs_552: handshakestate,re_553: key,plaintext_d: bitstring,valid_554: bool,cs1: cipherstate,cs2: cipherstate) = (if (not-caught-fail(v_530) && success?(is-true(success?(1-proj-7-tuple(v_530))))) then (if (not-caught-fail(v_531) && success?(is-true(success?(1-proj-3-tuple(v_531))))) then (if not-caught-fail(v_532) then (if (not-caught-fail(v_542) && success?(is-true(success?(1-proj-3-tuple(v_542))))) then (if (v_532 && 3-proj-3-tuple(v_542)) then (if not-caught-fail(v_543) then (if (not-caught-fail(v_551) && success?(is-true(success?(1-proj-3-tuple(v_551))))) then (v_543,getpublickey(3-proj-7-tuple(v_530)),2-proj-3-tuple(v_542),true,2-proj-3-tuple(v_551),3-proj-3-tuple(v_551)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {121}event RecvMsg(me,them,stage_d,plaintext_d,valid_554);
        {122}insert statestore(me,them,statepack_e(hs_552));
        {123}event RecvEnd(valid_554)
    ) | (
        {125}event LeakS(phase0,me);
        {126}out(pub, key_s(me))
    ) | (
        {127}phase 1;
        {128}event LeakS(phase1,me);
        {129}out(pub, key_s(me))
    )
) | (
    {130}let them_555: principal = charlie in
    {131}let me_556: principal = alice in
    {132}let s_557: keypair = keypairpack(empty,empty) in
    (
        {133}let e_558: keypair = keypairpack(empty,empty) in
        {134}let v_559: key = catch-fail(dhexp(key_s(them_555),g)) in
        {135}let rs_560: key = getpublickey((if not-caught-fail(v_559) then keypairpack(v_559,key_s(them_555)) else fail-any)) in
        {136}let re_561: key = empty in
        {137}let v_562: bitstring = catch-fail(hash(somename,empty)) in
        {138}let v_563: key = catch-fail(v_562) in
        {139}let v_564: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {140}let v_565: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_562) then (if not-caught-fail(v_563) then (if not-caught-fail(v_564) then symmetricstatepack(v_564,v_563,v_562) else fail-any) else fail-any) else fail-any))) in
        {141}let v_566: symmetricstate = catch-fail((if success?((if not-caught-fail(v_562) then (if not-caught-fail(v_563) then (if not-caught-fail(v_564) then symmetricstatepack(v_564,v_563,v_562) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_565) && success?(is-true(success?(1-proj-3-tuple(v_565))))) then symmetricstatepack(1-proj-3-tuple(v_565),2-proj-3-tuple(v_565),hash(3-proj-3-tuple(v_565),empty)) else fail-any) else fail-any)) in
        {142}let v_567: bitstring = catch-fail(symmetricstateunpack(v_566)) in
        {143}let v_568: symmetricstate = catch-fail((if (not-caught-fail(v_567) && success?(is-true(success?(1-proj-3-tuple(v_567))))) then symmetricstatepack(1-proj-3-tuple(v_567),2-proj-3-tuple(v_567),hash(3-proj-3-tuple(v_567),rs_560)) else fail-any)) in
        {144}let hs_569: handshakestate = (if not-caught-fail(v_566) then (if not-caught-fail(v_568) then handshakestatepack(v_568,s_557,e_558,rs_560,re_561,empty,true) else fail-any) else fail-any) in
        {145}insert statestore(me_556,them_555,statepack_a(hs_569))
    ) | (
        {176}get statestore(=me_556,=them_555,statepack_a(hs_570: handshakestate)) in
        {146}let v_571: bitstring = catch-fail(handshakestateunpack(hs_570)) in
        {147}let v_572: bitstring = catch-fail((empty,empty,empty)) in
        {148}new key_e_573[me_556,them_555]: key;
        {149}let v_574: key = catch-fail(dhexp(key_e_573,g)) in
        {150}let v_575: keypair = catch-fail((if not-caught-fail(v_574) then keypairpack(v_574,key_e_573) else fail-any)) in
        {151}let v_576: bitstring = catch-fail(getpublickey(v_575)) in
        {152}let v_577: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_571))) in
        {153}let v_578: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_571)) then (if (not-caught-fail(v_577) && success?(is-true(success?(1-proj-3-tuple(v_577))))) then symmetricstatepack(1-proj-3-tuple(v_577),2-proj-3-tuple(v_577),hash(3-proj-3-tuple(v_577),v_576)) else fail-any) else fail-any)) in
        {154}let v_579: bitstring = catch-fail(keypairunpack(v_575)) in
        {155}let v_580: bitstring = catch-fail(symmetricstateunpack(v_578)) in
        {156}let v_581: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_580),(if success?(4-proj-7-tuple(v_571)) then (if (not-caught-fail(v_579) && success?(is-true(success?(1-proj-2-tuple(v_579))))) then dhexp(2-proj-2-tuple(v_579),4-proj-7-tuple(v_571)) else fail-any) else fail-any))) in
        {157}let v_582: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_580),(if success?(4-proj-7-tuple(v_571)) then (if (not-caught-fail(v_579) && success?(is-true(success?(1-proj-2-tuple(v_579))))) then dhexp(2-proj-2-tuple(v_579),4-proj-7-tuple(v_571)) else fail-any) else fail-any))) in
        {158}let v_583: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_580),(if success?(4-proj-7-tuple(v_571)) then (if (not-caught-fail(v_579) && success?(is-true(success?(1-proj-2-tuple(v_579))))) then dhexp(2-proj-2-tuple(v_579),4-proj-7-tuple(v_571)) else fail-any) else fail-any))) in
        {159}let v_584: bitstring = catch-fail((if (success?((if success?(4-proj-7-tuple(v_571)) then (if (not-caught-fail(v_579) && success?(is-true(success?(1-proj-2-tuple(v_579))))) then dhexp(2-proj-2-tuple(v_579),4-proj-7-tuple(v_571)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_580))) then (if not-caught-fail(v_581) then (if not-caught-fail(v_582) then (if not-caught-fail(v_583) then (v_581,v_582,v_583) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {160}let v_585: symmetricstate = catch-fail((if success?((if success?(4-proj-7-tuple(v_571)) then (if (not-caught-fail(v_579) && success?(is-true(success?(1-proj-2-tuple(v_579))))) then dhexp(2-proj-2-tuple(v_579),4-proj-7-tuple(v_571)) else fail-any) else fail-any)) then (if (not-caught-fail(v_580) && success?(is-true(success?(1-proj-3-tuple(v_580))))) then (if (not-caught-fail(v_584) && success?(is-true(success?(1-proj-3-tuple(v_584))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_584)) then cipherstatepack(2-proj-3-tuple(v_584),minnonce) else fail-any),1-proj-3-tuple(v_584),3-proj-3-tuple(v_580)) else fail-any) else fail-any) else fail-any)) in
        {161}let v_586: bitstring = catch-fail(symmetricstateunpack(v_585)) in
        {162}let v_587: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_586))) in
        {163}let v_588: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_587),2-proj-2-tuple(v_587),3-proj-3-tuple(v_586),msg_a(me_556,them_555))) in
        {164}let v_589: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_586))) in
        {165}let v_590: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_587))) && success?(1-proj-3-tuple(v_586))) then (if (not-caught-fail(v_589) && success?(is-true(success?(1-proj-2-tuple(v_589))))) then cipherstatepack(1-proj-2-tuple(v_589),increment_nonce(2-proj-2-tuple(v_587))) else fail-any) else fail-any)) in
        {166}let v_591: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_586)) && success?(1-proj-3-tuple(v_586))) then (if (not-caught-fail(v_587) && success?(is-true(success?(1-proj-2-tuple(v_587))))) then (if not-caught-fail(v_588) then (if not-caught-fail(v_590) then (v_590,v_588) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {167}let v_592: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_591),2-proj-3-tuple(v_586),3-proj-3-tuple(v_586)))) in
        {168}let v_593: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_591)) && success?(symmetricstatepack(1-proj-2-tuple(v_591),2-proj-3-tuple(v_586),3-proj-3-tuple(v_586)))) then (if (not-caught-fail(v_592) && success?(is-true(success?(1-proj-3-tuple(v_592))))) then symmetricstatepack(1-proj-3-tuple(v_592),2-proj-3-tuple(v_592),hash(3-proj-3-tuple(v_592),2-proj-2-tuple(v_591))) else fail-any) else fail-any)) in
        {169}let v_594: bitstring = catch-fail((if (not-caught-fail(v_586) && success?(is-true(success?(1-proj-3-tuple(v_586))))) then (if (not-caught-fail(v_591) && success?(is-true(success?(1-proj-2-tuple(v_591))))) then (if not-caught-fail(v_593) then (v_593,2-proj-2-tuple(v_591)) else fail-any) else fail-any) else fail-any)) in
        {170}let v_595: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_594),2-proj-7-tuple(v_571),v_575,4-proj-7-tuple(v_571),5-proj-7-tuple(v_571),6-proj-7-tuple(v_571),7-proj-7-tuple(v_571))) in
        {171}let v_596: bitstring = catch-fail(concat3(v_576,2-proj-3-tuple(v_572),2-proj-2-tuple(v_594))) in
        {172}let (hs_597: handshakestate,re_598: key,message_a_599: bitstring) = (if (not-caught-fail(v_571) && success?(is-true(success?(1-proj-7-tuple(v_571))))) then (if (not-caught-fail(v_572) && success?(is-true(success?(1-proj-3-tuple(v_572))))) then (if not-caught-fail(v_575) then (if not-caught-fail(v_576) then (if not-caught-fail(v_578) then (if not-caught-fail(v_585) then (if (not-caught-fail(v_594) && success?(is-true(success?(1-proj-2-tuple(v_594))))) then (if not-caught-fail(v_595) then (if not-caught-fail(v_596) then (v_595,5-proj-7-tuple(v_571),v_596) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {173}event SendMsg(me_556,them_555,stage_a,msg_a(me_556,them_555),true);
        {174}insert statestore(me_556,them_555,statepack_b(hs_597));
        {175}out(pub, message_a_599)
    ) | (
        {205}get statestore(=me_556,=them_555,statepack_b(hs_600: handshakestate)) in
        {177}in(pub, message_b_601: bitstring);
        {178}let v_602: bitstring = catch-fail(handshakestateunpack(hs_600)) in
        {179}let v_603: bitstring = catch-fail(deconcat3(message_b_601)) in
        {180}let v_604: bool = catch-fail(true) in
        {181}let v_605: key = catch-fail(1-proj-3-tuple(v_603)) in
        {182}let v_606: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_602))) in
        {183}let v_607: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_602)) then (if (not-caught-fail(v_606) && success?(is-true(success?(1-proj-3-tuple(v_606))))) then symmetricstatepack(1-proj-3-tuple(v_606),2-proj-3-tuple(v_606),hash(3-proj-3-tuple(v_606),v_605)) else fail-any) else fail-any)) in
        {184}let v_608: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_602))) in
        {185}let v_609: bitstring = catch-fail(symmetricstateunpack(v_607)) in
        {186}let v_610: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_609),(if success?(3-proj-7-tuple(v_602)) then (if (not-caught-fail(v_608) && success?(is-true(success?(1-proj-2-tuple(v_608))))) then dhexp(2-proj-2-tuple(v_608),v_605) else fail-any) else fail-any))) in
        {187}let v_611: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_609),(if success?(3-proj-7-tuple(v_602)) then (if (not-caught-fail(v_608) && success?(is-true(success?(1-proj-2-tuple(v_608))))) then dhexp(2-proj-2-tuple(v_608),v_605) else fail-any) else fail-any))) in
        {188}let v_612: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_609),(if success?(3-proj-7-tuple(v_602)) then (if (not-caught-fail(v_608) && success?(is-true(success?(1-proj-2-tuple(v_608))))) then dhexp(2-proj-2-tuple(v_608),v_605) else fail-any) else fail-any))) in
        {189}let v_613: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_602)) then (if (not-caught-fail(v_608) && success?(is-true(success?(1-proj-2-tuple(v_608))))) then dhexp(2-proj-2-tuple(v_608),v_605) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_609))) then (if not-caught-fail(v_610) then (if not-caught-fail(v_611) then (if not-caught-fail(v_612) then (v_610,v_611,v_612) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {190}let v_614: symmetricstate = catch-fail((if success?((if success?(3-proj-7-tuple(v_602)) then (if (not-caught-fail(v_608) && success?(is-true(success?(1-proj-2-tuple(v_608))))) then dhexp(2-proj-2-tuple(v_608),v_605) else fail-any) else fail-any)) then (if (not-caught-fail(v_609) && success?(is-true(success?(1-proj-3-tuple(v_609))))) then (if (not-caught-fail(v_613) && success?(is-true(success?(1-proj-3-tuple(v_613))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_613)) then cipherstatepack(2-proj-3-tuple(v_613),minnonce) else fail-any),1-proj-3-tuple(v_613),3-proj-3-tuple(v_609)) else fail-any) else fail-any) else fail-any)) in
        {191}let v_615: bitstring = catch-fail(symmetricstateunpack(v_614)) in
        {192}let v_616: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_615))) in
        {193}let v_617: aead = catch-fail(decrypt(1-proj-2-tuple(v_616),2-proj-2-tuple(v_616),3-proj-3-tuple(v_615),3-proj-3-tuple(v_603))) in
        {194}let v_618: bitstring = catch-fail(aeadunpack(v_617)) in
        {195}let v_619: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_615))) in
        {196}let v_620: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_616))) && success?(1-proj-3-tuple(v_615))) then (if (not-caught-fail(v_619) && success?(is-true(success?(1-proj-2-tuple(v_619))))) then cipherstatepack(1-proj-2-tuple(v_619),increment_nonce(2-proj-2-tuple(v_616))) else fail-any) else fail-any)) in
        {197}let v_621: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_603)) && (success?(3-proj-3-tuple(v_615)) && success?(1-proj-3-tuple(v_615)))) then (if (not-caught-fail(v_616) && success?(is-true(success?(1-proj-2-tuple(v_616))))) then (if not-caught-fail(v_617) then (if (not-caught-fail(v_618) && success?(is-true(success?(1-proj-3-tuple(v_618))))) then (if not-caught-fail(v_620) then (v_620,3-proj-3-tuple(v_618),1-proj-3-tuple(v_618)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {198}let v_622: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_621),2-proj-3-tuple(v_615),3-proj-3-tuple(v_615)))) in
        {199}let v_623: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_603)) && success?(symmetricstatepack(1-proj-3-tuple(v_621),2-proj-3-tuple(v_615),3-proj-3-tuple(v_615)))) then (if (not-caught-fail(v_622) && success?(is-true(success?(1-proj-3-tuple(v_622))))) then symmetricstatepack(1-proj-3-tuple(v_622),2-proj-3-tuple(v_622),hash(3-proj-3-tuple(v_622),3-proj-3-tuple(v_603))) else fail-any) else fail-any)) in
        {200}let v_624: bitstring = catch-fail((if success?(3-proj-3-tuple(v_603)) then (if (not-caught-fail(v_615) && success?(is-true(success?(1-proj-3-tuple(v_615))))) then (if (not-caught-fail(v_621) && success?(is-true(success?(1-proj-3-tuple(v_621))))) then (if not-caught-fail(v_623) then (v_623,2-proj-3-tuple(v_621),3-proj-3-tuple(v_621)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {201}let v_625: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_624),2-proj-7-tuple(v_602),3-proj-7-tuple(v_602),4-proj-7-tuple(v_602),v_605,6-proj-7-tuple(v_602),7-proj-7-tuple(v_602))) in
        {202}let (hs_626: handshakestate,re_627: key,plaintext_b_628: bitstring,valid_629: bool) = (if (not-caught-fail(v_602) && success?(is-true(success?(1-proj-7-tuple(v_602))))) then (if (not-caught-fail(v_603) && success?(is-true(success?(1-proj-3-tuple(v_603))))) then (if not-caught-fail(v_604) then (if not-caught-fail(v_605) then (if not-caught-fail(v_607) then (if not-caught-fail(v_614) then (if (not-caught-fail(v_624) && success?(is-true(success?(1-proj-3-tuple(v_624))))) then (if (v_604 && 3-proj-3-tuple(v_624)) then (if not-caught-fail(v_625) then (v_625,getpublickey(3-proj-7-tuple(v_602)),2-proj-3-tuple(v_624),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {203}event RecvMsg(me_556,them_555,stage_b,plaintext_b_628,valid_629);
        {204}insert statestore(me_556,them_555,statepack_c(hs_626))
    ) | (
        {223}get statestore(=me_556,=them_555,statepack_c(hs_630: handshakestate)) in
        {206}let v_631: bitstring = catch-fail(handshakestateunpack(hs_630)) in
        {207}let v_632: bitstring = catch-fail((empty,empty,empty)) in
        {208}let v_633: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_631))) in
        {209}let v_634: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_633))) in
        {210}let v_635: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_634),2-proj-2-tuple(v_634),3-proj-3-tuple(v_633),msg_c(me_556,them_555))) in
        {211}let v_636: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_633))) in
        {212}let v_637: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_634))) && success?(1-proj-3-tuple(v_633))) then (if (not-caught-fail(v_636) && success?(is-true(success?(1-proj-2-tuple(v_636))))) then cipherstatepack(1-proj-2-tuple(v_636),increment_nonce(2-proj-2-tuple(v_634))) else fail-any) else fail-any)) in
        {213}let v_638: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_633)) && success?(1-proj-3-tuple(v_633))) then (if (not-caught-fail(v_634) && success?(is-true(success?(1-proj-2-tuple(v_634))))) then (if not-caught-fail(v_635) then (if not-caught-fail(v_637) then (v_637,v_635) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {214}let v_639: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_638),2-proj-3-tuple(v_633),3-proj-3-tuple(v_633)))) in
        {215}let v_640: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_638)) && success?(symmetricstatepack(1-proj-2-tuple(v_638),2-proj-3-tuple(v_633),3-proj-3-tuple(v_633)))) then (if (not-caught-fail(v_639) && success?(is-true(success?(1-proj-3-tuple(v_639))))) then symmetricstatepack(1-proj-3-tuple(v_639),2-proj-3-tuple(v_639),hash(3-proj-3-tuple(v_639),2-proj-2-tuple(v_638))) else fail-any) else fail-any)) in
        {216}let v_641: bitstring = catch-fail((if success?(1-proj-7-tuple(v_631)) then (if (not-caught-fail(v_633) && success?(is-true(success?(1-proj-3-tuple(v_633))))) then (if (not-caught-fail(v_638) && success?(is-true(success?(1-proj-2-tuple(v_638))))) then (if not-caught-fail(v_640) then (v_640,2-proj-2-tuple(v_638)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {217}let v_642: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_641),2-proj-7-tuple(v_631),3-proj-7-tuple(v_631),4-proj-7-tuple(v_631),5-proj-7-tuple(v_631),6-proj-7-tuple(v_631),7-proj-7-tuple(v_631))) in
        {218}let v_643: bitstring = catch-fail(concat3(1-proj-3-tuple(v_632),2-proj-3-tuple(v_632),2-proj-2-tuple(v_641))) in
        {219}let (hs_644: handshakestate,re_645: key,message_c_646: bitstring) = (if (not-caught-fail(v_631) && success?(is-true(success?(1-proj-7-tuple(v_631))))) then (if (not-caught-fail(v_632) && success?(is-true(success?(1-proj-3-tuple(v_632))))) then (if (not-caught-fail(v_641) && success?(is-true(success?(1-proj-2-tuple(v_641))))) then (if not-caught-fail(v_642) then (if not-caught-fail(v_643) then (v_642,5-proj-7-tuple(v_631),v_643) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {220}event SendMsg(me_556,them_555,stage_c,msg_c(me_556,them_555),true);
        {221}insert statestore(me_556,them_555,statepack_d(hs_644));
        {222}out(pub, message_c_646)
    ) | (
        {251}get statestore(=me_556,=them_555,statepack_d(hs_647: handshakestate)) in
        {224}in(pub, message_d_648: bitstring);
        {225}let v_649: bitstring = catch-fail(handshakestateunpack(hs_647)) in
        {226}let v_650: bitstring = catch-fail(deconcat3(message_d_648)) in
        {227}let v_651: bool = catch-fail(true) in
        {228}let v_652: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_649))) in
        {229}let v_653: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_652))) in
        {230}let v_654: aead = catch-fail(decrypt(1-proj-2-tuple(v_653),2-proj-2-tuple(v_653),3-proj-3-tuple(v_652),3-proj-3-tuple(v_650))) in
        {231}let v_655: bitstring = catch-fail(aeadunpack(v_654)) in
        {232}let v_656: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_652))) in
        {233}let v_657: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_653))) && success?(1-proj-3-tuple(v_652))) then (if (not-caught-fail(v_656) && success?(is-true(success?(1-proj-2-tuple(v_656))))) then cipherstatepack(1-proj-2-tuple(v_656),increment_nonce(2-proj-2-tuple(v_653))) else fail-any) else fail-any)) in
        {234}let v_658: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_650)) && (success?(3-proj-3-tuple(v_652)) && success?(1-proj-3-tuple(v_652)))) then (if (not-caught-fail(v_653) && success?(is-true(success?(1-proj-2-tuple(v_653))))) then (if not-caught-fail(v_654) then (if (not-caught-fail(v_655) && success?(is-true(success?(1-proj-3-tuple(v_655))))) then (if not-caught-fail(v_657) then (v_657,3-proj-3-tuple(v_655),1-proj-3-tuple(v_655)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {235}let v_659: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_658),2-proj-3-tuple(v_652),3-proj-3-tuple(v_652)))) in
        {236}let v_660: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_650)) && success?(symmetricstatepack(1-proj-3-tuple(v_658),2-proj-3-tuple(v_652),3-proj-3-tuple(v_652)))) then (if (not-caught-fail(v_659) && success?(is-true(success?(1-proj-3-tuple(v_659))))) then symmetricstatepack(1-proj-3-tuple(v_659),2-proj-3-tuple(v_659),hash(3-proj-3-tuple(v_659),3-proj-3-tuple(v_650))) else fail-any) else fail-any)) in
        {237}let v_661: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_650)) && success?(1-proj-7-tuple(v_649))) then (if (not-caught-fail(v_652) && success?(is-true(success?(1-proj-3-tuple(v_652))))) then (if (not-caught-fail(v_658) && success?(is-true(success?(1-proj-3-tuple(v_658))))) then (if not-caught-fail(v_660) then (v_660,2-proj-3-tuple(v_658),3-proj-3-tuple(v_658)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {238}let v_662: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_661),2-proj-7-tuple(v_649),3-proj-7-tuple(v_649),4-proj-7-tuple(v_649),5-proj-7-tuple(v_649),6-proj-7-tuple(v_649),7-proj-7-tuple(v_649))) in
        {239}let v_663: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_661))) in
        {240}let v_664: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_663),zero)) in
        {241}let v_665: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_663),zero)) in
        {242}let v_666: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_663),zero)) in
        {243}let v_667: bitstring = catch-fail((if success?(2-proj-3-tuple(v_663)) then (if not-caught-fail(v_664) then (if not-caught-fail(v_665) then (if not-caught-fail(v_666) then (v_664,v_665,v_666) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {244}let v_668: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_667)) then cipherstatepack(1-proj-3-tuple(v_667),minnonce) else fail-any)) in
        {245}let v_669: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_667)) then cipherstatepack(2-proj-3-tuple(v_667),minnonce) else fail-any)) in
        {246}let v_670: bitstring = catch-fail((if success?(1-proj-3-tuple(v_661)) then (if (not-caught-fail(v_663) && success?(is-true(success?(1-proj-3-tuple(v_663))))) then (if (not-caught-fail(v_667) && success?(is-true(success?(1-proj-3-tuple(v_667))))) then (if not-caught-fail(v_668) then (if not-caught-fail(v_669) then (1-proj-3-tuple(v_661),v_668,v_669) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {247}let (hs_671: handshakestate,re_672: key,plaintext_d_673: bitstring,valid_674: bool,cs1_675: cipherstate,cs2_676: cipherstate) = (if (not-caught-fail(v_649) && success?(is-true(success?(1-proj-7-tuple(v_649))))) then (if (not-caught-fail(v_650) && success?(is-true(success?(1-proj-3-tuple(v_650))))) then (if not-caught-fail(v_651) then (if (not-caught-fail(v_661) && success?(is-true(success?(1-proj-3-tuple(v_661))))) then (if (v_651 && 3-proj-3-tuple(v_661)) then (if not-caught-fail(v_662) then (if (not-caught-fail(v_670) && success?(is-true(success?(1-proj-3-tuple(v_670))))) then (v_662,getpublickey(3-proj-7-tuple(v_649)),2-proj-3-tuple(v_661),true,2-proj-3-tuple(v_670),3-proj-3-tuple(v_670)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {248}event RecvMsg(me_556,them_555,stage_d,plaintext_d_673,valid_674);
        {249}insert statestore(me_556,them_555,statepack_e(hs_671));
        {250}event RecvEnd(valid_674)
    ) | (
        {252}event LeakS(phase0,me_556);
        {253}out(pub, key_s(me_556))
    ) | (
        {254}phase 1;
        {255}event LeakS(phase1,me_556);
        {256}out(pub, key_s(me_556))
    )
) | (
    {257}let them_677: principal = alice in
    {258}let me_678: principal = bob in
    {259}let v_679: key = catch-fail(dhexp(key_s(me_678),g)) in
    {260}let s_680: keypair = (if not-caught-fail(v_679) then keypairpack(v_679,key_s(me_678)) else fail-any) in
    {261}out(pub, getpublickey(s_680));
    (
        {262}let e_681: keypair = keypairpack(empty,empty) in
        {263}let rs_682: key = empty in
        {264}let re_683: key = empty in
        {265}let v_684: bitstring = catch-fail(hash(somename,empty)) in
        {266}let v_685: key = catch-fail(v_684) in
        {267}let v_686: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {268}let v_687: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_684) then (if not-caught-fail(v_685) then (if not-caught-fail(v_686) then symmetricstatepack(v_686,v_685,v_684) else fail-any) else fail-any) else fail-any))) in
        {269}let v_688: symmetricstate = catch-fail((if success?((if not-caught-fail(v_684) then (if not-caught-fail(v_685) then (if not-caught-fail(v_686) then symmetricstatepack(v_686,v_685,v_684) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_687) && success?(is-true(success?(1-proj-3-tuple(v_687))))) then symmetricstatepack(1-proj-3-tuple(v_687),2-proj-3-tuple(v_687),hash(3-proj-3-tuple(v_687),empty)) else fail-any) else fail-any)) in
        {270}let v_689: bitstring = catch-fail(symmetricstateunpack(v_688)) in
        {271}let v_690: symmetricstate = catch-fail((if success?(getpublickey(s_680)) then (if (not-caught-fail(v_689) && success?(is-true(success?(1-proj-3-tuple(v_689))))) then symmetricstatepack(1-proj-3-tuple(v_689),2-proj-3-tuple(v_689),hash(3-proj-3-tuple(v_689),getpublickey(s_680))) else fail-any) else fail-any)) in
        {272}let hs_691: handshakestate = (if not-caught-fail(v_688) then (if not-caught-fail(v_690) then handshakestatepack(v_690,s_680,e_681,rs_682,re_683,empty,false) else fail-any) else fail-any) in
        {273}insert statestore(me_678,them_677,statepack_a(hs_691))
    ) | (
        {302}get statestore(=me_678,=them_677,statepack_a(hs_692: handshakestate)) in
        {274}in(pub, message_a_693: bitstring);
        {275}let v_694: bitstring = catch-fail(handshakestateunpack(hs_692)) in
        {276}let v_695: bitstring = catch-fail(deconcat3(message_a_693)) in
        {277}let v_696: bool = catch-fail(true) in
        {278}let v_697: key = catch-fail(1-proj-3-tuple(v_695)) in
        {279}let v_698: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_694))) in
        {280}let v_699: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_694)) then (if (not-caught-fail(v_698) && success?(is-true(success?(1-proj-3-tuple(v_698))))) then symmetricstatepack(1-proj-3-tuple(v_698),2-proj-3-tuple(v_698),hash(3-proj-3-tuple(v_698),v_697)) else fail-any) else fail-any)) in
        {281}let v_700: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_694))) in
        {282}let v_701: bitstring = catch-fail(symmetricstateunpack(v_699)) in
        {283}let v_702: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_701),(if success?(2-proj-7-tuple(v_694)) then (if (not-caught-fail(v_700) && success?(is-true(success?(1-proj-2-tuple(v_700))))) then dhexp(2-proj-2-tuple(v_700),v_697) else fail-any) else fail-any))) in
        {284}let v_703: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_701),(if success?(2-proj-7-tuple(v_694)) then (if (not-caught-fail(v_700) && success?(is-true(success?(1-proj-2-tuple(v_700))))) then dhexp(2-proj-2-tuple(v_700),v_697) else fail-any) else fail-any))) in
        {285}let v_704: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_701),(if success?(2-proj-7-tuple(v_694)) then (if (not-caught-fail(v_700) && success?(is-true(success?(1-proj-2-tuple(v_700))))) then dhexp(2-proj-2-tuple(v_700),v_697) else fail-any) else fail-any))) in
        {286}let v_705: bitstring = catch-fail((if (success?((if success?(2-proj-7-tuple(v_694)) then (if (not-caught-fail(v_700) && success?(is-true(success?(1-proj-2-tuple(v_700))))) then dhexp(2-proj-2-tuple(v_700),v_697) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_701))) then (if not-caught-fail(v_702) then (if not-caught-fail(v_703) then (if not-caught-fail(v_704) then (v_702,v_703,v_704) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {287}let v_706: symmetricstate = catch-fail((if success?((if success?(2-proj-7-tuple(v_694)) then (if (not-caught-fail(v_700) && success?(is-true(success?(1-proj-2-tuple(v_700))))) then dhexp(2-proj-2-tuple(v_700),v_697) else fail-any) else fail-any)) then (if (not-caught-fail(v_701) && success?(is-true(success?(1-proj-3-tuple(v_701))))) then (if (not-caught-fail(v_705) && success?(is-true(success?(1-proj-3-tuple(v_705))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_705)) then cipherstatepack(2-proj-3-tuple(v_705),minnonce) else fail-any),1-proj-3-tuple(v_705),3-proj-3-tuple(v_701)) else fail-any) else fail-any) else fail-any)) in
        {288}let v_707: bitstring = catch-fail(symmetricstateunpack(v_706)) in
        {289}let v_708: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_707))) in
        {290}let v_709: aead = catch-fail(decrypt(1-proj-2-tuple(v_708),2-proj-2-tuple(v_708),3-proj-3-tuple(v_707),3-proj-3-tuple(v_695))) in
        {291}let v_710: bitstring = catch-fail(aeadunpack(v_709)) in
        {292}let v_711: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_707))) in
        {293}let v_712: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_708))) && success?(1-proj-3-tuple(v_707))) then (if (not-caught-fail(v_711) && success?(is-true(success?(1-proj-2-tuple(v_711))))) then cipherstatepack(1-proj-2-tuple(v_711),increment_nonce(2-proj-2-tuple(v_708))) else fail-any) else fail-any)) in
        {294}let v_713: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_695)) && (success?(3-proj-3-tuple(v_707)) && success?(1-proj-3-tuple(v_707)))) then (if (not-caught-fail(v_708) && success?(is-true(success?(1-proj-2-tuple(v_708))))) then (if not-caught-fail(v_709) then (if (not-caught-fail(v_710) && success?(is-true(success?(1-proj-3-tuple(v_710))))) then (if not-caught-fail(v_712) then (v_712,3-proj-3-tuple(v_710),1-proj-3-tuple(v_710)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {295}let v_714: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_713),2-proj-3-tuple(v_707),3-proj-3-tuple(v_707)))) in
        {296}let v_715: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_695)) && success?(symmetricstatepack(1-proj-3-tuple(v_713),2-proj-3-tuple(v_707),3-proj-3-tuple(v_707)))) then (if (not-caught-fail(v_714) && success?(is-true(success?(1-proj-3-tuple(v_714))))) then symmetricstatepack(1-proj-3-tuple(v_714),2-proj-3-tuple(v_714),hash(3-proj-3-tuple(v_714),3-proj-3-tuple(v_695))) else fail-any) else fail-any)) in
        {297}let v_716: bitstring = catch-fail((if success?(3-proj-3-tuple(v_695)) then (if (not-caught-fail(v_707) && success?(is-true(success?(1-proj-3-tuple(v_707))))) then (if (not-caught-fail(v_713) && success?(is-true(success?(1-proj-3-tuple(v_713))))) then (if not-caught-fail(v_715) then (v_715,2-proj-3-tuple(v_713),3-proj-3-tuple(v_713)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {298}let v_717: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_716),2-proj-7-tuple(v_694),3-proj-7-tuple(v_694),4-proj-7-tuple(v_694),v_697,6-proj-7-tuple(v_694),7-proj-7-tuple(v_694))) in
        {299}let (hs_718: handshakestate,re_719: key,plaintext_a: bitstring,valid_720: bool) = (if (not-caught-fail(v_694) && success?(is-true(success?(1-proj-7-tuple(v_694))))) then (if (not-caught-fail(v_695) && success?(is-true(success?(1-proj-3-tuple(v_695))))) then (if not-caught-fail(v_696) then (if not-caught-fail(v_697) then (if not-caught-fail(v_699) then (if not-caught-fail(v_706) then (if (not-caught-fail(v_716) && success?(is-true(success?(1-proj-3-tuple(v_716))))) then (if (v_696 && 3-proj-3-tuple(v_716)) then (if not-caught-fail(v_717) then (v_717,getpublickey(3-proj-7-tuple(v_694)),2-proj-3-tuple(v_716),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {300}event RecvMsg(me_678,them_677,stage_a,plaintext_a,valid_720);
        {301}insert statestore(me_678,them_677,statepack_b(hs_718))
    ) | (
        {333}get statestore(=me_678,=them_677,statepack_b(hs_721: handshakestate)) in
        {303}let v_722: bitstring = catch-fail(handshakestateunpack(hs_721)) in
        {304}let v_723: bitstring = catch-fail((empty,empty,empty)) in
        {305}new key_e_724[me_678,them_677]: key;
        {306}let v_725: key = catch-fail(dhexp(key_e_724,g)) in
        {307}let v_726: keypair = catch-fail((if not-caught-fail(v_725) then keypairpack(v_725,key_e_724) else fail-any)) in
        {308}let v_727: bitstring = catch-fail(getpublickey(v_726)) in
        {309}let v_728: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_722))) in
        {310}let v_729: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_722)) then (if (not-caught-fail(v_728) && success?(is-true(success?(1-proj-3-tuple(v_728))))) then symmetricstatepack(1-proj-3-tuple(v_728),2-proj-3-tuple(v_728),hash(3-proj-3-tuple(v_728),v_727)) else fail-any) else fail-any)) in
        {311}let v_730: bitstring = catch-fail(keypairunpack(v_726)) in
        {312}let v_731: bitstring = catch-fail(symmetricstateunpack(v_729)) in
        {313}let v_732: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_731),(if success?(5-proj-7-tuple(v_722)) then (if (not-caught-fail(v_730) && success?(is-true(success?(1-proj-2-tuple(v_730))))) then dhexp(2-proj-2-tuple(v_730),5-proj-7-tuple(v_722)) else fail-any) else fail-any))) in
        {314}let v_733: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_731),(if success?(5-proj-7-tuple(v_722)) then (if (not-caught-fail(v_730) && success?(is-true(success?(1-proj-2-tuple(v_730))))) then dhexp(2-proj-2-tuple(v_730),5-proj-7-tuple(v_722)) else fail-any) else fail-any))) in
        {315}let v_734: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_731),(if success?(5-proj-7-tuple(v_722)) then (if (not-caught-fail(v_730) && success?(is-true(success?(1-proj-2-tuple(v_730))))) then dhexp(2-proj-2-tuple(v_730),5-proj-7-tuple(v_722)) else fail-any) else fail-any))) in
        {316}let v_735: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_722)) then (if (not-caught-fail(v_730) && success?(is-true(success?(1-proj-2-tuple(v_730))))) then dhexp(2-proj-2-tuple(v_730),5-proj-7-tuple(v_722)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_731))) then (if not-caught-fail(v_732) then (if not-caught-fail(v_733) then (if not-caught-fail(v_734) then (v_732,v_733,v_734) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {317}let v_736: symmetricstate = catch-fail((if success?((if success?(5-proj-7-tuple(v_722)) then (if (not-caught-fail(v_730) && success?(is-true(success?(1-proj-2-tuple(v_730))))) then dhexp(2-proj-2-tuple(v_730),5-proj-7-tuple(v_722)) else fail-any) else fail-any)) then (if (not-caught-fail(v_731) && success?(is-true(success?(1-proj-3-tuple(v_731))))) then (if (not-caught-fail(v_735) && success?(is-true(success?(1-proj-3-tuple(v_735))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_735)) then cipherstatepack(2-proj-3-tuple(v_735),minnonce) else fail-any),1-proj-3-tuple(v_735),3-proj-3-tuple(v_731)) else fail-any) else fail-any) else fail-any)) in
        {318}let v_737: bitstring = catch-fail(symmetricstateunpack(v_736)) in
        {319}let v_738: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_737))) in
        {320}let v_739: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_738),2-proj-2-tuple(v_738),3-proj-3-tuple(v_737),msg_b(me_678,them_677))) in
        {321}let v_740: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_737))) in
        {322}let v_741: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_738))) && success?(1-proj-3-tuple(v_737))) then (if (not-caught-fail(v_740) && success?(is-true(success?(1-proj-2-tuple(v_740))))) then cipherstatepack(1-proj-2-tuple(v_740),increment_nonce(2-proj-2-tuple(v_738))) else fail-any) else fail-any)) in
        {323}let v_742: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_737)) && success?(1-proj-3-tuple(v_737))) then (if (not-caught-fail(v_738) && success?(is-true(success?(1-proj-2-tuple(v_738))))) then (if not-caught-fail(v_739) then (if not-caught-fail(v_741) then (v_741,v_739) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {324}let v_743: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_742),2-proj-3-tuple(v_737),3-proj-3-tuple(v_737)))) in
        {325}let v_744: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_742)) && success?(symmetricstatepack(1-proj-2-tuple(v_742),2-proj-3-tuple(v_737),3-proj-3-tuple(v_737)))) then (if (not-caught-fail(v_743) && success?(is-true(success?(1-proj-3-tuple(v_743))))) then symmetricstatepack(1-proj-3-tuple(v_743),2-proj-3-tuple(v_743),hash(3-proj-3-tuple(v_743),2-proj-2-tuple(v_742))) else fail-any) else fail-any)) in
        {326}let v_745: bitstring = catch-fail((if (not-caught-fail(v_737) && success?(is-true(success?(1-proj-3-tuple(v_737))))) then (if (not-caught-fail(v_742) && success?(is-true(success?(1-proj-2-tuple(v_742))))) then (if not-caught-fail(v_744) then (v_744,2-proj-2-tuple(v_742)) else fail-any) else fail-any) else fail-any)) in
        {327}let v_746: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_745),2-proj-7-tuple(v_722),v_726,4-proj-7-tuple(v_722),5-proj-7-tuple(v_722),6-proj-7-tuple(v_722),7-proj-7-tuple(v_722))) in
        {328}let v_747: bitstring = catch-fail(concat3(v_727,2-proj-3-tuple(v_723),2-proj-2-tuple(v_745))) in
        {329}let (hs_748: handshakestate,re_749: key,message_b_750: bitstring) = (if (not-caught-fail(v_722) && success?(is-true(success?(1-proj-7-tuple(v_722))))) then (if (not-caught-fail(v_723) && success?(is-true(success?(1-proj-3-tuple(v_723))))) then (if not-caught-fail(v_726) then (if not-caught-fail(v_727) then (if not-caught-fail(v_729) then (if not-caught-fail(v_736) then (if (not-caught-fail(v_745) && success?(is-true(success?(1-proj-2-tuple(v_745))))) then (if not-caught-fail(v_746) then (if not-caught-fail(v_747) then (v_746,5-proj-7-tuple(v_722),v_747) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {330}event SendMsg(me_678,them_677,stage_b,msg_b(me_678,them_677),true);
        {331}insert statestore(me_678,them_677,statepack_c(hs_748));
        {332}out(pub, message_b_750)
    ) | (
        {352}get statestore(=me_678,=them_677,statepack_c(hs_751: handshakestate)) in
        {334}in(pub, message_c_752: bitstring);
        {335}let v_753: bitstring = catch-fail(handshakestateunpack(hs_751)) in
        {336}let v_754: bitstring = catch-fail(deconcat3(message_c_752)) in
        {337}let v_755: bool = catch-fail(true) in
        {338}let v_756: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_753))) in
        {339}let v_757: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_756))) in
        {340}let v_758: aead = catch-fail(decrypt(1-proj-2-tuple(v_757),2-proj-2-tuple(v_757),3-proj-3-tuple(v_756),3-proj-3-tuple(v_754))) in
        {341}let v_759: bitstring = catch-fail(aeadunpack(v_758)) in
        {342}let v_760: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_756))) in
        {343}let v_761: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_757))) && success?(1-proj-3-tuple(v_756))) then (if (not-caught-fail(v_760) && success?(is-true(success?(1-proj-2-tuple(v_760))))) then cipherstatepack(1-proj-2-tuple(v_760),increment_nonce(2-proj-2-tuple(v_757))) else fail-any) else fail-any)) in
        {344}let v_762: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_754)) && (success?(3-proj-3-tuple(v_756)) && success?(1-proj-3-tuple(v_756)))) then (if (not-caught-fail(v_757) && success?(is-true(success?(1-proj-2-tuple(v_757))))) then (if not-caught-fail(v_758) then (if (not-caught-fail(v_759) && success?(is-true(success?(1-proj-3-tuple(v_759))))) then (if not-caught-fail(v_761) then (v_761,3-proj-3-tuple(v_759),1-proj-3-tuple(v_759)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {345}let v_763: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_762),2-proj-3-tuple(v_756),3-proj-3-tuple(v_756)))) in
        {346}let v_764: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_754)) && success?(symmetricstatepack(1-proj-3-tuple(v_762),2-proj-3-tuple(v_756),3-proj-3-tuple(v_756)))) then (if (not-caught-fail(v_763) && success?(is-true(success?(1-proj-3-tuple(v_763))))) then symmetricstatepack(1-proj-3-tuple(v_763),2-proj-3-tuple(v_763),hash(3-proj-3-tuple(v_763),3-proj-3-tuple(v_754))) else fail-any) else fail-any)) in
        {347}let v_765: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_754)) && success?(1-proj-7-tuple(v_753))) then (if (not-caught-fail(v_756) && success?(is-true(success?(1-proj-3-tuple(v_756))))) then (if (not-caught-fail(v_762) && success?(is-true(success?(1-proj-3-tuple(v_762))))) then (if not-caught-fail(v_764) then (v_764,2-proj-3-tuple(v_762),3-proj-3-tuple(v_762)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {348}let v_766: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_765),2-proj-7-tuple(v_753),3-proj-7-tuple(v_753),4-proj-7-tuple(v_753),5-proj-7-tuple(v_753),6-proj-7-tuple(v_753),7-proj-7-tuple(v_753))) in
        {349}let (hs_767: handshakestate,re_768: key,plaintext_c: bitstring,valid_769: bool) = (if (not-caught-fail(v_753) && success?(is-true(success?(1-proj-7-tuple(v_753))))) then (if (not-caught-fail(v_754) && success?(is-true(success?(1-proj-3-tuple(v_754))))) then (if not-caught-fail(v_755) then (if (not-caught-fail(v_765) && success?(is-true(success?(1-proj-3-tuple(v_765))))) then (if (v_755 && 3-proj-3-tuple(v_765)) then (if not-caught-fail(v_766) then (v_766,getpublickey(3-proj-7-tuple(v_753)),2-proj-3-tuple(v_765),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {350}event RecvMsg(me_678,them_677,stage_c,plaintext_c,valid_769);
        {351}insert statestore(me_678,them_677,statepack_d(hs_767))
    ) | (
        {378}get statestore(=me_678,=them_677,statepack_d(hs_770: handshakestate)) in
        {353}let v_771: bitstring = catch-fail(handshakestateunpack(hs_770)) in
        {354}let v_772: bitstring = catch-fail((empty,empty,empty)) in
        {355}let v_773: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_771))) in
        {356}let v_774: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_773))) in
        {357}let v_775: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_774),2-proj-2-tuple(v_774),3-proj-3-tuple(v_773),msg_d(me_678,them_677))) in
        {358}let v_776: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_773))) in
        {359}let v_777: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_774))) && success?(1-proj-3-tuple(v_773))) then (if (not-caught-fail(v_776) && success?(is-true(success?(1-proj-2-tuple(v_776))))) then cipherstatepack(1-proj-2-tuple(v_776),increment_nonce(2-proj-2-tuple(v_774))) else fail-any) else fail-any)) in
        {360}let v_778: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_773)) && success?(1-proj-3-tuple(v_773))) then (if (not-caught-fail(v_774) && success?(is-true(success?(1-proj-2-tuple(v_774))))) then (if not-caught-fail(v_775) then (if not-caught-fail(v_777) then (v_777,v_775) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {361}let v_779: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_778),2-proj-3-tuple(v_773),3-proj-3-tuple(v_773)))) in
        {362}let v_780: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_778)) && success?(symmetricstatepack(1-proj-2-tuple(v_778),2-proj-3-tuple(v_773),3-proj-3-tuple(v_773)))) then (if (not-caught-fail(v_779) && success?(is-true(success?(1-proj-3-tuple(v_779))))) then symmetricstatepack(1-proj-3-tuple(v_779),2-proj-3-tuple(v_779),hash(3-proj-3-tuple(v_779),2-proj-2-tuple(v_778))) else fail-any) else fail-any)) in
        {363}let v_781: bitstring = catch-fail((if success?(1-proj-7-tuple(v_771)) then (if (not-caught-fail(v_773) && success?(is-true(success?(1-proj-3-tuple(v_773))))) then (if (not-caught-fail(v_778) && success?(is-true(success?(1-proj-2-tuple(v_778))))) then (if not-caught-fail(v_780) then (v_780,2-proj-2-tuple(v_778)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {364}let v_782: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_781),2-proj-7-tuple(v_771),3-proj-7-tuple(v_771),4-proj-7-tuple(v_771),5-proj-7-tuple(v_771),6-proj-7-tuple(v_771),7-proj-7-tuple(v_771))) in
        {365}let v_783: bitstring = catch-fail(concat3(1-proj-3-tuple(v_772),2-proj-3-tuple(v_772),2-proj-2-tuple(v_781))) in
        {366}let v_784: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_781))) in
        {367}let v_785: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_784),zero)) in
        {368}let v_786: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_784),zero)) in
        {369}let v_787: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_784),zero)) in
        {370}let v_788: bitstring = catch-fail((if success?(2-proj-3-tuple(v_784)) then (if not-caught-fail(v_785) then (if not-caught-fail(v_786) then (if not-caught-fail(v_787) then (v_785,v_786,v_787) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {371}let v_789: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_788)) then cipherstatepack(1-proj-3-tuple(v_788),minnonce) else fail-any)) in
        {372}let v_790: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_788)) then cipherstatepack(2-proj-3-tuple(v_788),minnonce) else fail-any)) in
        {373}let v_791: bitstring = catch-fail((if success?(1-proj-2-tuple(v_781)) then (if (not-caught-fail(v_784) && success?(is-true(success?(1-proj-3-tuple(v_784))))) then (if (not-caught-fail(v_788) && success?(is-true(success?(1-proj-3-tuple(v_788))))) then (if not-caught-fail(v_789) then (if not-caught-fail(v_790) then (1-proj-2-tuple(v_781),v_789,v_790) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {374}let (hs_792: handshakestate,re_793: key,message_d_794: bitstring,cs1_795: cipherstate,cs2_796: cipherstate) = (if (not-caught-fail(v_771) && success?(is-true(success?(1-proj-7-tuple(v_771))))) then (if (not-caught-fail(v_772) && success?(is-true(success?(1-proj-3-tuple(v_772))))) then (if (not-caught-fail(v_781) && success?(is-true(success?(1-proj-2-tuple(v_781))))) then (if not-caught-fail(v_782) then (if not-caught-fail(v_783) then (if (not-caught-fail(v_791) && success?(is-true(success?(1-proj-3-tuple(v_791))))) then (v_782,5-proj-7-tuple(v_771),v_783,2-proj-3-tuple(v_791),3-proj-3-tuple(v_791)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {375}event SendMsg(me_678,them_677,stage_d,msg_d(me_678,them_677),true);
        {376}insert statestore(me_678,them_677,statepack_e(hs_792));
        {377}out(pub, message_d_794)
    ) | (
        {379}event LeakS(phase0,me_678);
        {380}out(pub, key_s(me_678))
    ) | (
        {381}phase 1;
        {382}event LeakS(phase1,me_678);
        {383}out(pub, key_s(me_678))
    )
) | (
    {384}let them_797: principal = charlie in
    {385}let me_798: principal = bob in
    {386}let v_799: key = catch-fail(dhexp(key_s(me_798),g)) in
    {387}let s_800: keypair = (if not-caught-fail(v_799) then keypairpack(v_799,key_s(me_798)) else fail-any) in
    {388}out(pub, getpublickey(s_800));
    (
        {389}let e_801: keypair = keypairpack(empty,empty) in
        {390}let rs_802: key = empty in
        {391}let re_803: key = empty in
        {392}let v_804: bitstring = catch-fail(hash(somename,empty)) in
        {393}let v_805: key = catch-fail(v_804) in
        {394}let v_806: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {395}let v_807: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_804) then (if not-caught-fail(v_805) then (if not-caught-fail(v_806) then symmetricstatepack(v_806,v_805,v_804) else fail-any) else fail-any) else fail-any))) in
        {396}let v_808: symmetricstate = catch-fail((if success?((if not-caught-fail(v_804) then (if not-caught-fail(v_805) then (if not-caught-fail(v_806) then symmetricstatepack(v_806,v_805,v_804) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_807) && success?(is-true(success?(1-proj-3-tuple(v_807))))) then symmetricstatepack(1-proj-3-tuple(v_807),2-proj-3-tuple(v_807),hash(3-proj-3-tuple(v_807),empty)) else fail-any) else fail-any)) in
        {397}let v_809: bitstring = catch-fail(symmetricstateunpack(v_808)) in
        {398}let v_810: symmetricstate = catch-fail((if success?(getpublickey(s_800)) then (if (not-caught-fail(v_809) && success?(is-true(success?(1-proj-3-tuple(v_809))))) then symmetricstatepack(1-proj-3-tuple(v_809),2-proj-3-tuple(v_809),hash(3-proj-3-tuple(v_809),getpublickey(s_800))) else fail-any) else fail-any)) in
        {399}let hs_811: handshakestate = (if not-caught-fail(v_808) then (if not-caught-fail(v_810) then handshakestatepack(v_810,s_800,e_801,rs_802,re_803,empty,false) else fail-any) else fail-any) in
        {400}insert statestore(me_798,them_797,statepack_a(hs_811))
    ) | (
        {429}get statestore(=me_798,=them_797,statepack_a(hs_812: handshakestate)) in
        {401}in(pub, message_a_813: bitstring);
        {402}let v_814: bitstring = catch-fail(handshakestateunpack(hs_812)) in
        {403}let v_815: bitstring = catch-fail(deconcat3(message_a_813)) in
        {404}let v_816: bool = catch-fail(true) in
        {405}let v_817: key = catch-fail(1-proj-3-tuple(v_815)) in
        {406}let v_818: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_814))) in
        {407}let v_819: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_814)) then (if (not-caught-fail(v_818) && success?(is-true(success?(1-proj-3-tuple(v_818))))) then symmetricstatepack(1-proj-3-tuple(v_818),2-proj-3-tuple(v_818),hash(3-proj-3-tuple(v_818),v_817)) else fail-any) else fail-any)) in
        {408}let v_820: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_814))) in
        {409}let v_821: bitstring = catch-fail(symmetricstateunpack(v_819)) in
        {410}let v_822: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_821),(if success?(2-proj-7-tuple(v_814)) then (if (not-caught-fail(v_820) && success?(is-true(success?(1-proj-2-tuple(v_820))))) then dhexp(2-proj-2-tuple(v_820),v_817) else fail-any) else fail-any))) in
        {411}let v_823: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_821),(if success?(2-proj-7-tuple(v_814)) then (if (not-caught-fail(v_820) && success?(is-true(success?(1-proj-2-tuple(v_820))))) then dhexp(2-proj-2-tuple(v_820),v_817) else fail-any) else fail-any))) in
        {412}let v_824: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_821),(if success?(2-proj-7-tuple(v_814)) then (if (not-caught-fail(v_820) && success?(is-true(success?(1-proj-2-tuple(v_820))))) then dhexp(2-proj-2-tuple(v_820),v_817) else fail-any) else fail-any))) in
        {413}let v_825: bitstring = catch-fail((if (success?((if success?(2-proj-7-tuple(v_814)) then (if (not-caught-fail(v_820) && success?(is-true(success?(1-proj-2-tuple(v_820))))) then dhexp(2-proj-2-tuple(v_820),v_817) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_821))) then (if not-caught-fail(v_822) then (if not-caught-fail(v_823) then (if not-caught-fail(v_824) then (v_822,v_823,v_824) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {414}let v_826: symmetricstate = catch-fail((if success?((if success?(2-proj-7-tuple(v_814)) then (if (not-caught-fail(v_820) && success?(is-true(success?(1-proj-2-tuple(v_820))))) then dhexp(2-proj-2-tuple(v_820),v_817) else fail-any) else fail-any)) then (if (not-caught-fail(v_821) && success?(is-true(success?(1-proj-3-tuple(v_821))))) then (if (not-caught-fail(v_825) && success?(is-true(success?(1-proj-3-tuple(v_825))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_825)) then cipherstatepack(2-proj-3-tuple(v_825),minnonce) else fail-any),1-proj-3-tuple(v_825),3-proj-3-tuple(v_821)) else fail-any) else fail-any) else fail-any)) in
        {415}let v_827: bitstring = catch-fail(symmetricstateunpack(v_826)) in
        {416}let v_828: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_827))) in
        {417}let v_829: aead = catch-fail(decrypt(1-proj-2-tuple(v_828),2-proj-2-tuple(v_828),3-proj-3-tuple(v_827),3-proj-3-tuple(v_815))) in
        {418}let v_830: bitstring = catch-fail(aeadunpack(v_829)) in
        {419}let v_831: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_827))) in
        {420}let v_832: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_828))) && success?(1-proj-3-tuple(v_827))) then (if (not-caught-fail(v_831) && success?(is-true(success?(1-proj-2-tuple(v_831))))) then cipherstatepack(1-proj-2-tuple(v_831),increment_nonce(2-proj-2-tuple(v_828))) else fail-any) else fail-any)) in
        {421}let v_833: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_815)) && (success?(3-proj-3-tuple(v_827)) && success?(1-proj-3-tuple(v_827)))) then (if (not-caught-fail(v_828) && success?(is-true(success?(1-proj-2-tuple(v_828))))) then (if not-caught-fail(v_829) then (if (not-caught-fail(v_830) && success?(is-true(success?(1-proj-3-tuple(v_830))))) then (if not-caught-fail(v_832) then (v_832,3-proj-3-tuple(v_830),1-proj-3-tuple(v_830)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {422}let v_834: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_833),2-proj-3-tuple(v_827),3-proj-3-tuple(v_827)))) in
        {423}let v_835: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_815)) && success?(symmetricstatepack(1-proj-3-tuple(v_833),2-proj-3-tuple(v_827),3-proj-3-tuple(v_827)))) then (if (not-caught-fail(v_834) && success?(is-true(success?(1-proj-3-tuple(v_834))))) then symmetricstatepack(1-proj-3-tuple(v_834),2-proj-3-tuple(v_834),hash(3-proj-3-tuple(v_834),3-proj-3-tuple(v_815))) else fail-any) else fail-any)) in
        {424}let v_836: bitstring = catch-fail((if success?(3-proj-3-tuple(v_815)) then (if (not-caught-fail(v_827) && success?(is-true(success?(1-proj-3-tuple(v_827))))) then (if (not-caught-fail(v_833) && success?(is-true(success?(1-proj-3-tuple(v_833))))) then (if not-caught-fail(v_835) then (v_835,2-proj-3-tuple(v_833),3-proj-3-tuple(v_833)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {425}let v_837: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_836),2-proj-7-tuple(v_814),3-proj-7-tuple(v_814),4-proj-7-tuple(v_814),v_817,6-proj-7-tuple(v_814),7-proj-7-tuple(v_814))) in
        {426}let (hs_838: handshakestate,re_839: key,plaintext_a_840: bitstring,valid_841: bool) = (if (not-caught-fail(v_814) && success?(is-true(success?(1-proj-7-tuple(v_814))))) then (if (not-caught-fail(v_815) && success?(is-true(success?(1-proj-3-tuple(v_815))))) then (if not-caught-fail(v_816) then (if not-caught-fail(v_817) then (if not-caught-fail(v_819) then (if not-caught-fail(v_826) then (if (not-caught-fail(v_836) && success?(is-true(success?(1-proj-3-tuple(v_836))))) then (if (v_816 && 3-proj-3-tuple(v_836)) then (if not-caught-fail(v_837) then (v_837,getpublickey(3-proj-7-tuple(v_814)),2-proj-3-tuple(v_836),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {427}event RecvMsg(me_798,them_797,stage_a,plaintext_a_840,valid_841);
        {428}insert statestore(me_798,them_797,statepack_b(hs_838))
    ) | (
        {460}get statestore(=me_798,=them_797,statepack_b(hs_842: handshakestate)) in
        {430}let v_843: bitstring = catch-fail(handshakestateunpack(hs_842)) in
        {431}let v_844: bitstring = catch-fail((empty,empty,empty)) in
        {432}new key_e_845[me_798,them_797]: key;
        {433}let v_846: key = catch-fail(dhexp(key_e_845,g)) in
        {434}let v_847: keypair = catch-fail((if not-caught-fail(v_846) then keypairpack(v_846,key_e_845) else fail-any)) in
        {435}let v_848: bitstring = catch-fail(getpublickey(v_847)) in
        {436}let v_849: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_843))) in
        {437}let v_850: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_843)) then (if (not-caught-fail(v_849) && success?(is-true(success?(1-proj-3-tuple(v_849))))) then symmetricstatepack(1-proj-3-tuple(v_849),2-proj-3-tuple(v_849),hash(3-proj-3-tuple(v_849),v_848)) else fail-any) else fail-any)) in
        {438}let v_851: bitstring = catch-fail(keypairunpack(v_847)) in
        {439}let v_852: bitstring = catch-fail(symmetricstateunpack(v_850)) in
        {440}let v_853: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_852),(if success?(5-proj-7-tuple(v_843)) then (if (not-caught-fail(v_851) && success?(is-true(success?(1-proj-2-tuple(v_851))))) then dhexp(2-proj-2-tuple(v_851),5-proj-7-tuple(v_843)) else fail-any) else fail-any))) in
        {441}let v_854: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_852),(if success?(5-proj-7-tuple(v_843)) then (if (not-caught-fail(v_851) && success?(is-true(success?(1-proj-2-tuple(v_851))))) then dhexp(2-proj-2-tuple(v_851),5-proj-7-tuple(v_843)) else fail-any) else fail-any))) in
        {442}let v_855: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_852),(if success?(5-proj-7-tuple(v_843)) then (if (not-caught-fail(v_851) && success?(is-true(success?(1-proj-2-tuple(v_851))))) then dhexp(2-proj-2-tuple(v_851),5-proj-7-tuple(v_843)) else fail-any) else fail-any))) in
        {443}let v_856: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_843)) then (if (not-caught-fail(v_851) && success?(is-true(success?(1-proj-2-tuple(v_851))))) then dhexp(2-proj-2-tuple(v_851),5-proj-7-tuple(v_843)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_852))) then (if not-caught-fail(v_853) then (if not-caught-fail(v_854) then (if not-caught-fail(v_855) then (v_853,v_854,v_855) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {444}let v_857: symmetricstate = catch-fail((if success?((if success?(5-proj-7-tuple(v_843)) then (if (not-caught-fail(v_851) && success?(is-true(success?(1-proj-2-tuple(v_851))))) then dhexp(2-proj-2-tuple(v_851),5-proj-7-tuple(v_843)) else fail-any) else fail-any)) then (if (not-caught-fail(v_852) && success?(is-true(success?(1-proj-3-tuple(v_852))))) then (if (not-caught-fail(v_856) && success?(is-true(success?(1-proj-3-tuple(v_856))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_856)) then cipherstatepack(2-proj-3-tuple(v_856),minnonce) else fail-any),1-proj-3-tuple(v_856),3-proj-3-tuple(v_852)) else fail-any) else fail-any) else fail-any)) in
        {445}let v_858: bitstring = catch-fail(symmetricstateunpack(v_857)) in
        {446}let v_859: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_858))) in
        {447}let v_860: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_859),2-proj-2-tuple(v_859),3-proj-3-tuple(v_858),msg_b(me_798,them_797))) in
        {448}let v_861: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_858))) in
        {449}let v_862: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_859))) && success?(1-proj-3-tuple(v_858))) then (if (not-caught-fail(v_861) && success?(is-true(success?(1-proj-2-tuple(v_861))))) then cipherstatepack(1-proj-2-tuple(v_861),increment_nonce(2-proj-2-tuple(v_859))) else fail-any) else fail-any)) in
        {450}let v_863: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_858)) && success?(1-proj-3-tuple(v_858))) then (if (not-caught-fail(v_859) && success?(is-true(success?(1-proj-2-tuple(v_859))))) then (if not-caught-fail(v_860) then (if not-caught-fail(v_862) then (v_862,v_860) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {451}let v_864: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_863),2-proj-3-tuple(v_858),3-proj-3-tuple(v_858)))) in
        {452}let v_865: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_863)) && success?(symmetricstatepack(1-proj-2-tuple(v_863),2-proj-3-tuple(v_858),3-proj-3-tuple(v_858)))) then (if (not-caught-fail(v_864) && success?(is-true(success?(1-proj-3-tuple(v_864))))) then symmetricstatepack(1-proj-3-tuple(v_864),2-proj-3-tuple(v_864),hash(3-proj-3-tuple(v_864),2-proj-2-tuple(v_863))) else fail-any) else fail-any)) in
        {453}let v_866: bitstring = catch-fail((if (not-caught-fail(v_858) && success?(is-true(success?(1-proj-3-tuple(v_858))))) then (if (not-caught-fail(v_863) && success?(is-true(success?(1-proj-2-tuple(v_863))))) then (if not-caught-fail(v_865) then (v_865,2-proj-2-tuple(v_863)) else fail-any) else fail-any) else fail-any)) in
        {454}let v_867: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_866),2-proj-7-tuple(v_843),v_847,4-proj-7-tuple(v_843),5-proj-7-tuple(v_843),6-proj-7-tuple(v_843),7-proj-7-tuple(v_843))) in
        {455}let v_868: bitstring = catch-fail(concat3(v_848,2-proj-3-tuple(v_844),2-proj-2-tuple(v_866))) in
        {456}let (hs_869: handshakestate,re_870: key,message_b_871: bitstring) = (if (not-caught-fail(v_843) && success?(is-true(success?(1-proj-7-tuple(v_843))))) then (if (not-caught-fail(v_844) && success?(is-true(success?(1-proj-3-tuple(v_844))))) then (if not-caught-fail(v_847) then (if not-caught-fail(v_848) then (if not-caught-fail(v_850) then (if not-caught-fail(v_857) then (if (not-caught-fail(v_866) && success?(is-true(success?(1-proj-2-tuple(v_866))))) then (if not-caught-fail(v_867) then (if not-caught-fail(v_868) then (v_867,5-proj-7-tuple(v_843),v_868) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {457}event SendMsg(me_798,them_797,stage_b,msg_b(me_798,them_797),true);
        {458}insert statestore(me_798,them_797,statepack_c(hs_869));
        {459}out(pub, message_b_871)
    ) | (
        {479}get statestore(=me_798,=them_797,statepack_c(hs_872: handshakestate)) in
        {461}in(pub, message_c_873: bitstring);
        {462}let v_874: bitstring = catch-fail(handshakestateunpack(hs_872)) in
        {463}let v_875: bitstring = catch-fail(deconcat3(message_c_873)) in
        {464}let v_876: bool = catch-fail(true) in
        {465}let v_877: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_874))) in
        {466}let v_878: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_877))) in
        {467}let v_879: aead = catch-fail(decrypt(1-proj-2-tuple(v_878),2-proj-2-tuple(v_878),3-proj-3-tuple(v_877),3-proj-3-tuple(v_875))) in
        {468}let v_880: bitstring = catch-fail(aeadunpack(v_879)) in
        {469}let v_881: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_877))) in
        {470}let v_882: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_878))) && success?(1-proj-3-tuple(v_877))) then (if (not-caught-fail(v_881) && success?(is-true(success?(1-proj-2-tuple(v_881))))) then cipherstatepack(1-proj-2-tuple(v_881),increment_nonce(2-proj-2-tuple(v_878))) else fail-any) else fail-any)) in
        {471}let v_883: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_875)) && (success?(3-proj-3-tuple(v_877)) && success?(1-proj-3-tuple(v_877)))) then (if (not-caught-fail(v_878) && success?(is-true(success?(1-proj-2-tuple(v_878))))) then (if not-caught-fail(v_879) then (if (not-caught-fail(v_880) && success?(is-true(success?(1-proj-3-tuple(v_880))))) then (if not-caught-fail(v_882) then (v_882,3-proj-3-tuple(v_880),1-proj-3-tuple(v_880)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {472}let v_884: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_883),2-proj-3-tuple(v_877),3-proj-3-tuple(v_877)))) in
        {473}let v_885: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_875)) && success?(symmetricstatepack(1-proj-3-tuple(v_883),2-proj-3-tuple(v_877),3-proj-3-tuple(v_877)))) then (if (not-caught-fail(v_884) && success?(is-true(success?(1-proj-3-tuple(v_884))))) then symmetricstatepack(1-proj-3-tuple(v_884),2-proj-3-tuple(v_884),hash(3-proj-3-tuple(v_884),3-proj-3-tuple(v_875))) else fail-any) else fail-any)) in
        {474}let v_886: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_875)) && success?(1-proj-7-tuple(v_874))) then (if (not-caught-fail(v_877) && success?(is-true(success?(1-proj-3-tuple(v_877))))) then (if (not-caught-fail(v_883) && success?(is-true(success?(1-proj-3-tuple(v_883))))) then (if not-caught-fail(v_885) then (v_885,2-proj-3-tuple(v_883),3-proj-3-tuple(v_883)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {475}let v_887: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_886),2-proj-7-tuple(v_874),3-proj-7-tuple(v_874),4-proj-7-tuple(v_874),5-proj-7-tuple(v_874),6-proj-7-tuple(v_874),7-proj-7-tuple(v_874))) in
        {476}let (hs_888: handshakestate,re_889: key,plaintext_c_890: bitstring,valid_891: bool) = (if (not-caught-fail(v_874) && success?(is-true(success?(1-proj-7-tuple(v_874))))) then (if (not-caught-fail(v_875) && success?(is-true(success?(1-proj-3-tuple(v_875))))) then (if not-caught-fail(v_876) then (if (not-caught-fail(v_886) && success?(is-true(success?(1-proj-3-tuple(v_886))))) then (if (v_876 && 3-proj-3-tuple(v_886)) then (if not-caught-fail(v_887) then (v_887,getpublickey(3-proj-7-tuple(v_874)),2-proj-3-tuple(v_886),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {477}event RecvMsg(me_798,them_797,stage_c,plaintext_c_890,valid_891);
        {478}insert statestore(me_798,them_797,statepack_d(hs_888))
    ) | (
        {505}get statestore(=me_798,=them_797,statepack_d(hs_892: handshakestate)) in
        {480}let v_893: bitstring = catch-fail(handshakestateunpack(hs_892)) in
        {481}let v_894: bitstring = catch-fail((empty,empty,empty)) in
        {482}let v_895: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_893))) in
        {483}let v_896: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_895))) in
        {484}let v_897: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_896),2-proj-2-tuple(v_896),3-proj-3-tuple(v_895),msg_d(me_798,them_797))) in
        {485}let v_898: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_895))) in
        {486}let v_899: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_896))) && success?(1-proj-3-tuple(v_895))) then (if (not-caught-fail(v_898) && success?(is-true(success?(1-proj-2-tuple(v_898))))) then cipherstatepack(1-proj-2-tuple(v_898),increment_nonce(2-proj-2-tuple(v_896))) else fail-any) else fail-any)) in
        {487}let v_900: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_895)) && success?(1-proj-3-tuple(v_895))) then (if (not-caught-fail(v_896) && success?(is-true(success?(1-proj-2-tuple(v_896))))) then (if not-caught-fail(v_897) then (if not-caught-fail(v_899) then (v_899,v_897) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {488}let v_901: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_900),2-proj-3-tuple(v_895),3-proj-3-tuple(v_895)))) in
        {489}let v_902: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_900)) && success?(symmetricstatepack(1-proj-2-tuple(v_900),2-proj-3-tuple(v_895),3-proj-3-tuple(v_895)))) then (if (not-caught-fail(v_901) && success?(is-true(success?(1-proj-3-tuple(v_901))))) then symmetricstatepack(1-proj-3-tuple(v_901),2-proj-3-tuple(v_901),hash(3-proj-3-tuple(v_901),2-proj-2-tuple(v_900))) else fail-any) else fail-any)) in
        {490}let v_903: bitstring = catch-fail((if success?(1-proj-7-tuple(v_893)) then (if (not-caught-fail(v_895) && success?(is-true(success?(1-proj-3-tuple(v_895))))) then (if (not-caught-fail(v_900) && success?(is-true(success?(1-proj-2-tuple(v_900))))) then (if not-caught-fail(v_902) then (v_902,2-proj-2-tuple(v_900)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {491}let v_904: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_903),2-proj-7-tuple(v_893),3-proj-7-tuple(v_893),4-proj-7-tuple(v_893),5-proj-7-tuple(v_893),6-proj-7-tuple(v_893),7-proj-7-tuple(v_893))) in
        {492}let v_905: bitstring = catch-fail(concat3(1-proj-3-tuple(v_894),2-proj-3-tuple(v_894),2-proj-2-tuple(v_903))) in
        {493}let v_906: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_903))) in
        {494}let v_907: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_906),zero)) in
        {495}let v_908: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_906),zero)) in
        {496}let v_909: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_906),zero)) in
        {497}let v_910: bitstring = catch-fail((if success?(2-proj-3-tuple(v_906)) then (if not-caught-fail(v_907) then (if not-caught-fail(v_908) then (if not-caught-fail(v_909) then (v_907,v_908,v_909) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {498}let v_911: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_910)) then cipherstatepack(1-proj-3-tuple(v_910),minnonce) else fail-any)) in
        {499}let v_912: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_910)) then cipherstatepack(2-proj-3-tuple(v_910),minnonce) else fail-any)) in
        {500}let v_913: bitstring = catch-fail((if success?(1-proj-2-tuple(v_903)) then (if (not-caught-fail(v_906) && success?(is-true(success?(1-proj-3-tuple(v_906))))) then (if (not-caught-fail(v_910) && success?(is-true(success?(1-proj-3-tuple(v_910))))) then (if not-caught-fail(v_911) then (if not-caught-fail(v_912) then (1-proj-2-tuple(v_903),v_911,v_912) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {501}let (hs_914: handshakestate,re_915: key,message_d_916: bitstring,cs1_917: cipherstate,cs2_918: cipherstate) = (if (not-caught-fail(v_893) && success?(is-true(success?(1-proj-7-tuple(v_893))))) then (if (not-caught-fail(v_894) && success?(is-true(success?(1-proj-3-tuple(v_894))))) then (if (not-caught-fail(v_903) && success?(is-true(success?(1-proj-2-tuple(v_903))))) then (if not-caught-fail(v_904) then (if not-caught-fail(v_905) then (if (not-caught-fail(v_913) && success?(is-true(success?(1-proj-3-tuple(v_913))))) then (v_904,5-proj-7-tuple(v_893),v_905,2-proj-3-tuple(v_913),3-proj-3-tuple(v_913)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {502}event SendMsg(me_798,them_797,stage_d,msg_d(me_798,them_797),true);
        {503}insert statestore(me_798,them_797,statepack_e(hs_914));
        {504}out(pub, message_d_916)
    ) | (
        {506}event LeakS(phase0,me_798);
        {507}out(pub, key_s(me_798))
    ) | (
        {508}phase 1;
        {509}event LeakS(phase1,me_798);
        {510}out(pub, key_s(me_798))
    )
)

-- Query event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)); event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,c_999,stage_a,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,c_999,stage_a,m,true)) || event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)) || event(LeakS(phase0,alice)); not attacker_p1(msg_a(alice,bob)); attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob)); attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice))); attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true)); event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,c_999,stage_b,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,c_999,stage_b,m,true)) || event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true)) || event(LeakS(phase0,bob)); not attacker_p1(msg_b(bob,alice)); attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice)); attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob))); attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true)); event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,c_999,stage_c,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,c_999,stage_c,m,true)) || event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true)) || event(LeakS(phase0,alice)); not attacker_p1(msg_c(alice,bob)); attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob)); attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice))); attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true)); event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,c_999,stage_d,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,c_999,stage_d,m,true)) || event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true)) || event(LeakS(phase0,bob)); not attacker_p1(msg_d(bob,alice)); attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice)); attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob))); attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice))
Completing...
200 rules inserted. The rule base contains 200 rules. 138 rules in the queue.
400 rules inserted. The rule base contains 391 rules. 35 rules in the queue.
600 rules inserted. The rule base contains 578 rules. 178 rules in the queue.
800 rules inserted. The rule base contains 768 rules. 118 rules in the queue.
1000 rules inserted. The rule base contains 965 rules. 207 rules in the queue.
1200 rules inserted. The rule base contains 1142 rules. 206 rules in the queue.
1400 rules inserted. The rule base contains 1307 rules. 203 rules in the queue.
1600 rules inserted. The rule base contains 1437 rules. 169 rules in the queue.
1800 rules inserted. The rule base contains 1573 rules. 173 rules in the queue.
2000 rules inserted. The rule base contains 1707 rules. 198 rules in the queue.
2200 rules inserted. The rule base contains 1796 rules. 200 rules in the queue.
2400 rules inserted. The rule base contains 1960 rules. 236 rules in the queue.
2600 rules inserted. The rule base contains 2107 rules. 253 rules in the queue.
2800 rules inserted. The rule base contains 2256 rules. 220 rules in the queue.
3000 rules inserted. The rule base contains 2390 rules. 192 rules in the queue.
3200 rules inserted. The rule base contains 2512 rules. 184 rules in the queue.
3400 rules inserted. The rule base contains 2619 rules. 190 rules in the queue.
3600 rules inserted. The rule base contains 2771 rules. 208 rules in the queue.
3800 rules inserted. The rule base contains 2912 rules. 195 rules in the queue.
4000 rules inserted. The rule base contains 3039 rules. 172 rules in the queue.
4200 rules inserted. The rule base contains 3150 rules. 143 rules in the queue.
4400 rules inserted. The rule base contains 3270 rules. 137 rules in the queue.
4600 rules inserted. The rule base contains 3379 rules. 86 rules in the queue.
4800 rules inserted. The rule base contains 3372 rules. 15 rules in the queue.
Starting query event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true))
goal reachable: begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(bob,alice,stage_a,msg_a(alice,bob),true))
RESULT event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)) is true.
Starting query event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,c_999,stage_a,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(bob,alice,stage_a,msg_a(alice,bob),true))
RESULT event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,c_999,stage_a,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,c_999,stage_a,m,true)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(bob,alice,stage_a,msg_a(alice,bob),true))
RESULT event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,c_999,stage_a,m,true)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(bob,alice,stage_a,msg_a(alice,bob),true))
RESULT event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(bob,alice,stage_a,msg_a(alice,bob),true))
RESULT event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)) || event(LeakS(phase0,alice)) is true.
Starting query not attacker_p1(msg_a(alice,bob))
goal reachable: begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> attacker_p1(msg_a(alice,bob))
Abbreviations:
key_21655624 = key_e[me = alice,them = bob,!1 = @sid_21655610]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

3. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 2 may be read at get {49}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {46}.
So the message concat3(dhexp(key_21655624,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_21655624,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655624,g)),msg_a(alice,bob))) may be sent on channel pub at output {48}.
mess(pub,concat3(dhexp(key_21655624,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_21655624,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655624,g)),msg_a(alice,bob)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(dhexp(key_21655624,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_21655624,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655624,g)),msg_a(alice,bob))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_21655624,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_21655624,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655624,g)),msg_a(alice,bob))) by listening on this channel.
attacker(concat3(dhexp(key_21655624,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_21655624,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655624,g)),msg_a(alice,bob)))).

5. By 4, the attacker may know concat3(dhexp(key_21655624,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_21655624,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655624,g)),msg_a(alice,bob))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),dhexp(key_21655624,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655624,g)),msg_a(alice,bob)).
attacker(encrypt(hmac_hash2(hash(somename,empty),dhexp(key_21655624,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655624,g)),msg_a(alice,bob))).

6. By 5, the attacker may know encrypt(hmac_hash2(hash(somename,empty),dhexp(key_21655624,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655624,g)),msg_a(alice,bob)).
So the attacker may know encrypt(hmac_hash2(hash(somename,empty),dhexp(key_21655624,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655624,g)),msg_a(alice,bob)) in phase 1.
attacker_p1(encrypt(hmac_hash2(hash(somename,empty),dhexp(key_21655624,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655624,g)),msg_a(alice,bob))).

7. By 4, the attacker may know concat3(dhexp(key_21655624,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_21655624,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655624,g)),msg_a(alice,bob))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_21655624,g).
attacker(dhexp(key_21655624,g)).

8. The message dhexp(key_s(bob),g) may be sent on channel pub at output {261}.
mess(pub,dhexp(key_s(bob),g)).

9. By 1, the attacker may have the channel pub.
By 8, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

10. Using the function empty the attacker may obtain empty.
attacker(empty).

11. Using the function somename the attacker may obtain somename.
attacker(somename).

12. By 11, the attacker may know somename.
By 10, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

13. By 12, the attacker may know hash(somename,empty).
By 10, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

14. By 13, the attacker may know hash(hash(somename,empty),empty).
By 9, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))).

15. By 14, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)).
By 7, the attacker may know dhexp(key_21655624,g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655624,g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655624,g))).

16. By 15, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655624,g)).
So the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655624,g)) in phase 1.
attacker_p1(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655624,g))).

17. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

18. The event LeakS(phase0,bob) may be executed at {379}.
So the message key_s(bob) may be sent on channel pub at output {380}.
mess(pub,key_s(bob)).

19. By 1, the attacker may have the channel pub.
By 18, the message key_s(bob) may be sent on this channel.
So the attacker may obtain the message key_s(bob) by listening on this channel.
attacker(key_s(bob)).

20. By 19, the attacker may know key_s(bob).
By 7, the attacker may know dhexp(key_21655624,g).
Using the function dhexp the attacker may obtain dhexp(key_21655624,dhexp(key_s(bob),g)).
attacker(dhexp(key_21655624,dhexp(key_s(bob),g))).

21. By 12, the attacker may know hash(somename,empty).
By 20, the attacker may know dhexp(key_21655624,dhexp(key_s(bob),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),dhexp(key_21655624,dhexp(key_s(bob),g))).
attacker(hmac_hash2(hash(somename,empty),dhexp(key_21655624,dhexp(key_s(bob),g)))).

22. By 21, the attacker may know hmac_hash2(hash(somename,empty),dhexp(key_21655624,dhexp(key_s(bob),g))).
So the attacker may know hmac_hash2(hash(somename,empty),dhexp(key_21655624,dhexp(key_s(bob),g))) in phase 1.
attacker_p1(hmac_hash2(hash(somename,empty),dhexp(key_21655624,dhexp(key_s(bob),g)))).

23. By 22, the attacker may know hmac_hash2(hash(somename,empty),dhexp(key_21655624,dhexp(key_s(bob),g))) in phase 1.
By 17, the attacker may know minnonce in phase 1.
By 16, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655624,g)) in phase 1.
By 6, the attacker may know encrypt(hmac_hash2(hash(somename,empty),dhexp(key_21655624,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655624,g)),msg_a(alice,bob)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655624,g)),msg_a(alice,bob)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655624,g)),msg_a(alice,bob))).

24. By 23, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655624,g)),msg_a(alice,bob)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob) in phase 1.
attacker_p1(msg_a(alice,bob)).


RESULT not attacker_p1(msg_a(alice,bob)) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob))
goal reachable: begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> attacker_p1(msg_a(alice,bob))
goal reachable: begin(LeakS(phase1,bob)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> attacker_p1(msg_a(alice,bob))
RESULT attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob)) is true.
Starting query attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice)))
goal reachable: begin(LeakS(phase1,bob)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> attacker_p1(msg_a(alice,bob))
Abbreviations:
key_21655701 = key_e[me = alice,them = bob,!1 = @sid_21655687]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

3. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 2 may be read at get {49}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {46}.
So the message concat3(dhexp(key_21655701,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_21655701,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655701,g)),msg_a(alice,bob))) may be sent on channel pub at output {48}.
mess(pub,concat3(dhexp(key_21655701,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_21655701,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655701,g)),msg_a(alice,bob)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(dhexp(key_21655701,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_21655701,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655701,g)),msg_a(alice,bob))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_21655701,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_21655701,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655701,g)),msg_a(alice,bob))) by listening on this channel.
attacker(concat3(dhexp(key_21655701,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_21655701,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655701,g)),msg_a(alice,bob)))).

5. By 4, the attacker may know concat3(dhexp(key_21655701,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_21655701,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655701,g)),msg_a(alice,bob))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),dhexp(key_21655701,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655701,g)),msg_a(alice,bob)).
attacker(encrypt(hmac_hash2(hash(somename,empty),dhexp(key_21655701,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655701,g)),msg_a(alice,bob))).

6. By 5, the attacker may know encrypt(hmac_hash2(hash(somename,empty),dhexp(key_21655701,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655701,g)),msg_a(alice,bob)).
So the attacker may know encrypt(hmac_hash2(hash(somename,empty),dhexp(key_21655701,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655701,g)),msg_a(alice,bob)) in phase 1.
attacker_p1(encrypt(hmac_hash2(hash(somename,empty),dhexp(key_21655701,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655701,g)),msg_a(alice,bob))).

7. By 4, the attacker may know concat3(dhexp(key_21655701,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_21655701,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655701,g)),msg_a(alice,bob))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_21655701,g).
attacker(dhexp(key_21655701,g)).

8. By 7, the attacker may know dhexp(key_21655701,g).
So the attacker may know dhexp(key_21655701,g) in phase 1.
attacker_p1(dhexp(key_21655701,g)).

9. Using the function g the attacker may obtain g in phase 1.
attacker_p1(g).

10. Using the function pub the attacker may obtain pub in phase 1.
attacker_p1(pub).

11. The event LeakS(phase1,bob) may be executed at {382}.
So the message key_s(bob) may be sent on channel pub in phase 1 at output {383}.
mess_p1(pub,key_s(bob)).

12. By 10, the attacker may have the channel pub in phase 1.
By 11, the message key_s(bob) in phase 1 may be sent on this channel.
So the attacker may obtain the message key_s(bob) in phase 1 by listening on this channel.
attacker_p1(key_s(bob)).

13. By 12, the attacker may know key_s(bob) in phase 1.
By 9, the attacker may know g in phase 1.
Using the function dhexp the attacker may obtain dhexp(key_s(bob),g) in phase 1.
attacker_p1(dhexp(key_s(bob),g)).

14. Using the function empty the attacker may obtain empty in phase 1.
attacker_p1(empty).

15. Using the function somename the attacker may obtain somename in phase 1.
attacker_p1(somename).

16. By 15, the attacker may know somename in phase 1.
By 14, the attacker may know empty in phase 1.
Using the function hash the attacker may obtain hash(somename,empty) in phase 1.
attacker_p1(hash(somename,empty)).

17. By 16, the attacker may know hash(somename,empty) in phase 1.
By 14, the attacker may know empty in phase 1.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty) in phase 1.
attacker_p1(hash(hash(somename,empty),empty)).

18. By 17, the attacker may know hash(hash(somename,empty),empty) in phase 1.
By 13, the attacker may know dhexp(key_s(bob),g) in phase 1.
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)) in phase 1.
attacker_p1(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))).

19. By 18, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)) in phase 1.
By 8, the attacker may know dhexp(key_21655701,g) in phase 1.
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655701,g)) in phase 1.
attacker_p1(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655701,g))).

20. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

21. By 12, the attacker may know key_s(bob) in phase 1.
By 8, the attacker may know dhexp(key_21655701,g) in phase 1.
Using the function dhexp the attacker may obtain dhexp(key_21655701,dhexp(key_s(bob),g)) in phase 1.
attacker_p1(dhexp(key_21655701,dhexp(key_s(bob),g))).

22. By 16, the attacker may know hash(somename,empty) in phase 1.
By 21, the attacker may know dhexp(key_21655701,dhexp(key_s(bob),g)) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),dhexp(key_21655701,dhexp(key_s(bob),g))) in phase 1.
attacker_p1(hmac_hash2(hash(somename,empty),dhexp(key_21655701,dhexp(key_s(bob),g)))).

23. By 22, the attacker may know hmac_hash2(hash(somename,empty),dhexp(key_21655701,dhexp(key_s(bob),g))) in phase 1.
By 20, the attacker may know minnonce in phase 1.
By 19, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655701,g)) in phase 1.
By 6, the attacker may know encrypt(hmac_hash2(hash(somename,empty),dhexp(key_21655701,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655701,g)),msg_a(alice,bob)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655701,g)),msg_a(alice,bob)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655701,g)),msg_a(alice,bob))).

24. By 23, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655701,g)),msg_a(alice,bob)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob) in phase 1.
attacker_p1(msg_a(alice,bob)).


RESULT attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice))) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob))
goal reachable: begin(LeakS(phase1,bob)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> attacker_p1(msg_a(alice,bob))
Abbreviations:
key_21655777 = key_e[me = alice,them = bob,!1 = @sid_21655763]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

3. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 2 may be read at get {49}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {46}.
So the message concat3(dhexp(key_21655777,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_21655777,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655777,g)),msg_a(alice,bob))) may be sent on channel pub at output {48}.
mess(pub,concat3(dhexp(key_21655777,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_21655777,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655777,g)),msg_a(alice,bob)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(dhexp(key_21655777,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_21655777,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655777,g)),msg_a(alice,bob))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_21655777,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_21655777,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655777,g)),msg_a(alice,bob))) by listening on this channel.
attacker(concat3(dhexp(key_21655777,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_21655777,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655777,g)),msg_a(alice,bob)))).

5. By 4, the attacker may know concat3(dhexp(key_21655777,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_21655777,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655777,g)),msg_a(alice,bob))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hash(somename,empty),dhexp(key_21655777,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655777,g)),msg_a(alice,bob)).
attacker(encrypt(hmac_hash2(hash(somename,empty),dhexp(key_21655777,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655777,g)),msg_a(alice,bob))).

6. By 5, the attacker may know encrypt(hmac_hash2(hash(somename,empty),dhexp(key_21655777,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655777,g)),msg_a(alice,bob)).
So the attacker may know encrypt(hmac_hash2(hash(somename,empty),dhexp(key_21655777,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655777,g)),msg_a(alice,bob)) in phase 1.
attacker_p1(encrypt(hmac_hash2(hash(somename,empty),dhexp(key_21655777,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655777,g)),msg_a(alice,bob))).

7. By 4, the attacker may know concat3(dhexp(key_21655777,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_21655777,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655777,g)),msg_a(alice,bob))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_21655777,g).
attacker(dhexp(key_21655777,g)).

8. By 7, the attacker may know dhexp(key_21655777,g).
So the attacker may know dhexp(key_21655777,g) in phase 1.
attacker_p1(dhexp(key_21655777,g)).

9. Using the function g the attacker may obtain g in phase 1.
attacker_p1(g).

10. Using the function pub the attacker may obtain pub in phase 1.
attacker_p1(pub).

11. The event LeakS(phase1,bob) may be executed at {382}.
So the message key_s(bob) may be sent on channel pub in phase 1 at output {383}.
mess_p1(pub,key_s(bob)).

12. By 10, the attacker may have the channel pub in phase 1.
By 11, the message key_s(bob) in phase 1 may be sent on this channel.
So the attacker may obtain the message key_s(bob) in phase 1 by listening on this channel.
attacker_p1(key_s(bob)).

13. By 12, the attacker may know key_s(bob) in phase 1.
By 9, the attacker may know g in phase 1.
Using the function dhexp the attacker may obtain dhexp(key_s(bob),g) in phase 1.
attacker_p1(dhexp(key_s(bob),g)).

14. Using the function empty the attacker may obtain empty in phase 1.
attacker_p1(empty).

15. Using the function somename the attacker may obtain somename in phase 1.
attacker_p1(somename).

16. By 15, the attacker may know somename in phase 1.
By 14, the attacker may know empty in phase 1.
Using the function hash the attacker may obtain hash(somename,empty) in phase 1.
attacker_p1(hash(somename,empty)).

17. By 16, the attacker may know hash(somename,empty) in phase 1.
By 14, the attacker may know empty in phase 1.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty) in phase 1.
attacker_p1(hash(hash(somename,empty),empty)).

18. By 17, the attacker may know hash(hash(somename,empty),empty) in phase 1.
By 13, the attacker may know dhexp(key_s(bob),g) in phase 1.
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)) in phase 1.
attacker_p1(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))).

19. By 18, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)) in phase 1.
By 8, the attacker may know dhexp(key_21655777,g) in phase 1.
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655777,g)) in phase 1.
attacker_p1(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655777,g))).

20. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

21. By 12, the attacker may know key_s(bob) in phase 1.
By 8, the attacker may know dhexp(key_21655777,g) in phase 1.
Using the function dhexp the attacker may obtain dhexp(key_21655777,dhexp(key_s(bob),g)) in phase 1.
attacker_p1(dhexp(key_21655777,dhexp(key_s(bob),g))).

22. By 16, the attacker may know hash(somename,empty) in phase 1.
By 21, the attacker may know dhexp(key_21655777,dhexp(key_s(bob),g)) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hash(somename,empty),dhexp(key_21655777,dhexp(key_s(bob),g))) in phase 1.
attacker_p1(hmac_hash2(hash(somename,empty),dhexp(key_21655777,dhexp(key_s(bob),g)))).

23. By 22, the attacker may know hmac_hash2(hash(somename,empty),dhexp(key_21655777,dhexp(key_s(bob),g))) in phase 1.
By 20, the attacker may know minnonce in phase 1.
By 19, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655777,g)) in phase 1.
By 6, the attacker may know encrypt(hmac_hash2(hash(somename,empty),dhexp(key_21655777,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655777,g)),msg_a(alice,bob)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655777,g)),msg_a(alice,bob)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655777,g)),msg_a(alice,bob))).

24. By 23, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655777,g)),msg_a(alice,bob)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob) in phase 1.
attacker_p1(msg_a(alice,bob)).


RESULT attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true))
goal reachable: begin(SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_b,msg_b(bob,charlie),true))
Abbreviations:
key_e_21655843 = key_e_845[me_798 = bob,them_797 = charlie,!1 = @sid_21655827]
key_21655844 = key_e[me = alice,them = bob,!1 = @sid_21655801]

1. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 1 may be read at get {49}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {46}.
So the entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655844,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655844,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655844,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655844,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655844,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_21655844,g),key_21655844),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {47}.
table(statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655844,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655844,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655844,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655844,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655844,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_21655844,g),key_21655844),dhexp(key_s(bob),g),empty,empty,true)))).

3. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {400}.
table(statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false)))).

4. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

5. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 4 may be read at get {49}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {46}.
So the message concat3(dhexp(key_21655844,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655844,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655844,g)),msg_a(alice,bob))) may be sent on channel pub at output {48}.
mess(pub,concat3(dhexp(key_21655844,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655844,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655844,g)),msg_a(alice,bob)))).

6. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 3 may be read at get {429}.
The message concat3(dhexp(key_21655844,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655844,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655844,g)),msg_a(alice,bob))) that may be sent on channel pub by 5 may be received at input {401}.
We have dhexp(key_21655844,g) <> caught-fail.
So the entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655844,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655844,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655844,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655844,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655844,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_21655844,g),empty,false))) may be inserted in a table at insert {428}.
table(statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655844,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655844,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655844,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655844,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655844,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_21655844,g),empty,false)))).

7. The entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655844,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655844,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655844,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655844,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655844,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_21655844,g),empty,false))) that may be in a table by 6 may be read at get {460}.
The event SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true) may be executed at {457}.
So the message concat3(dhexp(key_e_21655843,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655844,g))),dhexp(key_21655844,dhexp(key_e_21655843,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655844,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655844,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655844,g)),msg_a(alice,bob))),dhexp(key_e_21655843,g)),msg_b(bob,charlie))) may be sent on channel pub at output {459}.
mess(pub,concat3(dhexp(key_e_21655843,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655844,g))),dhexp(key_21655844,dhexp(key_e_21655843,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655844,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655844,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655844,g)),msg_a(alice,bob))),dhexp(key_e_21655843,g)),msg_b(bob,charlie)))).

8. The entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655844,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655844,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655844,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655844,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655844,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_21655844,g),key_21655844),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 2 may be read at get {78}.
The message concat3(dhexp(key_e_21655843,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655844,g))),dhexp(key_21655844,dhexp(key_e_21655843,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655844,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655844,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655844,g)),msg_a(alice,bob))),dhexp(key_e_21655843,g)),msg_b(bob,charlie))) that may be sent on channel pub by 7 may be received at input {50}.
We have dhexp(key_e_21655843,g) <> caught-fail.
So event RecvMsg(alice,bob,stage_b,msg_b(bob,charlie),true) may be executed at {76}.
end(RecvMsg(alice,bob,stage_b,msg_b(bob,charlie),true)).


RESULT event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,c_999,stage_b,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_b,msg_b(bob,charlie),true))
goal reachable: begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_b,msg_b(bob,alice),true))
RESULT event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,c_999,stage_b,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,c_999,stage_b,m,true)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_b,msg_b(bob,charlie),true))
goal reachable: begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_b,msg_b(bob,alice),true))
RESULT event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,c_999,stage_b,m,true)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_b,msg_b(bob,charlie),true))
Abbreviations:
key_e_21655916 = key_e_845[me_798 = bob,them_797 = charlie,!1 = @sid_21655900]
key_21655917 = key_e[me = alice,them = bob,!1 = @sid_21655874]

1. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 1 may be read at get {49}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {46}.
So the entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655917,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655917,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655917,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655917,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655917,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_21655917,g),key_21655917),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {47}.
table(statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655917,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655917,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655917,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655917,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655917,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_21655917,g),key_21655917),dhexp(key_s(bob),g),empty,empty,true)))).

3. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {400}.
table(statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false)))).

4. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

5. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 4 may be read at get {49}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {46}.
So the message concat3(dhexp(key_21655917,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655917,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655917,g)),msg_a(alice,bob))) may be sent on channel pub at output {48}.
mess(pub,concat3(dhexp(key_21655917,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655917,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655917,g)),msg_a(alice,bob)))).

6. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 3 may be read at get {429}.
The message concat3(dhexp(key_21655917,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655917,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655917,g)),msg_a(alice,bob))) that may be sent on channel pub by 5 may be received at input {401}.
We have dhexp(key_21655917,g) <> caught-fail.
So the entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655917,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655917,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655917,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655917,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655917,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_21655917,g),empty,false))) may be inserted in a table at insert {428}.
table(statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655917,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655917,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655917,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655917,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655917,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_21655917,g),empty,false)))).

7. The entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655917,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655917,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655917,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655917,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655917,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_21655917,g),empty,false))) that may be in a table by 6 may be read at get {460}.
The event SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true) may be executed at {457}.
So the message concat3(dhexp(key_e_21655916,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655917,g))),dhexp(key_21655917,dhexp(key_e_21655916,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655917,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655917,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655917,g)),msg_a(alice,bob))),dhexp(key_e_21655916,g)),msg_b(bob,charlie))) may be sent on channel pub at output {459}.
mess(pub,concat3(dhexp(key_e_21655916,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655917,g))),dhexp(key_21655917,dhexp(key_e_21655916,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655917,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655917,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655917,g)),msg_a(alice,bob))),dhexp(key_e_21655916,g)),msg_b(bob,charlie)))).

8. The entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655917,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655917,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655917,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655917,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655917,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_21655917,g),key_21655917),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 2 may be read at get {78}.
The message concat3(dhexp(key_e_21655916,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655917,g))),dhexp(key_21655917,dhexp(key_e_21655916,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655917,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655917,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655917,g)),msg_a(alice,bob))),dhexp(key_e_21655916,g)),msg_b(bob,charlie))) that may be sent on channel pub by 7 may be received at input {50}.
We have dhexp(key_e_21655916,g) <> caught-fail.
So event RecvMsg(alice,bob,stage_b,msg_b(bob,charlie),true) may be executed at {76}.
end(RecvMsg(alice,bob,stage_b,msg_b(bob,charlie),true)).


RESULT event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_b,msg_b(bob,charlie),true))
Abbreviations:
key_e_21655983 = key_e_845[me_798 = bob,them_797 = charlie,!1 = @sid_21655967]
key_21655984 = key_e[me = alice,them = bob,!1 = @sid_21655941]

1. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 1 may be read at get {49}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {46}.
So the entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655984,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655984,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655984,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655984,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655984,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_21655984,g),key_21655984),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {47}.
table(statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655984,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655984,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655984,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655984,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655984,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_21655984,g),key_21655984),dhexp(key_s(bob),g),empty,empty,true)))).

3. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {400}.
table(statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false)))).

4. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

5. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 4 may be read at get {49}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {46}.
So the message concat3(dhexp(key_21655984,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655984,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655984,g)),msg_a(alice,bob))) may be sent on channel pub at output {48}.
mess(pub,concat3(dhexp(key_21655984,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655984,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655984,g)),msg_a(alice,bob)))).

6. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 3 may be read at get {429}.
The message concat3(dhexp(key_21655984,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655984,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655984,g)),msg_a(alice,bob))) that may be sent on channel pub by 5 may be received at input {401}.
We have dhexp(key_21655984,g) <> caught-fail.
So the entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655984,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655984,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655984,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655984,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655984,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_21655984,g),empty,false))) may be inserted in a table at insert {428}.
table(statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655984,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655984,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655984,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655984,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655984,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_21655984,g),empty,false)))).

7. The entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655984,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655984,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655984,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655984,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655984,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_21655984,g),empty,false))) that may be in a table by 6 may be read at get {460}.
The event SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true) may be executed at {457}.
So the message concat3(dhexp(key_e_21655983,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655984,g))),dhexp(key_21655984,dhexp(key_e_21655983,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655984,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655984,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655984,g)),msg_a(alice,bob))),dhexp(key_e_21655983,g)),msg_b(bob,charlie))) may be sent on channel pub at output {459}.
mess(pub,concat3(dhexp(key_e_21655983,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655984,g))),dhexp(key_21655984,dhexp(key_e_21655983,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655984,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655984,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655984,g)),msg_a(alice,bob))),dhexp(key_e_21655983,g)),msg_b(bob,charlie)))).

8. The entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655984,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655984,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655984,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655984,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655984,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_21655984,g),key_21655984),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 2 may be read at get {78}.
The message concat3(dhexp(key_e_21655983,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655984,g))),dhexp(key_21655984,dhexp(key_e_21655983,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655984,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21655984,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21655984,g)),msg_a(alice,bob))),dhexp(key_e_21655983,g)),msg_b(bob,charlie))) that may be sent on channel pub by 7 may be received at input {50}.
We have dhexp(key_e_21655983,g) <> caught-fail.
So event RecvMsg(alice,bob,stage_b,msg_b(bob,charlie),true) may be executed at {76}.
end(RecvMsg(alice,bob,stage_b,msg_b(bob,charlie),true)).


RESULT event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true)) || event(LeakS(phase0,bob)) cannot be proved.
Starting query not attacker_p1(msg_b(bob,alice))
RESULT not attacker_p1(msg_b(bob,alice)) is true.
Starting query attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice))
RESULT attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice)) is true.
Starting query attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob)))
RESULT attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob))) is true.
Starting query attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice))
RESULT attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true))
goal reachable: begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(bob,alice,stage_c,msg_c(alice,bob),true))
RESULT event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true)) is true.
Starting query event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,c_999,stage_c,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(bob,alice,stage_c,msg_c(alice,bob),true))
RESULT event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,c_999,stage_c,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,c_999,stage_c,m,true)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(bob,alice,stage_c,msg_c(alice,bob),true))
RESULT event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,c_999,stage_c,m,true)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(bob,alice,stage_c,msg_c(alice,bob),true))
RESULT event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(bob,alice,stage_c,msg_c(alice,bob),true))
RESULT event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true)) || event(LeakS(phase0,alice)) is true.
Starting query not attacker_p1(msg_c(alice,bob))
RESULT not attacker_p1(msg_c(alice,bob)) is true.
Starting query attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob))
RESULT attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob)) is true.
Starting query attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice)))
RESULT attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice))) is true.
Starting query attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob))
RESULT attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true))
goal reachable: begin(SendMsg(bob,charlie,stage_d,msg_d(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_d,msg_d(bob,charlie),true))
Abbreviations:
key_21656226 = key_e[me = alice,them = bob,!1 = @sid_21656158]
key_e_21656227 = key_e_845[me_798 = bob,them_797 = charlie,!1 = @sid_21656184]

1. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 1 may be read at get {49}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {46}.
So the entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656226,g),key_21656226),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {47}.
table(statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656226,g),key_21656226),dhexp(key_s(bob),g),empty,empty,true)))).

3. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {400}.
table(statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false)))).

4. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

5. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 4 may be read at get {49}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {46}.
So the message concat3(dhexp(key_21656226,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))) may be sent on channel pub at output {48}.
mess(pub,concat3(dhexp(key_21656226,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob)))).

6. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 3 may be read at get {429}.
The message concat3(dhexp(key_21656226,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))) that may be sent on channel pub by 5 may be received at input {401}.
We have dhexp(key_21656226,g) <> caught-fail.
So the entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_21656226,g),empty,false))) may be inserted in a table at insert {428}.
table(statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_21656226,g),empty,false)))).

7. The entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_21656226,g),empty,false))) that may be in a table by 6 may be read at get {460}.
The event SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true) may be executed at {457}.
So the message concat3(dhexp(key_e_21656227,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),msg_b(bob,charlie))) may be sent on channel pub at output {459}.
mess(pub,concat3(dhexp(key_e_21656227,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),msg_b(bob,charlie)))).

8. The entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656226,g),key_21656226),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 2 may be read at get {78}.
The message concat3(dhexp(key_e_21656227,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),msg_b(bob,charlie))) that may be sent on channel pub by 7 may be received at input {50}.
So the entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_e_21656227,dhexp(key_21656226,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656226,g),key_21656226),dhexp(key_s(bob),g),dhexp(key_e_21656227,g),empty,true))) may be inserted in a table at insert {77}.
table(statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_e_21656227,dhexp(key_21656226,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656226,g),key_21656226),dhexp(key_s(bob),g),dhexp(key_e_21656227,g),empty,true)))).

9. The entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_e_21656227,dhexp(key_21656226,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656226,g),key_21656226),dhexp(key_s(bob),g),dhexp(key_e_21656227,g),empty,true))) that may be in a table by 8 may be read at get {96}.
The event SendMsg(alice,bob,stage_c,msg_c(alice,bob),true) may be executed at {93}.
So the entry statestore(alice,bob,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_e_21656227,dhexp(key_21656226,g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656226,g),key_21656226),dhexp(key_s(bob),g),dhexp(key_e_21656227,g),empty,true))) may be inserted in a table at insert {94}.
table(statestore(alice,bob,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_e_21656227,dhexp(key_21656226,g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656226,g),key_21656226),dhexp(key_s(bob),g),dhexp(key_e_21656227,g),empty,true)))).

10. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {400}.
table(statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false)))).

11. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

12. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 11 may be read at get {49}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {46}.
So the message concat3(dhexp(key_21656226,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))) may be sent on channel pub at output {48}.
mess(pub,concat3(dhexp(key_21656226,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob)))).

13. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 10 may be read at get {429}.
The message concat3(dhexp(key_21656226,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))) that may be sent on channel pub by 12 may be received at input {401}.
We have dhexp(key_21656226,g) <> caught-fail.
So the entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_21656226,g),empty,false))) may be inserted in a table at insert {428}.
table(statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_21656226,g),empty,false)))).

14. The entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_21656226,g),empty,false))) that may be in a table by 13 may be read at get {460}.
The event SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true) may be executed at {457}.
So the entry statestore(bob,charlie,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_e_21656227,dhexp(key_21656226,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),msg_b(bob,charlie)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_21656227,g),key_e_21656227),empty,dhexp(key_21656226,g),empty,false))) may be inserted in a table at insert {458}.
table(statestore(bob,charlie,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_e_21656227,dhexp(key_21656226,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),msg_b(bob,charlie)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_21656227,g),key_e_21656227),empty,dhexp(key_21656226,g),empty,false)))).

15. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

16. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 15 may be read at get {49}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {46}.
So the entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656226,g),key_21656226),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {47}.
table(statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656226,g),key_21656226),dhexp(key_s(bob),g),empty,empty,true)))).

17. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {400}.
table(statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false)))).

18. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

19. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 18 may be read at get {49}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {46}.
So the message concat3(dhexp(key_21656226,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))) may be sent on channel pub at output {48}.
mess(pub,concat3(dhexp(key_21656226,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob)))).

20. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 17 may be read at get {429}.
The message concat3(dhexp(key_21656226,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))) that may be sent on channel pub by 19 may be received at input {401}.
We have dhexp(key_21656226,g) <> caught-fail.
So the entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_21656226,g),empty,false))) may be inserted in a table at insert {428}.
table(statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_21656226,g),empty,false)))).

21. The entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_21656226,g),empty,false))) that may be in a table by 20 may be read at get {460}.
The event SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true) may be executed at {457}.
So the message concat3(dhexp(key_e_21656227,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),msg_b(bob,charlie))) may be sent on channel pub at output {459}.
mess(pub,concat3(dhexp(key_e_21656227,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),msg_b(bob,charlie)))).

22. The entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656226,g),key_21656226),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 16 may be read at get {78}.
The message concat3(dhexp(key_e_21656227,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),msg_b(bob,charlie))) that may be sent on channel pub by 21 may be received at input {50}.
So the entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_e_21656227,dhexp(key_21656226,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656226,g),key_21656226),dhexp(key_s(bob),g),dhexp(key_e_21656227,g),empty,true))) may be inserted in a table at insert {77}.
table(statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_e_21656227,dhexp(key_21656226,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656226,g),key_21656226),dhexp(key_s(bob),g),dhexp(key_e_21656227,g),empty,true)))).

23. The entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_e_21656227,dhexp(key_21656226,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656226,g),key_21656226),dhexp(key_s(bob),g),dhexp(key_e_21656227,g),empty,true))) that may be in a table by 22 may be read at get {96}.
The event SendMsg(alice,bob,stage_c,msg_c(alice,bob),true) may be executed at {93}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),msg_b(bob,charlie))),msg_c(alice,bob))) may be sent on channel pub at output {95}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),msg_b(bob,charlie))),msg_c(alice,bob)))).

24. The entry statestore(bob,charlie,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_e_21656227,dhexp(key_21656226,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),msg_b(bob,charlie)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_21656227,g),key_e_21656227),empty,dhexp(key_21656226,g),empty,false))) that may be in a table by 14 may be read at get {479}.
The message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),msg_b(bob,charlie))),msg_c(alice,bob))) that may be sent on channel pub by 23 may be received at input {461}.
So the entry statestore(bob,charlie,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_e_21656227,dhexp(key_21656226,g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_21656227,g),key_e_21656227),empty,dhexp(key_21656226,g),empty,false))) may be inserted in a table at insert {478}.
table(statestore(bob,charlie,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_e_21656227,dhexp(key_21656226,g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_21656227,g),key_e_21656227),empty,dhexp(key_21656226,g),empty,false)))).

25. The entry statestore(bob,charlie,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_e_21656227,dhexp(key_21656226,g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_21656227,g),key_e_21656227),empty,dhexp(key_21656226,g),empty,false))) that may be in a table by 24 may be read at get {505}.
The event SendMsg(bob,charlie,stage_d,msg_d(bob,charlie),true) may be executed at {502}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),msg_b(bob,charlie))),msg_c(alice,bob))),msg_d(bob,charlie))) may be sent on channel pub at output {504}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),msg_b(bob,charlie))),msg_c(alice,bob))),msg_d(bob,charlie)))).

26. The entry statestore(alice,bob,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_e_21656227,dhexp(key_21656226,g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656226,g),key_21656226),dhexp(key_s(bob),g),dhexp(key_e_21656227,g),empty,true))) that may be in a table by 9 may be read at get {124}.
The message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),dhexp(key_21656226,dhexp(key_e_21656227,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656226,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656226,g)),msg_a(alice,bob))),dhexp(key_e_21656227,g)),msg_b(bob,charlie))),msg_c(alice,bob))),msg_d(bob,charlie))) that may be sent on channel pub by 25 may be received at input {97}.
So event RecvMsg(alice,bob,stage_d,msg_d(bob,charlie),true) may be executed at {121}.
end(RecvMsg(alice,bob,stage_d,msg_d(bob,charlie),true)).


RESULT event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,c_999,stage_d,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(bob,charlie,stage_d,msg_d(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_d,msg_d(bob,charlie),true))
goal reachable: begin(SendMsg(bob,alice,stage_d,msg_d(bob,alice),true)) && begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_d,msg_d(bob,alice),true))
RESULT event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,c_999,stage_d,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,c_999,stage_d,m,true)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(bob,charlie,stage_d,msg_d(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_d,msg_d(bob,charlie),true))
goal reachable: begin(SendMsg(bob,alice,stage_d,msg_d(bob,alice),true)) && begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_d,msg_d(bob,alice),true))
RESULT event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,c_999,stage_d,m,true)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(bob,charlie,stage_d,msg_d(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_d,msg_d(bob,charlie),true))
Abbreviations:
key_21656461 = key_e[me = alice,them = bob,!1 = @sid_21656393]
key_e_21656462 = key_e_845[me_798 = bob,them_797 = charlie,!1 = @sid_21656419]

1. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 1 may be read at get {49}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {46}.
So the entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656461,g),key_21656461),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {47}.
table(statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656461,g),key_21656461),dhexp(key_s(bob),g),empty,empty,true)))).

3. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {400}.
table(statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false)))).

4. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

5. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 4 may be read at get {49}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {46}.
So the message concat3(dhexp(key_21656461,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))) may be sent on channel pub at output {48}.
mess(pub,concat3(dhexp(key_21656461,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob)))).

6. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 3 may be read at get {429}.
The message concat3(dhexp(key_21656461,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))) that may be sent on channel pub by 5 may be received at input {401}.
We have dhexp(key_21656461,g) <> caught-fail.
So the entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_21656461,g),empty,false))) may be inserted in a table at insert {428}.
table(statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_21656461,g),empty,false)))).

7. The entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_21656461,g),empty,false))) that may be in a table by 6 may be read at get {460}.
The event SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true) may be executed at {457}.
So the message concat3(dhexp(key_e_21656462,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),msg_b(bob,charlie))) may be sent on channel pub at output {459}.
mess(pub,concat3(dhexp(key_e_21656462,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),msg_b(bob,charlie)))).

8. The entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656461,g),key_21656461),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 2 may be read at get {78}.
The message concat3(dhexp(key_e_21656462,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),msg_b(bob,charlie))) that may be sent on channel pub by 7 may be received at input {50}.
So the entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_e_21656462,dhexp(key_21656461,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656461,g),key_21656461),dhexp(key_s(bob),g),dhexp(key_e_21656462,g),empty,true))) may be inserted in a table at insert {77}.
table(statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_e_21656462,dhexp(key_21656461,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656461,g),key_21656461),dhexp(key_s(bob),g),dhexp(key_e_21656462,g),empty,true)))).

9. The entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_e_21656462,dhexp(key_21656461,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656461,g),key_21656461),dhexp(key_s(bob),g),dhexp(key_e_21656462,g),empty,true))) that may be in a table by 8 may be read at get {96}.
The event SendMsg(alice,bob,stage_c,msg_c(alice,bob),true) may be executed at {93}.
So the entry statestore(alice,bob,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_e_21656462,dhexp(key_21656461,g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656461,g),key_21656461),dhexp(key_s(bob),g),dhexp(key_e_21656462,g),empty,true))) may be inserted in a table at insert {94}.
table(statestore(alice,bob,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_e_21656462,dhexp(key_21656461,g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656461,g),key_21656461),dhexp(key_s(bob),g),dhexp(key_e_21656462,g),empty,true)))).

10. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {400}.
table(statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false)))).

11. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

12. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 11 may be read at get {49}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {46}.
So the message concat3(dhexp(key_21656461,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))) may be sent on channel pub at output {48}.
mess(pub,concat3(dhexp(key_21656461,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob)))).

13. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 10 may be read at get {429}.
The message concat3(dhexp(key_21656461,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))) that may be sent on channel pub by 12 may be received at input {401}.
We have dhexp(key_21656461,g) <> caught-fail.
So the entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_21656461,g),empty,false))) may be inserted in a table at insert {428}.
table(statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_21656461,g),empty,false)))).

14. The entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_21656461,g),empty,false))) that may be in a table by 13 may be read at get {460}.
The event SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true) may be executed at {457}.
So the entry statestore(bob,charlie,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_e_21656462,dhexp(key_21656461,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),msg_b(bob,charlie)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_21656462,g),key_e_21656462),empty,dhexp(key_21656461,g),empty,false))) may be inserted in a table at insert {458}.
table(statestore(bob,charlie,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_e_21656462,dhexp(key_21656461,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),msg_b(bob,charlie)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_21656462,g),key_e_21656462),empty,dhexp(key_21656461,g),empty,false)))).

15. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

16. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 15 may be read at get {49}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {46}.
So the entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656461,g),key_21656461),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {47}.
table(statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656461,g),key_21656461),dhexp(key_s(bob),g),empty,empty,true)))).

17. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {400}.
table(statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false)))).

18. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

19. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 18 may be read at get {49}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {46}.
So the message concat3(dhexp(key_21656461,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))) may be sent on channel pub at output {48}.
mess(pub,concat3(dhexp(key_21656461,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob)))).

20. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 17 may be read at get {429}.
The message concat3(dhexp(key_21656461,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))) that may be sent on channel pub by 19 may be received at input {401}.
We have dhexp(key_21656461,g) <> caught-fail.
So the entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_21656461,g),empty,false))) may be inserted in a table at insert {428}.
table(statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_21656461,g),empty,false)))).

21. The entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_21656461,g),empty,false))) that may be in a table by 20 may be read at get {460}.
The event SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true) may be executed at {457}.
So the message concat3(dhexp(key_e_21656462,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),msg_b(bob,charlie))) may be sent on channel pub at output {459}.
mess(pub,concat3(dhexp(key_e_21656462,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),msg_b(bob,charlie)))).

22. The entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656461,g),key_21656461),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 16 may be read at get {78}.
The message concat3(dhexp(key_e_21656462,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),msg_b(bob,charlie))) that may be sent on channel pub by 21 may be received at input {50}.
So the entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_e_21656462,dhexp(key_21656461,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656461,g),key_21656461),dhexp(key_s(bob),g),dhexp(key_e_21656462,g),empty,true))) may be inserted in a table at insert {77}.
table(statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_e_21656462,dhexp(key_21656461,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656461,g),key_21656461),dhexp(key_s(bob),g),dhexp(key_e_21656462,g),empty,true)))).

23. The entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_e_21656462,dhexp(key_21656461,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656461,g),key_21656461),dhexp(key_s(bob),g),dhexp(key_e_21656462,g),empty,true))) that may be in a table by 22 may be read at get {96}.
The event SendMsg(alice,bob,stage_c,msg_c(alice,bob),true) may be executed at {93}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),msg_b(bob,charlie))),msg_c(alice,bob))) may be sent on channel pub at output {95}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),msg_b(bob,charlie))),msg_c(alice,bob)))).

24. The entry statestore(bob,charlie,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_e_21656462,dhexp(key_21656461,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),msg_b(bob,charlie)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_21656462,g),key_e_21656462),empty,dhexp(key_21656461,g),empty,false))) that may be in a table by 14 may be read at get {479}.
The message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),msg_b(bob,charlie))),msg_c(alice,bob))) that may be sent on channel pub by 23 may be received at input {461}.
So the entry statestore(bob,charlie,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_e_21656462,dhexp(key_21656461,g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_21656462,g),key_e_21656462),empty,dhexp(key_21656461,g),empty,false))) may be inserted in a table at insert {478}.
table(statestore(bob,charlie,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_e_21656462,dhexp(key_21656461,g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_21656462,g),key_e_21656462),empty,dhexp(key_21656461,g),empty,false)))).

25. The entry statestore(bob,charlie,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_e_21656462,dhexp(key_21656461,g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_21656462,g),key_e_21656462),empty,dhexp(key_21656461,g),empty,false))) that may be in a table by 24 may be read at get {505}.
The event SendMsg(bob,charlie,stage_d,msg_d(bob,charlie),true) may be executed at {502}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),msg_b(bob,charlie))),msg_c(alice,bob))),msg_d(bob,charlie))) may be sent on channel pub at output {504}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),msg_b(bob,charlie))),msg_c(alice,bob))),msg_d(bob,charlie)))).

26. The entry statestore(alice,bob,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_e_21656462,dhexp(key_21656461,g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656461,g),key_21656461),dhexp(key_s(bob),g),dhexp(key_e_21656462,g),empty,true))) that may be in a table by 9 may be read at get {124}.
The message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),dhexp(key_21656461,dhexp(key_e_21656462,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656461,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656461,g)),msg_a(alice,bob))),dhexp(key_e_21656462,g)),msg_b(bob,charlie))),msg_c(alice,bob))),msg_d(bob,charlie))) that may be sent on channel pub by 25 may be received at input {97}.
So event RecvMsg(alice,bob,stage_d,msg_d(bob,charlie),true) may be executed at {121}.
end(RecvMsg(alice,bob,stage_d,msg_d(bob,charlie),true)).


RESULT event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(bob,charlie,stage_d,msg_d(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_d,msg_d(bob,charlie),true))
Abbreviations:
key_21656690 = key_e[me = alice,them = bob,!1 = @sid_21656622]
key_e_21656691 = key_e_845[me_798 = bob,them_797 = charlie,!1 = @sid_21656648]

1. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 1 may be read at get {49}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {46}.
So the entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656690,g),key_21656690),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {47}.
table(statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656690,g),key_21656690),dhexp(key_s(bob),g),empty,empty,true)))).

3. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {400}.
table(statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false)))).

4. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

5. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 4 may be read at get {49}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {46}.
So the message concat3(dhexp(key_21656690,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))) may be sent on channel pub at output {48}.
mess(pub,concat3(dhexp(key_21656690,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob)))).

6. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 3 may be read at get {429}.
The message concat3(dhexp(key_21656690,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))) that may be sent on channel pub by 5 may be received at input {401}.
We have dhexp(key_21656690,g) <> caught-fail.
So the entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_21656690,g),empty,false))) may be inserted in a table at insert {428}.
table(statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_21656690,g),empty,false)))).

7. The entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_21656690,g),empty,false))) that may be in a table by 6 may be read at get {460}.
The event SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true) may be executed at {457}.
So the message concat3(dhexp(key_e_21656691,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),msg_b(bob,charlie))) may be sent on channel pub at output {459}.
mess(pub,concat3(dhexp(key_e_21656691,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),msg_b(bob,charlie)))).

8. The entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656690,g),key_21656690),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 2 may be read at get {78}.
The message concat3(dhexp(key_e_21656691,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),msg_b(bob,charlie))) that may be sent on channel pub by 7 may be received at input {50}.
So the entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_e_21656691,dhexp(key_21656690,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656690,g),key_21656690),dhexp(key_s(bob),g),dhexp(key_e_21656691,g),empty,true))) may be inserted in a table at insert {77}.
table(statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_e_21656691,dhexp(key_21656690,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656690,g),key_21656690),dhexp(key_s(bob),g),dhexp(key_e_21656691,g),empty,true)))).

9. The entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_e_21656691,dhexp(key_21656690,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656690,g),key_21656690),dhexp(key_s(bob),g),dhexp(key_e_21656691,g),empty,true))) that may be in a table by 8 may be read at get {96}.
The event SendMsg(alice,bob,stage_c,msg_c(alice,bob),true) may be executed at {93}.
So the entry statestore(alice,bob,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_e_21656691,dhexp(key_21656690,g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656690,g),key_21656690),dhexp(key_s(bob),g),dhexp(key_e_21656691,g),empty,true))) may be inserted in a table at insert {94}.
table(statestore(alice,bob,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_e_21656691,dhexp(key_21656690,g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656690,g),key_21656690),dhexp(key_s(bob),g),dhexp(key_e_21656691,g),empty,true)))).

10. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {400}.
table(statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false)))).

11. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

12. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 11 may be read at get {49}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {46}.
So the message concat3(dhexp(key_21656690,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))) may be sent on channel pub at output {48}.
mess(pub,concat3(dhexp(key_21656690,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob)))).

13. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 10 may be read at get {429}.
The message concat3(dhexp(key_21656690,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))) that may be sent on channel pub by 12 may be received at input {401}.
We have dhexp(key_21656690,g) <> caught-fail.
So the entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_21656690,g),empty,false))) may be inserted in a table at insert {428}.
table(statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_21656690,g),empty,false)))).

14. The entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_21656690,g),empty,false))) that may be in a table by 13 may be read at get {460}.
The event SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true) may be executed at {457}.
So the entry statestore(bob,charlie,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_e_21656691,dhexp(key_21656690,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),msg_b(bob,charlie)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_21656691,g),key_e_21656691),empty,dhexp(key_21656690,g),empty,false))) may be inserted in a table at insert {458}.
table(statestore(bob,charlie,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_e_21656691,dhexp(key_21656690,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),msg_b(bob,charlie)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_21656691,g),key_e_21656691),empty,dhexp(key_21656690,g),empty,false)))).

15. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

16. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 15 may be read at get {49}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {46}.
So the entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656690,g),key_21656690),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {47}.
table(statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656690,g),key_21656690),dhexp(key_s(bob),g),empty,empty,true)))).

17. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {400}.
table(statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false)))).

18. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

19. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(empty,empty),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 18 may be read at get {49}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {46}.
So the message concat3(dhexp(key_21656690,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))) may be sent on channel pub at output {48}.
mess(pub,concat3(dhexp(key_21656690,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob)))).

20. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 17 may be read at get {429}.
The message concat3(dhexp(key_21656690,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))) that may be sent on channel pub by 19 may be received at input {401}.
We have dhexp(key_21656690,g) <> caught-fail.
So the entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_21656690,g),empty,false))) may be inserted in a table at insert {428}.
table(statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_21656690,g),empty,false)))).

21. The entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),empty,dhexp(key_21656690,g),empty,false))) that may be in a table by 20 may be read at get {460}.
The event SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true) may be executed at {457}.
So the message concat3(dhexp(key_e_21656691,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),msg_b(bob,charlie))) may be sent on channel pub at output {459}.
mess(pub,concat3(dhexp(key_e_21656691,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),msg_b(bob,charlie)))).

22. The entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656690,g),key_21656690),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 16 may be read at get {78}.
The message concat3(dhexp(key_e_21656691,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),msg_b(bob,charlie))) that may be sent on channel pub by 21 may be received at input {50}.
So the entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_e_21656691,dhexp(key_21656690,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656690,g),key_21656690),dhexp(key_s(bob),g),dhexp(key_e_21656691,g),empty,true))) may be inserted in a table at insert {77}.
table(statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_e_21656691,dhexp(key_21656690,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656690,g),key_21656690),dhexp(key_s(bob),g),dhexp(key_e_21656691,g),empty,true)))).

23. The entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_e_21656691,dhexp(key_21656690,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656690,g),key_21656690),dhexp(key_s(bob),g),dhexp(key_e_21656691,g),empty,true))) that may be in a table by 22 may be read at get {96}.
The event SendMsg(alice,bob,stage_c,msg_c(alice,bob),true) may be executed at {93}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),msg_b(bob,charlie))),msg_c(alice,bob))) may be sent on channel pub at output {95}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),msg_b(bob,charlie))),msg_c(alice,bob)))).

24. The entry statestore(bob,charlie,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_e_21656691,dhexp(key_21656690,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),msg_b(bob,charlie)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_21656691,g),key_e_21656691),empty,dhexp(key_21656690,g),empty,false))) that may be in a table by 14 may be read at get {479}.
The message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),msg_b(bob,charlie))),msg_c(alice,bob))) that may be sent on channel pub by 23 may be received at input {461}.
So the entry statestore(bob,charlie,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_e_21656691,dhexp(key_21656690,g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_21656691,g),key_e_21656691),empty,dhexp(key_21656690,g),empty,false))) may be inserted in a table at insert {478}.
table(statestore(bob,charlie,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_e_21656691,dhexp(key_21656690,g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_21656691,g),key_e_21656691),empty,dhexp(key_21656690,g),empty,false)))).

25. The entry statestore(bob,charlie,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_e_21656691,dhexp(key_21656690,g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_21656691,g),key_e_21656691),empty,dhexp(key_21656690,g),empty,false))) that may be in a table by 24 may be read at get {505}.
The event SendMsg(bob,charlie,stage_d,msg_d(bob,charlie),true) may be executed at {502}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),msg_b(bob,charlie))),msg_c(alice,bob))),msg_d(bob,charlie))) may be sent on channel pub at output {504}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),msg_b(bob,charlie))),msg_c(alice,bob))),msg_d(bob,charlie)))).

26. The entry statestore(alice,bob,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_e_21656691,dhexp(key_21656690,g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_21656690,g),key_21656690),dhexp(key_s(bob),g),dhexp(key_e_21656691,g),empty,true))) that may be in a table by 9 may be read at get {124}.
The message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),dhexp(key_21656690,dhexp(key_e_21656691,g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_s(bob),dhexp(key_21656690,g))),minnonce,hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(bob),g)),dhexp(key_21656690,g)),msg_a(alice,bob))),dhexp(key_e_21656691,g)),msg_b(bob,charlie))),msg_c(alice,bob))),msg_d(bob,charlie))) that may be sent on channel pub by 25 may be received at input {97}.
So event RecvMsg(alice,bob,stage_d,msg_d(bob,charlie),true) may be executed at {121}.
end(RecvMsg(alice,bob,stage_d,msg_d(bob,charlie),true)).


RESULT event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true)) || event(LeakS(phase0,bob)) cannot be proved.
Starting query not attacker_p1(msg_d(bob,alice))
RESULT not attacker_p1(msg_d(bob,alice)) is true.
Starting query attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice))
RESULT attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice)) is true.
Starting query attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob)))
RESULT attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob))) is true.
Starting query attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice))
RESULT attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice)) is true.
