File "NN.noise.passive.pv", line 240, characters 7-8:
Warning: identifier ck rebound.
File "NN.noise.passive.pv", line 249, characters 7-8:
Warning: identifier ck rebound.
File "NN.noise.passive.pv", line 250, characters 7-8:
Warning: identifier cs rebound.
File "NN.noise.passive.pv", line 250, character 36:
Warning: identifier h rebound.
File "NN.noise.passive.pv", line 259, characters 7-8:
Warning: identifier cs rebound.
File "NN.noise.passive.pv", line 260, characters 6-7:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 265, characters 7-8:
Warning: identifier cs rebound.
File "NN.noise.passive.pv", line 266, characters 6-7:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 290, character 6:
Warning: identifier e rebound.
File "NN.noise.passive.pv", line 291, characters 6-7:
Warning: identifier ne rebound.
File "NN.noise.passive.pv", line 292, characters 6-7:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 294, characters 7-8:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 294, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NN.noise.passive.pv", line 295, characters 6-7:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 303, character 6:
Warning: identifier e rebound.
File "NN.noise.passive.pv", line 304, characters 6-7:
Warning: identifier ne rebound.
File "NN.noise.passive.pv", line 305, characters 6-7:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 307, characters 6-7:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 308, characters 7-8:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 308, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NN.noise.passive.pv", line 309, characters 6-7:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 316, characters 7-8:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 316, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NN.noise.passive.pv", line 317, characters 6-7:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 324, characters 7-8:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 324, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NN.noise.passive.pv", line 325, characters 6-7:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 334, characters 6-7:
Warning: identifier re rebound.
File "NN.noise.passive.pv", line 335, characters 6-7:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 337, characters 7-8:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 339, characters 7-8:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 347, characters 6-7:
Warning: identifier re rebound.
File "NN.noise.passive.pv", line 348, characters 6-7:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 350, characters 6-7:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 351, characters 7-8:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 353, characters 7-8:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 361, characters 7-8:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 363, characters 7-8:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 371, characters 7-8:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 373, characters 7-8:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 518, characters 8-9:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 371, characters 7-8:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 373, characters 7-8:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 265, characters 7-8:
Warning: identifier cs rebound.
File "NN.noise.passive.pv", line 266, characters 6-7:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 510, characters 8-9:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 316, characters 7-8:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 316, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NN.noise.passive.pv", line 317, characters 6-7:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 259, characters 7-8:
Warning: identifier cs rebound.
File "NN.noise.passive.pv", line 260, characters 6-7:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 503, characters 8-9:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 347, characters 6-7:
Warning: identifier re rebound.
File "NN.noise.passive.pv", line 348, characters 6-7:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 350, characters 6-7:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 351, characters 7-8:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 353, characters 7-8:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 240, characters 7-8:
Warning: identifier ck rebound.
File "NN.noise.passive.pv", line 265, characters 7-8:
Warning: identifier cs rebound.
File "NN.noise.passive.pv", line 266, characters 6-7:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 495, characters 8-9:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 290, character 6:
Warning: identifier e rebound.
File "NN.noise.passive.pv", line 291, characters 6-7:
Warning: identifier ne rebound.
File "NN.noise.passive.pv", line 292, characters 6-7:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 294, characters 7-8:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 294, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NN.noise.passive.pv", line 295, characters 6-7:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 259, characters 7-8:
Warning: identifier cs rebound.
File "NN.noise.passive.pv", line 260, characters 6-7:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 568, characters 8-9:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 324, characters 7-8:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 324, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NN.noise.passive.pv", line 325, characters 6-7:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 259, characters 7-8:
Warning: identifier cs rebound.
File "NN.noise.passive.pv", line 260, characters 6-7:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 561, characters 8-9:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 361, characters 7-8:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 363, characters 7-8:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 265, characters 7-8:
Warning: identifier cs rebound.
File "NN.noise.passive.pv", line 266, characters 6-7:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 553, characters 8-9:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 303, character 6:
Warning: identifier e rebound.
File "NN.noise.passive.pv", line 304, characters 6-7:
Warning: identifier ne rebound.
File "NN.noise.passive.pv", line 305, characters 6-7:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 307, characters 6-7:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 308, characters 7-8:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 308, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NN.noise.passive.pv", line 309, characters 6-7:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 240, characters 7-8:
Warning: identifier ck rebound.
File "NN.noise.passive.pv", line 259, characters 7-8:
Warning: identifier cs rebound.
File "NN.noise.passive.pv", line 260, characters 6-7:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 546, characters 8-9:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 334, characters 6-7:
Warning: identifier re rebound.
File "NN.noise.passive.pv", line 335, characters 6-7:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 337, characters 7-8:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 339, characters 7-8:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 265, characters 7-8:
Warning: identifier cs rebound.
File "NN.noise.passive.pv", line 266, characters 6-7:
Warning: identifier ss rebound.
Linear part:
dhexp(b_49,dhexp(a_48,g)) = dhexp(a_48,dhexp(b_49,g))
Completing equations...
Completed equations:
dhexp(b_49,dhexp(a_48,g)) = dhexp(a_48,dhexp(b_49,g))
Convergent part:
Completing equations...
Completed equations:
Process:
{1}out(pub, key_s(charlie));
{2}!
(
    {3}let them: principal = bob in
    {4}let me: principal = alice in
    {5}let s_422: keypair = keypairpack(empty,empty) in
    (
        {6}let e_423: keypair = keypairpack(empty,empty) in
        {7}let rs_424: key = empty in
        {8}let re_425: key = empty in
        {9}let v_426: bitstring = catch-fail(hash(somename,empty)) in
        {10}let v_427: key = catch-fail(v_426) in
        {11}let v_428: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {12}let v_429: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_426) then (if not-caught-fail(v_427) then (if not-caught-fail(v_428) then symmetricstatepack(v_428,v_427,v_426) else fail-any) else fail-any) else fail-any))) in
        {13}let v_430: symmetricstate = catch-fail((if success?((if not-caught-fail(v_426) then (if not-caught-fail(v_427) then (if not-caught-fail(v_428) then symmetricstatepack(v_428,v_427,v_426) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_429) && success?(is-true(success?(1-proj-3-tuple(v_429))))) then symmetricstatepack(1-proj-3-tuple(v_429),2-proj-3-tuple(v_429),hash(3-proj-3-tuple(v_429),empty)) else fail-any) else fail-any)) in
        {14}let hs: handshakestate = (if not-caught-fail(v_430) then handshakestatepack(v_430,s_422,e_423,rs_424,re_425,empty,true) else fail-any) in
        {15}insert statestore(me,them,statepack_a(hs))
    ) | (
        {39}get statestore(=me,=them,statepack_a(hs_431: handshakestate)) in
        {16}let v_432: bitstring = catch-fail(handshakestateunpack(hs_431)) in
        {17}let v_433: bitstring = catch-fail((empty,empty,empty)) in
        {18}new key_e[me,them]: key;
        {19}let v_434: key = catch-fail(dhexp(key_e,g)) in
        {20}let v_435: keypair = catch-fail((if not-caught-fail(v_434) then keypairpack(v_434,key_e) else fail-any)) in
        {21}let v_436: bitstring = catch-fail(getpublickey(v_435)) in
        {22}let v_437: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_432))) in
        {23}let v_438: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_432)) then (if (not-caught-fail(v_437) && success?(is-true(success?(1-proj-3-tuple(v_437))))) then symmetricstatepack(1-proj-3-tuple(v_437),2-proj-3-tuple(v_437),hash(3-proj-3-tuple(v_437),v_436)) else fail-any) else fail-any)) in
        {24}let v_439: bitstring = catch-fail(symmetricstateunpack(v_438)) in
        {25}let v_440: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_439))) in
        {26}let v_441: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_440),2-proj-2-tuple(v_440),3-proj-3-tuple(v_439),msg_a(me,them))) in
        {27}let v_442: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_439))) in
        {28}let v_443: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_440))) && success?(1-proj-3-tuple(v_439))) then (if (not-caught-fail(v_442) && success?(is-true(success?(1-proj-2-tuple(v_442))))) then cipherstatepack(1-proj-2-tuple(v_442),increment_nonce(2-proj-2-tuple(v_440))) else fail-any) else fail-any)) in
        {29}let v_444: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_439)) && success?(1-proj-3-tuple(v_439))) then (if (not-caught-fail(v_440) && success?(is-true(success?(1-proj-2-tuple(v_440))))) then (if not-caught-fail(v_441) then (if not-caught-fail(v_443) then (v_443,v_441) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {30}let v_445: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_444),2-proj-3-tuple(v_439),3-proj-3-tuple(v_439)))) in
        {31}let v_446: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_444)) && success?(symmetricstatepack(1-proj-2-tuple(v_444),2-proj-3-tuple(v_439),3-proj-3-tuple(v_439)))) then (if (not-caught-fail(v_445) && success?(is-true(success?(1-proj-3-tuple(v_445))))) then symmetricstatepack(1-proj-3-tuple(v_445),2-proj-3-tuple(v_445),hash(3-proj-3-tuple(v_445),2-proj-2-tuple(v_444))) else fail-any) else fail-any)) in
        {32}let v_447: bitstring = catch-fail((if (not-caught-fail(v_439) && success?(is-true(success?(1-proj-3-tuple(v_439))))) then (if (not-caught-fail(v_444) && success?(is-true(success?(1-proj-2-tuple(v_444))))) then (if not-caught-fail(v_446) then (v_446,2-proj-2-tuple(v_444)) else fail-any) else fail-any) else fail-any)) in
        {33}let v_448: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_447),2-proj-7-tuple(v_432),v_435,4-proj-7-tuple(v_432),5-proj-7-tuple(v_432),6-proj-7-tuple(v_432),7-proj-7-tuple(v_432))) in
        {34}let v_449: bitstring = catch-fail(concat3(v_436,2-proj-3-tuple(v_433),2-proj-2-tuple(v_447))) in
        {35}let (hs_450: handshakestate,re_451: key,message_a: bitstring) = (if (not-caught-fail(v_432) && success?(is-true(success?(1-proj-7-tuple(v_432))))) then (if (not-caught-fail(v_433) && success?(is-true(success?(1-proj-3-tuple(v_433))))) then (if not-caught-fail(v_435) then (if not-caught-fail(v_436) then (if not-caught-fail(v_438) then (if (not-caught-fail(v_447) && success?(is-true(success?(1-proj-2-tuple(v_447))))) then (if not-caught-fail(v_448) then (if not-caught-fail(v_449) then (v_448,5-proj-7-tuple(v_432),v_449) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {36}event SendMsg(me,them,stage_a,msg_a(me,them),true);
        {37}insert statestore(me,them,statepack_b(hs_450));
        {38}out(pub, message_a)
    ) | (
        {68}get statestore(=me,=them,statepack_b(hs_452: handshakestate)) in
        {40}in(pub, message_b: bitstring);
        {41}let v_453: bitstring = catch-fail(handshakestateunpack(hs_452)) in
        {42}let v_454: bitstring = catch-fail(deconcat3(message_b)) in
        {43}let v_455: bool = catch-fail(true) in
        {44}let v_456: key = catch-fail(1-proj-3-tuple(v_454)) in
        {45}let v_457: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_453))) in
        {46}let v_458: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_453)) then (if (not-caught-fail(v_457) && success?(is-true(success?(1-proj-3-tuple(v_457))))) then symmetricstatepack(1-proj-3-tuple(v_457),2-proj-3-tuple(v_457),hash(3-proj-3-tuple(v_457),v_456)) else fail-any) else fail-any)) in
        {47}let v_459: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_453))) in
        {48}let v_460: bitstring = catch-fail(symmetricstateunpack(v_458)) in
        {49}let v_461: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_460),(if success?(3-proj-7-tuple(v_453)) then (if (not-caught-fail(v_459) && success?(is-true(success?(1-proj-2-tuple(v_459))))) then dhexp(2-proj-2-tuple(v_459),v_456) else fail-any) else fail-any))) in
        {50}let v_462: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_460),(if success?(3-proj-7-tuple(v_453)) then (if (not-caught-fail(v_459) && success?(is-true(success?(1-proj-2-tuple(v_459))))) then dhexp(2-proj-2-tuple(v_459),v_456) else fail-any) else fail-any))) in
        {51}let v_463: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_460),(if success?(3-proj-7-tuple(v_453)) then (if (not-caught-fail(v_459) && success?(is-true(success?(1-proj-2-tuple(v_459))))) then dhexp(2-proj-2-tuple(v_459),v_456) else fail-any) else fail-any))) in
        {52}let v_464: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_453)) then (if (not-caught-fail(v_459) && success?(is-true(success?(1-proj-2-tuple(v_459))))) then dhexp(2-proj-2-tuple(v_459),v_456) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_460))) then (if not-caught-fail(v_461) then (if not-caught-fail(v_462) then (if not-caught-fail(v_463) then (v_461,v_462,v_463) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {53}let v_465: symmetricstate = catch-fail((if success?((if success?(3-proj-7-tuple(v_453)) then (if (not-caught-fail(v_459) && success?(is-true(success?(1-proj-2-tuple(v_459))))) then dhexp(2-proj-2-tuple(v_459),v_456) else fail-any) else fail-any)) then (if (not-caught-fail(v_460) && success?(is-true(success?(1-proj-3-tuple(v_460))))) then (if (not-caught-fail(v_464) && success?(is-true(success?(1-proj-3-tuple(v_464))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_464)) then cipherstatepack(2-proj-3-tuple(v_464),minnonce) else fail-any),1-proj-3-tuple(v_464),3-proj-3-tuple(v_460)) else fail-any) else fail-any) else fail-any)) in
        {54}let v_466: bitstring = catch-fail(symmetricstateunpack(v_465)) in
        {55}let v_467: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_466))) in
        {56}let v_468: aead = catch-fail(decrypt(1-proj-2-tuple(v_467),2-proj-2-tuple(v_467),3-proj-3-tuple(v_466),3-proj-3-tuple(v_454))) in
        {57}let v_469: bitstring = catch-fail(aeadunpack(v_468)) in
        {58}let v_470: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_466))) in
        {59}let v_471: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_467))) && success?(1-proj-3-tuple(v_466))) then (if (not-caught-fail(v_470) && success?(is-true(success?(1-proj-2-tuple(v_470))))) then cipherstatepack(1-proj-2-tuple(v_470),increment_nonce(2-proj-2-tuple(v_467))) else fail-any) else fail-any)) in
        {60}let v_472: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_454)) && (success?(3-proj-3-tuple(v_466)) && success?(1-proj-3-tuple(v_466)))) then (if (not-caught-fail(v_467) && success?(is-true(success?(1-proj-2-tuple(v_467))))) then (if not-caught-fail(v_468) then (if (not-caught-fail(v_469) && success?(is-true(success?(1-proj-3-tuple(v_469))))) then (if not-caught-fail(v_471) then (v_471,3-proj-3-tuple(v_469),1-proj-3-tuple(v_469)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {61}let v_473: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_472),2-proj-3-tuple(v_466),3-proj-3-tuple(v_466)))) in
        {62}let v_474: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_454)) && success?(symmetricstatepack(1-proj-3-tuple(v_472),2-proj-3-tuple(v_466),3-proj-3-tuple(v_466)))) then (if (not-caught-fail(v_473) && success?(is-true(success?(1-proj-3-tuple(v_473))))) then symmetricstatepack(1-proj-3-tuple(v_473),2-proj-3-tuple(v_473),hash(3-proj-3-tuple(v_473),3-proj-3-tuple(v_454))) else fail-any) else fail-any)) in
        {63}let v_475: bitstring = catch-fail((if success?(3-proj-3-tuple(v_454)) then (if (not-caught-fail(v_466) && success?(is-true(success?(1-proj-3-tuple(v_466))))) then (if (not-caught-fail(v_472) && success?(is-true(success?(1-proj-3-tuple(v_472))))) then (if not-caught-fail(v_474) then (v_474,2-proj-3-tuple(v_472),3-proj-3-tuple(v_472)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {64}let v_476: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_475),2-proj-7-tuple(v_453),3-proj-7-tuple(v_453),4-proj-7-tuple(v_453),v_456,6-proj-7-tuple(v_453),7-proj-7-tuple(v_453))) in
        {65}let (hs_477: handshakestate,re_478: key,plaintext_b: bitstring,valid: bool) = (if (not-caught-fail(v_453) && success?(is-true(success?(1-proj-7-tuple(v_453))))) then (if (not-caught-fail(v_454) && success?(is-true(success?(1-proj-3-tuple(v_454))))) then (if not-caught-fail(v_455) then (if not-caught-fail(v_456) then (if not-caught-fail(v_458) then (if not-caught-fail(v_465) then (if (not-caught-fail(v_475) && success?(is-true(success?(1-proj-3-tuple(v_475))))) then (if (v_455 && 3-proj-3-tuple(v_475)) then (if not-caught-fail(v_476) then (v_476,getpublickey(3-proj-7-tuple(v_453)),2-proj-3-tuple(v_475),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {66}event RecvMsg(me,them,stage_b,plaintext_b,valid);
        {67}insert statestore(me,them,statepack_c(hs_477))
    ) | (
        {86}get statestore(=me,=them,statepack_c(hs_479: handshakestate)) in
        {69}let v_480: bitstring = catch-fail(handshakestateunpack(hs_479)) in
        {70}let v_481: bitstring = catch-fail((empty,empty,empty)) in
        {71}let v_482: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_480))) in
        {72}let v_483: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_482))) in
        {73}let v_484: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_483),2-proj-2-tuple(v_483),3-proj-3-tuple(v_482),msg_c(me,them))) in
        {74}let v_485: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_482))) in
        {75}let v_486: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_483))) && success?(1-proj-3-tuple(v_482))) then (if (not-caught-fail(v_485) && success?(is-true(success?(1-proj-2-tuple(v_485))))) then cipherstatepack(1-proj-2-tuple(v_485),increment_nonce(2-proj-2-tuple(v_483))) else fail-any) else fail-any)) in
        {76}let v_487: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_482)) && success?(1-proj-3-tuple(v_482))) then (if (not-caught-fail(v_483) && success?(is-true(success?(1-proj-2-tuple(v_483))))) then (if not-caught-fail(v_484) then (if not-caught-fail(v_486) then (v_486,v_484) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {77}let v_488: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_487),2-proj-3-tuple(v_482),3-proj-3-tuple(v_482)))) in
        {78}let v_489: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_487)) && success?(symmetricstatepack(1-proj-2-tuple(v_487),2-proj-3-tuple(v_482),3-proj-3-tuple(v_482)))) then (if (not-caught-fail(v_488) && success?(is-true(success?(1-proj-3-tuple(v_488))))) then symmetricstatepack(1-proj-3-tuple(v_488),2-proj-3-tuple(v_488),hash(3-proj-3-tuple(v_488),2-proj-2-tuple(v_487))) else fail-any) else fail-any)) in
        {79}let v_490: bitstring = catch-fail((if success?(1-proj-7-tuple(v_480)) then (if (not-caught-fail(v_482) && success?(is-true(success?(1-proj-3-tuple(v_482))))) then (if (not-caught-fail(v_487) && success?(is-true(success?(1-proj-2-tuple(v_487))))) then (if not-caught-fail(v_489) then (v_489,2-proj-2-tuple(v_487)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {80}let v_491: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_490),2-proj-7-tuple(v_480),3-proj-7-tuple(v_480),4-proj-7-tuple(v_480),5-proj-7-tuple(v_480),6-proj-7-tuple(v_480),7-proj-7-tuple(v_480))) in
        {81}let v_492: bitstring = catch-fail(concat3(1-proj-3-tuple(v_481),2-proj-3-tuple(v_481),2-proj-2-tuple(v_490))) in
        {82}let (hs_493: handshakestate,re_494: key,message_c: bitstring) = (if (not-caught-fail(v_480) && success?(is-true(success?(1-proj-7-tuple(v_480))))) then (if (not-caught-fail(v_481) && success?(is-true(success?(1-proj-3-tuple(v_481))))) then (if (not-caught-fail(v_490) && success?(is-true(success?(1-proj-2-tuple(v_490))))) then (if not-caught-fail(v_491) then (if not-caught-fail(v_492) then (v_491,5-proj-7-tuple(v_480),v_492) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {83}event SendMsg(me,them,stage_c,msg_c(me,them),true);
        {84}insert statestore(me,them,statepack_d(hs_493));
        {85}out(pub, message_c)
    ) | (
        {114}get statestore(=me,=them,statepack_d(hs_495: handshakestate)) in
        {87}in(pub, message_d: bitstring);
        {88}let v_496: bitstring = catch-fail(handshakestateunpack(hs_495)) in
        {89}let v_497: bitstring = catch-fail(deconcat3(message_d)) in
        {90}let v_498: bool = catch-fail(true) in
        {91}let v_499: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_496))) in
        {92}let v_500: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_499))) in
        {93}let v_501: aead = catch-fail(decrypt(1-proj-2-tuple(v_500),2-proj-2-tuple(v_500),3-proj-3-tuple(v_499),3-proj-3-tuple(v_497))) in
        {94}let v_502: bitstring = catch-fail(aeadunpack(v_501)) in
        {95}let v_503: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_499))) in
        {96}let v_504: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_500))) && success?(1-proj-3-tuple(v_499))) then (if (not-caught-fail(v_503) && success?(is-true(success?(1-proj-2-tuple(v_503))))) then cipherstatepack(1-proj-2-tuple(v_503),increment_nonce(2-proj-2-tuple(v_500))) else fail-any) else fail-any)) in
        {97}let v_505: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_497)) && (success?(3-proj-3-tuple(v_499)) && success?(1-proj-3-tuple(v_499)))) then (if (not-caught-fail(v_500) && success?(is-true(success?(1-proj-2-tuple(v_500))))) then (if not-caught-fail(v_501) then (if (not-caught-fail(v_502) && success?(is-true(success?(1-proj-3-tuple(v_502))))) then (if not-caught-fail(v_504) then (v_504,3-proj-3-tuple(v_502),1-proj-3-tuple(v_502)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {98}let v_506: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_505),2-proj-3-tuple(v_499),3-proj-3-tuple(v_499)))) in
        {99}let v_507: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_497)) && success?(symmetricstatepack(1-proj-3-tuple(v_505),2-proj-3-tuple(v_499),3-proj-3-tuple(v_499)))) then (if (not-caught-fail(v_506) && success?(is-true(success?(1-proj-3-tuple(v_506))))) then symmetricstatepack(1-proj-3-tuple(v_506),2-proj-3-tuple(v_506),hash(3-proj-3-tuple(v_506),3-proj-3-tuple(v_497))) else fail-any) else fail-any)) in
        {100}let v_508: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_497)) && success?(1-proj-7-tuple(v_496))) then (if (not-caught-fail(v_499) && success?(is-true(success?(1-proj-3-tuple(v_499))))) then (if (not-caught-fail(v_505) && success?(is-true(success?(1-proj-3-tuple(v_505))))) then (if not-caught-fail(v_507) then (v_507,2-proj-3-tuple(v_505),3-proj-3-tuple(v_505)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {101}let v_509: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_508),2-proj-7-tuple(v_496),3-proj-7-tuple(v_496),4-proj-7-tuple(v_496),5-proj-7-tuple(v_496),6-proj-7-tuple(v_496),7-proj-7-tuple(v_496))) in
        {102}let v_510: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_508))) in
        {103}let v_511: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_510),zero)) in
        {104}let v_512: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_510),zero)) in
        {105}let v_513: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_510),zero)) in
        {106}let v_514: bitstring = catch-fail((if success?(2-proj-3-tuple(v_510)) then (if not-caught-fail(v_511) then (if not-caught-fail(v_512) then (if not-caught-fail(v_513) then (v_511,v_512,v_513) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {107}let v_515: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_514)) then cipherstatepack(1-proj-3-tuple(v_514),minnonce) else fail-any)) in
        {108}let v_516: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_514)) then cipherstatepack(2-proj-3-tuple(v_514),minnonce) else fail-any)) in
        {109}let v_517: bitstring = catch-fail((if success?(1-proj-3-tuple(v_508)) then (if (not-caught-fail(v_510) && success?(is-true(success?(1-proj-3-tuple(v_510))))) then (if (not-caught-fail(v_514) && success?(is-true(success?(1-proj-3-tuple(v_514))))) then (if not-caught-fail(v_515) then (if not-caught-fail(v_516) then (1-proj-3-tuple(v_508),v_515,v_516) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {110}let (hs_518: handshakestate,re_519: key,plaintext_d: bitstring,valid_520: bool,cs1: cipherstate,cs2: cipherstate) = (if (not-caught-fail(v_496) && success?(is-true(success?(1-proj-7-tuple(v_496))))) then (if (not-caught-fail(v_497) && success?(is-true(success?(1-proj-3-tuple(v_497))))) then (if not-caught-fail(v_498) then (if (not-caught-fail(v_508) && success?(is-true(success?(1-proj-3-tuple(v_508))))) then (if (v_498 && 3-proj-3-tuple(v_508)) then (if not-caught-fail(v_509) then (if (not-caught-fail(v_517) && success?(is-true(success?(1-proj-3-tuple(v_517))))) then (v_509,getpublickey(3-proj-7-tuple(v_496)),2-proj-3-tuple(v_508),true,2-proj-3-tuple(v_517),3-proj-3-tuple(v_517)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {111}event RecvMsg(me,them,stage_d,plaintext_d,valid_520);
        {112}insert statestore(me,them,statepack_e(hs_518));
        {113}event RecvEnd(valid_520)
    ) | (
        {115}event LeakS(phase0,me);
        {116}out(pub, key_s(me))
    ) | (
        {117}phase 1;
        {118}event LeakS(phase1,me);
        {119}out(pub, key_s(me))
    )
) | (
    {120}let them_521: principal = charlie in
    {121}let me_522: principal = alice in
    {122}let s_523: keypair = keypairpack(empty,empty) in
    (
        {123}let e_524: keypair = keypairpack(empty,empty) in
        {124}let rs_525: key = empty in
        {125}let re_526: key = empty in
        {126}let v_527: bitstring = catch-fail(hash(somename,empty)) in
        {127}let v_528: key = catch-fail(v_527) in
        {128}let v_529: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {129}let v_530: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_527) then (if not-caught-fail(v_528) then (if not-caught-fail(v_529) then symmetricstatepack(v_529,v_528,v_527) else fail-any) else fail-any) else fail-any))) in
        {130}let v_531: symmetricstate = catch-fail((if success?((if not-caught-fail(v_527) then (if not-caught-fail(v_528) then (if not-caught-fail(v_529) then symmetricstatepack(v_529,v_528,v_527) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_530) && success?(is-true(success?(1-proj-3-tuple(v_530))))) then symmetricstatepack(1-proj-3-tuple(v_530),2-proj-3-tuple(v_530),hash(3-proj-3-tuple(v_530),empty)) else fail-any) else fail-any)) in
        {131}let hs_532: handshakestate = (if not-caught-fail(v_531) then handshakestatepack(v_531,s_523,e_524,rs_525,re_526,empty,true) else fail-any) in
        {132}insert statestore(me_522,them_521,statepack_a(hs_532))
    ) | (
        {156}get statestore(=me_522,=them_521,statepack_a(hs_533: handshakestate)) in
        {133}let v_534: bitstring = catch-fail(handshakestateunpack(hs_533)) in
        {134}let v_535: bitstring = catch-fail((empty,empty,empty)) in
        {135}new key_e_536[me_522,them_521]: key;
        {136}let v_537: key = catch-fail(dhexp(key_e_536,g)) in
        {137}let v_538: keypair = catch-fail((if not-caught-fail(v_537) then keypairpack(v_537,key_e_536) else fail-any)) in
        {138}let v_539: bitstring = catch-fail(getpublickey(v_538)) in
        {139}let v_540: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_534))) in
        {140}let v_541: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_534)) then (if (not-caught-fail(v_540) && success?(is-true(success?(1-proj-3-tuple(v_540))))) then symmetricstatepack(1-proj-3-tuple(v_540),2-proj-3-tuple(v_540),hash(3-proj-3-tuple(v_540),v_539)) else fail-any) else fail-any)) in
        {141}let v_542: bitstring = catch-fail(symmetricstateunpack(v_541)) in
        {142}let v_543: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_542))) in
        {143}let v_544: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_543),2-proj-2-tuple(v_543),3-proj-3-tuple(v_542),msg_a(me_522,them_521))) in
        {144}let v_545: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_542))) in
        {145}let v_546: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_543))) && success?(1-proj-3-tuple(v_542))) then (if (not-caught-fail(v_545) && success?(is-true(success?(1-proj-2-tuple(v_545))))) then cipherstatepack(1-proj-2-tuple(v_545),increment_nonce(2-proj-2-tuple(v_543))) else fail-any) else fail-any)) in
        {146}let v_547: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_542)) && success?(1-proj-3-tuple(v_542))) then (if (not-caught-fail(v_543) && success?(is-true(success?(1-proj-2-tuple(v_543))))) then (if not-caught-fail(v_544) then (if not-caught-fail(v_546) then (v_546,v_544) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {147}let v_548: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_547),2-proj-3-tuple(v_542),3-proj-3-tuple(v_542)))) in
        {148}let v_549: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_547)) && success?(symmetricstatepack(1-proj-2-tuple(v_547),2-proj-3-tuple(v_542),3-proj-3-tuple(v_542)))) then (if (not-caught-fail(v_548) && success?(is-true(success?(1-proj-3-tuple(v_548))))) then symmetricstatepack(1-proj-3-tuple(v_548),2-proj-3-tuple(v_548),hash(3-proj-3-tuple(v_548),2-proj-2-tuple(v_547))) else fail-any) else fail-any)) in
        {149}let v_550: bitstring = catch-fail((if (not-caught-fail(v_542) && success?(is-true(success?(1-proj-3-tuple(v_542))))) then (if (not-caught-fail(v_547) && success?(is-true(success?(1-proj-2-tuple(v_547))))) then (if not-caught-fail(v_549) then (v_549,2-proj-2-tuple(v_547)) else fail-any) else fail-any) else fail-any)) in
        {150}let v_551: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_550),2-proj-7-tuple(v_534),v_538,4-proj-7-tuple(v_534),5-proj-7-tuple(v_534),6-proj-7-tuple(v_534),7-proj-7-tuple(v_534))) in
        {151}let v_552: bitstring = catch-fail(concat3(v_539,2-proj-3-tuple(v_535),2-proj-2-tuple(v_550))) in
        {152}let (hs_553: handshakestate,re_554: key,message_a_555: bitstring) = (if (not-caught-fail(v_534) && success?(is-true(success?(1-proj-7-tuple(v_534))))) then (if (not-caught-fail(v_535) && success?(is-true(success?(1-proj-3-tuple(v_535))))) then (if not-caught-fail(v_538) then (if not-caught-fail(v_539) then (if not-caught-fail(v_541) then (if (not-caught-fail(v_550) && success?(is-true(success?(1-proj-2-tuple(v_550))))) then (if not-caught-fail(v_551) then (if not-caught-fail(v_552) then (v_551,5-proj-7-tuple(v_534),v_552) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {153}event SendMsg(me_522,them_521,stage_a,msg_a(me_522,them_521),true);
        {154}insert statestore(me_522,them_521,statepack_b(hs_553));
        {155}out(pub, message_a_555)
    ) | (
        {185}get statestore(=me_522,=them_521,statepack_b(hs_556: handshakestate)) in
        {157}in(pub, message_b_557: bitstring);
        {158}let v_558: bitstring = catch-fail(handshakestateunpack(hs_556)) in
        {159}let v_559: bitstring = catch-fail(deconcat3(message_b_557)) in
        {160}let v_560: bool = catch-fail(true) in
        {161}let v_561: key = catch-fail(1-proj-3-tuple(v_559)) in
        {162}let v_562: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_558))) in
        {163}let v_563: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_558)) then (if (not-caught-fail(v_562) && success?(is-true(success?(1-proj-3-tuple(v_562))))) then symmetricstatepack(1-proj-3-tuple(v_562),2-proj-3-tuple(v_562),hash(3-proj-3-tuple(v_562),v_561)) else fail-any) else fail-any)) in
        {164}let v_564: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_558))) in
        {165}let v_565: bitstring = catch-fail(symmetricstateunpack(v_563)) in
        {166}let v_566: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_565),(if success?(3-proj-7-tuple(v_558)) then (if (not-caught-fail(v_564) && success?(is-true(success?(1-proj-2-tuple(v_564))))) then dhexp(2-proj-2-tuple(v_564),v_561) else fail-any) else fail-any))) in
        {167}let v_567: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_565),(if success?(3-proj-7-tuple(v_558)) then (if (not-caught-fail(v_564) && success?(is-true(success?(1-proj-2-tuple(v_564))))) then dhexp(2-proj-2-tuple(v_564),v_561) else fail-any) else fail-any))) in
        {168}let v_568: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_565),(if success?(3-proj-7-tuple(v_558)) then (if (not-caught-fail(v_564) && success?(is-true(success?(1-proj-2-tuple(v_564))))) then dhexp(2-proj-2-tuple(v_564),v_561) else fail-any) else fail-any))) in
        {169}let v_569: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_558)) then (if (not-caught-fail(v_564) && success?(is-true(success?(1-proj-2-tuple(v_564))))) then dhexp(2-proj-2-tuple(v_564),v_561) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_565))) then (if not-caught-fail(v_566) then (if not-caught-fail(v_567) then (if not-caught-fail(v_568) then (v_566,v_567,v_568) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {170}let v_570: symmetricstate = catch-fail((if success?((if success?(3-proj-7-tuple(v_558)) then (if (not-caught-fail(v_564) && success?(is-true(success?(1-proj-2-tuple(v_564))))) then dhexp(2-proj-2-tuple(v_564),v_561) else fail-any) else fail-any)) then (if (not-caught-fail(v_565) && success?(is-true(success?(1-proj-3-tuple(v_565))))) then (if (not-caught-fail(v_569) && success?(is-true(success?(1-proj-3-tuple(v_569))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_569)) then cipherstatepack(2-proj-3-tuple(v_569),minnonce) else fail-any),1-proj-3-tuple(v_569),3-proj-3-tuple(v_565)) else fail-any) else fail-any) else fail-any)) in
        {171}let v_571: bitstring = catch-fail(symmetricstateunpack(v_570)) in
        {172}let v_572: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_571))) in
        {173}let v_573: aead = catch-fail(decrypt(1-proj-2-tuple(v_572),2-proj-2-tuple(v_572),3-proj-3-tuple(v_571),3-proj-3-tuple(v_559))) in
        {174}let v_574: bitstring = catch-fail(aeadunpack(v_573)) in
        {175}let v_575: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_571))) in
        {176}let v_576: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_572))) && success?(1-proj-3-tuple(v_571))) then (if (not-caught-fail(v_575) && success?(is-true(success?(1-proj-2-tuple(v_575))))) then cipherstatepack(1-proj-2-tuple(v_575),increment_nonce(2-proj-2-tuple(v_572))) else fail-any) else fail-any)) in
        {177}let v_577: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_559)) && (success?(3-proj-3-tuple(v_571)) && success?(1-proj-3-tuple(v_571)))) then (if (not-caught-fail(v_572) && success?(is-true(success?(1-proj-2-tuple(v_572))))) then (if not-caught-fail(v_573) then (if (not-caught-fail(v_574) && success?(is-true(success?(1-proj-3-tuple(v_574))))) then (if not-caught-fail(v_576) then (v_576,3-proj-3-tuple(v_574),1-proj-3-tuple(v_574)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {178}let v_578: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_577),2-proj-3-tuple(v_571),3-proj-3-tuple(v_571)))) in
        {179}let v_579: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_559)) && success?(symmetricstatepack(1-proj-3-tuple(v_577),2-proj-3-tuple(v_571),3-proj-3-tuple(v_571)))) then (if (not-caught-fail(v_578) && success?(is-true(success?(1-proj-3-tuple(v_578))))) then symmetricstatepack(1-proj-3-tuple(v_578),2-proj-3-tuple(v_578),hash(3-proj-3-tuple(v_578),3-proj-3-tuple(v_559))) else fail-any) else fail-any)) in
        {180}let v_580: bitstring = catch-fail((if success?(3-proj-3-tuple(v_559)) then (if (not-caught-fail(v_571) && success?(is-true(success?(1-proj-3-tuple(v_571))))) then (if (not-caught-fail(v_577) && success?(is-true(success?(1-proj-3-tuple(v_577))))) then (if not-caught-fail(v_579) then (v_579,2-proj-3-tuple(v_577),3-proj-3-tuple(v_577)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {181}let v_581: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_580),2-proj-7-tuple(v_558),3-proj-7-tuple(v_558),4-proj-7-tuple(v_558),v_561,6-proj-7-tuple(v_558),7-proj-7-tuple(v_558))) in
        {182}let (hs_582: handshakestate,re_583: key,plaintext_b_584: bitstring,valid_585: bool) = (if (not-caught-fail(v_558) && success?(is-true(success?(1-proj-7-tuple(v_558))))) then (if (not-caught-fail(v_559) && success?(is-true(success?(1-proj-3-tuple(v_559))))) then (if not-caught-fail(v_560) then (if not-caught-fail(v_561) then (if not-caught-fail(v_563) then (if not-caught-fail(v_570) then (if (not-caught-fail(v_580) && success?(is-true(success?(1-proj-3-tuple(v_580))))) then (if (v_560 && 3-proj-3-tuple(v_580)) then (if not-caught-fail(v_581) then (v_581,getpublickey(3-proj-7-tuple(v_558)),2-proj-3-tuple(v_580),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {183}event RecvMsg(me_522,them_521,stage_b,plaintext_b_584,valid_585);
        {184}insert statestore(me_522,them_521,statepack_c(hs_582))
    ) | (
        {203}get statestore(=me_522,=them_521,statepack_c(hs_586: handshakestate)) in
        {186}let v_587: bitstring = catch-fail(handshakestateunpack(hs_586)) in
        {187}let v_588: bitstring = catch-fail((empty,empty,empty)) in
        {188}let v_589: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_587))) in
        {189}let v_590: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_589))) in
        {190}let v_591: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_590),2-proj-2-tuple(v_590),3-proj-3-tuple(v_589),msg_c(me_522,them_521))) in
        {191}let v_592: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_589))) in
        {192}let v_593: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_590))) && success?(1-proj-3-tuple(v_589))) then (if (not-caught-fail(v_592) && success?(is-true(success?(1-proj-2-tuple(v_592))))) then cipherstatepack(1-proj-2-tuple(v_592),increment_nonce(2-proj-2-tuple(v_590))) else fail-any) else fail-any)) in
        {193}let v_594: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_589)) && success?(1-proj-3-tuple(v_589))) then (if (not-caught-fail(v_590) && success?(is-true(success?(1-proj-2-tuple(v_590))))) then (if not-caught-fail(v_591) then (if not-caught-fail(v_593) then (v_593,v_591) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {194}let v_595: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_594),2-proj-3-tuple(v_589),3-proj-3-tuple(v_589)))) in
        {195}let v_596: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_594)) && success?(symmetricstatepack(1-proj-2-tuple(v_594),2-proj-3-tuple(v_589),3-proj-3-tuple(v_589)))) then (if (not-caught-fail(v_595) && success?(is-true(success?(1-proj-3-tuple(v_595))))) then symmetricstatepack(1-proj-3-tuple(v_595),2-proj-3-tuple(v_595),hash(3-proj-3-tuple(v_595),2-proj-2-tuple(v_594))) else fail-any) else fail-any)) in
        {196}let v_597: bitstring = catch-fail((if success?(1-proj-7-tuple(v_587)) then (if (not-caught-fail(v_589) && success?(is-true(success?(1-proj-3-tuple(v_589))))) then (if (not-caught-fail(v_594) && success?(is-true(success?(1-proj-2-tuple(v_594))))) then (if not-caught-fail(v_596) then (v_596,2-proj-2-tuple(v_594)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {197}let v_598: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_597),2-proj-7-tuple(v_587),3-proj-7-tuple(v_587),4-proj-7-tuple(v_587),5-proj-7-tuple(v_587),6-proj-7-tuple(v_587),7-proj-7-tuple(v_587))) in
        {198}let v_599: bitstring = catch-fail(concat3(1-proj-3-tuple(v_588),2-proj-3-tuple(v_588),2-proj-2-tuple(v_597))) in
        {199}let (hs_600: handshakestate,re_601: key,message_c_602: bitstring) = (if (not-caught-fail(v_587) && success?(is-true(success?(1-proj-7-tuple(v_587))))) then (if (not-caught-fail(v_588) && success?(is-true(success?(1-proj-3-tuple(v_588))))) then (if (not-caught-fail(v_597) && success?(is-true(success?(1-proj-2-tuple(v_597))))) then (if not-caught-fail(v_598) then (if not-caught-fail(v_599) then (v_598,5-proj-7-tuple(v_587),v_599) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {200}event SendMsg(me_522,them_521,stage_c,msg_c(me_522,them_521),true);
        {201}insert statestore(me_522,them_521,statepack_d(hs_600));
        {202}out(pub, message_c_602)
    ) | (
        {231}get statestore(=me_522,=them_521,statepack_d(hs_603: handshakestate)) in
        {204}in(pub, message_d_604: bitstring);
        {205}let v_605: bitstring = catch-fail(handshakestateunpack(hs_603)) in
        {206}let v_606: bitstring = catch-fail(deconcat3(message_d_604)) in
        {207}let v_607: bool = catch-fail(true) in
        {208}let v_608: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_605))) in
        {209}let v_609: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_608))) in
        {210}let v_610: aead = catch-fail(decrypt(1-proj-2-tuple(v_609),2-proj-2-tuple(v_609),3-proj-3-tuple(v_608),3-proj-3-tuple(v_606))) in
        {211}let v_611: bitstring = catch-fail(aeadunpack(v_610)) in
        {212}let v_612: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_608))) in
        {213}let v_613: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_609))) && success?(1-proj-3-tuple(v_608))) then (if (not-caught-fail(v_612) && success?(is-true(success?(1-proj-2-tuple(v_612))))) then cipherstatepack(1-proj-2-tuple(v_612),increment_nonce(2-proj-2-tuple(v_609))) else fail-any) else fail-any)) in
        {214}let v_614: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_606)) && (success?(3-proj-3-tuple(v_608)) && success?(1-proj-3-tuple(v_608)))) then (if (not-caught-fail(v_609) && success?(is-true(success?(1-proj-2-tuple(v_609))))) then (if not-caught-fail(v_610) then (if (not-caught-fail(v_611) && success?(is-true(success?(1-proj-3-tuple(v_611))))) then (if not-caught-fail(v_613) then (v_613,3-proj-3-tuple(v_611),1-proj-3-tuple(v_611)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {215}let v_615: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_614),2-proj-3-tuple(v_608),3-proj-3-tuple(v_608)))) in
        {216}let v_616: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_606)) && success?(symmetricstatepack(1-proj-3-tuple(v_614),2-proj-3-tuple(v_608),3-proj-3-tuple(v_608)))) then (if (not-caught-fail(v_615) && success?(is-true(success?(1-proj-3-tuple(v_615))))) then symmetricstatepack(1-proj-3-tuple(v_615),2-proj-3-tuple(v_615),hash(3-proj-3-tuple(v_615),3-proj-3-tuple(v_606))) else fail-any) else fail-any)) in
        {217}let v_617: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_606)) && success?(1-proj-7-tuple(v_605))) then (if (not-caught-fail(v_608) && success?(is-true(success?(1-proj-3-tuple(v_608))))) then (if (not-caught-fail(v_614) && success?(is-true(success?(1-proj-3-tuple(v_614))))) then (if not-caught-fail(v_616) then (v_616,2-proj-3-tuple(v_614),3-proj-3-tuple(v_614)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {218}let v_618: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_617),2-proj-7-tuple(v_605),3-proj-7-tuple(v_605),4-proj-7-tuple(v_605),5-proj-7-tuple(v_605),6-proj-7-tuple(v_605),7-proj-7-tuple(v_605))) in
        {219}let v_619: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_617))) in
        {220}let v_620: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_619),zero)) in
        {221}let v_621: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_619),zero)) in
        {222}let v_622: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_619),zero)) in
        {223}let v_623: bitstring = catch-fail((if success?(2-proj-3-tuple(v_619)) then (if not-caught-fail(v_620) then (if not-caught-fail(v_621) then (if not-caught-fail(v_622) then (v_620,v_621,v_622) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {224}let v_624: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_623)) then cipherstatepack(1-proj-3-tuple(v_623),minnonce) else fail-any)) in
        {225}let v_625: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_623)) then cipherstatepack(2-proj-3-tuple(v_623),minnonce) else fail-any)) in
        {226}let v_626: bitstring = catch-fail((if success?(1-proj-3-tuple(v_617)) then (if (not-caught-fail(v_619) && success?(is-true(success?(1-proj-3-tuple(v_619))))) then (if (not-caught-fail(v_623) && success?(is-true(success?(1-proj-3-tuple(v_623))))) then (if not-caught-fail(v_624) then (if not-caught-fail(v_625) then (1-proj-3-tuple(v_617),v_624,v_625) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {227}let (hs_627: handshakestate,re_628: key,plaintext_d_629: bitstring,valid_630: bool,cs1_631: cipherstate,cs2_632: cipherstate) = (if (not-caught-fail(v_605) && success?(is-true(success?(1-proj-7-tuple(v_605))))) then (if (not-caught-fail(v_606) && success?(is-true(success?(1-proj-3-tuple(v_606))))) then (if not-caught-fail(v_607) then (if (not-caught-fail(v_617) && success?(is-true(success?(1-proj-3-tuple(v_617))))) then (if (v_607 && 3-proj-3-tuple(v_617)) then (if not-caught-fail(v_618) then (if (not-caught-fail(v_626) && success?(is-true(success?(1-proj-3-tuple(v_626))))) then (v_618,getpublickey(3-proj-7-tuple(v_605)),2-proj-3-tuple(v_617),true,2-proj-3-tuple(v_626),3-proj-3-tuple(v_626)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {228}event RecvMsg(me_522,them_521,stage_d,plaintext_d_629,valid_630);
        {229}insert statestore(me_522,them_521,statepack_e(hs_627));
        {230}event RecvEnd(valid_630)
    ) | (
        {232}event LeakS(phase0,me_522);
        {233}out(pub, key_s(me_522))
    ) | (
        {234}phase 1;
        {235}event LeakS(phase1,me_522);
        {236}out(pub, key_s(me_522))
    )
) | (
    {237}let them_633: principal = alice in
    {238}let me_634: principal = bob in
    {239}let s_635: keypair = keypairpack(empty,empty) in
    (
        {240}let e_636: keypair = keypairpack(empty,empty) in
        {241}let rs_637: key = empty in
        {242}let re_638: key = empty in
        {243}let v_639: bitstring = catch-fail(hash(somename,empty)) in
        {244}let v_640: key = catch-fail(v_639) in
        {245}let v_641: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {246}let v_642: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_639) then (if not-caught-fail(v_640) then (if not-caught-fail(v_641) then symmetricstatepack(v_641,v_640,v_639) else fail-any) else fail-any) else fail-any))) in
        {247}let v_643: symmetricstate = catch-fail((if success?((if not-caught-fail(v_639) then (if not-caught-fail(v_640) then (if not-caught-fail(v_641) then symmetricstatepack(v_641,v_640,v_639) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_642) && success?(is-true(success?(1-proj-3-tuple(v_642))))) then symmetricstatepack(1-proj-3-tuple(v_642),2-proj-3-tuple(v_642),hash(3-proj-3-tuple(v_642),empty)) else fail-any) else fail-any)) in
        {248}let hs_644: handshakestate = (if not-caught-fail(v_643) then handshakestatepack(v_643,s_635,e_636,rs_637,re_638,empty,false) else fail-any) in
        {249}insert statestore(me_634,them_633,statepack_a(hs_644))
    ) | (
        {271}get statestore(=me_634,=them_633,statepack_a(hs_645: handshakestate)) in
        {250}in(pub, message_a_646: bitstring);
        {251}let v_647: bitstring = catch-fail(handshakestateunpack(hs_645)) in
        {252}let v_648: bitstring = catch-fail(deconcat3(message_a_646)) in
        {253}let v_649: bool = catch-fail(true) in
        {254}let v_650: key = catch-fail(1-proj-3-tuple(v_648)) in
        {255}let v_651: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_647))) in
        {256}let v_652: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_647)) then (if (not-caught-fail(v_651) && success?(is-true(success?(1-proj-3-tuple(v_651))))) then symmetricstatepack(1-proj-3-tuple(v_651),2-proj-3-tuple(v_651),hash(3-proj-3-tuple(v_651),v_650)) else fail-any) else fail-any)) in
        {257}let v_653: bitstring = catch-fail(symmetricstateunpack(v_652)) in
        {258}let v_654: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_653))) in
        {259}let v_655: aead = catch-fail(decrypt(1-proj-2-tuple(v_654),2-proj-2-tuple(v_654),3-proj-3-tuple(v_653),3-proj-3-tuple(v_648))) in
        {260}let v_656: bitstring = catch-fail(aeadunpack(v_655)) in
        {261}let v_657: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_653))) in
        {262}let v_658: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_654))) && success?(1-proj-3-tuple(v_653))) then (if (not-caught-fail(v_657) && success?(is-true(success?(1-proj-2-tuple(v_657))))) then cipherstatepack(1-proj-2-tuple(v_657),increment_nonce(2-proj-2-tuple(v_654))) else fail-any) else fail-any)) in
        {263}let v_659: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_648)) && (success?(3-proj-3-tuple(v_653)) && success?(1-proj-3-tuple(v_653)))) then (if (not-caught-fail(v_654) && success?(is-true(success?(1-proj-2-tuple(v_654))))) then (if not-caught-fail(v_655) then (if (not-caught-fail(v_656) && success?(is-true(success?(1-proj-3-tuple(v_656))))) then (if not-caught-fail(v_658) then (v_658,3-proj-3-tuple(v_656),1-proj-3-tuple(v_656)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {264}let v_660: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_659),2-proj-3-tuple(v_653),3-proj-3-tuple(v_653)))) in
        {265}let v_661: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_648)) && success?(symmetricstatepack(1-proj-3-tuple(v_659),2-proj-3-tuple(v_653),3-proj-3-tuple(v_653)))) then (if (not-caught-fail(v_660) && success?(is-true(success?(1-proj-3-tuple(v_660))))) then symmetricstatepack(1-proj-3-tuple(v_660),2-proj-3-tuple(v_660),hash(3-proj-3-tuple(v_660),3-proj-3-tuple(v_648))) else fail-any) else fail-any)) in
        {266}let v_662: bitstring = catch-fail((if success?(3-proj-3-tuple(v_648)) then (if (not-caught-fail(v_653) && success?(is-true(success?(1-proj-3-tuple(v_653))))) then (if (not-caught-fail(v_659) && success?(is-true(success?(1-proj-3-tuple(v_659))))) then (if not-caught-fail(v_661) then (v_661,2-proj-3-tuple(v_659),3-proj-3-tuple(v_659)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {267}let v_663: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_662),2-proj-7-tuple(v_647),3-proj-7-tuple(v_647),4-proj-7-tuple(v_647),v_650,6-proj-7-tuple(v_647),7-proj-7-tuple(v_647))) in
        {268}let (hs_664: handshakestate,re_665: key,plaintext_a: bitstring,valid_666: bool) = (if (not-caught-fail(v_647) && success?(is-true(success?(1-proj-7-tuple(v_647))))) then (if (not-caught-fail(v_648) && success?(is-true(success?(1-proj-3-tuple(v_648))))) then (if not-caught-fail(v_649) then (if not-caught-fail(v_650) then (if not-caught-fail(v_652) then (if (not-caught-fail(v_662) && success?(is-true(success?(1-proj-3-tuple(v_662))))) then (if (v_649 && 3-proj-3-tuple(v_662)) then (if not-caught-fail(v_663) then (v_663,getpublickey(3-proj-7-tuple(v_647)),2-proj-3-tuple(v_662),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {269}event RecvMsg(me_634,them_633,stage_a,plaintext_a,valid_666);
        {270}insert statestore(me_634,them_633,statepack_b(hs_664))
    ) | (
        {302}get statestore(=me_634,=them_633,statepack_b(hs_667: handshakestate)) in
        {272}let v_668: bitstring = catch-fail(handshakestateunpack(hs_667)) in
        {273}let v_669: bitstring = catch-fail((empty,empty,empty)) in
        {274}new key_e_670[me_634,them_633]: key;
        {275}let v_671: key = catch-fail(dhexp(key_e_670,g)) in
        {276}let v_672: keypair = catch-fail((if not-caught-fail(v_671) then keypairpack(v_671,key_e_670) else fail-any)) in
        {277}let v_673: bitstring = catch-fail(getpublickey(v_672)) in
        {278}let v_674: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_668))) in
        {279}let v_675: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_668)) then (if (not-caught-fail(v_674) && success?(is-true(success?(1-proj-3-tuple(v_674))))) then symmetricstatepack(1-proj-3-tuple(v_674),2-proj-3-tuple(v_674),hash(3-proj-3-tuple(v_674),v_673)) else fail-any) else fail-any)) in
        {280}let v_676: bitstring = catch-fail(keypairunpack(v_672)) in
        {281}let v_677: bitstring = catch-fail(symmetricstateunpack(v_675)) in
        {282}let v_678: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_677),(if success?(5-proj-7-tuple(v_668)) then (if (not-caught-fail(v_676) && success?(is-true(success?(1-proj-2-tuple(v_676))))) then dhexp(2-proj-2-tuple(v_676),5-proj-7-tuple(v_668)) else fail-any) else fail-any))) in
        {283}let v_679: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_677),(if success?(5-proj-7-tuple(v_668)) then (if (not-caught-fail(v_676) && success?(is-true(success?(1-proj-2-tuple(v_676))))) then dhexp(2-proj-2-tuple(v_676),5-proj-7-tuple(v_668)) else fail-any) else fail-any))) in
        {284}let v_680: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_677),(if success?(5-proj-7-tuple(v_668)) then (if (not-caught-fail(v_676) && success?(is-true(success?(1-proj-2-tuple(v_676))))) then dhexp(2-proj-2-tuple(v_676),5-proj-7-tuple(v_668)) else fail-any) else fail-any))) in
        {285}let v_681: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_668)) then (if (not-caught-fail(v_676) && success?(is-true(success?(1-proj-2-tuple(v_676))))) then dhexp(2-proj-2-tuple(v_676),5-proj-7-tuple(v_668)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_677))) then (if not-caught-fail(v_678) then (if not-caught-fail(v_679) then (if not-caught-fail(v_680) then (v_678,v_679,v_680) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {286}let v_682: symmetricstate = catch-fail((if success?((if success?(5-proj-7-tuple(v_668)) then (if (not-caught-fail(v_676) && success?(is-true(success?(1-proj-2-tuple(v_676))))) then dhexp(2-proj-2-tuple(v_676),5-proj-7-tuple(v_668)) else fail-any) else fail-any)) then (if (not-caught-fail(v_677) && success?(is-true(success?(1-proj-3-tuple(v_677))))) then (if (not-caught-fail(v_681) && success?(is-true(success?(1-proj-3-tuple(v_681))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_681)) then cipherstatepack(2-proj-3-tuple(v_681),minnonce) else fail-any),1-proj-3-tuple(v_681),3-proj-3-tuple(v_677)) else fail-any) else fail-any) else fail-any)) in
        {287}let v_683: bitstring = catch-fail(symmetricstateunpack(v_682)) in
        {288}let v_684: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_683))) in
        {289}let v_685: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_684),2-proj-2-tuple(v_684),3-proj-3-tuple(v_683),msg_b(me_634,them_633))) in
        {290}let v_686: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_683))) in
        {291}let v_687: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_684))) && success?(1-proj-3-tuple(v_683))) then (if (not-caught-fail(v_686) && success?(is-true(success?(1-proj-2-tuple(v_686))))) then cipherstatepack(1-proj-2-tuple(v_686),increment_nonce(2-proj-2-tuple(v_684))) else fail-any) else fail-any)) in
        {292}let v_688: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_683)) && success?(1-proj-3-tuple(v_683))) then (if (not-caught-fail(v_684) && success?(is-true(success?(1-proj-2-tuple(v_684))))) then (if not-caught-fail(v_685) then (if not-caught-fail(v_687) then (v_687,v_685) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {293}let v_689: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_688),2-proj-3-tuple(v_683),3-proj-3-tuple(v_683)))) in
        {294}let v_690: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_688)) && success?(symmetricstatepack(1-proj-2-tuple(v_688),2-proj-3-tuple(v_683),3-proj-3-tuple(v_683)))) then (if (not-caught-fail(v_689) && success?(is-true(success?(1-proj-3-tuple(v_689))))) then symmetricstatepack(1-proj-3-tuple(v_689),2-proj-3-tuple(v_689),hash(3-proj-3-tuple(v_689),2-proj-2-tuple(v_688))) else fail-any) else fail-any)) in
        {295}let v_691: bitstring = catch-fail((if (not-caught-fail(v_683) && success?(is-true(success?(1-proj-3-tuple(v_683))))) then (if (not-caught-fail(v_688) && success?(is-true(success?(1-proj-2-tuple(v_688))))) then (if not-caught-fail(v_690) then (v_690,2-proj-2-tuple(v_688)) else fail-any) else fail-any) else fail-any)) in
        {296}let v_692: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_691),2-proj-7-tuple(v_668),v_672,4-proj-7-tuple(v_668),5-proj-7-tuple(v_668),6-proj-7-tuple(v_668),7-proj-7-tuple(v_668))) in
        {297}let v_693: bitstring = catch-fail(concat3(v_673,2-proj-3-tuple(v_669),2-proj-2-tuple(v_691))) in
        {298}let (hs_694: handshakestate,re_695: key,message_b_696: bitstring) = (if (not-caught-fail(v_668) && success?(is-true(success?(1-proj-7-tuple(v_668))))) then (if (not-caught-fail(v_669) && success?(is-true(success?(1-proj-3-tuple(v_669))))) then (if not-caught-fail(v_672) then (if not-caught-fail(v_673) then (if not-caught-fail(v_675) then (if not-caught-fail(v_682) then (if (not-caught-fail(v_691) && success?(is-true(success?(1-proj-2-tuple(v_691))))) then (if not-caught-fail(v_692) then (if not-caught-fail(v_693) then (v_692,5-proj-7-tuple(v_668),v_693) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {299}event SendMsg(me_634,them_633,stage_b,msg_b(me_634,them_633),true);
        {300}insert statestore(me_634,them_633,statepack_c(hs_694));
        {301}out(pub, message_b_696)
    ) | (
        {321}get statestore(=me_634,=them_633,statepack_c(hs_697: handshakestate)) in
        {303}in(pub, message_c_698: bitstring);
        {304}let v_699: bitstring = catch-fail(handshakestateunpack(hs_697)) in
        {305}let v_700: bitstring = catch-fail(deconcat3(message_c_698)) in
        {306}let v_701: bool = catch-fail(true) in
        {307}let v_702: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_699))) in
        {308}let v_703: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_702))) in
        {309}let v_704: aead = catch-fail(decrypt(1-proj-2-tuple(v_703),2-proj-2-tuple(v_703),3-proj-3-tuple(v_702),3-proj-3-tuple(v_700))) in
        {310}let v_705: bitstring = catch-fail(aeadunpack(v_704)) in
        {311}let v_706: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_702))) in
        {312}let v_707: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_703))) && success?(1-proj-3-tuple(v_702))) then (if (not-caught-fail(v_706) && success?(is-true(success?(1-proj-2-tuple(v_706))))) then cipherstatepack(1-proj-2-tuple(v_706),increment_nonce(2-proj-2-tuple(v_703))) else fail-any) else fail-any)) in
        {313}let v_708: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_700)) && (success?(3-proj-3-tuple(v_702)) && success?(1-proj-3-tuple(v_702)))) then (if (not-caught-fail(v_703) && success?(is-true(success?(1-proj-2-tuple(v_703))))) then (if not-caught-fail(v_704) then (if (not-caught-fail(v_705) && success?(is-true(success?(1-proj-3-tuple(v_705))))) then (if not-caught-fail(v_707) then (v_707,3-proj-3-tuple(v_705),1-proj-3-tuple(v_705)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {314}let v_709: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_708),2-proj-3-tuple(v_702),3-proj-3-tuple(v_702)))) in
        {315}let v_710: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_700)) && success?(symmetricstatepack(1-proj-3-tuple(v_708),2-proj-3-tuple(v_702),3-proj-3-tuple(v_702)))) then (if (not-caught-fail(v_709) && success?(is-true(success?(1-proj-3-tuple(v_709))))) then symmetricstatepack(1-proj-3-tuple(v_709),2-proj-3-tuple(v_709),hash(3-proj-3-tuple(v_709),3-proj-3-tuple(v_700))) else fail-any) else fail-any)) in
        {316}let v_711: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_700)) && success?(1-proj-7-tuple(v_699))) then (if (not-caught-fail(v_702) && success?(is-true(success?(1-proj-3-tuple(v_702))))) then (if (not-caught-fail(v_708) && success?(is-true(success?(1-proj-3-tuple(v_708))))) then (if not-caught-fail(v_710) then (v_710,2-proj-3-tuple(v_708),3-proj-3-tuple(v_708)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {317}let v_712: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_711),2-proj-7-tuple(v_699),3-proj-7-tuple(v_699),4-proj-7-tuple(v_699),5-proj-7-tuple(v_699),6-proj-7-tuple(v_699),7-proj-7-tuple(v_699))) in
        {318}let (hs_713: handshakestate,re_714: key,plaintext_c: bitstring,valid_715: bool) = (if (not-caught-fail(v_699) && success?(is-true(success?(1-proj-7-tuple(v_699))))) then (if (not-caught-fail(v_700) && success?(is-true(success?(1-proj-3-tuple(v_700))))) then (if not-caught-fail(v_701) then (if (not-caught-fail(v_711) && success?(is-true(success?(1-proj-3-tuple(v_711))))) then (if (v_701 && 3-proj-3-tuple(v_711)) then (if not-caught-fail(v_712) then (v_712,getpublickey(3-proj-7-tuple(v_699)),2-proj-3-tuple(v_711),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {319}event RecvMsg(me_634,them_633,stage_c,plaintext_c,valid_715);
        {320}insert statestore(me_634,them_633,statepack_d(hs_713))
    ) | (
        {347}get statestore(=me_634,=them_633,statepack_d(hs_716: handshakestate)) in
        {322}let v_717: bitstring = catch-fail(handshakestateunpack(hs_716)) in
        {323}let v_718: bitstring = catch-fail((empty,empty,empty)) in
        {324}let v_719: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_717))) in
        {325}let v_720: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_719))) in
        {326}let v_721: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_720),2-proj-2-tuple(v_720),3-proj-3-tuple(v_719),msg_d(me_634,them_633))) in
        {327}let v_722: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_719))) in
        {328}let v_723: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_720))) && success?(1-proj-3-tuple(v_719))) then (if (not-caught-fail(v_722) && success?(is-true(success?(1-proj-2-tuple(v_722))))) then cipherstatepack(1-proj-2-tuple(v_722),increment_nonce(2-proj-2-tuple(v_720))) else fail-any) else fail-any)) in
        {329}let v_724: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_719)) && success?(1-proj-3-tuple(v_719))) then (if (not-caught-fail(v_720) && success?(is-true(success?(1-proj-2-tuple(v_720))))) then (if not-caught-fail(v_721) then (if not-caught-fail(v_723) then (v_723,v_721) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {330}let v_725: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_724),2-proj-3-tuple(v_719),3-proj-3-tuple(v_719)))) in
        {331}let v_726: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_724)) && success?(symmetricstatepack(1-proj-2-tuple(v_724),2-proj-3-tuple(v_719),3-proj-3-tuple(v_719)))) then (if (not-caught-fail(v_725) && success?(is-true(success?(1-proj-3-tuple(v_725))))) then symmetricstatepack(1-proj-3-tuple(v_725),2-proj-3-tuple(v_725),hash(3-proj-3-tuple(v_725),2-proj-2-tuple(v_724))) else fail-any) else fail-any)) in
        {332}let v_727: bitstring = catch-fail((if success?(1-proj-7-tuple(v_717)) then (if (not-caught-fail(v_719) && success?(is-true(success?(1-proj-3-tuple(v_719))))) then (if (not-caught-fail(v_724) && success?(is-true(success?(1-proj-2-tuple(v_724))))) then (if not-caught-fail(v_726) then (v_726,2-proj-2-tuple(v_724)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {333}let v_728: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_727),2-proj-7-tuple(v_717),3-proj-7-tuple(v_717),4-proj-7-tuple(v_717),5-proj-7-tuple(v_717),6-proj-7-tuple(v_717),7-proj-7-tuple(v_717))) in
        {334}let v_729: bitstring = catch-fail(concat3(1-proj-3-tuple(v_718),2-proj-3-tuple(v_718),2-proj-2-tuple(v_727))) in
        {335}let v_730: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_727))) in
        {336}let v_731: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_730),zero)) in
        {337}let v_732: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_730),zero)) in
        {338}let v_733: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_730),zero)) in
        {339}let v_734: bitstring = catch-fail((if success?(2-proj-3-tuple(v_730)) then (if not-caught-fail(v_731) then (if not-caught-fail(v_732) then (if not-caught-fail(v_733) then (v_731,v_732,v_733) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {340}let v_735: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_734)) then cipherstatepack(1-proj-3-tuple(v_734),minnonce) else fail-any)) in
        {341}let v_736: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_734)) then cipherstatepack(2-proj-3-tuple(v_734),minnonce) else fail-any)) in
        {342}let v_737: bitstring = catch-fail((if success?(1-proj-2-tuple(v_727)) then (if (not-caught-fail(v_730) && success?(is-true(success?(1-proj-3-tuple(v_730))))) then (if (not-caught-fail(v_734) && success?(is-true(success?(1-proj-3-tuple(v_734))))) then (if not-caught-fail(v_735) then (if not-caught-fail(v_736) then (1-proj-2-tuple(v_727),v_735,v_736) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {343}let (hs_738: handshakestate,re_739: key,message_d_740: bitstring,cs1_741: cipherstate,cs2_742: cipherstate) = (if (not-caught-fail(v_717) && success?(is-true(success?(1-proj-7-tuple(v_717))))) then (if (not-caught-fail(v_718) && success?(is-true(success?(1-proj-3-tuple(v_718))))) then (if (not-caught-fail(v_727) && success?(is-true(success?(1-proj-2-tuple(v_727))))) then (if not-caught-fail(v_728) then (if not-caught-fail(v_729) then (if (not-caught-fail(v_737) && success?(is-true(success?(1-proj-3-tuple(v_737))))) then (v_728,5-proj-7-tuple(v_717),v_729,2-proj-3-tuple(v_737),3-proj-3-tuple(v_737)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {344}event SendMsg(me_634,them_633,stage_d,msg_d(me_634,them_633),true);
        {345}insert statestore(me_634,them_633,statepack_e(hs_738));
        {346}out(pub, message_d_740)
    ) | (
        {348}event LeakS(phase0,me_634);
        {349}out(pub, key_s(me_634))
    ) | (
        {350}phase 1;
        {351}event LeakS(phase1,me_634);
        {352}out(pub, key_s(me_634))
    )
) | (
    {353}let them_743: principal = charlie in
    {354}let me_744: principal = bob in
    {355}let s_745: keypair = keypairpack(empty,empty) in
    (
        {356}let e_746: keypair = keypairpack(empty,empty) in
        {357}let rs_747: key = empty in
        {358}let re_748: key = empty in
        {359}let v_749: bitstring = catch-fail(hash(somename,empty)) in
        {360}let v_750: key = catch-fail(v_749) in
        {361}let v_751: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {362}let v_752: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_749) then (if not-caught-fail(v_750) then (if not-caught-fail(v_751) then symmetricstatepack(v_751,v_750,v_749) else fail-any) else fail-any) else fail-any))) in
        {363}let v_753: symmetricstate = catch-fail((if success?((if not-caught-fail(v_749) then (if not-caught-fail(v_750) then (if not-caught-fail(v_751) then symmetricstatepack(v_751,v_750,v_749) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_752) && success?(is-true(success?(1-proj-3-tuple(v_752))))) then symmetricstatepack(1-proj-3-tuple(v_752),2-proj-3-tuple(v_752),hash(3-proj-3-tuple(v_752),empty)) else fail-any) else fail-any)) in
        {364}let hs_754: handshakestate = (if not-caught-fail(v_753) then handshakestatepack(v_753,s_745,e_746,rs_747,re_748,empty,false) else fail-any) in
        {365}insert statestore(me_744,them_743,statepack_a(hs_754))
    ) | (
        {387}get statestore(=me_744,=them_743,statepack_a(hs_755: handshakestate)) in
        {366}in(pub, message_a_756: bitstring);
        {367}let v_757: bitstring = catch-fail(handshakestateunpack(hs_755)) in
        {368}let v_758: bitstring = catch-fail(deconcat3(message_a_756)) in
        {369}let v_759: bool = catch-fail(true) in
        {370}let v_760: key = catch-fail(1-proj-3-tuple(v_758)) in
        {371}let v_761: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_757))) in
        {372}let v_762: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_757)) then (if (not-caught-fail(v_761) && success?(is-true(success?(1-proj-3-tuple(v_761))))) then symmetricstatepack(1-proj-3-tuple(v_761),2-proj-3-tuple(v_761),hash(3-proj-3-tuple(v_761),v_760)) else fail-any) else fail-any)) in
        {373}let v_763: bitstring = catch-fail(symmetricstateunpack(v_762)) in
        {374}let v_764: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_763))) in
        {375}let v_765: aead = catch-fail(decrypt(1-proj-2-tuple(v_764),2-proj-2-tuple(v_764),3-proj-3-tuple(v_763),3-proj-3-tuple(v_758))) in
        {376}let v_766: bitstring = catch-fail(aeadunpack(v_765)) in
        {377}let v_767: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_763))) in
        {378}let v_768: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_764))) && success?(1-proj-3-tuple(v_763))) then (if (not-caught-fail(v_767) && success?(is-true(success?(1-proj-2-tuple(v_767))))) then cipherstatepack(1-proj-2-tuple(v_767),increment_nonce(2-proj-2-tuple(v_764))) else fail-any) else fail-any)) in
        {379}let v_769: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_758)) && (success?(3-proj-3-tuple(v_763)) && success?(1-proj-3-tuple(v_763)))) then (if (not-caught-fail(v_764) && success?(is-true(success?(1-proj-2-tuple(v_764))))) then (if not-caught-fail(v_765) then (if (not-caught-fail(v_766) && success?(is-true(success?(1-proj-3-tuple(v_766))))) then (if not-caught-fail(v_768) then (v_768,3-proj-3-tuple(v_766),1-proj-3-tuple(v_766)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {380}let v_770: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_769),2-proj-3-tuple(v_763),3-proj-3-tuple(v_763)))) in
        {381}let v_771: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_758)) && success?(symmetricstatepack(1-proj-3-tuple(v_769),2-proj-3-tuple(v_763),3-proj-3-tuple(v_763)))) then (if (not-caught-fail(v_770) && success?(is-true(success?(1-proj-3-tuple(v_770))))) then symmetricstatepack(1-proj-3-tuple(v_770),2-proj-3-tuple(v_770),hash(3-proj-3-tuple(v_770),3-proj-3-tuple(v_758))) else fail-any) else fail-any)) in
        {382}let v_772: bitstring = catch-fail((if success?(3-proj-3-tuple(v_758)) then (if (not-caught-fail(v_763) && success?(is-true(success?(1-proj-3-tuple(v_763))))) then (if (not-caught-fail(v_769) && success?(is-true(success?(1-proj-3-tuple(v_769))))) then (if not-caught-fail(v_771) then (v_771,2-proj-3-tuple(v_769),3-proj-3-tuple(v_769)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {383}let v_773: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_772),2-proj-7-tuple(v_757),3-proj-7-tuple(v_757),4-proj-7-tuple(v_757),v_760,6-proj-7-tuple(v_757),7-proj-7-tuple(v_757))) in
        {384}let (hs_774: handshakestate,re_775: key,plaintext_a_776: bitstring,valid_777: bool) = (if (not-caught-fail(v_757) && success?(is-true(success?(1-proj-7-tuple(v_757))))) then (if (not-caught-fail(v_758) && success?(is-true(success?(1-proj-3-tuple(v_758))))) then (if not-caught-fail(v_759) then (if not-caught-fail(v_760) then (if not-caught-fail(v_762) then (if (not-caught-fail(v_772) && success?(is-true(success?(1-proj-3-tuple(v_772))))) then (if (v_759 && 3-proj-3-tuple(v_772)) then (if not-caught-fail(v_773) then (v_773,getpublickey(3-proj-7-tuple(v_757)),2-proj-3-tuple(v_772),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {385}event RecvMsg(me_744,them_743,stage_a,plaintext_a_776,valid_777);
        {386}insert statestore(me_744,them_743,statepack_b(hs_774))
    ) | (
        {418}get statestore(=me_744,=them_743,statepack_b(hs_778: handshakestate)) in
        {388}let v_779: bitstring = catch-fail(handshakestateunpack(hs_778)) in
        {389}let v_780: bitstring = catch-fail((empty,empty,empty)) in
        {390}new key_e_781[me_744,them_743]: key;
        {391}let v_782: key = catch-fail(dhexp(key_e_781,g)) in
        {392}let v_783: keypair = catch-fail((if not-caught-fail(v_782) then keypairpack(v_782,key_e_781) else fail-any)) in
        {393}let v_784: bitstring = catch-fail(getpublickey(v_783)) in
        {394}let v_785: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_779))) in
        {395}let v_786: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_779)) then (if (not-caught-fail(v_785) && success?(is-true(success?(1-proj-3-tuple(v_785))))) then symmetricstatepack(1-proj-3-tuple(v_785),2-proj-3-tuple(v_785),hash(3-proj-3-tuple(v_785),v_784)) else fail-any) else fail-any)) in
        {396}let v_787: bitstring = catch-fail(keypairunpack(v_783)) in
        {397}let v_788: bitstring = catch-fail(symmetricstateunpack(v_786)) in
        {398}let v_789: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_788),(if success?(5-proj-7-tuple(v_779)) then (if (not-caught-fail(v_787) && success?(is-true(success?(1-proj-2-tuple(v_787))))) then dhexp(2-proj-2-tuple(v_787),5-proj-7-tuple(v_779)) else fail-any) else fail-any))) in
        {399}let v_790: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_788),(if success?(5-proj-7-tuple(v_779)) then (if (not-caught-fail(v_787) && success?(is-true(success?(1-proj-2-tuple(v_787))))) then dhexp(2-proj-2-tuple(v_787),5-proj-7-tuple(v_779)) else fail-any) else fail-any))) in
        {400}let v_791: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_788),(if success?(5-proj-7-tuple(v_779)) then (if (not-caught-fail(v_787) && success?(is-true(success?(1-proj-2-tuple(v_787))))) then dhexp(2-proj-2-tuple(v_787),5-proj-7-tuple(v_779)) else fail-any) else fail-any))) in
        {401}let v_792: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_779)) then (if (not-caught-fail(v_787) && success?(is-true(success?(1-proj-2-tuple(v_787))))) then dhexp(2-proj-2-tuple(v_787),5-proj-7-tuple(v_779)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_788))) then (if not-caught-fail(v_789) then (if not-caught-fail(v_790) then (if not-caught-fail(v_791) then (v_789,v_790,v_791) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {402}let v_793: symmetricstate = catch-fail((if success?((if success?(5-proj-7-tuple(v_779)) then (if (not-caught-fail(v_787) && success?(is-true(success?(1-proj-2-tuple(v_787))))) then dhexp(2-proj-2-tuple(v_787),5-proj-7-tuple(v_779)) else fail-any) else fail-any)) then (if (not-caught-fail(v_788) && success?(is-true(success?(1-proj-3-tuple(v_788))))) then (if (not-caught-fail(v_792) && success?(is-true(success?(1-proj-3-tuple(v_792))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_792)) then cipherstatepack(2-proj-3-tuple(v_792),minnonce) else fail-any),1-proj-3-tuple(v_792),3-proj-3-tuple(v_788)) else fail-any) else fail-any) else fail-any)) in
        {403}let v_794: bitstring = catch-fail(symmetricstateunpack(v_793)) in
        {404}let v_795: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_794))) in
        {405}let v_796: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_795),2-proj-2-tuple(v_795),3-proj-3-tuple(v_794),msg_b(me_744,them_743))) in
        {406}let v_797: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_794))) in
        {407}let v_798: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_795))) && success?(1-proj-3-tuple(v_794))) then (if (not-caught-fail(v_797) && success?(is-true(success?(1-proj-2-tuple(v_797))))) then cipherstatepack(1-proj-2-tuple(v_797),increment_nonce(2-proj-2-tuple(v_795))) else fail-any) else fail-any)) in
        {408}let v_799: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_794)) && success?(1-proj-3-tuple(v_794))) then (if (not-caught-fail(v_795) && success?(is-true(success?(1-proj-2-tuple(v_795))))) then (if not-caught-fail(v_796) then (if not-caught-fail(v_798) then (v_798,v_796) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {409}let v_800: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_799),2-proj-3-tuple(v_794),3-proj-3-tuple(v_794)))) in
        {410}let v_801: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_799)) && success?(symmetricstatepack(1-proj-2-tuple(v_799),2-proj-3-tuple(v_794),3-proj-3-tuple(v_794)))) then (if (not-caught-fail(v_800) && success?(is-true(success?(1-proj-3-tuple(v_800))))) then symmetricstatepack(1-proj-3-tuple(v_800),2-proj-3-tuple(v_800),hash(3-proj-3-tuple(v_800),2-proj-2-tuple(v_799))) else fail-any) else fail-any)) in
        {411}let v_802: bitstring = catch-fail((if (not-caught-fail(v_794) && success?(is-true(success?(1-proj-3-tuple(v_794))))) then (if (not-caught-fail(v_799) && success?(is-true(success?(1-proj-2-tuple(v_799))))) then (if not-caught-fail(v_801) then (v_801,2-proj-2-tuple(v_799)) else fail-any) else fail-any) else fail-any)) in
        {412}let v_803: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_802),2-proj-7-tuple(v_779),v_783,4-proj-7-tuple(v_779),5-proj-7-tuple(v_779),6-proj-7-tuple(v_779),7-proj-7-tuple(v_779))) in
        {413}let v_804: bitstring = catch-fail(concat3(v_784,2-proj-3-tuple(v_780),2-proj-2-tuple(v_802))) in
        {414}let (hs_805: handshakestate,re_806: key,message_b_807: bitstring) = (if (not-caught-fail(v_779) && success?(is-true(success?(1-proj-7-tuple(v_779))))) then (if (not-caught-fail(v_780) && success?(is-true(success?(1-proj-3-tuple(v_780))))) then (if not-caught-fail(v_783) then (if not-caught-fail(v_784) then (if not-caught-fail(v_786) then (if not-caught-fail(v_793) then (if (not-caught-fail(v_802) && success?(is-true(success?(1-proj-2-tuple(v_802))))) then (if not-caught-fail(v_803) then (if not-caught-fail(v_804) then (v_803,5-proj-7-tuple(v_779),v_804) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {415}event SendMsg(me_744,them_743,stage_b,msg_b(me_744,them_743),true);
        {416}insert statestore(me_744,them_743,statepack_c(hs_805));
        {417}out(pub, message_b_807)
    ) | (
        {437}get statestore(=me_744,=them_743,statepack_c(hs_808: handshakestate)) in
        {419}in(pub, message_c_809: bitstring);
        {420}let v_810: bitstring = catch-fail(handshakestateunpack(hs_808)) in
        {421}let v_811: bitstring = catch-fail(deconcat3(message_c_809)) in
        {422}let v_812: bool = catch-fail(true) in
        {423}let v_813: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_810))) in
        {424}let v_814: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_813))) in
        {425}let v_815: aead = catch-fail(decrypt(1-proj-2-tuple(v_814),2-proj-2-tuple(v_814),3-proj-3-tuple(v_813),3-proj-3-tuple(v_811))) in
        {426}let v_816: bitstring = catch-fail(aeadunpack(v_815)) in
        {427}let v_817: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_813))) in
        {428}let v_818: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_814))) && success?(1-proj-3-tuple(v_813))) then (if (not-caught-fail(v_817) && success?(is-true(success?(1-proj-2-tuple(v_817))))) then cipherstatepack(1-proj-2-tuple(v_817),increment_nonce(2-proj-2-tuple(v_814))) else fail-any) else fail-any)) in
        {429}let v_819: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_811)) && (success?(3-proj-3-tuple(v_813)) && success?(1-proj-3-tuple(v_813)))) then (if (not-caught-fail(v_814) && success?(is-true(success?(1-proj-2-tuple(v_814))))) then (if not-caught-fail(v_815) then (if (not-caught-fail(v_816) && success?(is-true(success?(1-proj-3-tuple(v_816))))) then (if not-caught-fail(v_818) then (v_818,3-proj-3-tuple(v_816),1-proj-3-tuple(v_816)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {430}let v_820: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_819),2-proj-3-tuple(v_813),3-proj-3-tuple(v_813)))) in
        {431}let v_821: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_811)) && success?(symmetricstatepack(1-proj-3-tuple(v_819),2-proj-3-tuple(v_813),3-proj-3-tuple(v_813)))) then (if (not-caught-fail(v_820) && success?(is-true(success?(1-proj-3-tuple(v_820))))) then symmetricstatepack(1-proj-3-tuple(v_820),2-proj-3-tuple(v_820),hash(3-proj-3-tuple(v_820),3-proj-3-tuple(v_811))) else fail-any) else fail-any)) in
        {432}let v_822: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_811)) && success?(1-proj-7-tuple(v_810))) then (if (not-caught-fail(v_813) && success?(is-true(success?(1-proj-3-tuple(v_813))))) then (if (not-caught-fail(v_819) && success?(is-true(success?(1-proj-3-tuple(v_819))))) then (if not-caught-fail(v_821) then (v_821,2-proj-3-tuple(v_819),3-proj-3-tuple(v_819)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {433}let v_823: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_822),2-proj-7-tuple(v_810),3-proj-7-tuple(v_810),4-proj-7-tuple(v_810),5-proj-7-tuple(v_810),6-proj-7-tuple(v_810),7-proj-7-tuple(v_810))) in
        {434}let (hs_824: handshakestate,re_825: key,plaintext_c_826: bitstring,valid_827: bool) = (if (not-caught-fail(v_810) && success?(is-true(success?(1-proj-7-tuple(v_810))))) then (if (not-caught-fail(v_811) && success?(is-true(success?(1-proj-3-tuple(v_811))))) then (if not-caught-fail(v_812) then (if (not-caught-fail(v_822) && success?(is-true(success?(1-proj-3-tuple(v_822))))) then (if (v_812 && 3-proj-3-tuple(v_822)) then (if not-caught-fail(v_823) then (v_823,getpublickey(3-proj-7-tuple(v_810)),2-proj-3-tuple(v_822),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {435}event RecvMsg(me_744,them_743,stage_c,plaintext_c_826,valid_827);
        {436}insert statestore(me_744,them_743,statepack_d(hs_824))
    ) | (
        {463}get statestore(=me_744,=them_743,statepack_d(hs_828: handshakestate)) in
        {438}let v_829: bitstring = catch-fail(handshakestateunpack(hs_828)) in
        {439}let v_830: bitstring = catch-fail((empty,empty,empty)) in
        {440}let v_831: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_829))) in
        {441}let v_832: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_831))) in
        {442}let v_833: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_832),2-proj-2-tuple(v_832),3-proj-3-tuple(v_831),msg_d(me_744,them_743))) in
        {443}let v_834: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_831))) in
        {444}let v_835: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_832))) && success?(1-proj-3-tuple(v_831))) then (if (not-caught-fail(v_834) && success?(is-true(success?(1-proj-2-tuple(v_834))))) then cipherstatepack(1-proj-2-tuple(v_834),increment_nonce(2-proj-2-tuple(v_832))) else fail-any) else fail-any)) in
        {445}let v_836: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_831)) && success?(1-proj-3-tuple(v_831))) then (if (not-caught-fail(v_832) && success?(is-true(success?(1-proj-2-tuple(v_832))))) then (if not-caught-fail(v_833) then (if not-caught-fail(v_835) then (v_835,v_833) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {446}let v_837: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_836),2-proj-3-tuple(v_831),3-proj-3-tuple(v_831)))) in
        {447}let v_838: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_836)) && success?(symmetricstatepack(1-proj-2-tuple(v_836),2-proj-3-tuple(v_831),3-proj-3-tuple(v_831)))) then (if (not-caught-fail(v_837) && success?(is-true(success?(1-proj-3-tuple(v_837))))) then symmetricstatepack(1-proj-3-tuple(v_837),2-proj-3-tuple(v_837),hash(3-proj-3-tuple(v_837),2-proj-2-tuple(v_836))) else fail-any) else fail-any)) in
        {448}let v_839: bitstring = catch-fail((if success?(1-proj-7-tuple(v_829)) then (if (not-caught-fail(v_831) && success?(is-true(success?(1-proj-3-tuple(v_831))))) then (if (not-caught-fail(v_836) && success?(is-true(success?(1-proj-2-tuple(v_836))))) then (if not-caught-fail(v_838) then (v_838,2-proj-2-tuple(v_836)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {449}let v_840: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_839),2-proj-7-tuple(v_829),3-proj-7-tuple(v_829),4-proj-7-tuple(v_829),5-proj-7-tuple(v_829),6-proj-7-tuple(v_829),7-proj-7-tuple(v_829))) in
        {450}let v_841: bitstring = catch-fail(concat3(1-proj-3-tuple(v_830),2-proj-3-tuple(v_830),2-proj-2-tuple(v_839))) in
        {451}let v_842: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_839))) in
        {452}let v_843: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_842),zero)) in
        {453}let v_844: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_842),zero)) in
        {454}let v_845: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_842),zero)) in
        {455}let v_846: bitstring = catch-fail((if success?(2-proj-3-tuple(v_842)) then (if not-caught-fail(v_843) then (if not-caught-fail(v_844) then (if not-caught-fail(v_845) then (v_843,v_844,v_845) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {456}let v_847: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_846)) then cipherstatepack(1-proj-3-tuple(v_846),minnonce) else fail-any)) in
        {457}let v_848: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_846)) then cipherstatepack(2-proj-3-tuple(v_846),minnonce) else fail-any)) in
        {458}let v_849: bitstring = catch-fail((if success?(1-proj-2-tuple(v_839)) then (if (not-caught-fail(v_842) && success?(is-true(success?(1-proj-3-tuple(v_842))))) then (if (not-caught-fail(v_846) && success?(is-true(success?(1-proj-3-tuple(v_846))))) then (if not-caught-fail(v_847) then (if not-caught-fail(v_848) then (1-proj-2-tuple(v_839),v_847,v_848) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {459}let (hs_850: handshakestate,re_851: key,message_d_852: bitstring,cs1_853: cipherstate,cs2_854: cipherstate) = (if (not-caught-fail(v_829) && success?(is-true(success?(1-proj-7-tuple(v_829))))) then (if (not-caught-fail(v_830) && success?(is-true(success?(1-proj-3-tuple(v_830))))) then (if (not-caught-fail(v_839) && success?(is-true(success?(1-proj-2-tuple(v_839))))) then (if not-caught-fail(v_840) then (if not-caught-fail(v_841) then (if (not-caught-fail(v_849) && success?(is-true(success?(1-proj-3-tuple(v_849))))) then (v_840,5-proj-7-tuple(v_829),v_841,2-proj-3-tuple(v_849),3-proj-3-tuple(v_849)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {460}event SendMsg(me_744,them_743,stage_d,msg_d(me_744,them_743),true);
        {461}insert statestore(me_744,them_743,statepack_e(hs_850));
        {462}out(pub, message_d_852)
    ) | (
        {464}event LeakS(phase0,me_744);
        {465}out(pub, key_s(me_744))
    ) | (
        {466}phase 1;
        {467}event LeakS(phase1,me_744);
        {468}out(pub, key_s(me_744))
    )
)

-- Query event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)); event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,c_935,stage_a,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,c_935,stage_a,m,true)) || event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)) || event(LeakS(phase0,alice)); not attacker_p1(msg_a(alice,bob)); attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob)); attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice))); attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true)); event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,c_935,stage_b,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,c_935,stage_b,m,true)) || event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true)) || event(LeakS(phase0,bob)); not attacker_p1(msg_b(bob,alice)); attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice)); attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob))); attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true)); event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,c_935,stage_c,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,c_935,stage_c,m,true)) || event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true)) || event(LeakS(phase0,alice)); not attacker_p1(msg_c(alice,bob)); attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob)); attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice))); attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true)); event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,c_935,stage_d,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,c_935,stage_d,m,true)) || event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true)) || event(LeakS(phase0,bob)); not attacker_p1(msg_d(bob,alice)); attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice)); attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob))); attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice))
Completing...
200 rules inserted. The rule base contains 200 rules. 121 rules in the queue.
400 rules inserted. The rule base contains 391 rules. 98 rules in the queue.
600 rules inserted. The rule base contains 573 rules. 102 rules in the queue.
800 rules inserted. The rule base contains 728 rules. 97 rules in the queue.
1000 rules inserted. The rule base contains 873 rules. 105 rules in the queue.
1200 rules inserted. The rule base contains 1029 rules. 138 rules in the queue.
1400 rules inserted. The rule base contains 1135 rules. 127 rules in the queue.
1600 rules inserted. The rule base contains 1194 rules. 111 rules in the queue.
1800 rules inserted. The rule base contains 1320 rules. 118 rules in the queue.
2000 rules inserted. The rule base contains 1440 rules. 104 rules in the queue.
2200 rules inserted. The rule base contains 1525 rules. 87 rules in the queue.
2400 rules inserted. The rule base contains 1610 rules. 46 rules in the queue.
Starting query event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true))
goal reachable: begin(SendMsg(alice,charlie,stage_a,msg_a(alice,charlie),true)) -> end(RecvMsg(bob,alice,stage_a,msg_a(alice,charlie),true))
Abbreviations:
key_e_12184557 = key_e_536[me_522 = alice,them_521 = charlie,!1 = @sid_12184539]

1. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {249}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

2. The entry statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {132}.
table(statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {156}.
The event SendMsg(alice,charlie,stage_a,msg_a(alice,charlie),true) may be executed at {153}.
So the message concat3(dhexp(key_e_12184557,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12184557,g)),msg_a(alice,charlie))) may be sent on channel pub at output {155}.
mess(pub,concat3(dhexp(key_e_12184557,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12184557,g)),msg_a(alice,charlie)))).

4. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 1 may be read at get {271}.
The message concat3(dhexp(key_e_12184557,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12184557,g)),msg_a(alice,charlie))) that may be sent on channel pub by 3 may be received at input {250}.
We have dhexp(key_e_12184557,g) <> caught-fail.
So event RecvMsg(bob,alice,stage_a,msg_a(alice,charlie),true) may be executed at {269}.
end(RecvMsg(bob,alice,stage_a,msg_a(alice,charlie),true)).


RESULT event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)) cannot be proved.
Starting query event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,c_935,stage_a,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(bob,alice,stage_a,msg_a(alice,bob),true))
goal reachable: begin(SendMsg(alice,charlie,stage_a,msg_a(alice,charlie),true)) -> end(RecvMsg(bob,alice,stage_a,msg_a(alice,charlie),true))
RESULT event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,c_935,stage_a,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,c_935,stage_a,m,true)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(bob,alice,stage_a,msg_a(alice,bob),true))
goal reachable: begin(SendMsg(alice,charlie,stage_a,msg_a(alice,charlie),true)) -> end(RecvMsg(bob,alice,stage_a,msg_a(alice,charlie),true))
RESULT event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,c_935,stage_a,m,true)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,charlie,stage_a,msg_a(alice,charlie),true)) -> end(RecvMsg(bob,alice,stage_a,msg_a(alice,charlie),true))
Abbreviations:
key_e_12184595 = key_e_536[me_522 = alice,them_521 = charlie,!1 = @sid_12184577]

1. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {249}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

2. The entry statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {132}.
table(statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {156}.
The event SendMsg(alice,charlie,stage_a,msg_a(alice,charlie),true) may be executed at {153}.
So the message concat3(dhexp(key_e_12184595,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12184595,g)),msg_a(alice,charlie))) may be sent on channel pub at output {155}.
mess(pub,concat3(dhexp(key_e_12184595,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12184595,g)),msg_a(alice,charlie)))).

4. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 1 may be read at get {271}.
The message concat3(dhexp(key_e_12184595,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12184595,g)),msg_a(alice,charlie))) that may be sent on channel pub by 3 may be received at input {250}.
We have dhexp(key_e_12184595,g) <> caught-fail.
So event RecvMsg(bob,alice,stage_a,msg_a(alice,charlie),true) may be executed at {269}.
end(RecvMsg(bob,alice,stage_a,msg_a(alice,charlie),true)).


RESULT event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) cannot be proved.
Starting query event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,charlie,stage_a,msg_a(alice,charlie),true)) -> end(RecvMsg(bob,alice,stage_a,msg_a(alice,charlie),true))
Abbreviations:
key_e_12184627 = key_e_536[me_522 = alice,them_521 = charlie,!1 = @sid_12184609]

1. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {249}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

2. The entry statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {132}.
table(statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {156}.
The event SendMsg(alice,charlie,stage_a,msg_a(alice,charlie),true) may be executed at {153}.
So the message concat3(dhexp(key_e_12184627,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12184627,g)),msg_a(alice,charlie))) may be sent on channel pub at output {155}.
mess(pub,concat3(dhexp(key_e_12184627,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12184627,g)),msg_a(alice,charlie)))).

4. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 1 may be read at get {271}.
The message concat3(dhexp(key_e_12184627,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12184627,g)),msg_a(alice,charlie))) that may be sent on channel pub by 3 may be received at input {250}.
We have dhexp(key_e_12184627,g) <> caught-fail.
So event RecvMsg(bob,alice,stage_a,msg_a(alice,charlie),true) may be executed at {269}.
end(RecvMsg(bob,alice,stage_a,msg_a(alice,charlie),true)).


RESULT event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)) || event(LeakS(phase0,alice)) cannot be proved.
Starting query not attacker_p1(msg_a(alice,bob))
goal reachable: begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> attacker_p1(msg_a(alice,bob))
Abbreviations:
key_12184677 = key_e[me = alice,them = bob,!1 = @sid_12184663]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the message concat3(dhexp(key_12184677,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184677,g)),msg_a(alice,bob))) may be sent on channel pub at output {38}.
mess(pub,concat3(dhexp(key_12184677,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184677,g)),msg_a(alice,bob)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(dhexp(key_12184677,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184677,g)),msg_a(alice,bob))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_12184677,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184677,g)),msg_a(alice,bob))) by listening on this channel.
attacker(concat3(dhexp(key_12184677,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184677,g)),msg_a(alice,bob)))).

5. By 4, the attacker may know concat3(dhexp(key_12184677,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184677,g)),msg_a(alice,bob))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184677,g)),msg_a(alice,bob)).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184677,g)),msg_a(alice,bob))).

6. By 5, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184677,g)),msg_a(alice,bob)).
So the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184677,g)),msg_a(alice,bob)) in phase 1.
attacker_p1(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184677,g)),msg_a(alice,bob))).

7. By 4, the attacker may know concat3(dhexp(key_12184677,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184677,g)),msg_a(alice,bob))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_12184677,g).
attacker(dhexp(key_12184677,g)).

8. Using the function empty the attacker may obtain empty.
attacker(empty).

9. Using the function somename the attacker may obtain somename.
attacker(somename).

10. By 9, the attacker may know somename.
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

11. By 10, the attacker may know hash(somename,empty).
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

12. By 11, the attacker may know hash(hash(somename,empty),empty).
By 7, the attacker may know dhexp(key_12184677,g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_12184677,g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_12184677,g))).

13. By 12, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_12184677,g)).
So the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_12184677,g)) in phase 1.
attacker_p1(hash(hash(hash(somename,empty),empty),dhexp(key_12184677,g))).

14. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

15. Using the function empty the attacker may obtain empty in phase 1.
attacker_p1(empty).

16. By 15, the attacker may know empty in phase 1.
By 14, the attacker may know minnonce in phase 1.
By 13, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_12184677,g)) in phase 1.
By 6, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184677,g)),msg_a(alice,bob)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_12184677,g)),msg_a(alice,bob)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_12184677,g)),msg_a(alice,bob))).

17. By 16, the attacker may know aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_12184677,g)),msg_a(alice,bob)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob) in phase 1.
attacker_p1(msg_a(alice,bob)).


RESULT not attacker_p1(msg_a(alice,bob)) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob))
goal reachable: begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> attacker_p1(msg_a(alice,bob))
Abbreviations:
key_12184727 = key_e[me = alice,them = bob,!1 = @sid_12184713]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the message concat3(dhexp(key_12184727,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184727,g)),msg_a(alice,bob))) may be sent on channel pub at output {38}.
mess(pub,concat3(dhexp(key_12184727,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184727,g)),msg_a(alice,bob)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(dhexp(key_12184727,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184727,g)),msg_a(alice,bob))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_12184727,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184727,g)),msg_a(alice,bob))) by listening on this channel.
attacker(concat3(dhexp(key_12184727,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184727,g)),msg_a(alice,bob)))).

5. By 4, the attacker may know concat3(dhexp(key_12184727,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184727,g)),msg_a(alice,bob))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184727,g)),msg_a(alice,bob)).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184727,g)),msg_a(alice,bob))).

6. By 5, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184727,g)),msg_a(alice,bob)).
So the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184727,g)),msg_a(alice,bob)) in phase 1.
attacker_p1(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184727,g)),msg_a(alice,bob))).

7. By 4, the attacker may know concat3(dhexp(key_12184727,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184727,g)),msg_a(alice,bob))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_12184727,g).
attacker(dhexp(key_12184727,g)).

8. Using the function empty the attacker may obtain empty.
attacker(empty).

9. Using the function somename the attacker may obtain somename.
attacker(somename).

10. By 9, the attacker may know somename.
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

11. By 10, the attacker may know hash(somename,empty).
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

12. By 11, the attacker may know hash(hash(somename,empty),empty).
By 7, the attacker may know dhexp(key_12184727,g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_12184727,g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_12184727,g))).

13. By 12, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_12184727,g)).
So the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_12184727,g)) in phase 1.
attacker_p1(hash(hash(hash(somename,empty),empty),dhexp(key_12184727,g))).

14. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

15. Using the function empty the attacker may obtain empty in phase 1.
attacker_p1(empty).

16. By 15, the attacker may know empty in phase 1.
By 14, the attacker may know minnonce in phase 1.
By 13, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_12184727,g)) in phase 1.
By 6, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184727,g)),msg_a(alice,bob)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_12184727,g)),msg_a(alice,bob)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_12184727,g)),msg_a(alice,bob))).

17. By 16, the attacker may know aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_12184727,g)),msg_a(alice,bob)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob) in phase 1.
attacker_p1(msg_a(alice,bob)).


RESULT attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob)) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice)))
goal reachable: begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> attacker_p1(msg_a(alice,bob))
Abbreviations:
key_12184778 = key_e[me = alice,them = bob,!1 = @sid_12184764]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the message concat3(dhexp(key_12184778,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184778,g)),msg_a(alice,bob))) may be sent on channel pub at output {38}.
mess(pub,concat3(dhexp(key_12184778,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184778,g)),msg_a(alice,bob)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(dhexp(key_12184778,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184778,g)),msg_a(alice,bob))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_12184778,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184778,g)),msg_a(alice,bob))) by listening on this channel.
attacker(concat3(dhexp(key_12184778,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184778,g)),msg_a(alice,bob)))).

5. By 4, the attacker may know concat3(dhexp(key_12184778,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184778,g)),msg_a(alice,bob))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184778,g)),msg_a(alice,bob)).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184778,g)),msg_a(alice,bob))).

6. By 5, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184778,g)),msg_a(alice,bob)).
So the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184778,g)),msg_a(alice,bob)) in phase 1.
attacker_p1(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184778,g)),msg_a(alice,bob))).

7. By 4, the attacker may know concat3(dhexp(key_12184778,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184778,g)),msg_a(alice,bob))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_12184778,g).
attacker(dhexp(key_12184778,g)).

8. Using the function empty the attacker may obtain empty.
attacker(empty).

9. Using the function somename the attacker may obtain somename.
attacker(somename).

10. By 9, the attacker may know somename.
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

11. By 10, the attacker may know hash(somename,empty).
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

12. By 11, the attacker may know hash(hash(somename,empty),empty).
By 7, the attacker may know dhexp(key_12184778,g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_12184778,g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_12184778,g))).

13. By 12, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_12184778,g)).
So the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_12184778,g)) in phase 1.
attacker_p1(hash(hash(hash(somename,empty),empty),dhexp(key_12184778,g))).

14. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

15. Using the function empty the attacker may obtain empty in phase 1.
attacker_p1(empty).

16. By 15, the attacker may know empty in phase 1.
By 14, the attacker may know minnonce in phase 1.
By 13, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_12184778,g)) in phase 1.
By 6, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184778,g)),msg_a(alice,bob)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_12184778,g)),msg_a(alice,bob)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_12184778,g)),msg_a(alice,bob))).

17. By 16, the attacker may know aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_12184778,g)),msg_a(alice,bob)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob) in phase 1.
attacker_p1(msg_a(alice,bob)).


RESULT attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice))) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> attacker_p1(msg_a(alice,bob))
Abbreviations:
key_12184828 = key_e[me = alice,them = bob,!1 = @sid_12184814]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the message concat3(dhexp(key_12184828,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184828,g)),msg_a(alice,bob))) may be sent on channel pub at output {38}.
mess(pub,concat3(dhexp(key_12184828,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184828,g)),msg_a(alice,bob)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(dhexp(key_12184828,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184828,g)),msg_a(alice,bob))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_12184828,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184828,g)),msg_a(alice,bob))) by listening on this channel.
attacker(concat3(dhexp(key_12184828,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184828,g)),msg_a(alice,bob)))).

5. By 4, the attacker may know concat3(dhexp(key_12184828,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184828,g)),msg_a(alice,bob))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184828,g)),msg_a(alice,bob)).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184828,g)),msg_a(alice,bob))).

6. By 5, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184828,g)),msg_a(alice,bob)).
So the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184828,g)),msg_a(alice,bob)) in phase 1.
attacker_p1(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184828,g)),msg_a(alice,bob))).

7. By 4, the attacker may know concat3(dhexp(key_12184828,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184828,g)),msg_a(alice,bob))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_12184828,g).
attacker(dhexp(key_12184828,g)).

8. Using the function empty the attacker may obtain empty.
attacker(empty).

9. Using the function somename the attacker may obtain somename.
attacker(somename).

10. By 9, the attacker may know somename.
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

11. By 10, the attacker may know hash(somename,empty).
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

12. By 11, the attacker may know hash(hash(somename,empty),empty).
By 7, the attacker may know dhexp(key_12184828,g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_12184828,g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_12184828,g))).

13. By 12, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_12184828,g)).
So the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_12184828,g)) in phase 1.
attacker_p1(hash(hash(hash(somename,empty),empty),dhexp(key_12184828,g))).

14. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

15. Using the function empty the attacker may obtain empty in phase 1.
attacker_p1(empty).

16. By 15, the attacker may know empty in phase 1.
By 14, the attacker may know minnonce in phase 1.
By 13, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_12184828,g)) in phase 1.
By 6, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184828,g)),msg_a(alice,bob)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_12184828,g)),msg_a(alice,bob)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_12184828,g)),msg_a(alice,bob))).

17. By 16, the attacker may know aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_12184828,g)),msg_a(alice,bob)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob) in phase 1.
attacker_p1(msg_a(alice,bob)).


RESULT attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true))
goal reachable: begin(SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_b,msg_b(bob,charlie),true))
Abbreviations:
key_e_12184896 = key_e_781[me_744 = bob,them_743 = charlie,!1 = @sid_12184880]
key_12184897 = key_e[me = alice,them = bob,!1 = @sid_12184854]

1. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 1 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12184897,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184897,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_12184897,g),key_12184897),empty,empty,empty,true))) may be inserted in a table at insert {37}.
table(statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12184897,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184897,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_12184897,g),key_12184897),empty,empty,empty,true)))).

3. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {365}.
table(statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

4. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

5. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 4 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the message concat3(dhexp(key_12184897,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184897,g)),msg_a(alice,bob))) may be sent on channel pub at output {38}.
mess(pub,concat3(dhexp(key_12184897,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184897,g)),msg_a(alice,bob)))).

6. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 3 may be read at get {387}.
The message concat3(dhexp(key_12184897,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184897,g)),msg_a(alice,bob))) that may be sent on channel pub by 5 may be received at input {366}.
We have dhexp(key_12184897,g) <> caught-fail.
So the entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12184897,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184897,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_12184897,g),empty,false))) may be inserted in a table at insert {386}.
table(statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12184897,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184897,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_12184897,g),empty,false)))).

7. The entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12184897,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184897,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_12184897,g),empty,false))) that may be in a table by 6 may be read at get {418}.
The event SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true) may be executed at {415}.
So the message concat3(dhexp(key_e_12184896,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12184897,dhexp(key_e_12184896,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12184897,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184897,g)),msg_a(alice,bob))),dhexp(key_e_12184896,g)),msg_b(bob,charlie))) may be sent on channel pub at output {417}.
mess(pub,concat3(dhexp(key_e_12184896,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12184897,dhexp(key_e_12184896,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12184897,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184897,g)),msg_a(alice,bob))),dhexp(key_e_12184896,g)),msg_b(bob,charlie)))).

8. The entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12184897,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184897,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_12184897,g),key_12184897),empty,empty,empty,true))) that may be in a table by 2 may be read at get {68}.
The message concat3(dhexp(key_e_12184896,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12184897,dhexp(key_e_12184896,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12184897,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184897,g)),msg_a(alice,bob))),dhexp(key_e_12184896,g)),msg_b(bob,charlie))) that may be sent on channel pub by 7 may be received at input {40}.
We have dhexp(key_e_12184896,g) <> caught-fail.
So event RecvMsg(alice,bob,stage_b,msg_b(bob,charlie),true) may be executed at {66}.
end(RecvMsg(alice,bob,stage_b,msg_b(bob,charlie),true)).


RESULT event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,c_935,stage_b,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_b,msg_b(bob,charlie),true))
goal reachable: begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_b,msg_b(bob,alice),true))
RESULT event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,c_935,stage_b,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,c_935,stage_b,m,true)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_b,msg_b(bob,charlie),true))
goal reachable: begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_b,msg_b(bob,alice),true))
RESULT event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,c_935,stage_b,m,true)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_b,msg_b(bob,charlie),true))
Abbreviations:
key_e_12184971 = key_e_781[me_744 = bob,them_743 = charlie,!1 = @sid_12184955]
key_12184972 = key_e[me = alice,them = bob,!1 = @sid_12184929]

1. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 1 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12184972,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184972,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_12184972,g),key_12184972),empty,empty,empty,true))) may be inserted in a table at insert {37}.
table(statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12184972,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184972,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_12184972,g),key_12184972),empty,empty,empty,true)))).

3. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {365}.
table(statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

4. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

5. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 4 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the message concat3(dhexp(key_12184972,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184972,g)),msg_a(alice,bob))) may be sent on channel pub at output {38}.
mess(pub,concat3(dhexp(key_12184972,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184972,g)),msg_a(alice,bob)))).

6. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 3 may be read at get {387}.
The message concat3(dhexp(key_12184972,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184972,g)),msg_a(alice,bob))) that may be sent on channel pub by 5 may be received at input {366}.
We have dhexp(key_12184972,g) <> caught-fail.
So the entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12184972,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184972,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_12184972,g),empty,false))) may be inserted in a table at insert {386}.
table(statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12184972,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184972,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_12184972,g),empty,false)))).

7. The entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12184972,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184972,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_12184972,g),empty,false))) that may be in a table by 6 may be read at get {418}.
The event SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true) may be executed at {415}.
So the message concat3(dhexp(key_e_12184971,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12184972,dhexp(key_e_12184971,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12184972,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184972,g)),msg_a(alice,bob))),dhexp(key_e_12184971,g)),msg_b(bob,charlie))) may be sent on channel pub at output {417}.
mess(pub,concat3(dhexp(key_e_12184971,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12184972,dhexp(key_e_12184971,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12184972,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184972,g)),msg_a(alice,bob))),dhexp(key_e_12184971,g)),msg_b(bob,charlie)))).

8. The entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12184972,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184972,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_12184972,g),key_12184972),empty,empty,empty,true))) that may be in a table by 2 may be read at get {68}.
The message concat3(dhexp(key_e_12184971,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12184972,dhexp(key_e_12184971,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12184972,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12184972,g)),msg_a(alice,bob))),dhexp(key_e_12184971,g)),msg_b(bob,charlie))) that may be sent on channel pub by 7 may be received at input {40}.
We have dhexp(key_e_12184971,g) <> caught-fail.
So event RecvMsg(alice,bob,stage_b,msg_b(bob,charlie),true) may be executed at {66}.
end(RecvMsg(alice,bob,stage_b,msg_b(bob,charlie),true)).


RESULT event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_b,msg_b(bob,charlie),true))
Abbreviations:
key_e_12185040 = key_e_781[me_744 = bob,them_743 = charlie,!1 = @sid_12185024]
key_12185041 = key_e[me = alice,them = bob,!1 = @sid_12184998]

1. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 1 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185041,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185041,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_12185041,g),key_12185041),empty,empty,empty,true))) may be inserted in a table at insert {37}.
table(statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185041,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185041,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_12185041,g),key_12185041),empty,empty,empty,true)))).

3. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {365}.
table(statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

4. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

5. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 4 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the message concat3(dhexp(key_12185041,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185041,g)),msg_a(alice,bob))) may be sent on channel pub at output {38}.
mess(pub,concat3(dhexp(key_12185041,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185041,g)),msg_a(alice,bob)))).

6. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 3 may be read at get {387}.
The message concat3(dhexp(key_12185041,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185041,g)),msg_a(alice,bob))) that may be sent on channel pub by 5 may be received at input {366}.
We have dhexp(key_12185041,g) <> caught-fail.
So the entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185041,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185041,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_12185041,g),empty,false))) may be inserted in a table at insert {386}.
table(statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185041,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185041,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_12185041,g),empty,false)))).

7. The entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185041,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185041,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_12185041,g),empty,false))) that may be in a table by 6 may be read at get {418}.
The event SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true) may be executed at {415}.
So the message concat3(dhexp(key_e_12185040,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185041,dhexp(key_e_12185040,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185041,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185041,g)),msg_a(alice,bob))),dhexp(key_e_12185040,g)),msg_b(bob,charlie))) may be sent on channel pub at output {417}.
mess(pub,concat3(dhexp(key_e_12185040,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185041,dhexp(key_e_12185040,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185041,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185041,g)),msg_a(alice,bob))),dhexp(key_e_12185040,g)),msg_b(bob,charlie)))).

8. The entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185041,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185041,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_12185041,g),key_12185041),empty,empty,empty,true))) that may be in a table by 2 may be read at get {68}.
The message concat3(dhexp(key_e_12185040,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185041,dhexp(key_e_12185040,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185041,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185041,g)),msg_a(alice,bob))),dhexp(key_e_12185040,g)),msg_b(bob,charlie))) that may be sent on channel pub by 7 may be received at input {40}.
We have dhexp(key_e_12185040,g) <> caught-fail.
So event RecvMsg(alice,bob,stage_b,msg_b(bob,charlie),true) may be executed at {66}.
end(RecvMsg(alice,bob,stage_b,msg_b(bob,charlie),true)).


RESULT event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true)) || event(LeakS(phase0,bob)) cannot be proved.
Starting query not attacker_p1(msg_b(bob,alice))
RESULT not attacker_p1(msg_b(bob,alice)) is true.
Starting query attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice))
RESULT attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice)) is true.
Starting query attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob)))
RESULT attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob))) is true.
Starting query attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice))
RESULT attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true))
goal reachable: begin(SendMsg(alice,charlie,stage_c,msg_c(alice,charlie),true)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,charlie,stage_a,msg_a(alice,charlie),true)) -> end(RecvMsg(bob,alice,stage_c,msg_c(alice,charlie),true))
Abbreviations:
key_e_12185174 = key_e_536[me_522 = alice,them_521 = charlie,!1 = @sid_12185131]
key_e_12185175 = key_e_670[me_634 = bob,them_633 = alice,!1 = @sid_12185157]

1. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {249}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

2. The entry statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {132}.
table(statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {156}.
The event SendMsg(alice,charlie,stage_a,msg_a(alice,charlie),true) may be executed at {153}.
So the message concat3(dhexp(key_e_12185174,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),msg_a(alice,charlie))) may be sent on channel pub at output {155}.
mess(pub,concat3(dhexp(key_e_12185174,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),msg_a(alice,charlie)))).

4. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 1 may be read at get {271}.
The message concat3(dhexp(key_e_12185174,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),msg_a(alice,charlie))) that may be sent on channel pub by 3 may be received at input {250}.
We have dhexp(key_e_12185174,g) <> caught-fail.
So the entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),msg_a(alice,charlie)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e_12185174,g),empty,false))) may be inserted in a table at insert {270}.
table(statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),msg_a(alice,charlie)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e_12185174,g),empty,false)))).

5. The entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),msg_a(alice,charlie)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e_12185174,g),empty,false))) that may be in a table by 4 may be read at get {302}.
The event SendMsg(bob,alice,stage_b,msg_b(bob,alice),true) may be executed at {299}.
So the entry statestore(bob,alice,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e_12185174,dhexp(key_e_12185175,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12185174,dhexp(key_e_12185175,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),msg_a(alice,charlie))),dhexp(key_e_12185175,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185174,dhexp(key_e_12185175,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),msg_a(alice,charlie))),dhexp(key_e_12185175,g)),msg_b(bob,alice)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12185175,g),key_e_12185175),empty,dhexp(key_e_12185174,g),empty,false))) may be inserted in a table at insert {300}.
table(statestore(bob,alice,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e_12185174,dhexp(key_e_12185175,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12185174,dhexp(key_e_12185175,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),msg_a(alice,charlie))),dhexp(key_e_12185175,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185174,dhexp(key_e_12185175,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),msg_a(alice,charlie))),dhexp(key_e_12185175,g)),msg_b(bob,alice)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12185175,g),key_e_12185175),empty,dhexp(key_e_12185174,g),empty,false)))).

6. The entry statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {132}.
table(statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

7. The entry statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 6 may be read at get {156}.
The event SendMsg(alice,charlie,stage_a,msg_a(alice,charlie),true) may be executed at {153}.
So the entry statestore(alice,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),msg_a(alice,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12185174,g),key_e_12185174),empty,empty,empty,true))) may be inserted in a table at insert {154}.
table(statestore(alice,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),msg_a(alice,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12185174,g),key_e_12185174),empty,empty,empty,true)))).

8. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {249}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

9. The entry statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {132}.
table(statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

10. The entry statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 9 may be read at get {156}.
The event SendMsg(alice,charlie,stage_a,msg_a(alice,charlie),true) may be executed at {153}.
So the message concat3(dhexp(key_e_12185174,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),msg_a(alice,charlie))) may be sent on channel pub at output {155}.
mess(pub,concat3(dhexp(key_e_12185174,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),msg_a(alice,charlie)))).

11. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 8 may be read at get {271}.
The message concat3(dhexp(key_e_12185174,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),msg_a(alice,charlie))) that may be sent on channel pub by 10 may be received at input {250}.
We have dhexp(key_e_12185174,g) <> caught-fail.
So the entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),msg_a(alice,charlie)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e_12185174,g),empty,false))) may be inserted in a table at insert {270}.
table(statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),msg_a(alice,charlie)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e_12185174,g),empty,false)))).

12. The entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),msg_a(alice,charlie)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e_12185174,g),empty,false))) that may be in a table by 11 may be read at get {302}.
The event SendMsg(bob,alice,stage_b,msg_b(bob,alice),true) may be executed at {299}.
So the message concat3(dhexp(key_e_12185175,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185174,dhexp(key_e_12185175,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),msg_a(alice,charlie))),dhexp(key_e_12185175,g)),msg_b(bob,alice))) may be sent on channel pub at output {301}.
mess(pub,concat3(dhexp(key_e_12185175,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185174,dhexp(key_e_12185175,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),msg_a(alice,charlie))),dhexp(key_e_12185175,g)),msg_b(bob,alice)))).

13. The entry statestore(alice,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),msg_a(alice,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12185174,g),key_e_12185174),empty,empty,empty,true))) that may be in a table by 7 may be read at get {185}.
The message concat3(dhexp(key_e_12185175,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185174,dhexp(key_e_12185175,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),msg_a(alice,charlie))),dhexp(key_e_12185175,g)),msg_b(bob,alice))) that may be sent on channel pub by 12 may be received at input {157}.
So the entry statestore(alice,charlie,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e_12185174,dhexp(key_e_12185175,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12185175,dhexp(key_e_12185174,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),msg_a(alice,charlie))),dhexp(key_e_12185175,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185174,dhexp(key_e_12185175,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),msg_a(alice,charlie))),dhexp(key_e_12185175,g)),msg_b(bob,alice)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12185174,g),key_e_12185174),empty,dhexp(key_e_12185175,g),empty,true))) may be inserted in a table at insert {184}.
table(statestore(alice,charlie,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e_12185174,dhexp(key_e_12185175,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12185175,dhexp(key_e_12185174,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),msg_a(alice,charlie))),dhexp(key_e_12185175,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185174,dhexp(key_e_12185175,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),msg_a(alice,charlie))),dhexp(key_e_12185175,g)),msg_b(bob,alice)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12185174,g),key_e_12185174),empty,dhexp(key_e_12185175,g),empty,true)))).

14. The entry statestore(alice,charlie,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e_12185174,dhexp(key_e_12185175,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12185175,dhexp(key_e_12185174,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),msg_a(alice,charlie))),dhexp(key_e_12185175,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185174,dhexp(key_e_12185175,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),msg_a(alice,charlie))),dhexp(key_e_12185175,g)),msg_b(bob,alice)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12185174,g),key_e_12185174),empty,dhexp(key_e_12185175,g),empty,true))) that may be in a table by 13 may be read at get {203}.
The event SendMsg(alice,charlie,stage_c,msg_c(alice,charlie),true) may be executed at {200}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185174,dhexp(key_e_12185175,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),msg_a(alice,charlie))),dhexp(key_e_12185175,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185174,dhexp(key_e_12185175,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),msg_a(alice,charlie))),dhexp(key_e_12185175,g)),msg_b(bob,alice))),msg_c(alice,charlie))) may be sent on channel pub at output {202}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185174,dhexp(key_e_12185175,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),msg_a(alice,charlie))),dhexp(key_e_12185175,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185174,dhexp(key_e_12185175,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),msg_a(alice,charlie))),dhexp(key_e_12185175,g)),msg_b(bob,alice))),msg_c(alice,charlie)))).

15. The entry statestore(bob,alice,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e_12185174,dhexp(key_e_12185175,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12185174,dhexp(key_e_12185175,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),msg_a(alice,charlie))),dhexp(key_e_12185175,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185174,dhexp(key_e_12185175,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),msg_a(alice,charlie))),dhexp(key_e_12185175,g)),msg_b(bob,alice)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12185175,g),key_e_12185175),empty,dhexp(key_e_12185174,g),empty,false))) that may be in a table by 5 may be read at get {321}.
The message concat3(empty,empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185174,dhexp(key_e_12185175,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),msg_a(alice,charlie))),dhexp(key_e_12185175,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185174,dhexp(key_e_12185175,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185174,g)),msg_a(alice,charlie))),dhexp(key_e_12185175,g)),msg_b(bob,alice))),msg_c(alice,charlie))) that may be sent on channel pub by 14 may be received at input {303}.
So event RecvMsg(bob,alice,stage_c,msg_c(alice,charlie),true) may be executed at {319}.
end(RecvMsg(bob,alice,stage_c,msg_c(alice,charlie),true)).


RESULT event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true)) cannot be proved.
Starting query event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,c_935,stage_c,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(bob,alice,stage_c,msg_c(alice,bob),true))
goal reachable: begin(SendMsg(alice,charlie,stage_c,msg_c(alice,charlie),true)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,charlie,stage_a,msg_a(alice,charlie),true)) -> end(RecvMsg(bob,alice,stage_c,msg_c(alice,charlie),true))
RESULT event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,c_935,stage_c,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,c_935,stage_c,m,true)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(bob,alice,stage_c,msg_c(alice,bob),true))
goal reachable: begin(SendMsg(alice,charlie,stage_c,msg_c(alice,charlie),true)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,charlie,stage_a,msg_a(alice,charlie),true)) -> end(RecvMsg(bob,alice,stage_c,msg_c(alice,charlie),true))
RESULT event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,c_935,stage_c,m,true)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,charlie,stage_c,msg_c(alice,charlie),true)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,charlie,stage_a,msg_a(alice,charlie),true)) -> end(RecvMsg(bob,alice,stage_c,msg_c(alice,charlie),true))
Abbreviations:
key_e_12185313 = key_e_536[me_522 = alice,them_521 = charlie,!1 = @sid_12185270]
key_e_12185314 = key_e_670[me_634 = bob,them_633 = alice,!1 = @sid_12185296]

1. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {249}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

2. The entry statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {132}.
table(statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {156}.
The event SendMsg(alice,charlie,stage_a,msg_a(alice,charlie),true) may be executed at {153}.
So the message concat3(dhexp(key_e_12185313,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),msg_a(alice,charlie))) may be sent on channel pub at output {155}.
mess(pub,concat3(dhexp(key_e_12185313,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),msg_a(alice,charlie)))).

4. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 1 may be read at get {271}.
The message concat3(dhexp(key_e_12185313,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),msg_a(alice,charlie))) that may be sent on channel pub by 3 may be received at input {250}.
We have dhexp(key_e_12185313,g) <> caught-fail.
So the entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),msg_a(alice,charlie)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e_12185313,g),empty,false))) may be inserted in a table at insert {270}.
table(statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),msg_a(alice,charlie)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e_12185313,g),empty,false)))).

5. The entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),msg_a(alice,charlie)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e_12185313,g),empty,false))) that may be in a table by 4 may be read at get {302}.
The event SendMsg(bob,alice,stage_b,msg_b(bob,alice),true) may be executed at {299}.
So the entry statestore(bob,alice,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e_12185313,dhexp(key_e_12185314,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12185313,dhexp(key_e_12185314,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),msg_a(alice,charlie))),dhexp(key_e_12185314,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185313,dhexp(key_e_12185314,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),msg_a(alice,charlie))),dhexp(key_e_12185314,g)),msg_b(bob,alice)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12185314,g),key_e_12185314),empty,dhexp(key_e_12185313,g),empty,false))) may be inserted in a table at insert {300}.
table(statestore(bob,alice,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e_12185313,dhexp(key_e_12185314,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12185313,dhexp(key_e_12185314,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),msg_a(alice,charlie))),dhexp(key_e_12185314,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185313,dhexp(key_e_12185314,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),msg_a(alice,charlie))),dhexp(key_e_12185314,g)),msg_b(bob,alice)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12185314,g),key_e_12185314),empty,dhexp(key_e_12185313,g),empty,false)))).

6. The entry statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {132}.
table(statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

7. The entry statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 6 may be read at get {156}.
The event SendMsg(alice,charlie,stage_a,msg_a(alice,charlie),true) may be executed at {153}.
So the entry statestore(alice,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),msg_a(alice,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12185313,g),key_e_12185313),empty,empty,empty,true))) may be inserted in a table at insert {154}.
table(statestore(alice,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),msg_a(alice,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12185313,g),key_e_12185313),empty,empty,empty,true)))).

8. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {249}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

9. The entry statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {132}.
table(statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

10. The entry statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 9 may be read at get {156}.
The event SendMsg(alice,charlie,stage_a,msg_a(alice,charlie),true) may be executed at {153}.
So the message concat3(dhexp(key_e_12185313,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),msg_a(alice,charlie))) may be sent on channel pub at output {155}.
mess(pub,concat3(dhexp(key_e_12185313,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),msg_a(alice,charlie)))).

11. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 8 may be read at get {271}.
The message concat3(dhexp(key_e_12185313,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),msg_a(alice,charlie))) that may be sent on channel pub by 10 may be received at input {250}.
We have dhexp(key_e_12185313,g) <> caught-fail.
So the entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),msg_a(alice,charlie)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e_12185313,g),empty,false))) may be inserted in a table at insert {270}.
table(statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),msg_a(alice,charlie)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e_12185313,g),empty,false)))).

12. The entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),msg_a(alice,charlie)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e_12185313,g),empty,false))) that may be in a table by 11 may be read at get {302}.
The event SendMsg(bob,alice,stage_b,msg_b(bob,alice),true) may be executed at {299}.
So the message concat3(dhexp(key_e_12185314,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185313,dhexp(key_e_12185314,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),msg_a(alice,charlie))),dhexp(key_e_12185314,g)),msg_b(bob,alice))) may be sent on channel pub at output {301}.
mess(pub,concat3(dhexp(key_e_12185314,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185313,dhexp(key_e_12185314,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),msg_a(alice,charlie))),dhexp(key_e_12185314,g)),msg_b(bob,alice)))).

13. The entry statestore(alice,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),msg_a(alice,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12185313,g),key_e_12185313),empty,empty,empty,true))) that may be in a table by 7 may be read at get {185}.
The message concat3(dhexp(key_e_12185314,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185313,dhexp(key_e_12185314,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),msg_a(alice,charlie))),dhexp(key_e_12185314,g)),msg_b(bob,alice))) that may be sent on channel pub by 12 may be received at input {157}.
So the entry statestore(alice,charlie,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e_12185313,dhexp(key_e_12185314,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12185314,dhexp(key_e_12185313,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),msg_a(alice,charlie))),dhexp(key_e_12185314,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185313,dhexp(key_e_12185314,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),msg_a(alice,charlie))),dhexp(key_e_12185314,g)),msg_b(bob,alice)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12185313,g),key_e_12185313),empty,dhexp(key_e_12185314,g),empty,true))) may be inserted in a table at insert {184}.
table(statestore(alice,charlie,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e_12185313,dhexp(key_e_12185314,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12185314,dhexp(key_e_12185313,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),msg_a(alice,charlie))),dhexp(key_e_12185314,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185313,dhexp(key_e_12185314,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),msg_a(alice,charlie))),dhexp(key_e_12185314,g)),msg_b(bob,alice)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12185313,g),key_e_12185313),empty,dhexp(key_e_12185314,g),empty,true)))).

14. The entry statestore(alice,charlie,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e_12185313,dhexp(key_e_12185314,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12185314,dhexp(key_e_12185313,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),msg_a(alice,charlie))),dhexp(key_e_12185314,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185313,dhexp(key_e_12185314,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),msg_a(alice,charlie))),dhexp(key_e_12185314,g)),msg_b(bob,alice)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12185313,g),key_e_12185313),empty,dhexp(key_e_12185314,g),empty,true))) that may be in a table by 13 may be read at get {203}.
The event SendMsg(alice,charlie,stage_c,msg_c(alice,charlie),true) may be executed at {200}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185313,dhexp(key_e_12185314,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),msg_a(alice,charlie))),dhexp(key_e_12185314,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185313,dhexp(key_e_12185314,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),msg_a(alice,charlie))),dhexp(key_e_12185314,g)),msg_b(bob,alice))),msg_c(alice,charlie))) may be sent on channel pub at output {202}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185313,dhexp(key_e_12185314,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),msg_a(alice,charlie))),dhexp(key_e_12185314,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185313,dhexp(key_e_12185314,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),msg_a(alice,charlie))),dhexp(key_e_12185314,g)),msg_b(bob,alice))),msg_c(alice,charlie)))).

15. The entry statestore(bob,alice,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e_12185313,dhexp(key_e_12185314,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12185313,dhexp(key_e_12185314,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),msg_a(alice,charlie))),dhexp(key_e_12185314,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185313,dhexp(key_e_12185314,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),msg_a(alice,charlie))),dhexp(key_e_12185314,g)),msg_b(bob,alice)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12185314,g),key_e_12185314),empty,dhexp(key_e_12185313,g),empty,false))) that may be in a table by 5 may be read at get {321}.
The message concat3(empty,empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185313,dhexp(key_e_12185314,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),msg_a(alice,charlie))),dhexp(key_e_12185314,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185313,dhexp(key_e_12185314,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185313,g)),msg_a(alice,charlie))),dhexp(key_e_12185314,g)),msg_b(bob,alice))),msg_c(alice,charlie))) that may be sent on channel pub by 14 may be received at input {303}.
So event RecvMsg(bob,alice,stage_c,msg_c(alice,charlie),true) may be executed at {319}.
end(RecvMsg(bob,alice,stage_c,msg_c(alice,charlie),true)).


RESULT event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) cannot be proved.
Starting query event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,charlie,stage_c,msg_c(alice,charlie),true)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,charlie,stage_a,msg_a(alice,charlie),true)) -> end(RecvMsg(bob,alice,stage_c,msg_c(alice,charlie),true))
Abbreviations:
key_e_12185446 = key_e_536[me_522 = alice,them_521 = charlie,!1 = @sid_12185403]
key_e_12185447 = key_e_670[me_634 = bob,them_633 = alice,!1 = @sid_12185429]

1. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {249}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

2. The entry statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {132}.
table(statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {156}.
The event SendMsg(alice,charlie,stage_a,msg_a(alice,charlie),true) may be executed at {153}.
So the message concat3(dhexp(key_e_12185446,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),msg_a(alice,charlie))) may be sent on channel pub at output {155}.
mess(pub,concat3(dhexp(key_e_12185446,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),msg_a(alice,charlie)))).

4. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 1 may be read at get {271}.
The message concat3(dhexp(key_e_12185446,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),msg_a(alice,charlie))) that may be sent on channel pub by 3 may be received at input {250}.
We have dhexp(key_e_12185446,g) <> caught-fail.
So the entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),msg_a(alice,charlie)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e_12185446,g),empty,false))) may be inserted in a table at insert {270}.
table(statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),msg_a(alice,charlie)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e_12185446,g),empty,false)))).

5. The entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),msg_a(alice,charlie)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e_12185446,g),empty,false))) that may be in a table by 4 may be read at get {302}.
The event SendMsg(bob,alice,stage_b,msg_b(bob,alice),true) may be executed at {299}.
So the entry statestore(bob,alice,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e_12185446,dhexp(key_e_12185447,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12185446,dhexp(key_e_12185447,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),msg_a(alice,charlie))),dhexp(key_e_12185447,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185446,dhexp(key_e_12185447,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),msg_a(alice,charlie))),dhexp(key_e_12185447,g)),msg_b(bob,alice)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12185447,g),key_e_12185447),empty,dhexp(key_e_12185446,g),empty,false))) may be inserted in a table at insert {300}.
table(statestore(bob,alice,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e_12185446,dhexp(key_e_12185447,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12185446,dhexp(key_e_12185447,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),msg_a(alice,charlie))),dhexp(key_e_12185447,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185446,dhexp(key_e_12185447,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),msg_a(alice,charlie))),dhexp(key_e_12185447,g)),msg_b(bob,alice)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12185447,g),key_e_12185447),empty,dhexp(key_e_12185446,g),empty,false)))).

6. The entry statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {132}.
table(statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

7. The entry statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 6 may be read at get {156}.
The event SendMsg(alice,charlie,stage_a,msg_a(alice,charlie),true) may be executed at {153}.
So the entry statestore(alice,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),msg_a(alice,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12185446,g),key_e_12185446),empty,empty,empty,true))) may be inserted in a table at insert {154}.
table(statestore(alice,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),msg_a(alice,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12185446,g),key_e_12185446),empty,empty,empty,true)))).

8. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {249}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

9. The entry statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {132}.
table(statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

10. The entry statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 9 may be read at get {156}.
The event SendMsg(alice,charlie,stage_a,msg_a(alice,charlie),true) may be executed at {153}.
So the message concat3(dhexp(key_e_12185446,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),msg_a(alice,charlie))) may be sent on channel pub at output {155}.
mess(pub,concat3(dhexp(key_e_12185446,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),msg_a(alice,charlie)))).

11. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 8 may be read at get {271}.
The message concat3(dhexp(key_e_12185446,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),msg_a(alice,charlie))) that may be sent on channel pub by 10 may be received at input {250}.
We have dhexp(key_e_12185446,g) <> caught-fail.
So the entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),msg_a(alice,charlie)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e_12185446,g),empty,false))) may be inserted in a table at insert {270}.
table(statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),msg_a(alice,charlie)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e_12185446,g),empty,false)))).

12. The entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),msg_a(alice,charlie)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e_12185446,g),empty,false))) that may be in a table by 11 may be read at get {302}.
The event SendMsg(bob,alice,stage_b,msg_b(bob,alice),true) may be executed at {299}.
So the message concat3(dhexp(key_e_12185447,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185446,dhexp(key_e_12185447,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),msg_a(alice,charlie))),dhexp(key_e_12185447,g)),msg_b(bob,alice))) may be sent on channel pub at output {301}.
mess(pub,concat3(dhexp(key_e_12185447,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185446,dhexp(key_e_12185447,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),msg_a(alice,charlie))),dhexp(key_e_12185447,g)),msg_b(bob,alice)))).

13. The entry statestore(alice,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),msg_a(alice,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12185446,g),key_e_12185446),empty,empty,empty,true))) that may be in a table by 7 may be read at get {185}.
The message concat3(dhexp(key_e_12185447,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185446,dhexp(key_e_12185447,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),msg_a(alice,charlie))),dhexp(key_e_12185447,g)),msg_b(bob,alice))) that may be sent on channel pub by 12 may be received at input {157}.
So the entry statestore(alice,charlie,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e_12185446,dhexp(key_e_12185447,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12185447,dhexp(key_e_12185446,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),msg_a(alice,charlie))),dhexp(key_e_12185447,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185446,dhexp(key_e_12185447,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),msg_a(alice,charlie))),dhexp(key_e_12185447,g)),msg_b(bob,alice)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12185446,g),key_e_12185446),empty,dhexp(key_e_12185447,g),empty,true))) may be inserted in a table at insert {184}.
table(statestore(alice,charlie,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e_12185446,dhexp(key_e_12185447,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12185447,dhexp(key_e_12185446,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),msg_a(alice,charlie))),dhexp(key_e_12185447,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185446,dhexp(key_e_12185447,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),msg_a(alice,charlie))),dhexp(key_e_12185447,g)),msg_b(bob,alice)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12185446,g),key_e_12185446),empty,dhexp(key_e_12185447,g),empty,true)))).

14. The entry statestore(alice,charlie,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e_12185446,dhexp(key_e_12185447,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12185447,dhexp(key_e_12185446,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),msg_a(alice,charlie))),dhexp(key_e_12185447,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185446,dhexp(key_e_12185447,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),msg_a(alice,charlie))),dhexp(key_e_12185447,g)),msg_b(bob,alice)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12185446,g),key_e_12185446),empty,dhexp(key_e_12185447,g),empty,true))) that may be in a table by 13 may be read at get {203}.
The event SendMsg(alice,charlie,stage_c,msg_c(alice,charlie),true) may be executed at {200}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185446,dhexp(key_e_12185447,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),msg_a(alice,charlie))),dhexp(key_e_12185447,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185446,dhexp(key_e_12185447,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),msg_a(alice,charlie))),dhexp(key_e_12185447,g)),msg_b(bob,alice))),msg_c(alice,charlie))) may be sent on channel pub at output {202}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185446,dhexp(key_e_12185447,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),msg_a(alice,charlie))),dhexp(key_e_12185447,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185446,dhexp(key_e_12185447,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),msg_a(alice,charlie))),dhexp(key_e_12185447,g)),msg_b(bob,alice))),msg_c(alice,charlie)))).

15. The entry statestore(bob,alice,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e_12185446,dhexp(key_e_12185447,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12185446,dhexp(key_e_12185447,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),msg_a(alice,charlie))),dhexp(key_e_12185447,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185446,dhexp(key_e_12185447,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),msg_a(alice,charlie))),dhexp(key_e_12185447,g)),msg_b(bob,alice)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12185447,g),key_e_12185447),empty,dhexp(key_e_12185446,g),empty,false))) that may be in a table by 5 may be read at get {321}.
The message concat3(empty,empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185446,dhexp(key_e_12185447,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),msg_a(alice,charlie))),dhexp(key_e_12185447,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e_12185446,dhexp(key_e_12185447,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_12185446,g)),msg_a(alice,charlie))),dhexp(key_e_12185447,g)),msg_b(bob,alice))),msg_c(alice,charlie))) that may be sent on channel pub by 14 may be received at input {303}.
So event RecvMsg(bob,alice,stage_c,msg_c(alice,charlie),true) may be executed at {319}.
end(RecvMsg(bob,alice,stage_c,msg_c(alice,charlie),true)).


RESULT event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true)) || event(LeakS(phase0,alice)) cannot be proved.
Starting query not attacker_p1(msg_c(alice,bob))
RESULT not attacker_p1(msg_c(alice,bob)) is true.
Starting query attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob))
RESULT attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob)) is true.
Starting query attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice)))
RESULT attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice))) is true.
Starting query attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob))
RESULT attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true))
goal reachable: begin(SendMsg(bob,charlie,stage_d,msg_d(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_d,msg_d(bob,charlie),true))
Abbreviations:
key_12185681 = key_e[me = alice,them = bob,!1 = @sid_12185613]
key_e_12185682 = key_e_781[me_744 = bob,them_743 = charlie,!1 = @sid_12185639]

1. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 1 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_12185681,g),key_12185681),empty,empty,empty,true))) may be inserted in a table at insert {37}.
table(statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_12185681,g),key_12185681),empty,empty,empty,true)))).

3. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {365}.
table(statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

4. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

5. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 4 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the message concat3(dhexp(key_12185681,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))) may be sent on channel pub at output {38}.
mess(pub,concat3(dhexp(key_12185681,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob)))).

6. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 3 may be read at get {387}.
The message concat3(dhexp(key_12185681,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))) that may be sent on channel pub by 5 may be received at input {366}.
We have dhexp(key_12185681,g) <> caught-fail.
So the entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_12185681,g),empty,false))) may be inserted in a table at insert {386}.
table(statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_12185681,g),empty,false)))).

7. The entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_12185681,g),empty,false))) that may be in a table by 6 may be read at get {418}.
The event SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true) may be executed at {415}.
So the message concat3(dhexp(key_e_12185682,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),msg_b(bob,charlie))) may be sent on channel pub at output {417}.
mess(pub,concat3(dhexp(key_e_12185682,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),msg_b(bob,charlie)))).

8. The entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_12185681,g),key_12185681),empty,empty,empty,true))) that may be in a table by 2 may be read at get {68}.
The message concat3(dhexp(key_e_12185682,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),msg_b(bob,charlie))) that may be sent on channel pub by 7 may be received at input {40}.
So the entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12185682,dhexp(key_12185681,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_12185681,g),key_12185681),empty,dhexp(key_e_12185682,g),empty,true))) may be inserted in a table at insert {67}.
table(statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12185682,dhexp(key_12185681,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_12185681,g),key_12185681),empty,dhexp(key_e_12185682,g),empty,true)))).

9. The entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12185682,dhexp(key_12185681,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_12185681,g),key_12185681),empty,dhexp(key_e_12185682,g),empty,true))) that may be in a table by 8 may be read at get {86}.
The event SendMsg(alice,bob,stage_c,msg_c(alice,bob),true) may be executed at {83}.
So the entry statestore(alice,bob,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e_12185682,dhexp(key_12185681,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_12185681,g),key_12185681),empty,dhexp(key_e_12185682,g),empty,true))) may be inserted in a table at insert {84}.
table(statestore(alice,bob,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e_12185682,dhexp(key_12185681,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_12185681,g),key_12185681),empty,dhexp(key_e_12185682,g),empty,true)))).

10. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {365}.
table(statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

11. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

12. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 11 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the message concat3(dhexp(key_12185681,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))) may be sent on channel pub at output {38}.
mess(pub,concat3(dhexp(key_12185681,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob)))).

13. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 10 may be read at get {387}.
The message concat3(dhexp(key_12185681,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))) that may be sent on channel pub by 12 may be received at input {366}.
We have dhexp(key_12185681,g) <> caught-fail.
So the entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_12185681,g),empty,false))) may be inserted in a table at insert {386}.
table(statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_12185681,g),empty,false)))).

14. The entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_12185681,g),empty,false))) that may be in a table by 13 may be read at get {418}.
The event SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true) may be executed at {415}.
So the entry statestore(bob,charlie,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12185682,dhexp(key_12185681,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12185682,g),key_e_12185682),empty,dhexp(key_12185681,g),empty,false))) may be inserted in a table at insert {416}.
table(statestore(bob,charlie,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12185682,dhexp(key_12185681,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12185682,g),key_e_12185682),empty,dhexp(key_12185681,g),empty,false)))).

15. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

16. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 15 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_12185681,g),key_12185681),empty,empty,empty,true))) may be inserted in a table at insert {37}.
table(statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_12185681,g),key_12185681),empty,empty,empty,true)))).

17. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {365}.
table(statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

18. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

19. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 18 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the message concat3(dhexp(key_12185681,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))) may be sent on channel pub at output {38}.
mess(pub,concat3(dhexp(key_12185681,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob)))).

20. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 17 may be read at get {387}.
The message concat3(dhexp(key_12185681,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))) that may be sent on channel pub by 19 may be received at input {366}.
We have dhexp(key_12185681,g) <> caught-fail.
So the entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_12185681,g),empty,false))) may be inserted in a table at insert {386}.
table(statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_12185681,g),empty,false)))).

21. The entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_12185681,g),empty,false))) that may be in a table by 20 may be read at get {418}.
The event SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true) may be executed at {415}.
So the message concat3(dhexp(key_e_12185682,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),msg_b(bob,charlie))) may be sent on channel pub at output {417}.
mess(pub,concat3(dhexp(key_e_12185682,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),msg_b(bob,charlie)))).

22. The entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_12185681,g),key_12185681),empty,empty,empty,true))) that may be in a table by 16 may be read at get {68}.
The message concat3(dhexp(key_e_12185682,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),msg_b(bob,charlie))) that may be sent on channel pub by 21 may be received at input {40}.
So the entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12185682,dhexp(key_12185681,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_12185681,g),key_12185681),empty,dhexp(key_e_12185682,g),empty,true))) may be inserted in a table at insert {67}.
table(statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12185682,dhexp(key_12185681,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_12185681,g),key_12185681),empty,dhexp(key_e_12185682,g),empty,true)))).

23. The entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12185682,dhexp(key_12185681,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_12185681,g),key_12185681),empty,dhexp(key_e_12185682,g),empty,true))) that may be in a table by 22 may be read at get {86}.
The event SendMsg(alice,bob,stage_c,msg_c(alice,bob),true) may be executed at {83}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),msg_b(bob,charlie))),msg_c(alice,bob))) may be sent on channel pub at output {85}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),msg_b(bob,charlie))),msg_c(alice,bob)))).

24. The entry statestore(bob,charlie,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12185682,dhexp(key_12185681,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12185682,g),key_e_12185682),empty,dhexp(key_12185681,g),empty,false))) that may be in a table by 14 may be read at get {437}.
The message concat3(empty,empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),msg_b(bob,charlie))),msg_c(alice,bob))) that may be sent on channel pub by 23 may be received at input {419}.
So the entry statestore(bob,charlie,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e_12185682,dhexp(key_12185681,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12185682,g),key_e_12185682),empty,dhexp(key_12185681,g),empty,false))) may be inserted in a table at insert {436}.
table(statestore(bob,charlie,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e_12185682,dhexp(key_12185681,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12185682,g),key_e_12185682),empty,dhexp(key_12185681,g),empty,false)))).

25. The entry statestore(bob,charlie,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e_12185682,dhexp(key_12185681,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12185682,g),key_e_12185682),empty,dhexp(key_12185681,g),empty,false))) that may be in a table by 24 may be read at get {463}.
The event SendMsg(bob,charlie,stage_d,msg_d(bob,charlie),true) may be executed at {460}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),msg_b(bob,charlie))),msg_c(alice,bob))),msg_d(bob,charlie))) may be sent on channel pub at output {462}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),msg_b(bob,charlie))),msg_c(alice,bob))),msg_d(bob,charlie)))).

26. The entry statestore(alice,bob,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e_12185682,dhexp(key_12185681,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_12185681,g),key_12185681),empty,dhexp(key_e_12185682,g),empty,true))) that may be in a table by 9 may be read at get {114}.
The message concat3(empty,empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185681,dhexp(key_e_12185682,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185681,g)),msg_a(alice,bob))),dhexp(key_e_12185682,g)),msg_b(bob,charlie))),msg_c(alice,bob))),msg_d(bob,charlie))) that may be sent on channel pub by 25 may be received at input {87}.
So event RecvMsg(alice,bob,stage_d,msg_d(bob,charlie),true) may be executed at {111}.
end(RecvMsg(alice,bob,stage_d,msg_d(bob,charlie),true)).


RESULT event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,c_935,stage_d,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(bob,charlie,stage_d,msg_d(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_d,msg_d(bob,charlie),true))
goal reachable: begin(SendMsg(bob,alice,stage_d,msg_d(bob,alice),true)) && begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_d,msg_d(bob,alice),true))
RESULT event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,c_935,stage_d,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,c_935,stage_d,m,true)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(bob,charlie,stage_d,msg_d(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_d,msg_d(bob,charlie),true))
goal reachable: begin(SendMsg(bob,alice,stage_d,msg_d(bob,alice),true)) && begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_d,msg_d(bob,alice),true))
RESULT event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,c_935,stage_d,m,true)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(bob,charlie,stage_d,msg_d(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_d,msg_d(bob,charlie),true))
Abbreviations:
key_12185921 = key_e[me = alice,them = bob,!1 = @sid_12185853]
key_e_12185922 = key_e_781[me_744 = bob,them_743 = charlie,!1 = @sid_12185879]

1. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 1 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_12185921,g),key_12185921),empty,empty,empty,true))) may be inserted in a table at insert {37}.
table(statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_12185921,g),key_12185921),empty,empty,empty,true)))).

3. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {365}.
table(statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

4. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

5. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 4 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the message concat3(dhexp(key_12185921,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))) may be sent on channel pub at output {38}.
mess(pub,concat3(dhexp(key_12185921,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob)))).

6. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 3 may be read at get {387}.
The message concat3(dhexp(key_12185921,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))) that may be sent on channel pub by 5 may be received at input {366}.
We have dhexp(key_12185921,g) <> caught-fail.
So the entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_12185921,g),empty,false))) may be inserted in a table at insert {386}.
table(statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_12185921,g),empty,false)))).

7. The entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_12185921,g),empty,false))) that may be in a table by 6 may be read at get {418}.
The event SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true) may be executed at {415}.
So the message concat3(dhexp(key_e_12185922,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),msg_b(bob,charlie))) may be sent on channel pub at output {417}.
mess(pub,concat3(dhexp(key_e_12185922,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),msg_b(bob,charlie)))).

8. The entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_12185921,g),key_12185921),empty,empty,empty,true))) that may be in a table by 2 may be read at get {68}.
The message concat3(dhexp(key_e_12185922,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),msg_b(bob,charlie))) that may be sent on channel pub by 7 may be received at input {40}.
So the entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12185922,dhexp(key_12185921,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_12185921,g),key_12185921),empty,dhexp(key_e_12185922,g),empty,true))) may be inserted in a table at insert {67}.
table(statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12185922,dhexp(key_12185921,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_12185921,g),key_12185921),empty,dhexp(key_e_12185922,g),empty,true)))).

9. The entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12185922,dhexp(key_12185921,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_12185921,g),key_12185921),empty,dhexp(key_e_12185922,g),empty,true))) that may be in a table by 8 may be read at get {86}.
The event SendMsg(alice,bob,stage_c,msg_c(alice,bob),true) may be executed at {83}.
So the entry statestore(alice,bob,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e_12185922,dhexp(key_12185921,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_12185921,g),key_12185921),empty,dhexp(key_e_12185922,g),empty,true))) may be inserted in a table at insert {84}.
table(statestore(alice,bob,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e_12185922,dhexp(key_12185921,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_12185921,g),key_12185921),empty,dhexp(key_e_12185922,g),empty,true)))).

10. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {365}.
table(statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

11. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

12. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 11 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the message concat3(dhexp(key_12185921,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))) may be sent on channel pub at output {38}.
mess(pub,concat3(dhexp(key_12185921,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob)))).

13. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 10 may be read at get {387}.
The message concat3(dhexp(key_12185921,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))) that may be sent on channel pub by 12 may be received at input {366}.
We have dhexp(key_12185921,g) <> caught-fail.
So the entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_12185921,g),empty,false))) may be inserted in a table at insert {386}.
table(statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_12185921,g),empty,false)))).

14. The entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_12185921,g),empty,false))) that may be in a table by 13 may be read at get {418}.
The event SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true) may be executed at {415}.
So the entry statestore(bob,charlie,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12185922,dhexp(key_12185921,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12185922,g),key_e_12185922),empty,dhexp(key_12185921,g),empty,false))) may be inserted in a table at insert {416}.
table(statestore(bob,charlie,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12185922,dhexp(key_12185921,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12185922,g),key_e_12185922),empty,dhexp(key_12185921,g),empty,false)))).

15. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

16. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 15 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_12185921,g),key_12185921),empty,empty,empty,true))) may be inserted in a table at insert {37}.
table(statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_12185921,g),key_12185921),empty,empty,empty,true)))).

17. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {365}.
table(statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

18. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

19. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 18 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the message concat3(dhexp(key_12185921,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))) may be sent on channel pub at output {38}.
mess(pub,concat3(dhexp(key_12185921,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob)))).

20. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 17 may be read at get {387}.
The message concat3(dhexp(key_12185921,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))) that may be sent on channel pub by 19 may be received at input {366}.
We have dhexp(key_12185921,g) <> caught-fail.
So the entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_12185921,g),empty,false))) may be inserted in a table at insert {386}.
table(statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_12185921,g),empty,false)))).

21. The entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_12185921,g),empty,false))) that may be in a table by 20 may be read at get {418}.
The event SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true) may be executed at {415}.
So the message concat3(dhexp(key_e_12185922,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),msg_b(bob,charlie))) may be sent on channel pub at output {417}.
mess(pub,concat3(dhexp(key_e_12185922,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),msg_b(bob,charlie)))).

22. The entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_12185921,g),key_12185921),empty,empty,empty,true))) that may be in a table by 16 may be read at get {68}.
The message concat3(dhexp(key_e_12185922,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),msg_b(bob,charlie))) that may be sent on channel pub by 21 may be received at input {40}.
So the entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12185922,dhexp(key_12185921,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_12185921,g),key_12185921),empty,dhexp(key_e_12185922,g),empty,true))) may be inserted in a table at insert {67}.
table(statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12185922,dhexp(key_12185921,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_12185921,g),key_12185921),empty,dhexp(key_e_12185922,g),empty,true)))).

23. The entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12185922,dhexp(key_12185921,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_12185921,g),key_12185921),empty,dhexp(key_e_12185922,g),empty,true))) that may be in a table by 22 may be read at get {86}.
The event SendMsg(alice,bob,stage_c,msg_c(alice,bob),true) may be executed at {83}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),msg_b(bob,charlie))),msg_c(alice,bob))) may be sent on channel pub at output {85}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),msg_b(bob,charlie))),msg_c(alice,bob)))).

24. The entry statestore(bob,charlie,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12185922,dhexp(key_12185921,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12185922,g),key_e_12185922),empty,dhexp(key_12185921,g),empty,false))) that may be in a table by 14 may be read at get {437}.
The message concat3(empty,empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),msg_b(bob,charlie))),msg_c(alice,bob))) that may be sent on channel pub by 23 may be received at input {419}.
So the entry statestore(bob,charlie,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e_12185922,dhexp(key_12185921,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12185922,g),key_e_12185922),empty,dhexp(key_12185921,g),empty,false))) may be inserted in a table at insert {436}.
table(statestore(bob,charlie,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e_12185922,dhexp(key_12185921,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12185922,g),key_e_12185922),empty,dhexp(key_12185921,g),empty,false)))).

25. The entry statestore(bob,charlie,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e_12185922,dhexp(key_12185921,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12185922,g),key_e_12185922),empty,dhexp(key_12185921,g),empty,false))) that may be in a table by 24 may be read at get {463}.
The event SendMsg(bob,charlie,stage_d,msg_d(bob,charlie),true) may be executed at {460}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),msg_b(bob,charlie))),msg_c(alice,bob))),msg_d(bob,charlie))) may be sent on channel pub at output {462}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),msg_b(bob,charlie))),msg_c(alice,bob))),msg_d(bob,charlie)))).

26. The entry statestore(alice,bob,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e_12185922,dhexp(key_12185921,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_12185921,g),key_12185921),empty,dhexp(key_e_12185922,g),empty,true))) that may be in a table by 9 may be read at get {114}.
The message concat3(empty,empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12185921,dhexp(key_e_12185922,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12185921,g)),msg_a(alice,bob))),dhexp(key_e_12185922,g)),msg_b(bob,charlie))),msg_c(alice,bob))),msg_d(bob,charlie))) that may be sent on channel pub by 25 may be received at input {87}.
So event RecvMsg(alice,bob,stage_d,msg_d(bob,charlie),true) may be executed at {111}.
end(RecvMsg(alice,bob,stage_d,msg_d(bob,charlie),true)).


RESULT event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(bob,charlie,stage_d,msg_d(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_d,msg_d(bob,charlie),true))
Abbreviations:
key_12186155 = key_e[me = alice,them = bob,!1 = @sid_12186087]
key_e_12186156 = key_e_781[me_744 = bob,them_743 = charlie,!1 = @sid_12186113]

1. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 1 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_12186155,g),key_12186155),empty,empty,empty,true))) may be inserted in a table at insert {37}.
table(statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_12186155,g),key_12186155),empty,empty,empty,true)))).

3. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {365}.
table(statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

4. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

5. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 4 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the message concat3(dhexp(key_12186155,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))) may be sent on channel pub at output {38}.
mess(pub,concat3(dhexp(key_12186155,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob)))).

6. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 3 may be read at get {387}.
The message concat3(dhexp(key_12186155,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))) that may be sent on channel pub by 5 may be received at input {366}.
We have dhexp(key_12186155,g) <> caught-fail.
So the entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_12186155,g),empty,false))) may be inserted in a table at insert {386}.
table(statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_12186155,g),empty,false)))).

7. The entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_12186155,g),empty,false))) that may be in a table by 6 may be read at get {418}.
The event SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true) may be executed at {415}.
So the message concat3(dhexp(key_e_12186156,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),msg_b(bob,charlie))) may be sent on channel pub at output {417}.
mess(pub,concat3(dhexp(key_e_12186156,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),msg_b(bob,charlie)))).

8. The entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_12186155,g),key_12186155),empty,empty,empty,true))) that may be in a table by 2 may be read at get {68}.
The message concat3(dhexp(key_e_12186156,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),msg_b(bob,charlie))) that may be sent on channel pub by 7 may be received at input {40}.
So the entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12186156,dhexp(key_12186155,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_12186155,g),key_12186155),empty,dhexp(key_e_12186156,g),empty,true))) may be inserted in a table at insert {67}.
table(statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12186156,dhexp(key_12186155,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_12186155,g),key_12186155),empty,dhexp(key_e_12186156,g),empty,true)))).

9. The entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12186156,dhexp(key_12186155,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_12186155,g),key_12186155),empty,dhexp(key_e_12186156,g),empty,true))) that may be in a table by 8 may be read at get {86}.
The event SendMsg(alice,bob,stage_c,msg_c(alice,bob),true) may be executed at {83}.
So the entry statestore(alice,bob,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e_12186156,dhexp(key_12186155,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_12186155,g),key_12186155),empty,dhexp(key_e_12186156,g),empty,true))) may be inserted in a table at insert {84}.
table(statestore(alice,bob,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e_12186156,dhexp(key_12186155,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_12186155,g),key_12186155),empty,dhexp(key_e_12186156,g),empty,true)))).

10. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {365}.
table(statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

11. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

12. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 11 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the message concat3(dhexp(key_12186155,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))) may be sent on channel pub at output {38}.
mess(pub,concat3(dhexp(key_12186155,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob)))).

13. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 10 may be read at get {387}.
The message concat3(dhexp(key_12186155,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))) that may be sent on channel pub by 12 may be received at input {366}.
We have dhexp(key_12186155,g) <> caught-fail.
So the entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_12186155,g),empty,false))) may be inserted in a table at insert {386}.
table(statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_12186155,g),empty,false)))).

14. The entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_12186155,g),empty,false))) that may be in a table by 13 may be read at get {418}.
The event SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true) may be executed at {415}.
So the entry statestore(bob,charlie,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12186156,dhexp(key_12186155,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12186156,g),key_e_12186156),empty,dhexp(key_12186155,g),empty,false))) may be inserted in a table at insert {416}.
table(statestore(bob,charlie,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12186156,dhexp(key_12186155,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12186156,g),key_e_12186156),empty,dhexp(key_12186155,g),empty,false)))).

15. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

16. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 15 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_12186155,g),key_12186155),empty,empty,empty,true))) may be inserted in a table at insert {37}.
table(statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_12186155,g),key_12186155),empty,empty,empty,true)))).

17. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {365}.
table(statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

18. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

19. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 18 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the message concat3(dhexp(key_12186155,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))) may be sent on channel pub at output {38}.
mess(pub,concat3(dhexp(key_12186155,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob)))).

20. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 17 may be read at get {387}.
The message concat3(dhexp(key_12186155,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))) that may be sent on channel pub by 19 may be received at input {366}.
We have dhexp(key_12186155,g) <> caught-fail.
So the entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_12186155,g),empty,false))) may be inserted in a table at insert {386}.
table(statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_12186155,g),empty,false)))).

21. The entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_12186155,g),empty,false))) that may be in a table by 20 may be read at get {418}.
The event SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true) may be executed at {415}.
So the message concat3(dhexp(key_e_12186156,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),msg_b(bob,charlie))) may be sent on channel pub at output {417}.
mess(pub,concat3(dhexp(key_e_12186156,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),msg_b(bob,charlie)))).

22. The entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_12186155,g),key_12186155),empty,empty,empty,true))) that may be in a table by 16 may be read at get {68}.
The message concat3(dhexp(key_e_12186156,g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),msg_b(bob,charlie))) that may be sent on channel pub by 21 may be received at input {40}.
So the entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12186156,dhexp(key_12186155,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_12186155,g),key_12186155),empty,dhexp(key_e_12186156,g),empty,true))) may be inserted in a table at insert {67}.
table(statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12186156,dhexp(key_12186155,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_12186155,g),key_12186155),empty,dhexp(key_e_12186156,g),empty,true)))).

23. The entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12186156,dhexp(key_12186155,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_12186155,g),key_12186155),empty,dhexp(key_e_12186156,g),empty,true))) that may be in a table by 22 may be read at get {86}.
The event SendMsg(alice,bob,stage_c,msg_c(alice,bob),true) may be executed at {83}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),msg_b(bob,charlie))),msg_c(alice,bob))) may be sent on channel pub at output {85}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),msg_b(bob,charlie))),msg_c(alice,bob)))).

24. The entry statestore(bob,charlie,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e_12186156,dhexp(key_12186155,g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12186156,g),key_e_12186156),empty,dhexp(key_12186155,g),empty,false))) that may be in a table by 14 may be read at get {437}.
The message concat3(empty,empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),msg_b(bob,charlie))),msg_c(alice,bob))) that may be sent on channel pub by 23 may be received at input {419}.
So the entry statestore(bob,charlie,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e_12186156,dhexp(key_12186155,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12186156,g),key_e_12186156),empty,dhexp(key_12186155,g),empty,false))) may be inserted in a table at insert {436}.
table(statestore(bob,charlie,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e_12186156,dhexp(key_12186155,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12186156,g),key_e_12186156),empty,dhexp(key_12186155,g),empty,false)))).

25. The entry statestore(bob,charlie,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e_12186156,dhexp(key_12186155,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_e_12186156,g),key_e_12186156),empty,dhexp(key_12186155,g),empty,false))) that may be in a table by 24 may be read at get {463}.
The event SendMsg(bob,charlie,stage_d,msg_d(bob,charlie),true) may be executed at {460}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),msg_b(bob,charlie))),msg_c(alice,bob))),msg_d(bob,charlie))) may be sent on channel pub at output {462}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),msg_b(bob,charlie))),msg_c(alice,bob))),msg_d(bob,charlie)))).

26. The entry statestore(alice,bob,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e_12186156,dhexp(key_12186155,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_12186155,g),key_12186155),empty,dhexp(key_e_12186156,g),empty,true))) that may be in a table by 9 may be read at get {114}.
The message concat3(empty,empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),msg_b(bob,charlie))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_12186155,dhexp(key_e_12186156,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_12186155,g)),msg_a(alice,bob))),dhexp(key_e_12186156,g)),msg_b(bob,charlie))),msg_c(alice,bob))),msg_d(bob,charlie))) that may be sent on channel pub by 25 may be received at input {87}.
So event RecvMsg(alice,bob,stage_d,msg_d(bob,charlie),true) may be executed at {111}.
end(RecvMsg(alice,bob,stage_d,msg_d(bob,charlie),true)).


RESULT event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true)) || event(LeakS(phase0,bob)) cannot be proved.
Starting query not attacker_p1(msg_d(bob,alice))
RESULT not attacker_p1(msg_d(bob,alice)) is true.
Starting query attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice))
RESULT attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice)) is true.
Starting query attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob)))
RESULT attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob))) is true.
Starting query attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice))
RESULT attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice)) is true.
