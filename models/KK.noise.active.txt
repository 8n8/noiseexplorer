File "KK.noise.active.pv", line 222, characters 7-8:
Warning: identifier ck rebound.
File "KK.noise.active.pv", line 231, characters 7-8:
Warning: identifier ck rebound.
File "KK.noise.active.pv", line 232, characters 7-8:
Warning: identifier cs rebound.
File "KK.noise.active.pv", line 232, character 36:
Warning: identifier h rebound.
File "KK.noise.active.pv", line 241, characters 7-8:
Warning: identifier cs rebound.
File "KK.noise.active.pv", line 242, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 247, characters 7-8:
Warning: identifier cs rebound.
File "KK.noise.active.pv", line 248, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 262, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 263, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 268, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 269, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 275, character 6:
Warning: identifier e rebound.
File "KK.noise.active.pv", line 276, characters 6-7:
Warning: identifier ne rebound.
File "KK.noise.active.pv", line 277, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 279, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 280, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 281, characters 7-8:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 281, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "KK.noise.active.pv", line 282, characters 6-7:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 289, character 6:
Warning: identifier e rebound.
File "KK.noise.active.pv", line 290, characters 6-7:
Warning: identifier ne rebound.
File "KK.noise.active.pv", line 291, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 293, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 294, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 295, characters 7-8:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 295, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "KK.noise.active.pv", line 296, characters 6-7:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 304, characters 7-8:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 304, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "KK.noise.active.pv", line 305, characters 6-7:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 312, characters 7-8:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 312, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "KK.noise.active.pv", line 313, characters 6-7:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 321, characters 6-7:
Warning: identifier re rebound.
File "KK.noise.active.pv", line 322, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 324, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 325, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 326, characters 7-8:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 328, characters 7-8:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 336, characters 6-7:
Warning: identifier re rebound.
File "KK.noise.active.pv", line 337, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 339, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 340, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 341, characters 7-8:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 343, characters 7-8:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 352, characters 7-8:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 354, characters 7-8:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 362, characters 7-8:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 364, characters 7-8:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 512, characters 7-8:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 514, characters 8-9:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 362, characters 7-8:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 364, characters 7-8:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 247, characters 7-8:
Warning: identifier cs rebound.
File "KK.noise.active.pv", line 248, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 504, characters 7-8:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 505, characters 8-9:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 304, characters 7-8:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 304, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "KK.noise.active.pv", line 305, characters 6-7:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 241, characters 7-8:
Warning: identifier cs rebound.
File "KK.noise.active.pv", line 242, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 497, characters 8-9:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 336, characters 6-7:
Warning: identifier re rebound.
File "KK.noise.active.pv", line 337, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 339, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 340, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 341, characters 7-8:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 343, characters 7-8:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 222, characters 7-8:
Warning: identifier ck rebound.
File "KK.noise.active.pv", line 222, characters 7-8:
Warning: identifier ck rebound.
File "KK.noise.active.pv", line 247, characters 7-8:
Warning: identifier cs rebound.
File "KK.noise.active.pv", line 248, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 489, characters 8-9:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 275, character 6:
Warning: identifier e rebound.
File "KK.noise.active.pv", line 276, characters 6-7:
Warning: identifier ne rebound.
File "KK.noise.active.pv", line 277, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 279, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 280, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 281, characters 7-8:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 281, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "KK.noise.active.pv", line 282, characters 6-7:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 222, characters 7-8:
Warning: identifier ck rebound.
File "KK.noise.active.pv", line 222, characters 7-8:
Warning: identifier ck rebound.
File "KK.noise.active.pv", line 241, characters 7-8:
Warning: identifier cs rebound.
File "KK.noise.active.pv", line 242, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 262, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 263, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 565, characters 7-8:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 566, characters 8-9:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 312, characters 7-8:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 312, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "KK.noise.active.pv", line 313, characters 6-7:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 241, characters 7-8:
Warning: identifier cs rebound.
File "KK.noise.active.pv", line 242, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 556, characters 7-8:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 558, characters 8-9:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 352, characters 7-8:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 354, characters 7-8:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 247, characters 7-8:
Warning: identifier cs rebound.
File "KK.noise.active.pv", line 248, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 549, characters 8-9:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 289, character 6:
Warning: identifier e rebound.
File "KK.noise.active.pv", line 290, characters 6-7:
Warning: identifier ne rebound.
File "KK.noise.active.pv", line 291, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 293, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 294, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 295, characters 7-8:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 295, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "KK.noise.active.pv", line 296, characters 6-7:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 222, characters 7-8:
Warning: identifier ck rebound.
File "KK.noise.active.pv", line 222, characters 7-8:
Warning: identifier ck rebound.
File "KK.noise.active.pv", line 241, characters 7-8:
Warning: identifier cs rebound.
File "KK.noise.active.pv", line 242, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 542, characters 8-9:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 321, characters 6-7:
Warning: identifier re rebound.
File "KK.noise.active.pv", line 322, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 324, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 325, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 326, characters 7-8:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 328, characters 7-8:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 222, characters 7-8:
Warning: identifier ck rebound.
File "KK.noise.active.pv", line 222, characters 7-8:
Warning: identifier ck rebound.
File "KK.noise.active.pv", line 247, characters 7-8:
Warning: identifier cs rebound.
File "KK.noise.active.pv", line 248, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 268, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 269, characters 6-7:
Warning: identifier ss rebound.
Linear part:
dhexp(b_76,dhexp(a_75,g)) = dhexp(a_75,dhexp(b_76,g))
Completing equations...
Completed equations:
dhexp(b_76,dhexp(a_75,g)) = dhexp(a_75,dhexp(b_76,g))
Convergent part:
Completing equations...
Completed equations:
Process:
{1}out(pub, key_s(charlie));
{2}!
{3}new sid: sessionid;
(
    {4}let v_513: key = catch-fail(dhexp(key_s(alice),g)) in
    {5}let s_514: keypair = (if not-caught-fail(v_513) then keypairpack(v_513,key_s(alice)) else fail-any) in
    {6}out(pub, getpublickey(s_514));
    (
        {7}let e_515: keypair = keypairpack(empty,empty) in
        {8}let v_516: key = catch-fail(dhexp(key_s(bob),g)) in
        {9}let rs_517: key = getpublickey((if not-caught-fail(v_516) then keypairpack(v_516,key_s(bob)) else fail-any)) in
        {10}let re_518: key = empty in
        {11}let v_519: bitstring = catch-fail(hash(somename,empty)) in
        {12}let v_520: key = catch-fail(v_519) in
        {13}let v_521: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {14}let v_522: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_519) then (if not-caught-fail(v_520) then (if not-caught-fail(v_521) then symmetricstatepack(v_521,v_520,v_519) else fail-any) else fail-any) else fail-any))) in
        {15}let v_523: symmetricstate = catch-fail((if success?((if not-caught-fail(v_519) then (if not-caught-fail(v_520) then (if not-caught-fail(v_521) then symmetricstatepack(v_521,v_520,v_519) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_522) && success?(is-true(success?(1-proj-3-tuple(v_522))))) then symmetricstatepack(1-proj-3-tuple(v_522),2-proj-3-tuple(v_522),hash(3-proj-3-tuple(v_522),empty)) else fail-any) else fail-any)) in
        {16}let v_524: bitstring = catch-fail(symmetricstateunpack(v_523)) in
        {17}let v_525: symmetricstate = catch-fail((if success?(getpublickey(s_514)) then (if (not-caught-fail(v_524) && success?(is-true(success?(1-proj-3-tuple(v_524))))) then symmetricstatepack(1-proj-3-tuple(v_524),2-proj-3-tuple(v_524),hash(3-proj-3-tuple(v_524),getpublickey(s_514))) else fail-any) else fail-any)) in
        {18}let v_526: bitstring = catch-fail(symmetricstateunpack(v_525)) in
        {19}let v_527: symmetricstate = catch-fail((if (not-caught-fail(v_526) && success?(is-true(success?(1-proj-3-tuple(v_526))))) then symmetricstatepack(1-proj-3-tuple(v_526),2-proj-3-tuple(v_526),hash(3-proj-3-tuple(v_526),rs_517)) else fail-any)) in
        {20}let hs: handshakestate = (if not-caught-fail(v_523) then (if not-caught-fail(v_525) then (if not-caught-fail(v_527) then handshakestatepack(v_527,s_514,e_515,rs_517,re_518,empty,true) else fail-any) else fail-any) else fail-any) in
        {21}insert statestore(alice,bob,sid,statepack_a(hs))
    ) | (
        {58}get statestore(=alice,=bob,=sid,statepack_a(hs_528: handshakestate)) in
        {22}let v_529: bitstring = catch-fail(handshakestateunpack(hs_528)) in
        {23}let v_530: bitstring = catch-fail((empty,empty,empty)) in
        {24}let v_531: key = catch-fail(dhexp(key_e(alice,bob,sid),g)) in
        {25}let v_532: keypair = catch-fail((if not-caught-fail(v_531) then keypairpack(v_531,key_e(alice,bob,sid)) else fail-any)) in
        {26}let v_533: bitstring = catch-fail(getpublickey(v_532)) in
        {27}let v_534: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_529))) in
        {28}let v_535: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_529)) then (if (not-caught-fail(v_534) && success?(is-true(success?(1-proj-3-tuple(v_534))))) then symmetricstatepack(1-proj-3-tuple(v_534),2-proj-3-tuple(v_534),hash(3-proj-3-tuple(v_534),v_533)) else fail-any) else fail-any)) in
        {29}let v_536: bitstring = catch-fail(keypairunpack(v_532)) in
        {30}let v_537: bitstring = catch-fail(symmetricstateunpack(v_535)) in
        {31}let v_538: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_537),(if success?(4-proj-7-tuple(v_529)) then (if (not-caught-fail(v_536) && success?(is-true(success?(1-proj-2-tuple(v_536))))) then dhexp(2-proj-2-tuple(v_536),4-proj-7-tuple(v_529)) else fail-any) else fail-any))) in
        {32}let v_539: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_537),(if success?(4-proj-7-tuple(v_529)) then (if (not-caught-fail(v_536) && success?(is-true(success?(1-proj-2-tuple(v_536))))) then dhexp(2-proj-2-tuple(v_536),4-proj-7-tuple(v_529)) else fail-any) else fail-any))) in
        {33}let v_540: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_537),(if success?(4-proj-7-tuple(v_529)) then (if (not-caught-fail(v_536) && success?(is-true(success?(1-proj-2-tuple(v_536))))) then dhexp(2-proj-2-tuple(v_536),4-proj-7-tuple(v_529)) else fail-any) else fail-any))) in
        {34}let v_541: bitstring = catch-fail((if (success?((if success?(4-proj-7-tuple(v_529)) then (if (not-caught-fail(v_536) && success?(is-true(success?(1-proj-2-tuple(v_536))))) then dhexp(2-proj-2-tuple(v_536),4-proj-7-tuple(v_529)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_537))) then (if not-caught-fail(v_538) then (if not-caught-fail(v_539) then (if not-caught-fail(v_540) then (v_538,v_539,v_540) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {35}let v_542: symmetricstate = catch-fail((if success?((if success?(4-proj-7-tuple(v_529)) then (if (not-caught-fail(v_536) && success?(is-true(success?(1-proj-2-tuple(v_536))))) then dhexp(2-proj-2-tuple(v_536),4-proj-7-tuple(v_529)) else fail-any) else fail-any)) then (if (not-caught-fail(v_537) && success?(is-true(success?(1-proj-3-tuple(v_537))))) then (if (not-caught-fail(v_541) && success?(is-true(success?(1-proj-3-tuple(v_541))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_541)) then cipherstatepack(2-proj-3-tuple(v_541),minnonce) else fail-any),1-proj-3-tuple(v_541),3-proj-3-tuple(v_537)) else fail-any) else fail-any) else fail-any)) in
        {36}let v_543: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_529))) in
        {37}let v_544: bitstring = catch-fail(symmetricstateunpack(v_542)) in
        {38}let v_545: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_544),(if (success?(4-proj-7-tuple(v_529)) && success?(2-proj-7-tuple(v_529))) then (if (not-caught-fail(v_543) && success?(is-true(success?(1-proj-2-tuple(v_543))))) then dhexp(2-proj-2-tuple(v_543),4-proj-7-tuple(v_529)) else fail-any) else fail-any))) in
        {39}let v_546: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_544),(if (success?(4-proj-7-tuple(v_529)) && success?(2-proj-7-tuple(v_529))) then (if (not-caught-fail(v_543) && success?(is-true(success?(1-proj-2-tuple(v_543))))) then dhexp(2-proj-2-tuple(v_543),4-proj-7-tuple(v_529)) else fail-any) else fail-any))) in
        {40}let v_547: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_544),(if (success?(4-proj-7-tuple(v_529)) && success?(2-proj-7-tuple(v_529))) then (if (not-caught-fail(v_543) && success?(is-true(success?(1-proj-2-tuple(v_543))))) then dhexp(2-proj-2-tuple(v_543),4-proj-7-tuple(v_529)) else fail-any) else fail-any))) in
        {41}let v_548: bitstring = catch-fail((if (success?((if (success?(4-proj-7-tuple(v_529)) && success?(2-proj-7-tuple(v_529))) then (if (not-caught-fail(v_543) && success?(is-true(success?(1-proj-2-tuple(v_543))))) then dhexp(2-proj-2-tuple(v_543),4-proj-7-tuple(v_529)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_544))) then (if not-caught-fail(v_545) then (if not-caught-fail(v_546) then (if not-caught-fail(v_547) then (v_545,v_546,v_547) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {42}let v_549: symmetricstate = catch-fail((if success?((if (success?(4-proj-7-tuple(v_529)) && success?(2-proj-7-tuple(v_529))) then (if (not-caught-fail(v_543) && success?(is-true(success?(1-proj-2-tuple(v_543))))) then dhexp(2-proj-2-tuple(v_543),4-proj-7-tuple(v_529)) else fail-any) else fail-any)) then (if (not-caught-fail(v_544) && success?(is-true(success?(1-proj-3-tuple(v_544))))) then (if (not-caught-fail(v_548) && success?(is-true(success?(1-proj-3-tuple(v_548))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_548)) then cipherstatepack(2-proj-3-tuple(v_548),minnonce) else fail-any),1-proj-3-tuple(v_548),3-proj-3-tuple(v_544)) else fail-any) else fail-any) else fail-any)) in
        {43}let v_550: bitstring = catch-fail(symmetricstateunpack(v_549)) in
        {44}let v_551: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_550))) in
        {45}let v_552: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_551),2-proj-2-tuple(v_551),3-proj-3-tuple(v_550),msg_a(alice,bob,sid))) in
        {46}let v_553: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_550))) in
        {47}let v_554: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_551))) && success?(1-proj-3-tuple(v_550))) then (if (not-caught-fail(v_553) && success?(is-true(success?(1-proj-2-tuple(v_553))))) then cipherstatepack(1-proj-2-tuple(v_553),increment_nonce(2-proj-2-tuple(v_551))) else fail-any) else fail-any)) in
        {48}let v_555: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_550)) && success?(1-proj-3-tuple(v_550))) then (if (not-caught-fail(v_551) && success?(is-true(success?(1-proj-2-tuple(v_551))))) then (if not-caught-fail(v_552) then (if not-caught-fail(v_554) then (v_554,v_552) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {49}let v_556: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_555),2-proj-3-tuple(v_550),3-proj-3-tuple(v_550)))) in
        {50}let v_557: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_555)) && success?(symmetricstatepack(1-proj-2-tuple(v_555),2-proj-3-tuple(v_550),3-proj-3-tuple(v_550)))) then (if (not-caught-fail(v_556) && success?(is-true(success?(1-proj-3-tuple(v_556))))) then symmetricstatepack(1-proj-3-tuple(v_556),2-proj-3-tuple(v_556),hash(3-proj-3-tuple(v_556),2-proj-2-tuple(v_555))) else fail-any) else fail-any)) in
        {51}let v_558: bitstring = catch-fail((if (not-caught-fail(v_550) && success?(is-true(success?(1-proj-3-tuple(v_550))))) then (if (not-caught-fail(v_555) && success?(is-true(success?(1-proj-2-tuple(v_555))))) then (if not-caught-fail(v_557) then (v_557,2-proj-2-tuple(v_555)) else fail-any) else fail-any) else fail-any)) in
        {52}let v_559: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_558),2-proj-7-tuple(v_529),v_532,4-proj-7-tuple(v_529),5-proj-7-tuple(v_529),6-proj-7-tuple(v_529),7-proj-7-tuple(v_529))) in
        {53}let v_560: bitstring = catch-fail(concat3(v_533,2-proj-3-tuple(v_530),2-proj-2-tuple(v_558))) in
        {54}let (hs_561: handshakestate,message_a: bitstring) = (if (not-caught-fail(v_529) && success?(is-true(success?(1-proj-7-tuple(v_529))))) then (if (not-caught-fail(v_530) && success?(is-true(success?(1-proj-3-tuple(v_530))))) then (if not-caught-fail(v_532) then (if not-caught-fail(v_533) then (if not-caught-fail(v_535) then (if not-caught-fail(v_542) then (if not-caught-fail(v_549) then (if (not-caught-fail(v_558) && success?(is-true(success?(1-proj-2-tuple(v_558))))) then (if not-caught-fail(v_559) then (if not-caught-fail(v_560) then (v_559,v_560) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {55}event SendMsg(alice,bob,stagepack_a(sid),msg_a(alice,bob,sid));
        {56}insert statestore(alice,bob,sid,statepack_b(hs_561));
        {57}out(pub, message_a)
    ) | (
        {102}get statestore(=alice,=bob,=sid,statepack_b(hs_562: handshakestate)) in
        {59}in(pub, message_b: bitstring);
        {60}let v_563: bitstring = catch-fail(handshakestateunpack(hs_562)) in
        {61}let v_564: bitstring = catch-fail(deconcat3(message_b)) in
        {62}let v_565: bool = catch-fail(true) in
        {63}let v_566: key = catch-fail(1-proj-3-tuple(v_564)) in
        {64}let v_567: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_563))) in
        {65}let v_568: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_563)) then (if (not-caught-fail(v_567) && success?(is-true(success?(1-proj-3-tuple(v_567))))) then symmetricstatepack(1-proj-3-tuple(v_567),2-proj-3-tuple(v_567),hash(3-proj-3-tuple(v_567),v_566)) else fail-any) else fail-any)) in
        {66}let v_569: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_563))) in
        {67}let v_570: bitstring = catch-fail(symmetricstateunpack(v_568)) in
        {68}let v_571: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_570),(if success?(3-proj-7-tuple(v_563)) then (if (not-caught-fail(v_569) && success?(is-true(success?(1-proj-2-tuple(v_569))))) then dhexp(2-proj-2-tuple(v_569),v_566) else fail-any) else fail-any))) in
        {69}let v_572: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_570),(if success?(3-proj-7-tuple(v_563)) then (if (not-caught-fail(v_569) && success?(is-true(success?(1-proj-2-tuple(v_569))))) then dhexp(2-proj-2-tuple(v_569),v_566) else fail-any) else fail-any))) in
        {70}let v_573: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_570),(if success?(3-proj-7-tuple(v_563)) then (if (not-caught-fail(v_569) && success?(is-true(success?(1-proj-2-tuple(v_569))))) then dhexp(2-proj-2-tuple(v_569),v_566) else fail-any) else fail-any))) in
        {71}let v_574: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_563)) then (if (not-caught-fail(v_569) && success?(is-true(success?(1-proj-2-tuple(v_569))))) then dhexp(2-proj-2-tuple(v_569),v_566) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_570))) then (if not-caught-fail(v_571) then (if not-caught-fail(v_572) then (if not-caught-fail(v_573) then (v_571,v_572,v_573) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {72}let v_575: symmetricstate = catch-fail((if success?((if success?(3-proj-7-tuple(v_563)) then (if (not-caught-fail(v_569) && success?(is-true(success?(1-proj-2-tuple(v_569))))) then dhexp(2-proj-2-tuple(v_569),v_566) else fail-any) else fail-any)) then (if (not-caught-fail(v_570) && success?(is-true(success?(1-proj-3-tuple(v_570))))) then (if (not-caught-fail(v_574) && success?(is-true(success?(1-proj-3-tuple(v_574))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_574)) then cipherstatepack(2-proj-3-tuple(v_574),minnonce) else fail-any),1-proj-3-tuple(v_574),3-proj-3-tuple(v_570)) else fail-any) else fail-any) else fail-any)) in
        {73}let v_576: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_563))) in
        {74}let v_577: bitstring = catch-fail(symmetricstateunpack(v_575)) in
        {75}let v_578: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_577),(if success?(2-proj-7-tuple(v_563)) then (if (not-caught-fail(v_576) && success?(is-true(success?(1-proj-2-tuple(v_576))))) then dhexp(2-proj-2-tuple(v_576),v_566) else fail-any) else fail-any))) in
        {76}let v_579: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_577),(if success?(2-proj-7-tuple(v_563)) then (if (not-caught-fail(v_576) && success?(is-true(success?(1-proj-2-tuple(v_576))))) then dhexp(2-proj-2-tuple(v_576),v_566) else fail-any) else fail-any))) in
        {77}let v_580: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_577),(if success?(2-proj-7-tuple(v_563)) then (if (not-caught-fail(v_576) && success?(is-true(success?(1-proj-2-tuple(v_576))))) then dhexp(2-proj-2-tuple(v_576),v_566) else fail-any) else fail-any))) in
        {78}let v_581: bitstring = catch-fail((if (success?((if success?(2-proj-7-tuple(v_563)) then (if (not-caught-fail(v_576) && success?(is-true(success?(1-proj-2-tuple(v_576))))) then dhexp(2-proj-2-tuple(v_576),v_566) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_577))) then (if not-caught-fail(v_578) then (if not-caught-fail(v_579) then (if not-caught-fail(v_580) then (v_578,v_579,v_580) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {79}let v_582: symmetricstate = catch-fail((if success?((if success?(2-proj-7-tuple(v_563)) then (if (not-caught-fail(v_576) && success?(is-true(success?(1-proj-2-tuple(v_576))))) then dhexp(2-proj-2-tuple(v_576),v_566) else fail-any) else fail-any)) then (if (not-caught-fail(v_577) && success?(is-true(success?(1-proj-3-tuple(v_577))))) then (if (not-caught-fail(v_581) && success?(is-true(success?(1-proj-3-tuple(v_581))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_581)) then cipherstatepack(2-proj-3-tuple(v_581),minnonce) else fail-any),1-proj-3-tuple(v_581),3-proj-3-tuple(v_577)) else fail-any) else fail-any) else fail-any)) in
        {80}let v_583: bitstring = catch-fail(symmetricstateunpack(v_582)) in
        {81}let v_584: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_583))) in
        {82}let v_585: aead = catch-fail(decrypt(1-proj-2-tuple(v_584),2-proj-2-tuple(v_584),3-proj-3-tuple(v_583),3-proj-3-tuple(v_564))) in
        {83}let v_586: bitstring = catch-fail(aeadunpack(v_585)) in
        {84}let v_587: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_583))) in
        {85}let v_588: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_584))) && success?(1-proj-3-tuple(v_583))) then (if (not-caught-fail(v_587) && success?(is-true(success?(1-proj-2-tuple(v_587))))) then cipherstatepack(1-proj-2-tuple(v_587),increment_nonce(2-proj-2-tuple(v_584))) else fail-any) else fail-any)) in
        {86}let v_589: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_564)) && (success?(3-proj-3-tuple(v_583)) && success?(1-proj-3-tuple(v_583)))) then (if (not-caught-fail(v_584) && success?(is-true(success?(1-proj-2-tuple(v_584))))) then (if not-caught-fail(v_585) then (if (not-caught-fail(v_586) && success?(is-true(success?(1-proj-3-tuple(v_586))))) then (if not-caught-fail(v_588) then (v_588,3-proj-3-tuple(v_586),1-proj-3-tuple(v_586)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {87}let v_590: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_589),2-proj-3-tuple(v_583),3-proj-3-tuple(v_583)))) in
        {88}let v_591: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_564)) && success?(symmetricstatepack(1-proj-3-tuple(v_589),2-proj-3-tuple(v_583),3-proj-3-tuple(v_583)))) then (if (not-caught-fail(v_590) && success?(is-true(success?(1-proj-3-tuple(v_590))))) then symmetricstatepack(1-proj-3-tuple(v_590),2-proj-3-tuple(v_590),hash(3-proj-3-tuple(v_590),3-proj-3-tuple(v_564))) else fail-any) else fail-any)) in
        {89}let v_592: bitstring = catch-fail((if success?(3-proj-3-tuple(v_564)) then (if (not-caught-fail(v_583) && success?(is-true(success?(1-proj-3-tuple(v_583))))) then (if (not-caught-fail(v_589) && success?(is-true(success?(1-proj-3-tuple(v_589))))) then (if not-caught-fail(v_591) then (v_591,2-proj-3-tuple(v_589),3-proj-3-tuple(v_589)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {90}let v_593: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_592),2-proj-7-tuple(v_563),3-proj-7-tuple(v_563),4-proj-7-tuple(v_563),v_566,6-proj-7-tuple(v_563),7-proj-7-tuple(v_563))) in
        {91}let v_594: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_592))) in
        {92}let v_595: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_594),zero)) in
        {93}let v_596: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_594),zero)) in
        {94}let v_597: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_594),zero)) in
        {95}let v_598: bitstring = catch-fail((if success?(2-proj-3-tuple(v_594)) then (if not-caught-fail(v_595) then (if not-caught-fail(v_596) then (if not-caught-fail(v_597) then (v_595,v_596,v_597) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {96}let v_599: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_598)) then cipherstatepack(1-proj-3-tuple(v_598),minnonce) else fail-any)) in
        {97}let v_600: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_598)) then cipherstatepack(2-proj-3-tuple(v_598),minnonce) else fail-any)) in
        {98}let v_601: bitstring = catch-fail((if success?(1-proj-3-tuple(v_592)) then (if (not-caught-fail(v_594) && success?(is-true(success?(1-proj-3-tuple(v_594))))) then (if (not-caught-fail(v_598) && success?(is-true(success?(1-proj-3-tuple(v_598))))) then (if not-caught-fail(v_599) then (if not-caught-fail(v_600) then (1-proj-3-tuple(v_592),v_599,v_600) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {99}let (hs_602: handshakestate,plaintext_b: bitstring,valid: bool,cs1: cipherstate,cs2: cipherstate) = (if (not-caught-fail(v_563) && success?(is-true(success?(1-proj-7-tuple(v_563))))) then (if (not-caught-fail(v_564) && success?(is-true(success?(1-proj-3-tuple(v_564))))) then (if not-caught-fail(v_565) then (if not-caught-fail(v_566) then (if not-caught-fail(v_568) then (if not-caught-fail(v_575) then (if not-caught-fail(v_582) then (if (not-caught-fail(v_592) && success?(is-true(success?(1-proj-3-tuple(v_592))))) then (if (v_565 && 3-proj-3-tuple(v_592)) then (if not-caught-fail(v_593) then (if (not-caught-fail(v_601) && success?(is-true(success?(1-proj-3-tuple(v_601))))) then (v_593,2-proj-3-tuple(v_592),true,2-proj-3-tuple(v_601),3-proj-3-tuple(v_601)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {100}event RecvMsg(alice,bob,stagepack_b(sid),plaintext_b);
        {101}insert statestore(alice,bob,sid,statepack_c(hs_602,cs1,cs2))
    ) | (
        {103}!
        {122}get statestore(=alice,=bob,=sid,statepack_c(hs_603: handshakestate,cs1_604: cipherstate,cs2_605: cipherstate)) in
        {104}let hs_606: handshakestate = handshakestatesetcs(hs_603,cs1_604) in
        {105}let v_607: bitstring = catch-fail(handshakestateunpack(hs_606)) in
        {106}let v_608: bitstring = catch-fail((empty,empty,empty)) in
        {107}let v_609: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_607))) in
        {108}let v_610: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_609))) in
        {109}let v_611: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_610),2-proj-2-tuple(v_610),3-proj-3-tuple(v_609),msg_c(alice,bob,sid))) in
        {110}let v_612: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_609))) in
        {111}let v_613: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_610))) && success?(1-proj-3-tuple(v_609))) then (if (not-caught-fail(v_612) && success?(is-true(success?(1-proj-2-tuple(v_612))))) then cipherstatepack(1-proj-2-tuple(v_612),increment_nonce(2-proj-2-tuple(v_610))) else fail-any) else fail-any)) in
        {112}let v_614: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_609)) && success?(1-proj-3-tuple(v_609))) then (if (not-caught-fail(v_610) && success?(is-true(success?(1-proj-2-tuple(v_610))))) then (if not-caught-fail(v_611) then (if not-caught-fail(v_613) then (v_613,v_611) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {113}let v_615: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_614),2-proj-3-tuple(v_609),3-proj-3-tuple(v_609)))) in
        {114}let v_616: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_614)) && success?(symmetricstatepack(1-proj-2-tuple(v_614),2-proj-3-tuple(v_609),3-proj-3-tuple(v_609)))) then (if (not-caught-fail(v_615) && success?(is-true(success?(1-proj-3-tuple(v_615))))) then symmetricstatepack(1-proj-3-tuple(v_615),2-proj-3-tuple(v_615),hash(3-proj-3-tuple(v_615),2-proj-2-tuple(v_614))) else fail-any) else fail-any)) in
        {115}let v_617: bitstring = catch-fail((if success?(1-proj-7-tuple(v_607)) then (if (not-caught-fail(v_609) && success?(is-true(success?(1-proj-3-tuple(v_609))))) then (if (not-caught-fail(v_614) && success?(is-true(success?(1-proj-2-tuple(v_614))))) then (if not-caught-fail(v_616) then (v_616,2-proj-2-tuple(v_614)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {116}let v_618: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_617),2-proj-7-tuple(v_607),3-proj-7-tuple(v_607),4-proj-7-tuple(v_607),5-proj-7-tuple(v_607),6-proj-7-tuple(v_607),7-proj-7-tuple(v_607))) in
        {117}let v_619: bitstring = catch-fail(concat3(1-proj-3-tuple(v_608),2-proj-3-tuple(v_608),2-proj-2-tuple(v_617))) in
        {118}let (hs_620: handshakestate,message_c: bitstring) = (if (not-caught-fail(v_607) && success?(is-true(success?(1-proj-7-tuple(v_607))))) then (if (not-caught-fail(v_608) && success?(is-true(success?(1-proj-3-tuple(v_608))))) then (if (not-caught-fail(v_617) && success?(is-true(success?(1-proj-2-tuple(v_617))))) then (if not-caught-fail(v_618) then (if not-caught-fail(v_619) then (v_618,v_619) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {119}event SendMsg(alice,bob,stagepack_c(sid),msg_c(alice,bob,sid));
        {120}insert statestore(alice,bob,sid,statepack_d(hs_620,handshakestategetcs(hs_620),cs2_605));
        {121}out(pub, message_c)
    ) | (
        {123}!
        {143}get statestore(=alice,=bob,=sid,statepack_d(hs_621: handshakestate,cs1_622: cipherstate,cs2_623: cipherstate)) in
        {124}let hs_624: handshakestate = handshakestatesetcs(hs_621,cs2_623) in
        {125}in(pub, message_d: bitstring);
        {126}let v_625: bitstring = catch-fail(handshakestateunpack(hs_624)) in
        {127}let v_626: bitstring = catch-fail(deconcat3(message_d)) in
        {128}let v_627: bool = catch-fail(true) in
        {129}let v_628: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_625))) in
        {130}let v_629: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_628))) in
        {131}let v_630: aead = catch-fail(decrypt(1-proj-2-tuple(v_629),2-proj-2-tuple(v_629),3-proj-3-tuple(v_628),3-proj-3-tuple(v_626))) in
        {132}let v_631: bitstring = catch-fail(aeadunpack(v_630)) in
        {133}let v_632: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_628))) in
        {134}let v_633: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_629))) && success?(1-proj-3-tuple(v_628))) then (if (not-caught-fail(v_632) && success?(is-true(success?(1-proj-2-tuple(v_632))))) then cipherstatepack(1-proj-2-tuple(v_632),increment_nonce(2-proj-2-tuple(v_629))) else fail-any) else fail-any)) in
        {135}let v_634: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_626)) && (success?(3-proj-3-tuple(v_628)) && success?(1-proj-3-tuple(v_628)))) then (if (not-caught-fail(v_629) && success?(is-true(success?(1-proj-2-tuple(v_629))))) then (if not-caught-fail(v_630) then (if (not-caught-fail(v_631) && success?(is-true(success?(1-proj-3-tuple(v_631))))) then (if not-caught-fail(v_633) then (v_633,3-proj-3-tuple(v_631),1-proj-3-tuple(v_631)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {136}let v_635: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_634),2-proj-3-tuple(v_628),3-proj-3-tuple(v_628)))) in
        {137}let v_636: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_626)) && success?(symmetricstatepack(1-proj-3-tuple(v_634),2-proj-3-tuple(v_628),3-proj-3-tuple(v_628)))) then (if (not-caught-fail(v_635) && success?(is-true(success?(1-proj-3-tuple(v_635))))) then symmetricstatepack(1-proj-3-tuple(v_635),2-proj-3-tuple(v_635),hash(3-proj-3-tuple(v_635),3-proj-3-tuple(v_626))) else fail-any) else fail-any)) in
        {138}let v_637: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_626)) && success?(1-proj-7-tuple(v_625))) then (if (not-caught-fail(v_628) && success?(is-true(success?(1-proj-3-tuple(v_628))))) then (if (not-caught-fail(v_634) && success?(is-true(success?(1-proj-3-tuple(v_634))))) then (if not-caught-fail(v_636) then (v_636,2-proj-3-tuple(v_634),3-proj-3-tuple(v_634)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {139}let v_638: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_637),2-proj-7-tuple(v_625),3-proj-7-tuple(v_625),4-proj-7-tuple(v_625),5-proj-7-tuple(v_625),6-proj-7-tuple(v_625),7-proj-7-tuple(v_625))) in
        {140}let (hs_639: handshakestate,plaintext_d: bitstring,valid_640: bool) = (if (not-caught-fail(v_625) && success?(is-true(success?(1-proj-7-tuple(v_625))))) then (if (not-caught-fail(v_626) && success?(is-true(success?(1-proj-3-tuple(v_626))))) then (if not-caught-fail(v_627) then (if (not-caught-fail(v_637) && success?(is-true(success?(1-proj-3-tuple(v_637))))) then (if (v_627 && 3-proj-3-tuple(v_637)) then (if not-caught-fail(v_638) then (v_638,2-proj-3-tuple(v_637),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {141}event RecvMsg(alice,bob,stagepack_d(sid),plaintext_d);
        {142}event RecvEnd(valid_640)
    ) | (
        {144}event LeakS(phase0,alice);
        {145}out(pub, key_s(alice))
    ) | (
        {146}phase 1;
        {147}event LeakS(phase1,alice);
        {148}out(pub, key_s(alice))
    )
) | (
    {149}let v_641: key = catch-fail(dhexp(key_s(alice),g)) in
    {150}let s_642: keypair = (if not-caught-fail(v_641) then keypairpack(v_641,key_s(alice)) else fail-any) in
    {151}out(pub, getpublickey(s_642));
    (
        {152}let e_643: keypair = keypairpack(empty,empty) in
        {153}let v_644: key = catch-fail(dhexp(key_s(charlie),g)) in
        {154}let rs_645: key = getpublickey((if not-caught-fail(v_644) then keypairpack(v_644,key_s(charlie)) else fail-any)) in
        {155}let re_646: key = empty in
        {156}let v_647: bitstring = catch-fail(hash(somename,empty)) in
        {157}let v_648: key = catch-fail(v_647) in
        {158}let v_649: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {159}let v_650: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_647) then (if not-caught-fail(v_648) then (if not-caught-fail(v_649) then symmetricstatepack(v_649,v_648,v_647) else fail-any) else fail-any) else fail-any))) in
        {160}let v_651: symmetricstate = catch-fail((if success?((if not-caught-fail(v_647) then (if not-caught-fail(v_648) then (if not-caught-fail(v_649) then symmetricstatepack(v_649,v_648,v_647) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_650) && success?(is-true(success?(1-proj-3-tuple(v_650))))) then symmetricstatepack(1-proj-3-tuple(v_650),2-proj-3-tuple(v_650),hash(3-proj-3-tuple(v_650),empty)) else fail-any) else fail-any)) in
        {161}let v_652: bitstring = catch-fail(symmetricstateunpack(v_651)) in
        {162}let v_653: symmetricstate = catch-fail((if success?(getpublickey(s_642)) then (if (not-caught-fail(v_652) && success?(is-true(success?(1-proj-3-tuple(v_652))))) then symmetricstatepack(1-proj-3-tuple(v_652),2-proj-3-tuple(v_652),hash(3-proj-3-tuple(v_652),getpublickey(s_642))) else fail-any) else fail-any)) in
        {163}let v_654: bitstring = catch-fail(symmetricstateunpack(v_653)) in
        {164}let v_655: symmetricstate = catch-fail((if (not-caught-fail(v_654) && success?(is-true(success?(1-proj-3-tuple(v_654))))) then symmetricstatepack(1-proj-3-tuple(v_654),2-proj-3-tuple(v_654),hash(3-proj-3-tuple(v_654),rs_645)) else fail-any)) in
        {165}let hs_656: handshakestate = (if not-caught-fail(v_651) then (if not-caught-fail(v_653) then (if not-caught-fail(v_655) then handshakestatepack(v_655,s_642,e_643,rs_645,re_646,empty,true) else fail-any) else fail-any) else fail-any) in
        {166}insert statestore(alice,charlie,sid,statepack_a(hs_656))
    ) | (
        {203}get statestore(=alice,=charlie,=sid,statepack_a(hs_657: handshakestate)) in
        {167}let v_658: bitstring = catch-fail(handshakestateunpack(hs_657)) in
        {168}let v_659: bitstring = catch-fail((empty,empty,empty)) in
        {169}let v_660: key = catch-fail(dhexp(key_e(alice,charlie,sid),g)) in
        {170}let v_661: keypair = catch-fail((if not-caught-fail(v_660) then keypairpack(v_660,key_e(alice,charlie,sid)) else fail-any)) in
        {171}let v_662: bitstring = catch-fail(getpublickey(v_661)) in
        {172}let v_663: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_658))) in
        {173}let v_664: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_658)) then (if (not-caught-fail(v_663) && success?(is-true(success?(1-proj-3-tuple(v_663))))) then symmetricstatepack(1-proj-3-tuple(v_663),2-proj-3-tuple(v_663),hash(3-proj-3-tuple(v_663),v_662)) else fail-any) else fail-any)) in
        {174}let v_665: bitstring = catch-fail(keypairunpack(v_661)) in
        {175}let v_666: bitstring = catch-fail(symmetricstateunpack(v_664)) in
        {176}let v_667: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_666),(if success?(4-proj-7-tuple(v_658)) then (if (not-caught-fail(v_665) && success?(is-true(success?(1-proj-2-tuple(v_665))))) then dhexp(2-proj-2-tuple(v_665),4-proj-7-tuple(v_658)) else fail-any) else fail-any))) in
        {177}let v_668: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_666),(if success?(4-proj-7-tuple(v_658)) then (if (not-caught-fail(v_665) && success?(is-true(success?(1-proj-2-tuple(v_665))))) then dhexp(2-proj-2-tuple(v_665),4-proj-7-tuple(v_658)) else fail-any) else fail-any))) in
        {178}let v_669: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_666),(if success?(4-proj-7-tuple(v_658)) then (if (not-caught-fail(v_665) && success?(is-true(success?(1-proj-2-tuple(v_665))))) then dhexp(2-proj-2-tuple(v_665),4-proj-7-tuple(v_658)) else fail-any) else fail-any))) in
        {179}let v_670: bitstring = catch-fail((if (success?((if success?(4-proj-7-tuple(v_658)) then (if (not-caught-fail(v_665) && success?(is-true(success?(1-proj-2-tuple(v_665))))) then dhexp(2-proj-2-tuple(v_665),4-proj-7-tuple(v_658)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_666))) then (if not-caught-fail(v_667) then (if not-caught-fail(v_668) then (if not-caught-fail(v_669) then (v_667,v_668,v_669) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {180}let v_671: symmetricstate = catch-fail((if success?((if success?(4-proj-7-tuple(v_658)) then (if (not-caught-fail(v_665) && success?(is-true(success?(1-proj-2-tuple(v_665))))) then dhexp(2-proj-2-tuple(v_665),4-proj-7-tuple(v_658)) else fail-any) else fail-any)) then (if (not-caught-fail(v_666) && success?(is-true(success?(1-proj-3-tuple(v_666))))) then (if (not-caught-fail(v_670) && success?(is-true(success?(1-proj-3-tuple(v_670))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_670)) then cipherstatepack(2-proj-3-tuple(v_670),minnonce) else fail-any),1-proj-3-tuple(v_670),3-proj-3-tuple(v_666)) else fail-any) else fail-any) else fail-any)) in
        {181}let v_672: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_658))) in
        {182}let v_673: bitstring = catch-fail(symmetricstateunpack(v_671)) in
        {183}let v_674: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_673),(if (success?(4-proj-7-tuple(v_658)) && success?(2-proj-7-tuple(v_658))) then (if (not-caught-fail(v_672) && success?(is-true(success?(1-proj-2-tuple(v_672))))) then dhexp(2-proj-2-tuple(v_672),4-proj-7-tuple(v_658)) else fail-any) else fail-any))) in
        {184}let v_675: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_673),(if (success?(4-proj-7-tuple(v_658)) && success?(2-proj-7-tuple(v_658))) then (if (not-caught-fail(v_672) && success?(is-true(success?(1-proj-2-tuple(v_672))))) then dhexp(2-proj-2-tuple(v_672),4-proj-7-tuple(v_658)) else fail-any) else fail-any))) in
        {185}let v_676: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_673),(if (success?(4-proj-7-tuple(v_658)) && success?(2-proj-7-tuple(v_658))) then (if (not-caught-fail(v_672) && success?(is-true(success?(1-proj-2-tuple(v_672))))) then dhexp(2-proj-2-tuple(v_672),4-proj-7-tuple(v_658)) else fail-any) else fail-any))) in
        {186}let v_677: bitstring = catch-fail((if (success?((if (success?(4-proj-7-tuple(v_658)) && success?(2-proj-7-tuple(v_658))) then (if (not-caught-fail(v_672) && success?(is-true(success?(1-proj-2-tuple(v_672))))) then dhexp(2-proj-2-tuple(v_672),4-proj-7-tuple(v_658)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_673))) then (if not-caught-fail(v_674) then (if not-caught-fail(v_675) then (if not-caught-fail(v_676) then (v_674,v_675,v_676) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {187}let v_678: symmetricstate = catch-fail((if success?((if (success?(4-proj-7-tuple(v_658)) && success?(2-proj-7-tuple(v_658))) then (if (not-caught-fail(v_672) && success?(is-true(success?(1-proj-2-tuple(v_672))))) then dhexp(2-proj-2-tuple(v_672),4-proj-7-tuple(v_658)) else fail-any) else fail-any)) then (if (not-caught-fail(v_673) && success?(is-true(success?(1-proj-3-tuple(v_673))))) then (if (not-caught-fail(v_677) && success?(is-true(success?(1-proj-3-tuple(v_677))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_677)) then cipherstatepack(2-proj-3-tuple(v_677),minnonce) else fail-any),1-proj-3-tuple(v_677),3-proj-3-tuple(v_673)) else fail-any) else fail-any) else fail-any)) in
        {188}let v_679: bitstring = catch-fail(symmetricstateunpack(v_678)) in
        {189}let v_680: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_679))) in
        {190}let v_681: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_680),2-proj-2-tuple(v_680),3-proj-3-tuple(v_679),msg_a(alice,charlie,sid))) in
        {191}let v_682: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_679))) in
        {192}let v_683: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_680))) && success?(1-proj-3-tuple(v_679))) then (if (not-caught-fail(v_682) && success?(is-true(success?(1-proj-2-tuple(v_682))))) then cipherstatepack(1-proj-2-tuple(v_682),increment_nonce(2-proj-2-tuple(v_680))) else fail-any) else fail-any)) in
        {193}let v_684: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_679)) && success?(1-proj-3-tuple(v_679))) then (if (not-caught-fail(v_680) && success?(is-true(success?(1-proj-2-tuple(v_680))))) then (if not-caught-fail(v_681) then (if not-caught-fail(v_683) then (v_683,v_681) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {194}let v_685: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_684),2-proj-3-tuple(v_679),3-proj-3-tuple(v_679)))) in
        {195}let v_686: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_684)) && success?(symmetricstatepack(1-proj-2-tuple(v_684),2-proj-3-tuple(v_679),3-proj-3-tuple(v_679)))) then (if (not-caught-fail(v_685) && success?(is-true(success?(1-proj-3-tuple(v_685))))) then symmetricstatepack(1-proj-3-tuple(v_685),2-proj-3-tuple(v_685),hash(3-proj-3-tuple(v_685),2-proj-2-tuple(v_684))) else fail-any) else fail-any)) in
        {196}let v_687: bitstring = catch-fail((if (not-caught-fail(v_679) && success?(is-true(success?(1-proj-3-tuple(v_679))))) then (if (not-caught-fail(v_684) && success?(is-true(success?(1-proj-2-tuple(v_684))))) then (if not-caught-fail(v_686) then (v_686,2-proj-2-tuple(v_684)) else fail-any) else fail-any) else fail-any)) in
        {197}let v_688: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_687),2-proj-7-tuple(v_658),v_661,4-proj-7-tuple(v_658),5-proj-7-tuple(v_658),6-proj-7-tuple(v_658),7-proj-7-tuple(v_658))) in
        {198}let v_689: bitstring = catch-fail(concat3(v_662,2-proj-3-tuple(v_659),2-proj-2-tuple(v_687))) in
        {199}let (hs_690: handshakestate,message_a_691: bitstring) = (if (not-caught-fail(v_658) && success?(is-true(success?(1-proj-7-tuple(v_658))))) then (if (not-caught-fail(v_659) && success?(is-true(success?(1-proj-3-tuple(v_659))))) then (if not-caught-fail(v_661) then (if not-caught-fail(v_662) then (if not-caught-fail(v_664) then (if not-caught-fail(v_671) then (if not-caught-fail(v_678) then (if (not-caught-fail(v_687) && success?(is-true(success?(1-proj-2-tuple(v_687))))) then (if not-caught-fail(v_688) then (if not-caught-fail(v_689) then (v_688,v_689) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {200}event SendMsg(alice,charlie,stagepack_a(sid),msg_a(alice,charlie,sid));
        {201}insert statestore(alice,charlie,sid,statepack_b(hs_690));
        {202}out(pub, message_a_691)
    ) | (
        {247}get statestore(=alice,=charlie,=sid,statepack_b(hs_692: handshakestate)) in
        {204}in(pub, message_b_693: bitstring);
        {205}let v_694: bitstring = catch-fail(handshakestateunpack(hs_692)) in
        {206}let v_695: bitstring = catch-fail(deconcat3(message_b_693)) in
        {207}let v_696: bool = catch-fail(true) in
        {208}let v_697: key = catch-fail(1-proj-3-tuple(v_695)) in
        {209}let v_698: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_694))) in
        {210}let v_699: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_694)) then (if (not-caught-fail(v_698) && success?(is-true(success?(1-proj-3-tuple(v_698))))) then symmetricstatepack(1-proj-3-tuple(v_698),2-proj-3-tuple(v_698),hash(3-proj-3-tuple(v_698),v_697)) else fail-any) else fail-any)) in
        {211}let v_700: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_694))) in
        {212}let v_701: bitstring = catch-fail(symmetricstateunpack(v_699)) in
        {213}let v_702: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_701),(if success?(3-proj-7-tuple(v_694)) then (if (not-caught-fail(v_700) && success?(is-true(success?(1-proj-2-tuple(v_700))))) then dhexp(2-proj-2-tuple(v_700),v_697) else fail-any) else fail-any))) in
        {214}let v_703: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_701),(if success?(3-proj-7-tuple(v_694)) then (if (not-caught-fail(v_700) && success?(is-true(success?(1-proj-2-tuple(v_700))))) then dhexp(2-proj-2-tuple(v_700),v_697) else fail-any) else fail-any))) in
        {215}let v_704: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_701),(if success?(3-proj-7-tuple(v_694)) then (if (not-caught-fail(v_700) && success?(is-true(success?(1-proj-2-tuple(v_700))))) then dhexp(2-proj-2-tuple(v_700),v_697) else fail-any) else fail-any))) in
        {216}let v_705: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_694)) then (if (not-caught-fail(v_700) && success?(is-true(success?(1-proj-2-tuple(v_700))))) then dhexp(2-proj-2-tuple(v_700),v_697) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_701))) then (if not-caught-fail(v_702) then (if not-caught-fail(v_703) then (if not-caught-fail(v_704) then (v_702,v_703,v_704) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {217}let v_706: symmetricstate = catch-fail((if success?((if success?(3-proj-7-tuple(v_694)) then (if (not-caught-fail(v_700) && success?(is-true(success?(1-proj-2-tuple(v_700))))) then dhexp(2-proj-2-tuple(v_700),v_697) else fail-any) else fail-any)) then (if (not-caught-fail(v_701) && success?(is-true(success?(1-proj-3-tuple(v_701))))) then (if (not-caught-fail(v_705) && success?(is-true(success?(1-proj-3-tuple(v_705))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_705)) then cipherstatepack(2-proj-3-tuple(v_705),minnonce) else fail-any),1-proj-3-tuple(v_705),3-proj-3-tuple(v_701)) else fail-any) else fail-any) else fail-any)) in
        {218}let v_707: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_694))) in
        {219}let v_708: bitstring = catch-fail(symmetricstateunpack(v_706)) in
        {220}let v_709: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_708),(if success?(2-proj-7-tuple(v_694)) then (if (not-caught-fail(v_707) && success?(is-true(success?(1-proj-2-tuple(v_707))))) then dhexp(2-proj-2-tuple(v_707),v_697) else fail-any) else fail-any))) in
        {221}let v_710: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_708),(if success?(2-proj-7-tuple(v_694)) then (if (not-caught-fail(v_707) && success?(is-true(success?(1-proj-2-tuple(v_707))))) then dhexp(2-proj-2-tuple(v_707),v_697) else fail-any) else fail-any))) in
        {222}let v_711: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_708),(if success?(2-proj-7-tuple(v_694)) then (if (not-caught-fail(v_707) && success?(is-true(success?(1-proj-2-tuple(v_707))))) then dhexp(2-proj-2-tuple(v_707),v_697) else fail-any) else fail-any))) in
        {223}let v_712: bitstring = catch-fail((if (success?((if success?(2-proj-7-tuple(v_694)) then (if (not-caught-fail(v_707) && success?(is-true(success?(1-proj-2-tuple(v_707))))) then dhexp(2-proj-2-tuple(v_707),v_697) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_708))) then (if not-caught-fail(v_709) then (if not-caught-fail(v_710) then (if not-caught-fail(v_711) then (v_709,v_710,v_711) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {224}let v_713: symmetricstate = catch-fail((if success?((if success?(2-proj-7-tuple(v_694)) then (if (not-caught-fail(v_707) && success?(is-true(success?(1-proj-2-tuple(v_707))))) then dhexp(2-proj-2-tuple(v_707),v_697) else fail-any) else fail-any)) then (if (not-caught-fail(v_708) && success?(is-true(success?(1-proj-3-tuple(v_708))))) then (if (not-caught-fail(v_712) && success?(is-true(success?(1-proj-3-tuple(v_712))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_712)) then cipherstatepack(2-proj-3-tuple(v_712),minnonce) else fail-any),1-proj-3-tuple(v_712),3-proj-3-tuple(v_708)) else fail-any) else fail-any) else fail-any)) in
        {225}let v_714: bitstring = catch-fail(symmetricstateunpack(v_713)) in
        {226}let v_715: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_714))) in
        {227}let v_716: aead = catch-fail(decrypt(1-proj-2-tuple(v_715),2-proj-2-tuple(v_715),3-proj-3-tuple(v_714),3-proj-3-tuple(v_695))) in
        {228}let v_717: bitstring = catch-fail(aeadunpack(v_716)) in
        {229}let v_718: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_714))) in
        {230}let v_719: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_715))) && success?(1-proj-3-tuple(v_714))) then (if (not-caught-fail(v_718) && success?(is-true(success?(1-proj-2-tuple(v_718))))) then cipherstatepack(1-proj-2-tuple(v_718),increment_nonce(2-proj-2-tuple(v_715))) else fail-any) else fail-any)) in
        {231}let v_720: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_695)) && (success?(3-proj-3-tuple(v_714)) && success?(1-proj-3-tuple(v_714)))) then (if (not-caught-fail(v_715) && success?(is-true(success?(1-proj-2-tuple(v_715))))) then (if not-caught-fail(v_716) then (if (not-caught-fail(v_717) && success?(is-true(success?(1-proj-3-tuple(v_717))))) then (if not-caught-fail(v_719) then (v_719,3-proj-3-tuple(v_717),1-proj-3-tuple(v_717)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {232}let v_721: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_720),2-proj-3-tuple(v_714),3-proj-3-tuple(v_714)))) in
        {233}let v_722: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_695)) && success?(symmetricstatepack(1-proj-3-tuple(v_720),2-proj-3-tuple(v_714),3-proj-3-tuple(v_714)))) then (if (not-caught-fail(v_721) && success?(is-true(success?(1-proj-3-tuple(v_721))))) then symmetricstatepack(1-proj-3-tuple(v_721),2-proj-3-tuple(v_721),hash(3-proj-3-tuple(v_721),3-proj-3-tuple(v_695))) else fail-any) else fail-any)) in
        {234}let v_723: bitstring = catch-fail((if success?(3-proj-3-tuple(v_695)) then (if (not-caught-fail(v_714) && success?(is-true(success?(1-proj-3-tuple(v_714))))) then (if (not-caught-fail(v_720) && success?(is-true(success?(1-proj-3-tuple(v_720))))) then (if not-caught-fail(v_722) then (v_722,2-proj-3-tuple(v_720),3-proj-3-tuple(v_720)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {235}let v_724: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_723),2-proj-7-tuple(v_694),3-proj-7-tuple(v_694),4-proj-7-tuple(v_694),v_697,6-proj-7-tuple(v_694),7-proj-7-tuple(v_694))) in
        {236}let v_725: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_723))) in
        {237}let v_726: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_725),zero)) in
        {238}let v_727: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_725),zero)) in
        {239}let v_728: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_725),zero)) in
        {240}let v_729: bitstring = catch-fail((if success?(2-proj-3-tuple(v_725)) then (if not-caught-fail(v_726) then (if not-caught-fail(v_727) then (if not-caught-fail(v_728) then (v_726,v_727,v_728) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {241}let v_730: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_729)) then cipherstatepack(1-proj-3-tuple(v_729),minnonce) else fail-any)) in
        {242}let v_731: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_729)) then cipherstatepack(2-proj-3-tuple(v_729),minnonce) else fail-any)) in
        {243}let v_732: bitstring = catch-fail((if success?(1-proj-3-tuple(v_723)) then (if (not-caught-fail(v_725) && success?(is-true(success?(1-proj-3-tuple(v_725))))) then (if (not-caught-fail(v_729) && success?(is-true(success?(1-proj-3-tuple(v_729))))) then (if not-caught-fail(v_730) then (if not-caught-fail(v_731) then (1-proj-3-tuple(v_723),v_730,v_731) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {244}let (hs_733: handshakestate,plaintext_b_734: bitstring,valid_735: bool,cs1_736: cipherstate,cs2_737: cipherstate) = (if (not-caught-fail(v_694) && success?(is-true(success?(1-proj-7-tuple(v_694))))) then (if (not-caught-fail(v_695) && success?(is-true(success?(1-proj-3-tuple(v_695))))) then (if not-caught-fail(v_696) then (if not-caught-fail(v_697) then (if not-caught-fail(v_699) then (if not-caught-fail(v_706) then (if not-caught-fail(v_713) then (if (not-caught-fail(v_723) && success?(is-true(success?(1-proj-3-tuple(v_723))))) then (if (v_696 && 3-proj-3-tuple(v_723)) then (if not-caught-fail(v_724) then (if (not-caught-fail(v_732) && success?(is-true(success?(1-proj-3-tuple(v_732))))) then (v_724,2-proj-3-tuple(v_723),true,2-proj-3-tuple(v_732),3-proj-3-tuple(v_732)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {245}event RecvMsg(alice,charlie,stagepack_b(sid),plaintext_b_734);
        {246}insert statestore(alice,charlie,sid,statepack_c(hs_733,cs1_736,cs2_737))
    ) | (
        {248}!
        {267}get statestore(=alice,=charlie,=sid,statepack_c(hs_738: handshakestate,cs1_739: cipherstate,cs2_740: cipherstate)) in
        {249}let hs_741: handshakestate = handshakestatesetcs(hs_738,cs1_739) in
        {250}let v_742: bitstring = catch-fail(handshakestateunpack(hs_741)) in
        {251}let v_743: bitstring = catch-fail((empty,empty,empty)) in
        {252}let v_744: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_742))) in
        {253}let v_745: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_744))) in
        {254}let v_746: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_745),2-proj-2-tuple(v_745),3-proj-3-tuple(v_744),msg_c(alice,charlie,sid))) in
        {255}let v_747: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_744))) in
        {256}let v_748: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_745))) && success?(1-proj-3-tuple(v_744))) then (if (not-caught-fail(v_747) && success?(is-true(success?(1-proj-2-tuple(v_747))))) then cipherstatepack(1-proj-2-tuple(v_747),increment_nonce(2-proj-2-tuple(v_745))) else fail-any) else fail-any)) in
        {257}let v_749: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_744)) && success?(1-proj-3-tuple(v_744))) then (if (not-caught-fail(v_745) && success?(is-true(success?(1-proj-2-tuple(v_745))))) then (if not-caught-fail(v_746) then (if not-caught-fail(v_748) then (v_748,v_746) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {258}let v_750: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_749),2-proj-3-tuple(v_744),3-proj-3-tuple(v_744)))) in
        {259}let v_751: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_749)) && success?(symmetricstatepack(1-proj-2-tuple(v_749),2-proj-3-tuple(v_744),3-proj-3-tuple(v_744)))) then (if (not-caught-fail(v_750) && success?(is-true(success?(1-proj-3-tuple(v_750))))) then symmetricstatepack(1-proj-3-tuple(v_750),2-proj-3-tuple(v_750),hash(3-proj-3-tuple(v_750),2-proj-2-tuple(v_749))) else fail-any) else fail-any)) in
        {260}let v_752: bitstring = catch-fail((if success?(1-proj-7-tuple(v_742)) then (if (not-caught-fail(v_744) && success?(is-true(success?(1-proj-3-tuple(v_744))))) then (if (not-caught-fail(v_749) && success?(is-true(success?(1-proj-2-tuple(v_749))))) then (if not-caught-fail(v_751) then (v_751,2-proj-2-tuple(v_749)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {261}let v_753: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_752),2-proj-7-tuple(v_742),3-proj-7-tuple(v_742),4-proj-7-tuple(v_742),5-proj-7-tuple(v_742),6-proj-7-tuple(v_742),7-proj-7-tuple(v_742))) in
        {262}let v_754: bitstring = catch-fail(concat3(1-proj-3-tuple(v_743),2-proj-3-tuple(v_743),2-proj-2-tuple(v_752))) in
        {263}let (hs_755: handshakestate,message_c_756: bitstring) = (if (not-caught-fail(v_742) && success?(is-true(success?(1-proj-7-tuple(v_742))))) then (if (not-caught-fail(v_743) && success?(is-true(success?(1-proj-3-tuple(v_743))))) then (if (not-caught-fail(v_752) && success?(is-true(success?(1-proj-2-tuple(v_752))))) then (if not-caught-fail(v_753) then (if not-caught-fail(v_754) then (v_753,v_754) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {264}event SendMsg(alice,charlie,stagepack_c(sid),msg_c(alice,charlie,sid));
        {265}insert statestore(alice,charlie,sid,statepack_d(hs_755,handshakestategetcs(hs_755),cs2_740));
        {266}out(pub, message_c_756)
    ) | (
        {268}!
        {288}get statestore(=alice,=charlie,=sid,statepack_d(hs_757: handshakestate,cs1_758: cipherstate,cs2_759: cipherstate)) in
        {269}let hs_760: handshakestate = handshakestatesetcs(hs_757,cs2_759) in
        {270}in(pub, message_d_761: bitstring);
        {271}let v_762: bitstring = catch-fail(handshakestateunpack(hs_760)) in
        {272}let v_763: bitstring = catch-fail(deconcat3(message_d_761)) in
        {273}let v_764: bool = catch-fail(true) in
        {274}let v_765: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_762))) in
        {275}let v_766: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_765))) in
        {276}let v_767: aead = catch-fail(decrypt(1-proj-2-tuple(v_766),2-proj-2-tuple(v_766),3-proj-3-tuple(v_765),3-proj-3-tuple(v_763))) in
        {277}let v_768: bitstring = catch-fail(aeadunpack(v_767)) in
        {278}let v_769: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_765))) in
        {279}let v_770: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_766))) && success?(1-proj-3-tuple(v_765))) then (if (not-caught-fail(v_769) && success?(is-true(success?(1-proj-2-tuple(v_769))))) then cipherstatepack(1-proj-2-tuple(v_769),increment_nonce(2-proj-2-tuple(v_766))) else fail-any) else fail-any)) in
        {280}let v_771: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_763)) && (success?(3-proj-3-tuple(v_765)) && success?(1-proj-3-tuple(v_765)))) then (if (not-caught-fail(v_766) && success?(is-true(success?(1-proj-2-tuple(v_766))))) then (if not-caught-fail(v_767) then (if (not-caught-fail(v_768) && success?(is-true(success?(1-proj-3-tuple(v_768))))) then (if not-caught-fail(v_770) then (v_770,3-proj-3-tuple(v_768),1-proj-3-tuple(v_768)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {281}let v_772: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_771),2-proj-3-tuple(v_765),3-proj-3-tuple(v_765)))) in
        {282}let v_773: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_763)) && success?(symmetricstatepack(1-proj-3-tuple(v_771),2-proj-3-tuple(v_765),3-proj-3-tuple(v_765)))) then (if (not-caught-fail(v_772) && success?(is-true(success?(1-proj-3-tuple(v_772))))) then symmetricstatepack(1-proj-3-tuple(v_772),2-proj-3-tuple(v_772),hash(3-proj-3-tuple(v_772),3-proj-3-tuple(v_763))) else fail-any) else fail-any)) in
        {283}let v_774: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_763)) && success?(1-proj-7-tuple(v_762))) then (if (not-caught-fail(v_765) && success?(is-true(success?(1-proj-3-tuple(v_765))))) then (if (not-caught-fail(v_771) && success?(is-true(success?(1-proj-3-tuple(v_771))))) then (if not-caught-fail(v_773) then (v_773,2-proj-3-tuple(v_771),3-proj-3-tuple(v_771)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {284}let v_775: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_774),2-proj-7-tuple(v_762),3-proj-7-tuple(v_762),4-proj-7-tuple(v_762),5-proj-7-tuple(v_762),6-proj-7-tuple(v_762),7-proj-7-tuple(v_762))) in
        {285}let (hs_776: handshakestate,plaintext_d_777: bitstring,valid_778: bool) = (if (not-caught-fail(v_762) && success?(is-true(success?(1-proj-7-tuple(v_762))))) then (if (not-caught-fail(v_763) && success?(is-true(success?(1-proj-3-tuple(v_763))))) then (if not-caught-fail(v_764) then (if (not-caught-fail(v_774) && success?(is-true(success?(1-proj-3-tuple(v_774))))) then (if (v_764 && 3-proj-3-tuple(v_774)) then (if not-caught-fail(v_775) then (v_775,2-proj-3-tuple(v_774),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {286}event RecvMsg(alice,charlie,stagepack_d(sid),plaintext_d_777);
        {287}event RecvEnd(valid_778)
    ) | (
        {289}event LeakS(phase0,alice);
        {290}out(pub, key_s(alice))
    ) | (
        {291}phase 1;
        {292}event LeakS(phase1,alice);
        {293}out(pub, key_s(alice))
    )
) | (
    {294}let v_779: key = catch-fail(dhexp(key_s(bob),g)) in
    {295}let s_780: keypair = (if not-caught-fail(v_779) then keypairpack(v_779,key_s(bob)) else fail-any) in
    {296}out(pub, getpublickey(s_780));
    (
        {297}let e_781: keypair = keypairpack(empty,empty) in
        {298}let v_782: key = catch-fail(dhexp(key_s(alice),g)) in
        {299}let rs_783: key = getpublickey((if not-caught-fail(v_782) then keypairpack(v_782,key_s(alice)) else fail-any)) in
        {300}let re_784: key = empty in
        {301}let v_785: bitstring = catch-fail(hash(somename,empty)) in
        {302}let v_786: key = catch-fail(v_785) in
        {303}let v_787: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {304}let v_788: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_785) then (if not-caught-fail(v_786) then (if not-caught-fail(v_787) then symmetricstatepack(v_787,v_786,v_785) else fail-any) else fail-any) else fail-any))) in
        {305}let v_789: symmetricstate = catch-fail((if success?((if not-caught-fail(v_785) then (if not-caught-fail(v_786) then (if not-caught-fail(v_787) then symmetricstatepack(v_787,v_786,v_785) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_788) && success?(is-true(success?(1-proj-3-tuple(v_788))))) then symmetricstatepack(1-proj-3-tuple(v_788),2-proj-3-tuple(v_788),hash(3-proj-3-tuple(v_788),empty)) else fail-any) else fail-any)) in
        {306}let v_790: bitstring = catch-fail(symmetricstateunpack(v_789)) in
        {307}let v_791: symmetricstate = catch-fail((if (not-caught-fail(v_790) && success?(is-true(success?(1-proj-3-tuple(v_790))))) then symmetricstatepack(1-proj-3-tuple(v_790),2-proj-3-tuple(v_790),hash(3-proj-3-tuple(v_790),rs_783)) else fail-any)) in
        {308}let v_792: bitstring = catch-fail(symmetricstateunpack(v_791)) in
        {309}let v_793: symmetricstate = catch-fail((if success?(getpublickey(s_780)) then (if (not-caught-fail(v_792) && success?(is-true(success?(1-proj-3-tuple(v_792))))) then symmetricstatepack(1-proj-3-tuple(v_792),2-proj-3-tuple(v_792),hash(3-proj-3-tuple(v_792),getpublickey(s_780))) else fail-any) else fail-any)) in
        {310}let hs_794: handshakestate = (if not-caught-fail(v_789) then (if not-caught-fail(v_791) then (if not-caught-fail(v_793) then handshakestatepack(v_793,s_780,e_781,rs_783,re_784,empty,false) else fail-any) else fail-any) else fail-any) in
        {311}insert statestore(bob,alice,sid,statepack_a(hs_794))
    ) | (
        {347}get statestore(=bob,=alice,=sid,statepack_a(hs_795: handshakestate)) in
        {312}in(pub, message_a_796: bitstring);
        {313}let v_797: bitstring = catch-fail(handshakestateunpack(hs_795)) in
        {314}let v_798: bitstring = catch-fail(deconcat3(message_a_796)) in
        {315}let v_799: bool = catch-fail(true) in
        {316}let v_800: key = catch-fail(1-proj-3-tuple(v_798)) in
        {317}let v_801: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_797))) in
        {318}let v_802: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_797)) then (if (not-caught-fail(v_801) && success?(is-true(success?(1-proj-3-tuple(v_801))))) then symmetricstatepack(1-proj-3-tuple(v_801),2-proj-3-tuple(v_801),hash(3-proj-3-tuple(v_801),v_800)) else fail-any) else fail-any)) in
        {319}let v_803: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_797))) in
        {320}let v_804: bitstring = catch-fail(symmetricstateunpack(v_802)) in
        {321}let v_805: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_804),(if success?(2-proj-7-tuple(v_797)) then (if (not-caught-fail(v_803) && success?(is-true(success?(1-proj-2-tuple(v_803))))) then dhexp(2-proj-2-tuple(v_803),v_800) else fail-any) else fail-any))) in
        {322}let v_806: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_804),(if success?(2-proj-7-tuple(v_797)) then (if (not-caught-fail(v_803) && success?(is-true(success?(1-proj-2-tuple(v_803))))) then dhexp(2-proj-2-tuple(v_803),v_800) else fail-any) else fail-any))) in
        {323}let v_807: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_804),(if success?(2-proj-7-tuple(v_797)) then (if (not-caught-fail(v_803) && success?(is-true(success?(1-proj-2-tuple(v_803))))) then dhexp(2-proj-2-tuple(v_803),v_800) else fail-any) else fail-any))) in
        {324}let v_808: bitstring = catch-fail((if (success?((if success?(2-proj-7-tuple(v_797)) then (if (not-caught-fail(v_803) && success?(is-true(success?(1-proj-2-tuple(v_803))))) then dhexp(2-proj-2-tuple(v_803),v_800) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_804))) then (if not-caught-fail(v_805) then (if not-caught-fail(v_806) then (if not-caught-fail(v_807) then (v_805,v_806,v_807) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {325}let v_809: symmetricstate = catch-fail((if success?((if success?(2-proj-7-tuple(v_797)) then (if (not-caught-fail(v_803) && success?(is-true(success?(1-proj-2-tuple(v_803))))) then dhexp(2-proj-2-tuple(v_803),v_800) else fail-any) else fail-any)) then (if (not-caught-fail(v_804) && success?(is-true(success?(1-proj-3-tuple(v_804))))) then (if (not-caught-fail(v_808) && success?(is-true(success?(1-proj-3-tuple(v_808))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_808)) then cipherstatepack(2-proj-3-tuple(v_808),minnonce) else fail-any),1-proj-3-tuple(v_808),3-proj-3-tuple(v_804)) else fail-any) else fail-any) else fail-any)) in
        {326}let v_810: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_797))) in
        {327}let v_811: bitstring = catch-fail(symmetricstateunpack(v_809)) in
        {328}let v_812: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_811),(if (success?(4-proj-7-tuple(v_797)) && success?(2-proj-7-tuple(v_797))) then (if (not-caught-fail(v_810) && success?(is-true(success?(1-proj-2-tuple(v_810))))) then dhexp(2-proj-2-tuple(v_810),4-proj-7-tuple(v_797)) else fail-any) else fail-any))) in
        {329}let v_813: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_811),(if (success?(4-proj-7-tuple(v_797)) && success?(2-proj-7-tuple(v_797))) then (if (not-caught-fail(v_810) && success?(is-true(success?(1-proj-2-tuple(v_810))))) then dhexp(2-proj-2-tuple(v_810),4-proj-7-tuple(v_797)) else fail-any) else fail-any))) in
        {330}let v_814: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_811),(if (success?(4-proj-7-tuple(v_797)) && success?(2-proj-7-tuple(v_797))) then (if (not-caught-fail(v_810) && success?(is-true(success?(1-proj-2-tuple(v_810))))) then dhexp(2-proj-2-tuple(v_810),4-proj-7-tuple(v_797)) else fail-any) else fail-any))) in
        {331}let v_815: bitstring = catch-fail((if (success?((if (success?(4-proj-7-tuple(v_797)) && success?(2-proj-7-tuple(v_797))) then (if (not-caught-fail(v_810) && success?(is-true(success?(1-proj-2-tuple(v_810))))) then dhexp(2-proj-2-tuple(v_810),4-proj-7-tuple(v_797)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_811))) then (if not-caught-fail(v_812) then (if not-caught-fail(v_813) then (if not-caught-fail(v_814) then (v_812,v_813,v_814) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {332}let v_816: symmetricstate = catch-fail((if success?((if (success?(4-proj-7-tuple(v_797)) && success?(2-proj-7-tuple(v_797))) then (if (not-caught-fail(v_810) && success?(is-true(success?(1-proj-2-tuple(v_810))))) then dhexp(2-proj-2-tuple(v_810),4-proj-7-tuple(v_797)) else fail-any) else fail-any)) then (if (not-caught-fail(v_811) && success?(is-true(success?(1-proj-3-tuple(v_811))))) then (if (not-caught-fail(v_815) && success?(is-true(success?(1-proj-3-tuple(v_815))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_815)) then cipherstatepack(2-proj-3-tuple(v_815),minnonce) else fail-any),1-proj-3-tuple(v_815),3-proj-3-tuple(v_811)) else fail-any) else fail-any) else fail-any)) in
        {333}let v_817: bitstring = catch-fail(symmetricstateunpack(v_816)) in
        {334}let v_818: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_817))) in
        {335}let v_819: aead = catch-fail(decrypt(1-proj-2-tuple(v_818),2-proj-2-tuple(v_818),3-proj-3-tuple(v_817),3-proj-3-tuple(v_798))) in
        {336}let v_820: bitstring = catch-fail(aeadunpack(v_819)) in
        {337}let v_821: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_817))) in
        {338}let v_822: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_818))) && success?(1-proj-3-tuple(v_817))) then (if (not-caught-fail(v_821) && success?(is-true(success?(1-proj-2-tuple(v_821))))) then cipherstatepack(1-proj-2-tuple(v_821),increment_nonce(2-proj-2-tuple(v_818))) else fail-any) else fail-any)) in
        {339}let v_823: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_798)) && (success?(3-proj-3-tuple(v_817)) && success?(1-proj-3-tuple(v_817)))) then (if (not-caught-fail(v_818) && success?(is-true(success?(1-proj-2-tuple(v_818))))) then (if not-caught-fail(v_819) then (if (not-caught-fail(v_820) && success?(is-true(success?(1-proj-3-tuple(v_820))))) then (if not-caught-fail(v_822) then (v_822,3-proj-3-tuple(v_820),1-proj-3-tuple(v_820)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {340}let v_824: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_823),2-proj-3-tuple(v_817),3-proj-3-tuple(v_817)))) in
        {341}let v_825: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_798)) && success?(symmetricstatepack(1-proj-3-tuple(v_823),2-proj-3-tuple(v_817),3-proj-3-tuple(v_817)))) then (if (not-caught-fail(v_824) && success?(is-true(success?(1-proj-3-tuple(v_824))))) then symmetricstatepack(1-proj-3-tuple(v_824),2-proj-3-tuple(v_824),hash(3-proj-3-tuple(v_824),3-proj-3-tuple(v_798))) else fail-any) else fail-any)) in
        {342}let v_826: bitstring = catch-fail((if success?(3-proj-3-tuple(v_798)) then (if (not-caught-fail(v_817) && success?(is-true(success?(1-proj-3-tuple(v_817))))) then (if (not-caught-fail(v_823) && success?(is-true(success?(1-proj-3-tuple(v_823))))) then (if not-caught-fail(v_825) then (v_825,2-proj-3-tuple(v_823),3-proj-3-tuple(v_823)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {343}let v_827: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_826),2-proj-7-tuple(v_797),3-proj-7-tuple(v_797),4-proj-7-tuple(v_797),v_800,6-proj-7-tuple(v_797),7-proj-7-tuple(v_797))) in
        {344}let (hs_828: handshakestate,plaintext_a: bitstring,valid_829: bool) = (if (not-caught-fail(v_797) && success?(is-true(success?(1-proj-7-tuple(v_797))))) then (if (not-caught-fail(v_798) && success?(is-true(success?(1-proj-3-tuple(v_798))))) then (if not-caught-fail(v_799) then (if not-caught-fail(v_800) then (if not-caught-fail(v_802) then (if not-caught-fail(v_809) then (if not-caught-fail(v_816) then (if (not-caught-fail(v_826) && success?(is-true(success?(1-proj-3-tuple(v_826))))) then (if (v_799 && 3-proj-3-tuple(v_826)) then (if not-caught-fail(v_827) then (v_827,2-proj-3-tuple(v_826),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {345}event RecvMsg(bob,alice,stagepack_a(sid),plaintext_a);
        {346}insert statestore(bob,alice,sid,statepack_b(hs_828))
    ) | (
        {392}get statestore(=bob,=alice,=sid,statepack_b(hs_830: handshakestate)) in
        {348}let v_831: bitstring = catch-fail(handshakestateunpack(hs_830)) in
        {349}let v_832: bitstring = catch-fail((empty,empty,empty)) in
        {350}let v_833: key = catch-fail(dhexp(key_e(bob,alice,sid),g)) in
        {351}let v_834: keypair = catch-fail((if not-caught-fail(v_833) then keypairpack(v_833,key_e(bob,alice,sid)) else fail-any)) in
        {352}let v_835: bitstring = catch-fail(getpublickey(v_834)) in
        {353}let v_836: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_831))) in
        {354}let v_837: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_831)) then (if (not-caught-fail(v_836) && success?(is-true(success?(1-proj-3-tuple(v_836))))) then symmetricstatepack(1-proj-3-tuple(v_836),2-proj-3-tuple(v_836),hash(3-proj-3-tuple(v_836),v_835)) else fail-any) else fail-any)) in
        {355}let v_838: bitstring = catch-fail(keypairunpack(v_834)) in
        {356}let v_839: bitstring = catch-fail(symmetricstateunpack(v_837)) in
        {357}let v_840: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_839),(if success?(5-proj-7-tuple(v_831)) then (if (not-caught-fail(v_838) && success?(is-true(success?(1-proj-2-tuple(v_838))))) then dhexp(2-proj-2-tuple(v_838),5-proj-7-tuple(v_831)) else fail-any) else fail-any))) in
        {358}let v_841: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_839),(if success?(5-proj-7-tuple(v_831)) then (if (not-caught-fail(v_838) && success?(is-true(success?(1-proj-2-tuple(v_838))))) then dhexp(2-proj-2-tuple(v_838),5-proj-7-tuple(v_831)) else fail-any) else fail-any))) in
        {359}let v_842: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_839),(if success?(5-proj-7-tuple(v_831)) then (if (not-caught-fail(v_838) && success?(is-true(success?(1-proj-2-tuple(v_838))))) then dhexp(2-proj-2-tuple(v_838),5-proj-7-tuple(v_831)) else fail-any) else fail-any))) in
        {360}let v_843: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_831)) then (if (not-caught-fail(v_838) && success?(is-true(success?(1-proj-2-tuple(v_838))))) then dhexp(2-proj-2-tuple(v_838),5-proj-7-tuple(v_831)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_839))) then (if not-caught-fail(v_840) then (if not-caught-fail(v_841) then (if not-caught-fail(v_842) then (v_840,v_841,v_842) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {361}let v_844: symmetricstate = catch-fail((if success?((if success?(5-proj-7-tuple(v_831)) then (if (not-caught-fail(v_838) && success?(is-true(success?(1-proj-2-tuple(v_838))))) then dhexp(2-proj-2-tuple(v_838),5-proj-7-tuple(v_831)) else fail-any) else fail-any)) then (if (not-caught-fail(v_839) && success?(is-true(success?(1-proj-3-tuple(v_839))))) then (if (not-caught-fail(v_843) && success?(is-true(success?(1-proj-3-tuple(v_843))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_843)) then cipherstatepack(2-proj-3-tuple(v_843),minnonce) else fail-any),1-proj-3-tuple(v_843),3-proj-3-tuple(v_839)) else fail-any) else fail-any) else fail-any)) in
        {362}let v_845: bitstring = catch-fail(keypairunpack(v_834)) in
        {363}let v_846: bitstring = catch-fail(symmetricstateunpack(v_844)) in
        {364}let v_847: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_846),(if success?(4-proj-7-tuple(v_831)) then (if (not-caught-fail(v_845) && success?(is-true(success?(1-proj-2-tuple(v_845))))) then dhexp(2-proj-2-tuple(v_845),4-proj-7-tuple(v_831)) else fail-any) else fail-any))) in
        {365}let v_848: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_846),(if success?(4-proj-7-tuple(v_831)) then (if (not-caught-fail(v_845) && success?(is-true(success?(1-proj-2-tuple(v_845))))) then dhexp(2-proj-2-tuple(v_845),4-proj-7-tuple(v_831)) else fail-any) else fail-any))) in
        {366}let v_849: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_846),(if success?(4-proj-7-tuple(v_831)) then (if (not-caught-fail(v_845) && success?(is-true(success?(1-proj-2-tuple(v_845))))) then dhexp(2-proj-2-tuple(v_845),4-proj-7-tuple(v_831)) else fail-any) else fail-any))) in
        {367}let v_850: bitstring = catch-fail((if (success?((if success?(4-proj-7-tuple(v_831)) then (if (not-caught-fail(v_845) && success?(is-true(success?(1-proj-2-tuple(v_845))))) then dhexp(2-proj-2-tuple(v_845),4-proj-7-tuple(v_831)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_846))) then (if not-caught-fail(v_847) then (if not-caught-fail(v_848) then (if not-caught-fail(v_849) then (v_847,v_848,v_849) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {368}let v_851: symmetricstate = catch-fail((if success?((if success?(4-proj-7-tuple(v_831)) then (if (not-caught-fail(v_845) && success?(is-true(success?(1-proj-2-tuple(v_845))))) then dhexp(2-proj-2-tuple(v_845),4-proj-7-tuple(v_831)) else fail-any) else fail-any)) then (if (not-caught-fail(v_846) && success?(is-true(success?(1-proj-3-tuple(v_846))))) then (if (not-caught-fail(v_850) && success?(is-true(success?(1-proj-3-tuple(v_850))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_850)) then cipherstatepack(2-proj-3-tuple(v_850),minnonce) else fail-any),1-proj-3-tuple(v_850),3-proj-3-tuple(v_846)) else fail-any) else fail-any) else fail-any)) in
        {369}let v_852: bitstring = catch-fail(symmetricstateunpack(v_851)) in
        {370}let v_853: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_852))) in
        {371}let v_854: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_853),2-proj-2-tuple(v_853),3-proj-3-tuple(v_852),msg_b(bob,alice,sid))) in
        {372}let v_855: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_852))) in
        {373}let v_856: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_853))) && success?(1-proj-3-tuple(v_852))) then (if (not-caught-fail(v_855) && success?(is-true(success?(1-proj-2-tuple(v_855))))) then cipherstatepack(1-proj-2-tuple(v_855),increment_nonce(2-proj-2-tuple(v_853))) else fail-any) else fail-any)) in
        {374}let v_857: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_852)) && success?(1-proj-3-tuple(v_852))) then (if (not-caught-fail(v_853) && success?(is-true(success?(1-proj-2-tuple(v_853))))) then (if not-caught-fail(v_854) then (if not-caught-fail(v_856) then (v_856,v_854) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {375}let v_858: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_857),2-proj-3-tuple(v_852),3-proj-3-tuple(v_852)))) in
        {376}let v_859: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_857)) && success?(symmetricstatepack(1-proj-2-tuple(v_857),2-proj-3-tuple(v_852),3-proj-3-tuple(v_852)))) then (if (not-caught-fail(v_858) && success?(is-true(success?(1-proj-3-tuple(v_858))))) then symmetricstatepack(1-proj-3-tuple(v_858),2-proj-3-tuple(v_858),hash(3-proj-3-tuple(v_858),2-proj-2-tuple(v_857))) else fail-any) else fail-any)) in
        {377}let v_860: bitstring = catch-fail((if (not-caught-fail(v_852) && success?(is-true(success?(1-proj-3-tuple(v_852))))) then (if (not-caught-fail(v_857) && success?(is-true(success?(1-proj-2-tuple(v_857))))) then (if not-caught-fail(v_859) then (v_859,2-proj-2-tuple(v_857)) else fail-any) else fail-any) else fail-any)) in
        {378}let v_861: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_860),2-proj-7-tuple(v_831),v_834,4-proj-7-tuple(v_831),5-proj-7-tuple(v_831),6-proj-7-tuple(v_831),7-proj-7-tuple(v_831))) in
        {379}let v_862: bitstring = catch-fail(concat3(v_835,2-proj-3-tuple(v_832),2-proj-2-tuple(v_860))) in
        {380}let v_863: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_860))) in
        {381}let v_864: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_863),zero)) in
        {382}let v_865: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_863),zero)) in
        {383}let v_866: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_863),zero)) in
        {384}let v_867: bitstring = catch-fail((if success?(2-proj-3-tuple(v_863)) then (if not-caught-fail(v_864) then (if not-caught-fail(v_865) then (if not-caught-fail(v_866) then (v_864,v_865,v_866) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {385}let v_868: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_867)) then cipherstatepack(1-proj-3-tuple(v_867),minnonce) else fail-any)) in
        {386}let v_869: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_867)) then cipherstatepack(2-proj-3-tuple(v_867),minnonce) else fail-any)) in
        {387}let v_870: bitstring = catch-fail((if success?(1-proj-2-tuple(v_860)) then (if (not-caught-fail(v_863) && success?(is-true(success?(1-proj-3-tuple(v_863))))) then (if (not-caught-fail(v_867) && success?(is-true(success?(1-proj-3-tuple(v_867))))) then (if not-caught-fail(v_868) then (if not-caught-fail(v_869) then (1-proj-2-tuple(v_860),v_868,v_869) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {388}let (hs_871: handshakestate,message_b_872: bitstring,cs1_873: cipherstate,cs2_874: cipherstate) = (if (not-caught-fail(v_831) && success?(is-true(success?(1-proj-7-tuple(v_831))))) then (if (not-caught-fail(v_832) && success?(is-true(success?(1-proj-3-tuple(v_832))))) then (if not-caught-fail(v_834) then (if not-caught-fail(v_835) then (if not-caught-fail(v_837) then (if not-caught-fail(v_844) then (if not-caught-fail(v_851) then (if (not-caught-fail(v_860) && success?(is-true(success?(1-proj-2-tuple(v_860))))) then (if not-caught-fail(v_861) then (if not-caught-fail(v_862) then (if (not-caught-fail(v_870) && success?(is-true(success?(1-proj-3-tuple(v_870))))) then (v_861,v_862,2-proj-3-tuple(v_870),3-proj-3-tuple(v_870)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {389}event SendMsg(bob,alice,stagepack_b(sid),msg_b(bob,alice,sid));
        {390}insert statestore(bob,alice,sid,statepack_c(hs_871,cs1_873,cs2_874));
        {391}out(pub, message_b_872)
    ) | (
        {393}!
        {413}get statestore(=bob,=alice,=sid,statepack_c(hs_875: handshakestate,cs1_876: cipherstate,cs2_877: cipherstate)) in
        {394}let hs_878: handshakestate = handshakestatesetcs(hs_875,cs1_876) in
        {395}in(pub, message_c_879: bitstring);
        {396}let v_880: bitstring = catch-fail(handshakestateunpack(hs_878)) in
        {397}let v_881: bitstring = catch-fail(deconcat3(message_c_879)) in
        {398}let v_882: bool = catch-fail(true) in
        {399}let v_883: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_880))) in
        {400}let v_884: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_883))) in
        {401}let v_885: aead = catch-fail(decrypt(1-proj-2-tuple(v_884),2-proj-2-tuple(v_884),3-proj-3-tuple(v_883),3-proj-3-tuple(v_881))) in
        {402}let v_886: bitstring = catch-fail(aeadunpack(v_885)) in
        {403}let v_887: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_883))) in
        {404}let v_888: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_884))) && success?(1-proj-3-tuple(v_883))) then (if (not-caught-fail(v_887) && success?(is-true(success?(1-proj-2-tuple(v_887))))) then cipherstatepack(1-proj-2-tuple(v_887),increment_nonce(2-proj-2-tuple(v_884))) else fail-any) else fail-any)) in
        {405}let v_889: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_881)) && (success?(3-proj-3-tuple(v_883)) && success?(1-proj-3-tuple(v_883)))) then (if (not-caught-fail(v_884) && success?(is-true(success?(1-proj-2-tuple(v_884))))) then (if not-caught-fail(v_885) then (if (not-caught-fail(v_886) && success?(is-true(success?(1-proj-3-tuple(v_886))))) then (if not-caught-fail(v_888) then (v_888,3-proj-3-tuple(v_886),1-proj-3-tuple(v_886)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {406}let v_890: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_889),2-proj-3-tuple(v_883),3-proj-3-tuple(v_883)))) in
        {407}let v_891: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_881)) && success?(symmetricstatepack(1-proj-3-tuple(v_889),2-proj-3-tuple(v_883),3-proj-3-tuple(v_883)))) then (if (not-caught-fail(v_890) && success?(is-true(success?(1-proj-3-tuple(v_890))))) then symmetricstatepack(1-proj-3-tuple(v_890),2-proj-3-tuple(v_890),hash(3-proj-3-tuple(v_890),3-proj-3-tuple(v_881))) else fail-any) else fail-any)) in
        {408}let v_892: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_881)) && success?(1-proj-7-tuple(v_880))) then (if (not-caught-fail(v_883) && success?(is-true(success?(1-proj-3-tuple(v_883))))) then (if (not-caught-fail(v_889) && success?(is-true(success?(1-proj-3-tuple(v_889))))) then (if not-caught-fail(v_891) then (v_891,2-proj-3-tuple(v_889),3-proj-3-tuple(v_889)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {409}let v_893: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_892),2-proj-7-tuple(v_880),3-proj-7-tuple(v_880),4-proj-7-tuple(v_880),5-proj-7-tuple(v_880),6-proj-7-tuple(v_880),7-proj-7-tuple(v_880))) in
        {410}let (hs_894: handshakestate,plaintext_c: bitstring,valid_895: bool) = (if (not-caught-fail(v_880) && success?(is-true(success?(1-proj-7-tuple(v_880))))) then (if (not-caught-fail(v_881) && success?(is-true(success?(1-proj-3-tuple(v_881))))) then (if not-caught-fail(v_882) then (if (not-caught-fail(v_892) && success?(is-true(success?(1-proj-3-tuple(v_892))))) then (if (v_882 && 3-proj-3-tuple(v_892)) then (if not-caught-fail(v_893) then (v_893,2-proj-3-tuple(v_892),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {411}event RecvMsg(bob,alice,stagepack_c(sid),plaintext_c);
        {412}insert statestore(bob,alice,sid,statepack_d(hs_894,handshakestategetcs(hs_894),cs2_877))
    ) | (
        {414}!
        {432}get statestore(=bob,=alice,=sid,statepack_d(hs_896: handshakestate,cs1_897: cipherstate,cs2_898: cipherstate)) in
        {415}let hs_899: handshakestate = handshakestatesetcs(hs_896,cs2_898) in
        {416}let v_900: bitstring = catch-fail(handshakestateunpack(hs_899)) in
        {417}let v_901: bitstring = catch-fail((empty,empty,empty)) in
        {418}let v_902: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_900))) in
        {419}let v_903: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_902))) in
        {420}let v_904: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_903),2-proj-2-tuple(v_903),3-proj-3-tuple(v_902),msg_d(bob,alice,sid))) in
        {421}let v_905: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_902))) in
        {422}let v_906: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_903))) && success?(1-proj-3-tuple(v_902))) then (if (not-caught-fail(v_905) && success?(is-true(success?(1-proj-2-tuple(v_905))))) then cipherstatepack(1-proj-2-tuple(v_905),increment_nonce(2-proj-2-tuple(v_903))) else fail-any) else fail-any)) in
        {423}let v_907: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_902)) && success?(1-proj-3-tuple(v_902))) then (if (not-caught-fail(v_903) && success?(is-true(success?(1-proj-2-tuple(v_903))))) then (if not-caught-fail(v_904) then (if not-caught-fail(v_906) then (v_906,v_904) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {424}let v_908: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_907),2-proj-3-tuple(v_902),3-proj-3-tuple(v_902)))) in
        {425}let v_909: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_907)) && success?(symmetricstatepack(1-proj-2-tuple(v_907),2-proj-3-tuple(v_902),3-proj-3-tuple(v_902)))) then (if (not-caught-fail(v_908) && success?(is-true(success?(1-proj-3-tuple(v_908))))) then symmetricstatepack(1-proj-3-tuple(v_908),2-proj-3-tuple(v_908),hash(3-proj-3-tuple(v_908),2-proj-2-tuple(v_907))) else fail-any) else fail-any)) in
        {426}let v_910: bitstring = catch-fail((if success?(1-proj-7-tuple(v_900)) then (if (not-caught-fail(v_902) && success?(is-true(success?(1-proj-3-tuple(v_902))))) then (if (not-caught-fail(v_907) && success?(is-true(success?(1-proj-2-tuple(v_907))))) then (if not-caught-fail(v_909) then (v_909,2-proj-2-tuple(v_907)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {427}let v_911: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_910),2-proj-7-tuple(v_900),3-proj-7-tuple(v_900),4-proj-7-tuple(v_900),5-proj-7-tuple(v_900),6-proj-7-tuple(v_900),7-proj-7-tuple(v_900))) in
        {428}let v_912: bitstring = catch-fail(concat3(1-proj-3-tuple(v_901),2-proj-3-tuple(v_901),2-proj-2-tuple(v_910))) in
        {429}let (hs_913: handshakestate,message_d_914: bitstring) = (if (not-caught-fail(v_900) && success?(is-true(success?(1-proj-7-tuple(v_900))))) then (if (not-caught-fail(v_901) && success?(is-true(success?(1-proj-3-tuple(v_901))))) then (if (not-caught-fail(v_910) && success?(is-true(success?(1-proj-2-tuple(v_910))))) then (if not-caught-fail(v_911) then (if not-caught-fail(v_912) then (v_911,v_912) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {430}event SendMsg(bob,alice,stagepack_d(sid),msg_d(bob,alice,sid));
        {431}out(pub, message_d_914)
    ) | (
        {433}event LeakS(phase0,bob);
        {434}out(pub, key_s(bob))
    ) | (
        {435}phase 1;
        {436}event LeakS(phase1,bob);
        {437}out(pub, key_s(bob))
    )
) | (
    {438}let v_915: key = catch-fail(dhexp(key_s(bob),g)) in
    {439}let s_916: keypair = (if not-caught-fail(v_915) then keypairpack(v_915,key_s(bob)) else fail-any) in
    {440}out(pub, getpublickey(s_916));
    (
        {441}let e_917: keypair = keypairpack(empty,empty) in
        {442}let v_918: key = catch-fail(dhexp(key_s(charlie),g)) in
        {443}let rs_919: key = getpublickey((if not-caught-fail(v_918) then keypairpack(v_918,key_s(charlie)) else fail-any)) in
        {444}let re_920: key = empty in
        {445}let v_921: bitstring = catch-fail(hash(somename,empty)) in
        {446}let v_922: key = catch-fail(v_921) in
        {447}let v_923: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {448}let v_924: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_921) then (if not-caught-fail(v_922) then (if not-caught-fail(v_923) then symmetricstatepack(v_923,v_922,v_921) else fail-any) else fail-any) else fail-any))) in
        {449}let v_925: symmetricstate = catch-fail((if success?((if not-caught-fail(v_921) then (if not-caught-fail(v_922) then (if not-caught-fail(v_923) then symmetricstatepack(v_923,v_922,v_921) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_924) && success?(is-true(success?(1-proj-3-tuple(v_924))))) then symmetricstatepack(1-proj-3-tuple(v_924),2-proj-3-tuple(v_924),hash(3-proj-3-tuple(v_924),empty)) else fail-any) else fail-any)) in
        {450}let v_926: bitstring = catch-fail(symmetricstateunpack(v_925)) in
        {451}let v_927: symmetricstate = catch-fail((if (not-caught-fail(v_926) && success?(is-true(success?(1-proj-3-tuple(v_926))))) then symmetricstatepack(1-proj-3-tuple(v_926),2-proj-3-tuple(v_926),hash(3-proj-3-tuple(v_926),rs_919)) else fail-any)) in
        {452}let v_928: bitstring = catch-fail(symmetricstateunpack(v_927)) in
        {453}let v_929: symmetricstate = catch-fail((if success?(getpublickey(s_916)) then (if (not-caught-fail(v_928) && success?(is-true(success?(1-proj-3-tuple(v_928))))) then symmetricstatepack(1-proj-3-tuple(v_928),2-proj-3-tuple(v_928),hash(3-proj-3-tuple(v_928),getpublickey(s_916))) else fail-any) else fail-any)) in
        {454}let hs_930: handshakestate = (if not-caught-fail(v_925) then (if not-caught-fail(v_927) then (if not-caught-fail(v_929) then handshakestatepack(v_929,s_916,e_917,rs_919,re_920,empty,false) else fail-any) else fail-any) else fail-any) in
        {455}insert statestore(bob,charlie,sid,statepack_a(hs_930))
    ) | (
        {491}get statestore(=bob,=charlie,=sid,statepack_a(hs_931: handshakestate)) in
        {456}in(pub, message_a_932: bitstring);
        {457}let v_933: bitstring = catch-fail(handshakestateunpack(hs_931)) in
        {458}let v_934: bitstring = catch-fail(deconcat3(message_a_932)) in
        {459}let v_935: bool = catch-fail(true) in
        {460}let v_936: key = catch-fail(1-proj-3-tuple(v_934)) in
        {461}let v_937: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_933))) in
        {462}let v_938: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_933)) then (if (not-caught-fail(v_937) && success?(is-true(success?(1-proj-3-tuple(v_937))))) then symmetricstatepack(1-proj-3-tuple(v_937),2-proj-3-tuple(v_937),hash(3-proj-3-tuple(v_937),v_936)) else fail-any) else fail-any)) in
        {463}let v_939: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_933))) in
        {464}let v_940: bitstring = catch-fail(symmetricstateunpack(v_938)) in
        {465}let v_941: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_940),(if success?(2-proj-7-tuple(v_933)) then (if (not-caught-fail(v_939) && success?(is-true(success?(1-proj-2-tuple(v_939))))) then dhexp(2-proj-2-tuple(v_939),v_936) else fail-any) else fail-any))) in
        {466}let v_942: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_940),(if success?(2-proj-7-tuple(v_933)) then (if (not-caught-fail(v_939) && success?(is-true(success?(1-proj-2-tuple(v_939))))) then dhexp(2-proj-2-tuple(v_939),v_936) else fail-any) else fail-any))) in
        {467}let v_943: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_940),(if success?(2-proj-7-tuple(v_933)) then (if (not-caught-fail(v_939) && success?(is-true(success?(1-proj-2-tuple(v_939))))) then dhexp(2-proj-2-tuple(v_939),v_936) else fail-any) else fail-any))) in
        {468}let v_944: bitstring = catch-fail((if (success?((if success?(2-proj-7-tuple(v_933)) then (if (not-caught-fail(v_939) && success?(is-true(success?(1-proj-2-tuple(v_939))))) then dhexp(2-proj-2-tuple(v_939),v_936) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_940))) then (if not-caught-fail(v_941) then (if not-caught-fail(v_942) then (if not-caught-fail(v_943) then (v_941,v_942,v_943) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {469}let v_945: symmetricstate = catch-fail((if success?((if success?(2-proj-7-tuple(v_933)) then (if (not-caught-fail(v_939) && success?(is-true(success?(1-proj-2-tuple(v_939))))) then dhexp(2-proj-2-tuple(v_939),v_936) else fail-any) else fail-any)) then (if (not-caught-fail(v_940) && success?(is-true(success?(1-proj-3-tuple(v_940))))) then (if (not-caught-fail(v_944) && success?(is-true(success?(1-proj-3-tuple(v_944))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_944)) then cipherstatepack(2-proj-3-tuple(v_944),minnonce) else fail-any),1-proj-3-tuple(v_944),3-proj-3-tuple(v_940)) else fail-any) else fail-any) else fail-any)) in
        {470}let v_946: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_933))) in
        {471}let v_947: bitstring = catch-fail(symmetricstateunpack(v_945)) in
        {472}let v_948: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_947),(if (success?(4-proj-7-tuple(v_933)) && success?(2-proj-7-tuple(v_933))) then (if (not-caught-fail(v_946) && success?(is-true(success?(1-proj-2-tuple(v_946))))) then dhexp(2-proj-2-tuple(v_946),4-proj-7-tuple(v_933)) else fail-any) else fail-any))) in
        {473}let v_949: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_947),(if (success?(4-proj-7-tuple(v_933)) && success?(2-proj-7-tuple(v_933))) then (if (not-caught-fail(v_946) && success?(is-true(success?(1-proj-2-tuple(v_946))))) then dhexp(2-proj-2-tuple(v_946),4-proj-7-tuple(v_933)) else fail-any) else fail-any))) in
        {474}let v_950: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_947),(if (success?(4-proj-7-tuple(v_933)) && success?(2-proj-7-tuple(v_933))) then (if (not-caught-fail(v_946) && success?(is-true(success?(1-proj-2-tuple(v_946))))) then dhexp(2-proj-2-tuple(v_946),4-proj-7-tuple(v_933)) else fail-any) else fail-any))) in
        {475}let v_951: bitstring = catch-fail((if (success?((if (success?(4-proj-7-tuple(v_933)) && success?(2-proj-7-tuple(v_933))) then (if (not-caught-fail(v_946) && success?(is-true(success?(1-proj-2-tuple(v_946))))) then dhexp(2-proj-2-tuple(v_946),4-proj-7-tuple(v_933)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_947))) then (if not-caught-fail(v_948) then (if not-caught-fail(v_949) then (if not-caught-fail(v_950) then (v_948,v_949,v_950) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {476}let v_952: symmetricstate = catch-fail((if success?((if (success?(4-proj-7-tuple(v_933)) && success?(2-proj-7-tuple(v_933))) then (if (not-caught-fail(v_946) && success?(is-true(success?(1-proj-2-tuple(v_946))))) then dhexp(2-proj-2-tuple(v_946),4-proj-7-tuple(v_933)) else fail-any) else fail-any)) then (if (not-caught-fail(v_947) && success?(is-true(success?(1-proj-3-tuple(v_947))))) then (if (not-caught-fail(v_951) && success?(is-true(success?(1-proj-3-tuple(v_951))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_951)) then cipherstatepack(2-proj-3-tuple(v_951),minnonce) else fail-any),1-proj-3-tuple(v_951),3-proj-3-tuple(v_947)) else fail-any) else fail-any) else fail-any)) in
        {477}let v_953: bitstring = catch-fail(symmetricstateunpack(v_952)) in
        {478}let v_954: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_953))) in
        {479}let v_955: aead = catch-fail(decrypt(1-proj-2-tuple(v_954),2-proj-2-tuple(v_954),3-proj-3-tuple(v_953),3-proj-3-tuple(v_934))) in
        {480}let v_956: bitstring = catch-fail(aeadunpack(v_955)) in
        {481}let v_957: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_953))) in
        {482}let v_958: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_954))) && success?(1-proj-3-tuple(v_953))) then (if (not-caught-fail(v_957) && success?(is-true(success?(1-proj-2-tuple(v_957))))) then cipherstatepack(1-proj-2-tuple(v_957),increment_nonce(2-proj-2-tuple(v_954))) else fail-any) else fail-any)) in
        {483}let v_959: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_934)) && (success?(3-proj-3-tuple(v_953)) && success?(1-proj-3-tuple(v_953)))) then (if (not-caught-fail(v_954) && success?(is-true(success?(1-proj-2-tuple(v_954))))) then (if not-caught-fail(v_955) then (if (not-caught-fail(v_956) && success?(is-true(success?(1-proj-3-tuple(v_956))))) then (if not-caught-fail(v_958) then (v_958,3-proj-3-tuple(v_956),1-proj-3-tuple(v_956)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {484}let v_960: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_959),2-proj-3-tuple(v_953),3-proj-3-tuple(v_953)))) in
        {485}let v_961: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_934)) && success?(symmetricstatepack(1-proj-3-tuple(v_959),2-proj-3-tuple(v_953),3-proj-3-tuple(v_953)))) then (if (not-caught-fail(v_960) && success?(is-true(success?(1-proj-3-tuple(v_960))))) then symmetricstatepack(1-proj-3-tuple(v_960),2-proj-3-tuple(v_960),hash(3-proj-3-tuple(v_960),3-proj-3-tuple(v_934))) else fail-any) else fail-any)) in
        {486}let v_962: bitstring = catch-fail((if success?(3-proj-3-tuple(v_934)) then (if (not-caught-fail(v_953) && success?(is-true(success?(1-proj-3-tuple(v_953))))) then (if (not-caught-fail(v_959) && success?(is-true(success?(1-proj-3-tuple(v_959))))) then (if not-caught-fail(v_961) then (v_961,2-proj-3-tuple(v_959),3-proj-3-tuple(v_959)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {487}let v_963: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_962),2-proj-7-tuple(v_933),3-proj-7-tuple(v_933),4-proj-7-tuple(v_933),v_936,6-proj-7-tuple(v_933),7-proj-7-tuple(v_933))) in
        {488}let (hs_964: handshakestate,plaintext_a_965: bitstring,valid_966: bool) = (if (not-caught-fail(v_933) && success?(is-true(success?(1-proj-7-tuple(v_933))))) then (if (not-caught-fail(v_934) && success?(is-true(success?(1-proj-3-tuple(v_934))))) then (if not-caught-fail(v_935) then (if not-caught-fail(v_936) then (if not-caught-fail(v_938) then (if not-caught-fail(v_945) then (if not-caught-fail(v_952) then (if (not-caught-fail(v_962) && success?(is-true(success?(1-proj-3-tuple(v_962))))) then (if (v_935 && 3-proj-3-tuple(v_962)) then (if not-caught-fail(v_963) then (v_963,2-proj-3-tuple(v_962),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {489}event RecvMsg(bob,charlie,stagepack_a(sid),plaintext_a_965);
        {490}insert statestore(bob,charlie,sid,statepack_b(hs_964))
    ) | (
        {536}get statestore(=bob,=charlie,=sid,statepack_b(hs_967: handshakestate)) in
        {492}let v_968: bitstring = catch-fail(handshakestateunpack(hs_967)) in
        {493}let v_969: bitstring = catch-fail((empty,empty,empty)) in
        {494}let v_970: key = catch-fail(dhexp(key_e(bob,charlie,sid),g)) in
        {495}let v_971: keypair = catch-fail((if not-caught-fail(v_970) then keypairpack(v_970,key_e(bob,charlie,sid)) else fail-any)) in
        {496}let v_972: bitstring = catch-fail(getpublickey(v_971)) in
        {497}let v_973: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_968))) in
        {498}let v_974: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_968)) then (if (not-caught-fail(v_973) && success?(is-true(success?(1-proj-3-tuple(v_973))))) then symmetricstatepack(1-proj-3-tuple(v_973),2-proj-3-tuple(v_973),hash(3-proj-3-tuple(v_973),v_972)) else fail-any) else fail-any)) in
        {499}let v_975: bitstring = catch-fail(keypairunpack(v_971)) in
        {500}let v_976: bitstring = catch-fail(symmetricstateunpack(v_974)) in
        {501}let v_977: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_976),(if success?(5-proj-7-tuple(v_968)) then (if (not-caught-fail(v_975) && success?(is-true(success?(1-proj-2-tuple(v_975))))) then dhexp(2-proj-2-tuple(v_975),5-proj-7-tuple(v_968)) else fail-any) else fail-any))) in
        {502}let v_978: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_976),(if success?(5-proj-7-tuple(v_968)) then (if (not-caught-fail(v_975) && success?(is-true(success?(1-proj-2-tuple(v_975))))) then dhexp(2-proj-2-tuple(v_975),5-proj-7-tuple(v_968)) else fail-any) else fail-any))) in
        {503}let v_979: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_976),(if success?(5-proj-7-tuple(v_968)) then (if (not-caught-fail(v_975) && success?(is-true(success?(1-proj-2-tuple(v_975))))) then dhexp(2-proj-2-tuple(v_975),5-proj-7-tuple(v_968)) else fail-any) else fail-any))) in
        {504}let v_980: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_968)) then (if (not-caught-fail(v_975) && success?(is-true(success?(1-proj-2-tuple(v_975))))) then dhexp(2-proj-2-tuple(v_975),5-proj-7-tuple(v_968)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_976))) then (if not-caught-fail(v_977) then (if not-caught-fail(v_978) then (if not-caught-fail(v_979) then (v_977,v_978,v_979) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {505}let v_981: symmetricstate = catch-fail((if success?((if success?(5-proj-7-tuple(v_968)) then (if (not-caught-fail(v_975) && success?(is-true(success?(1-proj-2-tuple(v_975))))) then dhexp(2-proj-2-tuple(v_975),5-proj-7-tuple(v_968)) else fail-any) else fail-any)) then (if (not-caught-fail(v_976) && success?(is-true(success?(1-proj-3-tuple(v_976))))) then (if (not-caught-fail(v_980) && success?(is-true(success?(1-proj-3-tuple(v_980))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_980)) then cipherstatepack(2-proj-3-tuple(v_980),minnonce) else fail-any),1-proj-3-tuple(v_980),3-proj-3-tuple(v_976)) else fail-any) else fail-any) else fail-any)) in
        {506}let v_982: bitstring = catch-fail(keypairunpack(v_971)) in
        {507}let v_983: bitstring = catch-fail(symmetricstateunpack(v_981)) in
        {508}let v_984: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_983),(if success?(4-proj-7-tuple(v_968)) then (if (not-caught-fail(v_982) && success?(is-true(success?(1-proj-2-tuple(v_982))))) then dhexp(2-proj-2-tuple(v_982),4-proj-7-tuple(v_968)) else fail-any) else fail-any))) in
        {509}let v_985: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_983),(if success?(4-proj-7-tuple(v_968)) then (if (not-caught-fail(v_982) && success?(is-true(success?(1-proj-2-tuple(v_982))))) then dhexp(2-proj-2-tuple(v_982),4-proj-7-tuple(v_968)) else fail-any) else fail-any))) in
        {510}let v_986: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_983),(if success?(4-proj-7-tuple(v_968)) then (if (not-caught-fail(v_982) && success?(is-true(success?(1-proj-2-tuple(v_982))))) then dhexp(2-proj-2-tuple(v_982),4-proj-7-tuple(v_968)) else fail-any) else fail-any))) in
        {511}let v_987: bitstring = catch-fail((if (success?((if success?(4-proj-7-tuple(v_968)) then (if (not-caught-fail(v_982) && success?(is-true(success?(1-proj-2-tuple(v_982))))) then dhexp(2-proj-2-tuple(v_982),4-proj-7-tuple(v_968)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_983))) then (if not-caught-fail(v_984) then (if not-caught-fail(v_985) then (if not-caught-fail(v_986) then (v_984,v_985,v_986) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {512}let v_988: symmetricstate = catch-fail((if success?((if success?(4-proj-7-tuple(v_968)) then (if (not-caught-fail(v_982) && success?(is-true(success?(1-proj-2-tuple(v_982))))) then dhexp(2-proj-2-tuple(v_982),4-proj-7-tuple(v_968)) else fail-any) else fail-any)) then (if (not-caught-fail(v_983) && success?(is-true(success?(1-proj-3-tuple(v_983))))) then (if (not-caught-fail(v_987) && success?(is-true(success?(1-proj-3-tuple(v_987))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_987)) then cipherstatepack(2-proj-3-tuple(v_987),minnonce) else fail-any),1-proj-3-tuple(v_987),3-proj-3-tuple(v_983)) else fail-any) else fail-any) else fail-any)) in
        {513}let v_989: bitstring = catch-fail(symmetricstateunpack(v_988)) in
        {514}let v_990: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_989))) in
        {515}let v_991: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_990),2-proj-2-tuple(v_990),3-proj-3-tuple(v_989),msg_b(bob,charlie,sid))) in
        {516}let v_992: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_989))) in
        {517}let v_993: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_990))) && success?(1-proj-3-tuple(v_989))) then (if (not-caught-fail(v_992) && success?(is-true(success?(1-proj-2-tuple(v_992))))) then cipherstatepack(1-proj-2-tuple(v_992),increment_nonce(2-proj-2-tuple(v_990))) else fail-any) else fail-any)) in
        {518}let v_994: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_989)) && success?(1-proj-3-tuple(v_989))) then (if (not-caught-fail(v_990) && success?(is-true(success?(1-proj-2-tuple(v_990))))) then (if not-caught-fail(v_991) then (if not-caught-fail(v_993) then (v_993,v_991) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {519}let v_995: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_994),2-proj-3-tuple(v_989),3-proj-3-tuple(v_989)))) in
        {520}let v_996: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_994)) && success?(symmetricstatepack(1-proj-2-tuple(v_994),2-proj-3-tuple(v_989),3-proj-3-tuple(v_989)))) then (if (not-caught-fail(v_995) && success?(is-true(success?(1-proj-3-tuple(v_995))))) then symmetricstatepack(1-proj-3-tuple(v_995),2-proj-3-tuple(v_995),hash(3-proj-3-tuple(v_995),2-proj-2-tuple(v_994))) else fail-any) else fail-any)) in
        {521}let v_997: bitstring = catch-fail((if (not-caught-fail(v_989) && success?(is-true(success?(1-proj-3-tuple(v_989))))) then (if (not-caught-fail(v_994) && success?(is-true(success?(1-proj-2-tuple(v_994))))) then (if not-caught-fail(v_996) then (v_996,2-proj-2-tuple(v_994)) else fail-any) else fail-any) else fail-any)) in
        {522}let v_998: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_997),2-proj-7-tuple(v_968),v_971,4-proj-7-tuple(v_968),5-proj-7-tuple(v_968),6-proj-7-tuple(v_968),7-proj-7-tuple(v_968))) in
        {523}let v_999: bitstring = catch-fail(concat3(v_972,2-proj-3-tuple(v_969),2-proj-2-tuple(v_997))) in
        {524}let v_1000: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_997))) in
        {525}let v_1001: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1000),zero)) in
        {526}let v_1002: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1000),zero)) in
        {527}let v_1003: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1000),zero)) in
        {528}let v_1004: bitstring = catch-fail((if success?(2-proj-3-tuple(v_1000)) then (if not-caught-fail(v_1001) then (if not-caught-fail(v_1002) then (if not-caught-fail(v_1003) then (v_1001,v_1002,v_1003) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {529}let v_1005: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_1004)) then cipherstatepack(1-proj-3-tuple(v_1004),minnonce) else fail-any)) in
        {530}let v_1006: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_1004)) then cipherstatepack(2-proj-3-tuple(v_1004),minnonce) else fail-any)) in
        {531}let v_1007: bitstring = catch-fail((if success?(1-proj-2-tuple(v_997)) then (if (not-caught-fail(v_1000) && success?(is-true(success?(1-proj-3-tuple(v_1000))))) then (if (not-caught-fail(v_1004) && success?(is-true(success?(1-proj-3-tuple(v_1004))))) then (if not-caught-fail(v_1005) then (if not-caught-fail(v_1006) then (1-proj-2-tuple(v_997),v_1005,v_1006) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {532}let (hs_1008: handshakestate,message_b_1009: bitstring,cs1_1010: cipherstate,cs2_1011: cipherstate) = (if (not-caught-fail(v_968) && success?(is-true(success?(1-proj-7-tuple(v_968))))) then (if (not-caught-fail(v_969) && success?(is-true(success?(1-proj-3-tuple(v_969))))) then (if not-caught-fail(v_971) then (if not-caught-fail(v_972) then (if not-caught-fail(v_974) then (if not-caught-fail(v_981) then (if not-caught-fail(v_988) then (if (not-caught-fail(v_997) && success?(is-true(success?(1-proj-2-tuple(v_997))))) then (if not-caught-fail(v_998) then (if not-caught-fail(v_999) then (if (not-caught-fail(v_1007) && success?(is-true(success?(1-proj-3-tuple(v_1007))))) then (v_998,v_999,2-proj-3-tuple(v_1007),3-proj-3-tuple(v_1007)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {533}event SendMsg(bob,charlie,stagepack_b(sid),msg_b(bob,charlie,sid));
        {534}insert statestore(bob,charlie,sid,statepack_c(hs_1008,cs1_1010,cs2_1011));
        {535}out(pub, message_b_1009)
    ) | (
        {537}!
        {557}get statestore(=bob,=charlie,=sid,statepack_c(hs_1012: handshakestate,cs1_1013: cipherstate,cs2_1014: cipherstate)) in
        {538}let hs_1015: handshakestate = handshakestatesetcs(hs_1012,cs1_1013) in
        {539}in(pub, message_c_1016: bitstring);
        {540}let v_1017: bitstring = catch-fail(handshakestateunpack(hs_1015)) in
        {541}let v_1018: bitstring = catch-fail(deconcat3(message_c_1016)) in
        {542}let v_1019: bool = catch-fail(true) in
        {543}let v_1020: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1017))) in
        {544}let v_1021: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1020))) in
        {545}let v_1022: aead = catch-fail(decrypt(1-proj-2-tuple(v_1021),2-proj-2-tuple(v_1021),3-proj-3-tuple(v_1020),3-proj-3-tuple(v_1018))) in
        {546}let v_1023: bitstring = catch-fail(aeadunpack(v_1022)) in
        {547}let v_1024: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1020))) in
        {548}let v_1025: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1021))) && success?(1-proj-3-tuple(v_1020))) then (if (not-caught-fail(v_1024) && success?(is-true(success?(1-proj-2-tuple(v_1024))))) then cipherstatepack(1-proj-2-tuple(v_1024),increment_nonce(2-proj-2-tuple(v_1021))) else fail-any) else fail-any)) in
        {549}let v_1026: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1018)) && (success?(3-proj-3-tuple(v_1020)) && success?(1-proj-3-tuple(v_1020)))) then (if (not-caught-fail(v_1021) && success?(is-true(success?(1-proj-2-tuple(v_1021))))) then (if not-caught-fail(v_1022) then (if (not-caught-fail(v_1023) && success?(is-true(success?(1-proj-3-tuple(v_1023))))) then (if not-caught-fail(v_1025) then (v_1025,3-proj-3-tuple(v_1023),1-proj-3-tuple(v_1023)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {550}let v_1027: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1026),2-proj-3-tuple(v_1020),3-proj-3-tuple(v_1020)))) in
        {551}let v_1028: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_1018)) && success?(symmetricstatepack(1-proj-3-tuple(v_1026),2-proj-3-tuple(v_1020),3-proj-3-tuple(v_1020)))) then (if (not-caught-fail(v_1027) && success?(is-true(success?(1-proj-3-tuple(v_1027))))) then symmetricstatepack(1-proj-3-tuple(v_1027),2-proj-3-tuple(v_1027),hash(3-proj-3-tuple(v_1027),3-proj-3-tuple(v_1018))) else fail-any) else fail-any)) in
        {552}let v_1029: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1018)) && success?(1-proj-7-tuple(v_1017))) then (if (not-caught-fail(v_1020) && success?(is-true(success?(1-proj-3-tuple(v_1020))))) then (if (not-caught-fail(v_1026) && success?(is-true(success?(1-proj-3-tuple(v_1026))))) then (if not-caught-fail(v_1028) then (v_1028,2-proj-3-tuple(v_1026),3-proj-3-tuple(v_1026)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {553}let v_1030: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_1029),2-proj-7-tuple(v_1017),3-proj-7-tuple(v_1017),4-proj-7-tuple(v_1017),5-proj-7-tuple(v_1017),6-proj-7-tuple(v_1017),7-proj-7-tuple(v_1017))) in
        {554}let (hs_1031: handshakestate,plaintext_c_1032: bitstring,valid_1033: bool) = (if (not-caught-fail(v_1017) && success?(is-true(success?(1-proj-7-tuple(v_1017))))) then (if (not-caught-fail(v_1018) && success?(is-true(success?(1-proj-3-tuple(v_1018))))) then (if not-caught-fail(v_1019) then (if (not-caught-fail(v_1029) && success?(is-true(success?(1-proj-3-tuple(v_1029))))) then (if (v_1019 && 3-proj-3-tuple(v_1029)) then (if not-caught-fail(v_1030) then (v_1030,2-proj-3-tuple(v_1029),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {555}event RecvMsg(bob,charlie,stagepack_c(sid),plaintext_c_1032);
        {556}insert statestore(bob,charlie,sid,statepack_d(hs_1031,handshakestategetcs(hs_1031),cs2_1014))
    ) | (
        {558}!
        {576}get statestore(=bob,=charlie,=sid,statepack_d(hs_1034: handshakestate,cs1_1035: cipherstate,cs2_1036: cipherstate)) in
        {559}let hs_1037: handshakestate = handshakestatesetcs(hs_1034,cs2_1036) in
        {560}let v_1038: bitstring = catch-fail(handshakestateunpack(hs_1037)) in
        {561}let v_1039: bitstring = catch-fail((empty,empty,empty)) in
        {562}let v_1040: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1038))) in
        {563}let v_1041: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1040))) in
        {564}let v_1042: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_1041),2-proj-2-tuple(v_1041),3-proj-3-tuple(v_1040),msg_d(bob,charlie,sid))) in
        {565}let v_1043: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1040))) in
        {566}let v_1044: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1041))) && success?(1-proj-3-tuple(v_1040))) then (if (not-caught-fail(v_1043) && success?(is-true(success?(1-proj-2-tuple(v_1043))))) then cipherstatepack(1-proj-2-tuple(v_1043),increment_nonce(2-proj-2-tuple(v_1041))) else fail-any) else fail-any)) in
        {567}let v_1045: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1040)) && success?(1-proj-3-tuple(v_1040))) then (if (not-caught-fail(v_1041) && success?(is-true(success?(1-proj-2-tuple(v_1041))))) then (if not-caught-fail(v_1042) then (if not-caught-fail(v_1044) then (v_1044,v_1042) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {568}let v_1046: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_1045),2-proj-3-tuple(v_1040),3-proj-3-tuple(v_1040)))) in
        {569}let v_1047: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_1045)) && success?(symmetricstatepack(1-proj-2-tuple(v_1045),2-proj-3-tuple(v_1040),3-proj-3-tuple(v_1040)))) then (if (not-caught-fail(v_1046) && success?(is-true(success?(1-proj-3-tuple(v_1046))))) then symmetricstatepack(1-proj-3-tuple(v_1046),2-proj-3-tuple(v_1046),hash(3-proj-3-tuple(v_1046),2-proj-2-tuple(v_1045))) else fail-any) else fail-any)) in
        {570}let v_1048: bitstring = catch-fail((if success?(1-proj-7-tuple(v_1038)) then (if (not-caught-fail(v_1040) && success?(is-true(success?(1-proj-3-tuple(v_1040))))) then (if (not-caught-fail(v_1045) && success?(is-true(success?(1-proj-2-tuple(v_1045))))) then (if not-caught-fail(v_1047) then (v_1047,2-proj-2-tuple(v_1045)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {571}let v_1049: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_1048),2-proj-7-tuple(v_1038),3-proj-7-tuple(v_1038),4-proj-7-tuple(v_1038),5-proj-7-tuple(v_1038),6-proj-7-tuple(v_1038),7-proj-7-tuple(v_1038))) in
        {572}let v_1050: bitstring = catch-fail(concat3(1-proj-3-tuple(v_1039),2-proj-3-tuple(v_1039),2-proj-2-tuple(v_1048))) in
        {573}let (hs_1051: handshakestate,message_d_1052: bitstring) = (if (not-caught-fail(v_1038) && success?(is-true(success?(1-proj-7-tuple(v_1038))))) then (if (not-caught-fail(v_1039) && success?(is-true(success?(1-proj-3-tuple(v_1039))))) then (if (not-caught-fail(v_1048) && success?(is-true(success?(1-proj-2-tuple(v_1048))))) then (if not-caught-fail(v_1049) then (if not-caught-fail(v_1050) then (v_1049,v_1050) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {574}event SendMsg(bob,charlie,stagepack_d(sid),msg_d(bob,charlie,sid));
        {575}out(pub, message_d_1052)
    ) | (
        {577}event LeakS(phase0,bob);
        {578}out(pub, key_s(bob))
    ) | (
        {579}phase 1;
        {580}event LeakS(phase1,bob);
        {581}out(pub, key_s(bob))
    )
)

-- Query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1155,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1155,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)); not attacker_p1(msg_a(alice,bob,sid_a)); attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob)); attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice))); attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1155,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1155,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)); not attacker_p1(msg_b(bob,alice,sid_b)); attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice)); attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob))); attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1155,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1155,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)); not attacker_p1(msg_c(alice,bob,sid_a)); attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob)); attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice))); attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1155,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1155,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)); not attacker_p1(msg_d(bob,alice,sid_b)); attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice)); attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob))); attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)); not event(RecvEnd(true))
Completing...
200 rules inserted. The rule base contains 200 rules. 143 rules in the queue.
400 rules inserted. The rule base contains 394 rules. 148 rules in the queue.
600 rules inserted. The rule base contains 580 rules. 337 rules in the queue.
800 rules inserted. The rule base contains 780 rules. 340 rules in the queue.
1000 rules inserted. The rule base contains 980 rules. 607 rules in the queue.
1200 rules inserted. The rule base contains 1175 rules. 593 rules in the queue.
1400 rules inserted. The rule base contains 1359 rules. 517 rules in the queue.
1600 rules inserted. The rule base contains 1482 rules. 454 rules in the queue.
1800 rules inserted. The rule base contains 1587 rules. 489 rules in the queue.
2000 rules inserted. The rule base contains 1787 rules. 610 rules in the queue.
2200 rules inserted. The rule base contains 1987 rules. 627 rules in the queue.
2400 rules inserted. The rule base contains 2187 rules. 711 rules in the queue.
2600 rules inserted. The rule base contains 2387 rules. 785 rules in the queue.
2800 rules inserted. The rule base contains 2583 rules. 791 rules in the queue.
3000 rules inserted. The rule base contains 2723 rules. 794 rules in the queue.
3200 rules inserted. The rule base contains 2867 rules. 801 rules in the queue.
3400 rules inserted. The rule base contains 3027 rules. 804 rules in the queue.
3600 rules inserted. The rule base contains 3225 rules. 830 rules in the queue.
3800 rules inserted. The rule base contains 3419 rules. 840 rules in the queue.
4000 rules inserted. The rule base contains 3611 rules. 849 rules in the queue.
4200 rules inserted. The rule base contains 3811 rules. 858 rules in the queue.
4400 rules inserted. The rule base contains 3977 rules. 902 rules in the queue.
4600 rules inserted. The rule base contains 4120 rules. 903 rules in the queue.
4800 rules inserted. The rule base contains 4258 rules. 890 rules in the queue.
5000 rules inserted. The rule base contains 4443 rules. 911 rules in the queue.
5200 rules inserted. The rule base contains 4563 rules. 912 rules in the queue.
5400 rules inserted. The rule base contains 4673 rules. 965 rules in the queue.
5600 rules inserted. The rule base contains 4783 rules. 1018 rules in the queue.
5800 rules inserted. The rule base contains 4922 rules. 1028 rules in the queue.
6000 rules inserted. The rule base contains 5079 rules. 1002 rules in the queue.
6200 rules inserted. The rule base contains 5217 rules. 1006 rules in the queue.
6400 rules inserted. The rule base contains 5355 rules. 979 rules in the queue.
6600 rules inserted. The rule base contains 5515 rules. 985 rules in the queue.
6800 rules inserted. The rule base contains 5691 rules. 968 rules in the queue.
7000 rules inserted. The rule base contains 5821 rules. 972 rules in the queue.
7200 rules inserted. The rule base contains 5953 rules. 953 rules in the queue.
7400 rules inserted. The rule base contains 6114 rules. 952 rules in the queue.
7600 rules inserted. The rule base contains 6251 rules. 997 rules in the queue.
7800 rules inserted. The rule base contains 6355 rules. 1027 rules in the queue.
8000 rules inserted. The rule base contains 6480 rules. 1029 rules in the queue.
8200 rules inserted. The rule base contains 6608 rules. 1027 rules in the queue.
8400 rules inserted. The rule base contains 6714 rules. 1020 rules in the queue.
8600 rules inserted. The rule base contains 6796 rules. 1000 rules in the queue.
8800 rules inserted. The rule base contains 6912 rules. 998 rules in the queue.
9000 rules inserted. The rule base contains 7083 rules. 990 rules in the queue.
9200 rules inserted. The rule base contains 7269 rules. 990 rules in the queue.
9400 rules inserted. The rule base contains 7407 rules. 1147 rules in the queue.
9600 rules inserted. The rule base contains 7528 rules. 1465 rules in the queue.
9800 rules inserted. The rule base contains 7669 rules. 1470 rules in the queue.
10000 rules inserted. The rule base contains 7820 rules. 1493 rules in the queue.
10200 rules inserted. The rule base contains 7948 rules. 1527 rules in the queue.
10400 rules inserted. The rule base contains 7998 rules. 1519 rules in the queue.
10600 rules inserted. The rule base contains 8035 rules. 1526 rules in the queue.
10800 rules inserted. The rule base contains 8136 rules. 1603 rules in the queue.
11000 rules inserted. The rule base contains 8248 rules. 1795 rules in the queue.
11200 rules inserted. The rule base contains 8430 rules. 1811 rules in the queue.
11400 rules inserted. The rule base contains 8582 rules. 1791 rules in the queue.
11600 rules inserted. The rule base contains 8710 rules. 1793 rules in the queue.
11800 rules inserted. The rule base contains 8747 rules. 1826 rules in the queue.
12000 rules inserted. The rule base contains 8743 rules. 1778 rules in the queue.
12200 rules inserted. The rule base contains 8772 rules. 1789 rules in the queue.
12400 rules inserted. The rule base contains 8785 rules. 1734 rules in the queue.
12600 rules inserted. The rule base contains 8985 rules. 2633 rules in the queue.
12800 rules inserted. The rule base contains 9162 rules. 2716 rules in the queue.
13000 rules inserted. The rule base contains 9352 rules. 2734 rules in the queue.
13200 rules inserted. The rule base contains 9548 rules. 2777 rules in the queue.
13400 rules inserted. The rule base contains 9684 rules. 2746 rules in the queue.
13600 rules inserted. The rule base contains 9684 rules. 2746 rules in the queue.
13800 rules inserted. The rule base contains 9451 rules. 2733 rules in the queue.
14000 rules inserted. The rule base contains 9451 rules. 2733 rules in the queue.
14200 rules inserted. The rule base contains 9570 rules. 2898 rules in the queue.
14400 rules inserted. The rule base contains 9760 rules. 3260 rules in the queue.
14600 rules inserted. The rule base contains 9952 rules. 3576 rules in the queue.
14800 rules inserted. The rule base contains 10144 rules. 3722 rules in the queue.
15000 rules inserted. The rule base contains 10339 rules. 4041 rules in the queue.
15200 rules inserted. The rule base contains 10529 rules. 4533 rules in the queue.
15400 rules inserted. The rule base contains 10723 rules. 5071 rules in the queue.
15600 rules inserted. The rule base contains 10914 rules. 5127 rules in the queue.
15800 rules inserted. The rule base contains 11105 rules. 5186 rules in the queue.
16000 rules inserted. The rule base contains 11290 rules. 5212 rules in the queue.
16200 rules inserted. The rule base contains 11387 rules. 5174 rules in the queue.
16400 rules inserted. The rule base contains 11472 rules. 5081 rules in the queue.
16600 rules inserted. The rule base contains 11528 rules. 5011 rules in the queue.
16800 rules inserted. The rule base contains 11619 rules. 4929 rules in the queue.
17000 rules inserted. The rule base contains 11782 rules. 4834 rules in the queue.
17200 rules inserted. The rule base contains 11971 rules. 4717 rules in the queue.
17400 rules inserted. The rule base contains 12161 rules. 4599 rules in the queue.
17600 rules inserted. The rule base contains 12349 rules. 4479 rules in the queue.
17800 rules inserted. The rule base contains 12537 rules. 4361 rules in the queue.
18000 rules inserted. The rule base contains 12728 rules. 4234 rules in the queue.
18200 rules inserted. The rule base contains 12914 rules. 4128 rules in the queue.
18400 rules inserted. The rule base contains 13101 rules. 4019 rules in the queue.
18600 rules inserted. The rule base contains 13289 rules. 3879 rules in the queue.
18800 rules inserted. The rule base contains 13475 rules. 3769 rules in the queue.
19000 rules inserted. The rule base contains 13661 rules. 3663 rules in the queue.
19200 rules inserted. The rule base contains 13850 rules. 3520 rules in the queue.
19400 rules inserted. The rule base contains 14031 rules. 3575 rules in the queue.
19600 rules inserted. The rule base contains 14217 rules. 3499 rules in the queue.
19800 rules inserted. The rule base contains 14402 rules. 3426 rules in the queue.
20000 rules inserted. The rule base contains 14597 rules. 3621 rules in the queue.
20200 rules inserted. The rule base contains 14792 rules. 3812 rules in the queue.
20400 rules inserted. The rule base contains 14978 rules. 3830 rules in the queue.
20600 rules inserted. The rule base contains 15166 rules. 3869 rules in the queue.
20800 rules inserted. The rule base contains 15361 rules. 3872 rules in the queue.
21000 rules inserted. The rule base contains 15549 rules. 3838 rules in the queue.
21200 rules inserted. The rule base contains 15735 rules. 3816 rules in the queue.
21400 rules inserted. The rule base contains 15850 rules. 3701 rules in the queue.
21600 rules inserted. The rule base contains 15805 rules. 3575 rules in the queue.
21800 rules inserted. The rule base contains 15741 rules. 3890 rules in the queue.
22000 rules inserted. The rule base contains 15941 rules. 3928 rules in the queue.
22200 rules inserted. The rule base contains 16141 rules. 3968 rules in the queue.
22400 rules inserted. The rule base contains 16341 rules. 4006 rules in the queue.
22600 rules inserted. The rule base contains 16541 rules. 4046 rules in the queue.
22800 rules inserted. The rule base contains 16698 rules. 4407 rules in the queue.
23000 rules inserted. The rule base contains 16889 rules. 4359 rules in the queue.
23200 rules inserted. The rule base contains 17077 rules. 4294 rules in the queue.
23400 rules inserted. The rule base contains 17260 rules. 4182 rules in the queue.
23600 rules inserted. The rule base contains 17445 rules. 4092 rules in the queue.
23800 rules inserted. The rule base contains 17629 rules. 3987 rules in the queue.
24000 rules inserted. The rule base contains 17812 rules. 3891 rules in the queue.
24200 rules inserted. The rule base contains 17947 rules. 3875 rules in the queue.
24400 rules inserted. The rule base contains 18085 rules. 3866 rules in the queue.
24600 rules inserted. The rule base contains 18231 rules. 3827 rules in the queue.
24800 rules inserted. The rule base contains 18375 rules. 3771 rules in the queue.
25000 rules inserted. The rule base contains 18398 rules. 3744 rules in the queue.
25200 rules inserted. The rule base contains 18513 rules. 3704 rules in the queue.
25400 rules inserted. The rule base contains 18668 rules. 3556 rules in the queue.
25600 rules inserted. The rule base contains 18815 rules. 3552 rules in the queue.
25800 rules inserted. The rule base contains 18991 rules. 3579 rules in the queue.
26000 rules inserted. The rule base contains 19167 rules. 3606 rules in the queue.
26200 rules inserted. The rule base contains 19346 rules. 3632 rules in the queue.
26400 rules inserted. The rule base contains 19531 rules. 3660 rules in the queue.
26600 rules inserted. The rule base contains 19715 rules. 3658 rules in the queue.
26800 rules inserted. The rule base contains 19904 rules. 3515 rules in the queue.
27000 rules inserted. The rule base contains 20017 rules. 3452 rules in the queue.
27200 rules inserted. The rule base contains 20205 rules. 3485 rules in the queue.
27400 rules inserted. The rule base contains 20399 rules. 3521 rules in the queue.
27600 rules inserted. The rule base contains 20599 rules. 3559 rules in the queue.
27800 rules inserted. The rule base contains 20759 rules. 3558 rules in the queue.
28000 rules inserted. The rule base contains 20910 rules. 3552 rules in the queue.
28200 rules inserted. The rule base contains 21066 rules. 3581 rules in the queue.
28400 rules inserted. The rule base contains 21227 rules. 3606 rules in the queue.
28600 rules inserted. The rule base contains 21339 rules. 3607 rules in the queue.
28800 rules inserted. The rule base contains 21390 rules. 3623 rules in the queue.
29000 rules inserted. The rule base contains 21464 rules. 3621 rules in the queue.
29200 rules inserted. The rule base contains 21597 rules. 3626 rules in the queue.
29400 rules inserted. The rule base contains 21728 rules. 3631 rules in the queue.
29600 rules inserted. The rule base contains 21843 rules. 3631 rules in the queue.
29800 rules inserted. The rule base contains 21970 rules. 3637 rules in the queue.
30000 rules inserted. The rule base contains 22086 rules. 3639 rules in the queue.
30200 rules inserted. The rule base contains 22182 rules. 3657 rules in the queue.
30400 rules inserted. The rule base contains 22346 rules. 3679 rules in the queue.
30600 rules inserted. The rule base contains 22510 rules. 3699 rules in the queue.
30800 rules inserted. The rule base contains 22686 rules. 3725 rules in the queue.
31000 rules inserted. The rule base contains 22868 rules. 3746 rules in the queue.
31200 rules inserted. The rule base contains 22994 rules. 3705 rules in the queue.
31400 rules inserted. The rule base contains 23126 rules. 3676 rules in the queue.
31600 rules inserted. The rule base contains 23259 rules. 3677 rules in the queue.
31800 rules inserted. The rule base contains 23401 rules. 3668 rules in the queue.
32000 rules inserted. The rule base contains 23475 rules. 3702 rules in the queue.
32200 rules inserted. The rule base contains 23601 rules. 3686 rules in the queue.
32400 rules inserted. The rule base contains 23775 rules. 3695 rules in the queue.
32600 rules inserted. The rule base contains 23975 rules. 3709 rules in the queue.
32800 rules inserted. The rule base contains 24175 rules. 3722 rules in the queue.
33000 rules inserted. The rule base contains 24375 rules. 3732 rules in the queue.
33200 rules inserted. The rule base contains 24575 rules. 3745 rules in the queue.
33400 rules inserted. The rule base contains 24775 rules. 3746 rules in the queue.
33600 rules inserted. The rule base contains 24975 rules. 3772 rules in the queue.
33800 rules inserted. The rule base contains 25087 rules. 3747 rules in the queue.
34000 rules inserted. The rule base contains 25251 rules. 3760 rules in the queue.
34200 rules inserted. The rule base contains 25376 rules. 3765 rules in the queue.
34400 rules inserted. The rule base contains 25504 rules. 3773 rules in the queue.
34600 rules inserted. The rule base contains 25634 rules. 3795 rules in the queue.
34800 rules inserted. The rule base contains 25768 rules. 3788 rules in the queue.
35000 rules inserted. The rule base contains 25893 rules. 3793 rules in the queue.
35200 rules inserted. The rule base contains 26052 rules. 3825 rules in the queue.
35400 rules inserted. The rule base contains 26149 rules. 3827 rules in the queue.
35600 rules inserted. The rule base contains 26208 rules. 3835 rules in the queue.
35800 rules inserted. The rule base contains 26261 rules. 3846 rules in the queue.
36000 rules inserted. The rule base contains 26461 rules. 3861 rules in the queue.
36200 rules inserted. The rule base contains 26661 rules. 3883 rules in the queue.
36400 rules inserted. The rule base contains 26861 rules. 3899 rules in the queue.
36600 rules inserted. The rule base contains 27061 rules. 3903 rules in the queue.
36800 rules inserted. The rule base contains 27261 rules. 3906 rules in the queue.
37000 rules inserted. The rule base contains 27461 rules. 3911 rules in the queue.
37200 rules inserted. The rule base contains 27618 rules. 3915 rules in the queue.
37400 rules inserted. The rule base contains 27741 rules. 3933 rules in the queue.
37600 rules inserted. The rule base contains 27941 rules. 3951 rules in the queue.
37800 rules inserted. The rule base contains 28141 rules. 3977 rules in the queue.
38000 rules inserted. The rule base contains 28341 rules. 3996 rules in the queue.
38200 rules inserted. The rule base contains 28541 rules. 4025 rules in the queue.
38400 rules inserted. The rule base contains 28685 rules. 4043 rules in the queue.
38600 rules inserted. The rule base contains 28848 rules. 4058 rules in the queue.
38800 rules inserted. The rule base contains 28990 rules. 4073 rules in the queue.
39000 rules inserted. The rule base contains 29153 rules. 4076 rules in the queue.
39200 rules inserted. The rule base contains 29301 rules. 4222 rules in the queue.
39400 rules inserted. The rule base contains 29485 rules. 4346 rules in the queue.
39600 rules inserted. The rule base contains 29613 rules. 4340 rules in the queue.
39800 rules inserted. The rule base contains 29813 rules. 4403 rules in the queue.
40000 rules inserted. The rule base contains 30013 rules. 4463 rules in the queue.
40200 rules inserted. The rule base contains 30213 rules. 4525 rules in the queue.
40400 rules inserted. The rule base contains 30413 rules. 4577 rules in the queue.
40600 rules inserted. The rule base contains 30613 rules. 4633 rules in the queue.
40800 rules inserted. The rule base contains 30813 rules. 4688 rules in the queue.
41000 rules inserted. The rule base contains 31013 rules. 4744 rules in the queue.
41200 rules inserted. The rule base contains 31205 rules. 4698 rules in the queue.
41400 rules inserted. The rule base contains 31405 rules. 4735 rules in the queue.
41600 rules inserted. The rule base contains 31605 rules. 4766 rules in the queue.
41800 rules inserted. The rule base contains 31805 rules. 4782 rules in the queue.
42000 rules inserted. The rule base contains 32005 rules. 4805 rules in the queue.
42200 rules inserted. The rule base contains 32205 rules. 4806 rules in the queue.
42400 rules inserted. The rule base contains 32365 rules. 4839 rules in the queue.
42600 rules inserted. The rule base contains 32520 rules. 4873 rules in the queue.
42800 rules inserted. The rule base contains 32664 rules. 4889 rules in the queue.
43000 rules inserted. The rule base contains 32822 rules. 4897 rules in the queue.
43200 rules inserted. The rule base contains 32972 rules. 4925 rules in the queue.
43400 rules inserted. The rule base contains 33172 rules. 4992 rules in the queue.
43600 rules inserted. The rule base contains 33372 rules. 5060 rules in the queue.
43800 rules inserted. The rule base contains 33548 rules. 5083 rules in the queue.
44000 rules inserted. The rule base contains 33700 rules. 5105 rules in the queue.
44200 rules inserted. The rule base contains 33900 rules. 5147 rules in the queue.
44400 rules inserted. The rule base contains 34100 rules. 5186 rules in the queue.
44600 rules inserted. The rule base contains 34300 rules. 5228 rules in the queue.
44800 rules inserted. The rule base contains 34500 rules. 5269 rules in the queue.
45000 rules inserted. The rule base contains 34700 rules. 5303 rules in the queue.
45200 rules inserted. The rule base contains 34900 rules. 5338 rules in the queue.
45400 rules inserted. The rule base contains 35100 rules. 5371 rules in the queue.
45600 rules inserted. The rule base contains 35300 rules. 5404 rules in the queue.
45800 rules inserted. The rule base contains 35500 rules. 5429 rules in the queue.
46000 rules inserted. The rule base contains 35700 rules. 5469 rules in the queue.
46200 rules inserted. The rule base contains 35900 rules. 5530 rules in the queue.
46400 rules inserted. The rule base contains 36100 rules. 5586 rules in the queue.
46600 rules inserted. The rule base contains 36300 rules. 5661 rules in the queue.
46800 rules inserted. The rule base contains 36500 rules. 5727 rules in the queue.
47000 rules inserted. The rule base contains 36700 rules. 5800 rules in the queue.
47200 rules inserted. The rule base contains 36844 rules. 5830 rules in the queue.
47400 rules inserted. The rule base contains 37004 rules. 5829 rules in the queue.
47600 rules inserted. The rule base contains 37191 rules. 5775 rules in the queue.
47800 rules inserted. The rule base contains 37360 rules. 5730 rules in the queue.
48000 rules inserted. The rule base contains 37536 rules. 5658 rules in the queue.
48200 rules inserted. The rule base contains 37688 rules. 5613 rules in the queue.
48400 rules inserted. The rule base contains 37842 rules. 5570 rules in the queue.
48600 rules inserted. The rule base contains 37996 rules. 5529 rules in the queue.
48800 rules inserted. The rule base contains 38178 rules. 5547 rules in the queue.
49000 rules inserted. The rule base contains 38272 rules. 5590 rules in the queue.
49200 rules inserted. The rule base contains 38468 rules. 5617 rules in the queue.
49400 rules inserted. The rule base contains 38668 rules. 5655 rules in the queue.
49600 rules inserted. The rule base contains 38868 rules. 5681 rules in the queue.
49800 rules inserted. The rule base contains 39060 rules. 5708 rules in the queue.
50000 rules inserted. The rule base contains 39244 rules. 5744 rules in the queue.
50200 rules inserted. The rule base contains 39440 rules. 5775 rules in the queue.
50400 rules inserted. The rule base contains 39640 rules. 5814 rules in the queue.
50600 rules inserted. The rule base contains 39840 rules. 5855 rules in the queue.
50800 rules inserted. The rule base contains 40040 rules. 5888 rules in the queue.
51000 rules inserted. The rule base contains 40232 rules. 5924 rules in the queue.
51200 rules inserted. The rule base contains 40424 rules. 5986 rules in the queue.
51400 rules inserted. The rule base contains 40620 rules. 6026 rules in the queue.
51600 rules inserted. The rule base contains 40820 rules. 6069 rules in the queue.
51800 rules inserted. The rule base contains 41012 rules. 6113 rules in the queue.
52000 rules inserted. The rule base contains 41212 rules. 6164 rules in the queue.
52200 rules inserted. The rule base contains 41412 rules. 6218 rules in the queue.
52400 rules inserted. The rule base contains 41612 rules. 6266 rules in the queue.
52600 rules inserted. The rule base contains 41812 rules. 6321 rules in the queue.
52800 rules inserted. The rule base contains 42008 rules. 6369 rules in the queue.
53000 rules inserted. The rule base contains 42140 rules. 6368 rules in the queue.
53200 rules inserted. The rule base contains 42292 rules. 6387 rules in the queue.
53400 rules inserted. The rule base contains 42440 rules. 6361 rules in the queue.
53600 rules inserted. The rule base contains 42592 rules. 6352 rules in the queue.
53800 rules inserted. The rule base contains 42792 rules. 6418 rules in the queue.
54000 rules inserted. The rule base contains 42976 rules. 6480 rules in the queue.
54200 rules inserted. The rule base contains 43166 rules. 6517 rules in the queue.
54400 rules inserted. The rule base contains 43192 rules. 6611 rules in the queue.
54600 rules inserted. The rule base contains 43372 rules. 6623 rules in the queue.
54800 rules inserted. The rule base contains 43572 rules. 6657 rules in the queue.
55000 rules inserted. The rule base contains 43772 rules. 6684 rules in the queue.
55200 rules inserted. The rule base contains 43972 rules. 6704 rules in the queue.
55400 rules inserted. The rule base contains 44132 rules. 6725 rules in the queue.
55600 rules inserted. The rule base contains 44300 rules. 6747 rules in the queue.
55800 rules inserted. The rule base contains 44482 rules. 6761 rules in the queue.
56000 rules inserted. The rule base contains 44674 rules. 6787 rules in the queue.
56200 rules inserted. The rule base contains 44874 rules. 6821 rules in the queue.
56400 rules inserted. The rule base contains 45074 rules. 6841 rules in the queue.
56600 rules inserted. The rule base contains 45246 rules. 6865 rules in the queue.
56800 rules inserted. The rule base contains 45406 rules. 6888 rules in the queue.
57000 rules inserted. The rule base contains 45598 rules. 6928 rules in the queue.
57200 rules inserted. The rule base contains 45788 rules. 7009 rules in the queue.
57400 rules inserted. The rule base contains 45988 rules. 7049 rules in the queue.
57600 rules inserted. The rule base contains 46188 rules. 7081 rules in the queue.
57800 rules inserted. The rule base contains 46368 rules. 7112 rules in the queue.
58000 rules inserted. The rule base contains 46552 rules. 7140 rules in the queue.
58200 rules inserted. The rule base contains 46752 rules. 7184 rules in the queue.
58400 rules inserted. The rule base contains 46952 rules. 7226 rules in the queue.
58600 rules inserted. The rule base contains 47152 rules. 7262 rules in the queue.
58800 rules inserted. The rule base contains 47352 rules. 7304 rules in the queue.
59000 rules inserted. The rule base contains 47536 rules. 7342 rules in the queue.
59200 rules inserted. The rule base contains 47650 rules. 7310 rules in the queue.
59400 rules inserted. The rule base contains 47793 rules. 7293 rules in the queue.
59600 rules inserted. The rule base contains 47939 rules. 7286 rules in the queue.
59800 rules inserted. The rule base contains 48106 rules. 7274 rules in the queue.
60000 rules inserted. The rule base contains 48306 rules. 7324 rules in the queue.
60200 rules inserted. The rule base contains 48506 rules. 7362 rules in the queue.
60400 rules inserted. The rule base contains 48706 rules. 7412 rules in the queue.
60600 rules inserted. The rule base contains 48878 rules. 7414 rules in the queue.
60800 rules inserted. The rule base contains 48687 rules. 7656 rules in the queue.
61000 rules inserted. The rule base contains 48786 rules. 7700 rules in the queue.
61200 rules inserted. The rule base contains 48955 rules. 7682 rules in the queue.
61400 rules inserted. The rule base contains 49155 rules. 7693 rules in the queue.
61600 rules inserted. The rule base contains 49355 rules. 7690 rules in the queue.
61800 rules inserted. The rule base contains 49497 rules. 7685 rules in the queue.
62000 rules inserted. The rule base contains 49574 rules. 7687 rules in the queue.
62200 rules inserted. The rule base contains 49765 rules. 7715 rules in the queue.
62400 rules inserted. The rule base contains 49933 rules. 7711 rules in the queue.
62600 rules inserted. The rule base contains 50133 rules. 7745 rules in the queue.
62800 rules inserted. The rule base contains 50333 rules. 7772 rules in the queue.
63000 rules inserted. The rule base contains 50533 rules. 7775 rules in the queue.
63200 rules inserted. The rule base contains 50667 rules. 7798 rules in the queue.
63400 rules inserted. The rule base contains 50849 rules. 7835 rules in the queue.
63600 rules inserted. The rule base contains 51047 rules. 7874 rules in the queue.
63800 rules inserted. The rule base contains 51217 rules. 8042 rules in the queue.
64000 rules inserted. The rule base contains 51409 rules. 8067 rules in the queue.
64200 rules inserted. The rule base contains 51609 rules. 8075 rules in the queue.
64400 rules inserted. The rule base contains 51803 rules. 8101 rules in the queue.
64600 rules inserted. The rule base contains 51926 rules. 8116 rules in the queue.
64800 rules inserted. The rule base contains 52107 rules. 8134 rules in the queue.
65000 rules inserted. The rule base contains 52291 rules. 8155 rules in the queue.
65200 rules inserted. The rule base contains 52491 rules. 8193 rules in the queue.
65400 rules inserted. The rule base contains 52691 rules. 8220 rules in the queue.
65600 rules inserted. The rule base contains 52887 rules. 8243 rules in the queue.
65800 rules inserted. The rule base contains 53043 rules. 8268 rules in the queue.
66000 rules inserted. The rule base contains 53189 rules. 8264 rules in the queue.
66200 rules inserted. The rule base contains 53314 rules. 8248 rules in the queue.
66400 rules inserted. The rule base contains 53472 rules. 8245 rules in the queue.
66600 rules inserted. The rule base contains 53644 rules. 8234 rules in the queue.
66800 rules inserted. The rule base contains 53772 rules. 8270 rules in the queue.
67000 rules inserted. The rule base contains 53892 rules. 8310 rules in the queue.
67200 rules inserted. The rule base contains 54032 rules. 8341 rules in the queue.
67400 rules inserted. The rule base contains 54152 rules. 8381 rules in the queue.
67600 rules inserted. The rule base contains 54261 rules. 8335 rules in the queue.
67800 rules inserted. The rule base contains 54315 rules. 8361 rules in the queue.
68000 rules inserted. The rule base contains 54279 rules. 8401 rules in the queue.
68200 rules inserted. The rule base contains 54406 rules. 8282 rules in the queue.
68400 rules inserted. The rule base contains 54503 rules. 8188 rules in the queue.
68600 rules inserted. The rule base contains 54703 rules. 8197 rules in the queue.
68800 rules inserted. The rule base contains 54891 rules. 8140 rules in the queue.
69000 rules inserted. The rule base contains 54830 rules. 8113 rules in the queue.
69200 rules inserted. The rule base contains 54827 rules. 8030 rules in the queue.
69400 rules inserted. The rule base contains 54893 rules. 7918 rules in the queue.
69600 rules inserted. The rule base contains 55040 rules. 7912 rules in the queue.
69800 rules inserted. The rule base contains 55240 rules. 7852 rules in the queue.
70000 rules inserted. The rule base contains 55349 rules. 7797 rules in the queue.
70200 rules inserted. The rule base contains 55305 rules. 7776 rules in the queue.
70400 rules inserted. The rule base contains 55291 rules. 7704 rules in the queue.
70600 rules inserted. The rule base contains 55477 rules. 7730 rules in the queue.
70800 rules inserted. The rule base contains 55660 rules. 7886 rules in the queue.
71000 rules inserted. The rule base contains 55846 rules. 7859 rules in the queue.
71200 rules inserted. The rule base contains 56014 rules. 7851 rules in the queue.
71400 rules inserted. The rule base contains 56214 rules. 7837 rules in the queue.
71600 rules inserted. The rule base contains 56280 rules. 7821 rules in the queue.
71800 rules inserted. The rule base contains 56350 rules. 7761 rules in the queue.
72000 rules inserted. The rule base contains 56540 rules. 7791 rules in the queue.
72200 rules inserted. The rule base contains 56736 rules. 7824 rules in the queue.
72400 rules inserted. The rule base contains 56936 rules. 7859 rules in the queue.
72600 rules inserted. The rule base contains 57136 rules. 7853 rules in the queue.
72800 rules inserted. The rule base contains 57332 rules. 7877 rules in the queue.
73000 rules inserted. The rule base contains 57512 rules. 7917 rules in the queue.
73200 rules inserted. The rule base contains 57564 rules. 7936 rules in the queue.
73400 rules inserted. The rule base contains 57660 rules. 7891 rules in the queue.
73600 rules inserted. The rule base contains 57822 rules. 7901 rules in the queue.
73800 rules inserted. The rule base contains 58009 rules. 7911 rules in the queue.
74000 rules inserted. The rule base contains 58209 rules. 7911 rules in the queue.
74200 rules inserted. The rule base contains 58409 rules. 7911 rules in the queue.
74400 rules inserted. The rule base contains 58606 rules. 7914 rules in the queue.
74600 rules inserted. The rule base contains 58805 rules. 7915 rules in the queue.
74800 rules inserted. The rule base contains 58996 rules. 7926 rules in the queue.
75000 rules inserted. The rule base contains 59191 rules. 7974 rules in the queue.
75200 rules inserted. The rule base contains 59306 rules. 7992 rules in the queue.
75400 rules inserted. The rule base contains 59375 rules. 7909 rules in the queue.
75600 rules inserted. The rule base contains 59487 rules. 7958 rules in the queue.
75800 rules inserted. The rule base contains 59641 rules. 7997 rules in the queue.
76000 rules inserted. The rule base contains 59820 rules. 8020 rules in the queue.
76200 rules inserted. The rule base contains 59959 rules. 8059 rules in the queue.
76400 rules inserted. The rule base contains 60109 rules. 8113 rules in the queue.
76600 rules inserted. The rule base contains 60268 rules. 8170 rules in the queue.
76800 rules inserted. The rule base contains 60421 rules. 8201 rules in the queue.
77000 rules inserted. The rule base contains 60570 rules. 8224 rules in the queue.
77200 rules inserted. The rule base contains 60740 rules. 8236 rules in the queue.
77400 rules inserted. The rule base contains 60879 rules. 8271 rules in the queue.
77600 rules inserted. The rule base contains 61029 rules. 8291 rules in the queue.
77800 rules inserted. The rule base contains 61202 rules. 8338 rules in the queue.
78000 rules inserted. The rule base contains 61396 rules. 8370 rules in the queue.
78200 rules inserted. The rule base contains 61584 rules. 8277 rules in the queue.
78400 rules inserted. The rule base contains 61776 rules. 8212 rules in the queue.
78600 rules inserted. The rule base contains 61880 rules. 8146 rules in the queue.
78800 rules inserted. The rule base contains 62078 rules. 8154 rules in the queue.
79000 rules inserted. The rule base contains 62208 rules. 8178 rules in the queue.
79200 rules inserted. The rule base contains 62249 rules. 8191 rules in the queue.
79400 rules inserted. The rule base contains 62298 rules. 8044 rules in the queue.
79600 rules inserted. The rule base contains 62408 rules. 7985 rules in the queue.
79800 rules inserted. The rule base contains 62608 rules. 7988 rules in the queue.
80000 rules inserted. The rule base contains 62808 rules. 7911 rules in the queue.
80200 rules inserted. The rule base contains 62716 rules. 7880 rules in the queue.
80400 rules inserted. The rule base contains 62721 rules. 7890 rules in the queue.
80600 rules inserted. The rule base contains 62855 rules. 7877 rules in the queue.
80800 rules inserted. The rule base contains 63024 rules. 7882 rules in the queue.
81000 rules inserted. The rule base contains 63176 rules. 7822 rules in the queue.
81200 rules inserted. The rule base contains 63361 rules. 7839 rules in the queue.
81400 rules inserted. The rule base contains 63561 rules. 7873 rules in the queue.
81600 rules inserted. The rule base contains 63756 rules. 7901 rules in the queue.
81800 rules inserted. The rule base contains 63941 rules. 7918 rules in the queue.
82000 rules inserted. The rule base contains 64141 rules. 7951 rules in the queue.
82200 rules inserted. The rule base contains 64318 rules. 7979 rules in the queue.
82400 rules inserted. The rule base contains 64355 rules. 7919 rules in the queue.
82600 rules inserted. The rule base contains 64335 rules. 7944 rules in the queue.
82800 rules inserted. The rule base contains 64517 rules. 7979 rules in the queue.
83000 rules inserted. The rule base contains 64704 rules. 8010 rules in the queue.
83200 rules inserted. The rule base contains 64868 rules. 8023 rules in the queue.
83400 rules inserted. The rule base contains 65041 rules. 8043 rules in the queue.
83600 rules inserted. The rule base contains 65231 rules. 8055 rules in the queue.
83800 rules inserted. The rule base contains 65416 rules. 8103 rules in the queue.
84000 rules inserted. The rule base contains 65609 rules. 8148 rules in the queue.
84200 rules inserted. The rule base contains 65791 rules. 8168 rules in the queue.
84400 rules inserted. The rule base contains 65967 rules. 8202 rules in the queue.
84600 rules inserted. The rule base contains 66139 rules. 8212 rules in the queue.
84800 rules inserted. The rule base contains 66312 rules. 8227 rules in the queue.
85000 rules inserted. The rule base contains 66497 rules. 8233 rules in the queue.
85200 rules inserted. The rule base contains 66697 rules. 8277 rules in the queue.
85400 rules inserted. The rule base contains 66867 rules. 8287 rules in the queue.
85600 rules inserted. The rule base contains 66946 rules. 8232 rules in the queue.
85800 rules inserted. The rule base contains 67121 rules. 8262 rules in the queue.
86000 rules inserted. The rule base contains 67279 rules. 8322 rules in the queue.
86200 rules inserted. The rule base contains 67434 rules. 8340 rules in the queue.
86400 rules inserted. The rule base contains 67614 rules. 8358 rules in the queue.
86600 rules inserted. The rule base contains 67759 rules. 8411 rules in the queue.
86800 rules inserted. The rule base contains 67936 rules. 8464 rules in the queue.
87000 rules inserted. The rule base contains 68085 rules. 8507 rules in the queue.
87200 rules inserted. The rule base contains 68209 rules. 8527 rules in the queue.
87400 rules inserted. The rule base contains 68356 rules. 8530 rules in the queue.
87600 rules inserted. The rule base contains 68491 rules. 8534 rules in the queue.
87800 rules inserted. The rule base contains 68629 rules. 8571 rules in the queue.
88000 rules inserted. The rule base contains 68799 rules. 8604 rules in the queue.
88200 rules inserted. The rule base contains 68900 rules. 8596 rules in the queue.
88400 rules inserted. The rule base contains 69017 rules. 8523 rules in the queue.
88600 rules inserted. The rule base contains 69165 rules. 8496 rules in the queue.
88800 rules inserted. The rule base contains 69349 rules. 8511 rules in the queue.
89000 rules inserted. The rule base contains 69534 rules. 8527 rules in the queue.
89200 rules inserted. The rule base contains 69713 rules. 8548 rules in the queue.
89400 rules inserted. The rule base contains 69898 rules. 8564 rules in the queue.
89600 rules inserted. The rule base contains 70081 rules. 8597 rules in the queue.
89800 rules inserted. The rule base contains 70261 rules. 8633 rules in the queue.
90000 rules inserted. The rule base contains 70323 rules. 8671 rules in the queue.
90200 rules inserted. The rule base contains 70298 rules. 8712 rules in the queue.
90400 rules inserted. The rule base contains 70405 rules. 8756 rules in the queue.
90600 rules inserted. The rule base contains 70599 rules. 8805 rules in the queue.
90800 rules inserted. The rule base contains 70772 rules. 8830 rules in the queue.
91000 rules inserted. The rule base contains 70936 rules. 8857 rules in the queue.
91200 rules inserted. The rule base contains 71127 rules. 8892 rules in the queue.
91400 rules inserted. The rule base contains 71317 rules. 8909 rules in the queue.
91600 rules inserted. The rule base contains 71504 rules. 8947 rules in the queue.
91800 rules inserted. The rule base contains 71692 rules. 9001 rules in the queue.
92000 rules inserted. The rule base contains 71892 rules. 9031 rules in the queue.
92200 rules inserted. The rule base contains 72080 rules. 9066 rules in the queue.
92400 rules inserted. The rule base contains 72249 rules. 9088 rules in the queue.
92600 rules inserted. The rule base contains 72430 rules. 9101 rules in the queue.
92800 rules inserted. The rule base contains 72630 rules. 9134 rules in the queue.
93000 rules inserted. The rule base contains 72807 rules. 9131 rules in the queue.
93200 rules inserted. The rule base contains 72993 rules. 9170 rules in the queue.
93400 rules inserted. The rule base contains 73164 rules. 9222 rules in the queue.
93600 rules inserted. The rule base contains 73299 rules. 9250 rules in the queue.
93800 rules inserted. The rule base contains 73446 rules. 9271 rules in the queue.
94000 rules inserted. The rule base contains 73618 rules. 9305 rules in the queue.
94200 rules inserted. The rule base contains 73776 rules. 9334 rules in the queue.
94400 rules inserted. The rule base contains 73932 rules. 9356 rules in the queue.
94600 rules inserted. The rule base contains 74107 rules. 9387 rules in the queue.
94800 rules inserted. The rule base contains 74278 rules. 9426 rules in the queue.
95000 rules inserted. The rule base contains 74456 rules. 9471 rules in the queue.
95200 rules inserted. The rule base contains 74635 rules. 9500 rules in the queue.
95400 rules inserted. The rule base contains 74811 rules. 9515 rules in the queue.
95600 rules inserted. The rule base contains 74949 rules. 9529 rules in the queue.
95800 rules inserted. The rule base contains 75091 rules. 9541 rules in the queue.
96000 rules inserted. The rule base contains 75270 rules. 9570 rules in the queue.
96200 rules inserted. The rule base contains 75449 rules. 9586 rules in the queue.
96400 rules inserted. The rule base contains 75618 rules. 9618 rules in the queue.
96600 rules inserted. The rule base contains 75701 rules. 9534 rules in the queue.
96800 rules inserted. The rule base contains 75782 rules. 9475 rules in the queue.
97000 rules inserted. The rule base contains 75850 rules. 9365 rules in the queue.
97200 rules inserted. The rule base contains 75918 rules. 9255 rules in the queue.
97400 rules inserted. The rule base contains 76010 rules. 9168 rules in the queue.
97600 rules inserted. The rule base contains 76114 rules. 9111 rules in the queue.
97800 rules inserted. The rule base contains 76272 rules. 9109 rules in the queue.
98000 rules inserted. The rule base contains 76397 rules. 9142 rules in the queue.
98200 rules inserted. The rule base contains 76302 rules. 9158 rules in the queue.
98400 rules inserted. The rule base contains 76316 rules. 9169 rules in the queue.
98600 rules inserted. The rule base contains 76493 rules. 9139 rules in the queue.
98800 rules inserted. The rule base contains 76684 rules. 9143 rules in the queue.
99000 rules inserted. The rule base contains 76834 rules. 9153 rules in the queue.
99200 rules inserted. The rule base contains 76981 rules. 9168 rules in the queue.
99400 rules inserted. The rule base contains 77169 rules. 9139 rules in the queue.
99600 rules inserted. The rule base contains 77353 rules. 9123 rules in the queue.
99800 rules inserted. The rule base contains 77520 rules. 9131 rules in the queue.
100000 rules inserted. The rule base contains 77687 rules. 9111 rules in the queue.
100200 rules inserted. The rule base contains 77878 rules. 9115 rules in the queue.
100400 rules inserted. The rule base contains 78076 rules. 9136 rules in the queue.
100600 rules inserted. The rule base contains 78247 rules. 9120 rules in the queue.
100800 rules inserted. The rule base contains 78378 rules. 9165 rules in the queue.
101000 rules inserted. The rule base contains 78535 rules. 9196 rules in the queue.
101200 rules inserted. The rule base contains 78733 rules. 9180 rules in the queue.
101400 rules inserted. The rule base contains 78905 rules. 9151 rules in the queue.
101600 rules inserted. The rule base contains 79071 rules. 9145 rules in the queue.
101800 rules inserted. The rule base contains 79235 rules. 9140 rules in the queue.
102000 rules inserted. The rule base contains 79399 rules. 9154 rules in the queue.
102200 rules inserted. The rule base contains 79570 rules. 9189 rules in the queue.
102400 rules inserted. The rule base contains 79723 rules. 9227 rules in the queue.
102600 rules inserted. The rule base contains 79895 rules. 9261 rules in the queue.
102800 rules inserted. The rule base contains 80065 rules. 9299 rules in the queue.
103000 rules inserted. The rule base contains 80228 rules. 9315 rules in the queue.
103200 rules inserted. The rule base contains 80392 rules. 9301 rules in the queue.
103400 rules inserted. The rule base contains 80586 rules. 9373 rules in the queue.
103600 rules inserted. The rule base contains 80751 rules. 9365 rules in the queue.
103800 rules inserted. The rule base contains 80936 rules. 9400 rules in the queue.
104000 rules inserted. The rule base contains 81136 rules. 9465 rules in the queue.
104200 rules inserted. The rule base contains 81336 rules. 9522 rules in the queue.
104400 rules inserted. The rule base contains 81501 rules. 9540 rules in the queue.
104600 rules inserted. The rule base contains 81688 rules. 9574 rules in the queue.
104800 rules inserted. The rule base contains 81888 rules. 9625 rules in the queue.
105000 rules inserted. The rule base contains 82088 rules. 9685 rules in the queue.
105200 rules inserted. The rule base contains 82262 rules. 9698 rules in the queue.
105400 rules inserted. The rule base contains 82339 rules. 9600 rules in the queue.
105600 rules inserted. The rule base contains 82458 rules. 9590 rules in the queue.
105800 rules inserted. The rule base contains 82608 rules. 9665 rules in the queue.
106000 rules inserted. The rule base contains 82756 rules. 9721 rules in the queue.
106200 rules inserted. The rule base contains 82906 rules. 9796 rules in the queue.
106400 rules inserted. The rule base contains 83065 rules. 9791 rules in the queue.
106600 rules inserted. The rule base contains 83203 rules. 9774 rules in the queue.
106800 rules inserted. The rule base contains 83261 rules. 9842 rules in the queue.
107000 rules inserted. The rule base contains 83225 rules. 9878 rules in the queue.
107200 rules inserted. The rule base contains 83254 rules. 9855 rules in the queue.
107400 rules inserted. The rule base contains 83443 rules. 9808 rules in the queue.
107600 rules inserted. The rule base contains 83620 rules. 9776 rules in the queue.
107800 rules inserted. The rule base contains 83797 rules. 9741 rules in the queue.
108000 rules inserted. The rule base contains 83972 rules. 9705 rules in the queue.
108200 rules inserted. The rule base contains 84166 rules. 9666 rules in the queue.
108400 rules inserted. The rule base contains 84351 rules. 9653 rules in the queue.
108600 rules inserted. The rule base contains 84508 rules. 9594 rules in the queue.
108800 rules inserted. The rule base contains 84675 rules. 9530 rules in the queue.
109000 rules inserted. The rule base contains 84874 rules. 9490 rules in the queue.
109200 rules inserted. The rule base contains 85053 rules. 9438 rules in the queue.
109400 rules inserted. The rule base contains 85225 rules. 9385 rules in the queue.
109600 rules inserted. The rule base contains 85402 rules. 9334 rules in the queue.
109800 rules inserted. The rule base contains 85581 rules. 9284 rules in the queue.
110000 rules inserted. The rule base contains 85780 rules. 9244 rules in the queue.
110200 rules inserted. The rule base contains 85928 rules. 9144 rules in the queue.
110400 rules inserted. The rule base contains 86091 rules. 9082 rules in the queue.
110600 rules inserted. The rule base contains 86239 rules. 9060 rules in the queue.
110800 rules inserted. The rule base contains 86439 rules. 9137 rules in the queue.
111000 rules inserted. The rule base contains 86639 rules. 9184 rules in the queue.
111200 rules inserted. The rule base contains 86839 rules. 9194 rules in the queue.
111400 rules inserted. The rule base contains 86994 rules. 9210 rules in the queue.
111600 rules inserted. The rule base contains 87187 rules. 9280 rules in the queue.
111800 rules inserted. The rule base contains 87349 rules. 9279 rules in the queue.
112000 rules inserted. The rule base contains 87519 rules. 9320 rules in the queue.
112200 rules inserted. The rule base contains 87694 rules. 9302 rules in the queue.
112400 rules inserted. The rule base contains 87883 rules. 9363 rules in the queue.
112600 rules inserted. The rule base contains 88033 rules. 9313 rules in the queue.
112800 rules inserted. The rule base contains 88231 rules. 9378 rules in the queue.
113000 rules inserted. The rule base contains 88429 rules. 9448 rules in the queue.
113200 rules inserted. The rule base contains 88625 rules. 9513 rules in the queue.
113400 rules inserted. The rule base contains 88825 rules. 9577 rules in the queue.
113600 rules inserted. The rule base contains 88999 rules. 9600 rules in the queue.
113800 rules inserted. The rule base contains 89197 rules. 9658 rules in the queue.
114000 rules inserted. The rule base contains 89395 rules. 9719 rules in the queue.
114200 rules inserted. The rule base contains 89593 rules. 9778 rules in the queue.
114400 rules inserted. The rule base contains 89789 rules. 9829 rules in the queue.
114600 rules inserted. The rule base contains 89889 rules. 9704 rules in the queue.
114800 rules inserted. The rule base contains 90039 rules. 9687 rules in the queue.
115000 rules inserted. The rule base contains 90227 rules. 9679 rules in the queue.
115200 rules inserted. The rule base contains 90423 rules. 9671 rules in the queue.
115400 rules inserted. The rule base contains 90595 rules. 9667 rules in the queue.
115600 rules inserted. The rule base contains 90783 rules. 9659 rules in the queue.
115800 rules inserted. The rule base contains 90932 rules. 9651 rules in the queue.
116000 rules inserted. The rule base contains 90969 rules. 9588 rules in the queue.
116200 rules inserted. The rule base contains 91167 rules. 9674 rules in the queue.
116400 rules inserted. The rule base contains 91170 rules. 9690 rules in the queue.
116600 rules inserted. The rule base contains 91160 rules. 9700 rules in the queue.
116800 rules inserted. The rule base contains 91139 rules. 9713 rules in the queue.
117000 rules inserted. The rule base contains 91286 rules. 9645 rules in the queue.
117200 rules inserted. The rule base contains 91381 rules. 9610 rules in the queue.
117400 rules inserted. The rule base contains 91469 rules. 9564 rules in the queue.
117600 rules inserted. The rule base contains 91609 rules. 9509 rules in the queue.
117800 rules inserted. The rule base contains 91691 rules. 9480 rules in the queue.
118000 rules inserted. The rule base contains 91805 rules. 9388 rules in the queue.
118200 rules inserted. The rule base contains 91905 rules. 9294 rules in the queue.
118400 rules inserted. The rule base contains 92022 rules. 9247 rules in the queue.
118600 rules inserted. The rule base contains 92153 rules. 9200 rules in the queue.
118800 rules inserted. The rule base contains 92267 rules. 9097 rules in the queue.
119000 rules inserted. The rule base contains 92326 rules. 9049 rules in the queue.
119200 rules inserted. The rule base contains 92434 rules. 9019 rules in the queue.
119400 rules inserted. The rule base contains 92632 rules. 9059 rules in the queue.
119600 rules inserted. The rule base contains 92831 rules. 9079 rules in the queue.
119800 rules inserted. The rule base contains 93031 rules. 9117 rules in the queue.
120000 rules inserted. The rule base contains 93185 rules. 9084 rules in the queue.
120200 rules inserted. The rule base contains 93370 rules. 9061 rules in the queue.
120400 rules inserted. The rule base contains 93517 rules. 9047 rules in the queue.
120600 rules inserted. The rule base contains 93683 rules. 9030 rules in the queue.
120800 rules inserted. The rule base contains 93818 rules. 8968 rules in the queue.
121000 rules inserted. The rule base contains 94007 rules. 8956 rules in the queue.
121200 rules inserted. The rule base contains 94164 rules. 8962 rules in the queue.
121400 rules inserted. The rule base contains 94298 rules. 8871 rules in the queue.
121600 rules inserted. The rule base contains 94493 rules. 8824 rules in the queue.
121800 rules inserted. The rule base contains 94691 rules. 8781 rules in the queue.
122000 rules inserted. The rule base contains 94884 rules. 8756 rules in the queue.
122200 rules inserted. The rule base contains 95075 rules. 8727 rules in the queue.
122400 rules inserted. The rule base contains 95246 rules. 8684 rules in the queue.
122600 rules inserted. The rule base contains 95438 rules. 8655 rules in the queue.
122800 rules inserted. The rule base contains 95631 rules. 8628 rules in the queue.
123000 rules inserted. The rule base contains 95824 rules. 8592 rules in the queue.
123200 rules inserted. The rule base contains 96017 rules. 8552 rules in the queue.
123400 rules inserted. The rule base contains 96210 rules. 8537 rules in the queue.
123600 rules inserted. The rule base contains 96291 rules. 8430 rules in the queue.
123800 rules inserted. The rule base contains 96425 rules. 8415 rules in the queue.
124000 rules inserted. The rule base contains 96568 rules. 8377 rules in the queue.
124200 rules inserted. The rule base contains 96737 rules. 8364 rules in the queue.
124400 rules inserted. The rule base contains 96881 rules. 8333 rules in the queue.
124600 rules inserted. The rule base contains 97033 rules. 8299 rules in the queue.
124800 rules inserted. The rule base contains 97114 rules. 8233 rules in the queue.
125000 rules inserted. The rule base contains 97223 rules. 8144 rules in the queue.
125200 rules inserted. The rule base contains 97412 rules. 8109 rules in the queue.
125400 rules inserted. The rule base contains 97530 rules. 8050 rules in the queue.
125600 rules inserted. The rule base contains 97504 rules. 8089 rules in the queue.
125800 rules inserted. The rule base contains 97448 rules. 8125 rules in the queue.
126000 rules inserted. The rule base contains 97488 rules. 7995 rules in the queue.
126200 rules inserted. The rule base contains 97544 rules. 8006 rules in the queue.
126400 rules inserted. The rule base contains 97624 rules. 7972 rules in the queue.
126600 rules inserted. The rule base contains 97699 rules. 7896 rules in the queue.
126800 rules inserted. The rule base contains 97798 rules. 7838 rules in the queue.
127000 rules inserted. The rule base contains 97837 rules. 7811 rules in the queue.
127200 rules inserted. The rule base contains 97931 rules. 7797 rules in the queue.
127400 rules inserted. The rule base contains 98003 rules. 7716 rules in the queue.
127600 rules inserted. The rule base contains 98135 rules. 7560 rules in the queue.
127800 rules inserted. The rule base contains 98278 rules. 7397 rules in the queue.
128000 rules inserted. The rule base contains 98474 rules. 7335 rules in the queue.
128200 rules inserted. The rule base contains 98674 rules. 7393 rules in the queue.
128400 rules inserted. The rule base contains 98811 rules. 7277 rules in the queue.
128600 rules inserted. The rule base contains 98973 rules. 7210 rules in the queue.
128800 rules inserted. The rule base contains 99080 rules. 7161 rules in the queue.
129000 rules inserted. The rule base contains 99211 rules. 7103 rules in the queue.
129200 rules inserted. The rule base contains 99379 rules. 7040 rules in the queue.
129400 rules inserted. The rule base contains 99484 rules. 6969 rules in the queue.
129600 rules inserted. The rule base contains 99641 rules. 6864 rules in the queue.
129800 rules inserted. The rule base contains 99811 rules. 6751 rules in the queue.
130000 rules inserted. The rule base contains 99971 rules. 6652 rules in the queue.
130200 rules inserted. The rule base contains 100111 rules. 6551 rules in the queue.
130400 rules inserted. The rule base contains 100281 rules. 6452 rules in the queue.
130600 rules inserted. The rule base contains 100445 rules. 6356 rules in the queue.
130800 rules inserted. The rule base contains 100611 rules. 6236 rules in the queue.
131000 rules inserted. The rule base contains 100766 rules. 6131 rules in the queue.
131200 rules inserted. The rule base contains 100881 rules. 6118 rules in the queue.
131400 rules inserted. The rule base contains 101023 rules. 6127 rules in the queue.
131600 rules inserted. The rule base contains 101170 rules. 6139 rules in the queue.
131800 rules inserted. The rule base contains 101314 rules. 6155 rules in the queue.
132000 rules inserted. The rule base contains 100999 rules. 6026 rules in the queue.
132200 rules inserted. The rule base contains 101161 rules. 5946 rules in the queue.
132400 rules inserted. The rule base contains 101217 rules. 5870 rules in the queue.
132600 rules inserted. The rule base contains 101167 rules. 5922 rules in the queue.
132800 rules inserted. The rule base contains 101156 rules. 5959 rules in the queue.
133000 rules inserted. The rule base contains 101142 rules. 5726 rules in the queue.
133200 rules inserted. The rule base contains 101188 rules. 5690 rules in the queue.
133400 rules inserted. The rule base contains 101228 rules. 5616 rules in the queue.
133600 rules inserted. The rule base contains 101288 rules. 5581 rules in the queue.
133800 rules inserted. The rule base contains 101329 rules. 5551 rules in the queue.
134000 rules inserted. The rule base contains 101363 rules. 5482 rules in the queue.
134200 rules inserted. The rule base contains 101382 rules. 5297 rules in the queue.
134400 rules inserted. The rule base contains 101488 rules. 5149 rules in the queue.
134600 rules inserted. The rule base contains 101682 rules. 5182 rules in the queue.
134800 rules inserted. The rule base contains 101882 rules. 5225 rules in the queue.
135000 rules inserted. The rule base contains 100507 rules. 4870 rules in the queue.
135200 rules inserted. The rule base contains 100625 rules. 4812 rules in the queue.
135400 rules inserted. The rule base contains 100760 rules. 4734 rules in the queue.
135600 rules inserted. The rule base contains 100919 rules. 4631 rules in the queue.
135800 rules inserted. The rule base contains 101088 rules. 4599 rules in the queue.
136000 rules inserted. The rule base contains 101255 rules. 4493 rules in the queue.
136200 rules inserted. The rule base contains 101331 rules. 4446 rules in the queue.
136400 rules inserted. The rule base contains 101416 rules. 4421 rules in the queue.
136600 rules inserted. The rule base contains 101479 rules. 4390 rules in the queue.
136800 rules inserted. The rule base contains 101567 rules. 4369 rules in the queue.
137000 rules inserted. The rule base contains 101625 rules. 4341 rules in the queue.
137200 rules inserted. The rule base contains 101063 rules. 4242 rules in the queue.
137400 rules inserted. The rule base contains 101098 rules. 4183 rules in the queue.
137600 rules inserted. The rule base contains 101070 rules. 4228 rules in the queue.
137800 rules inserted. The rule base contains 101082 rules. 4249 rules in the queue.
138000 rules inserted. The rule base contains 100506 rules. 4173 rules in the queue.
138200 rules inserted. The rule base contains 100519 rules. 4156 rules in the queue.
138400 rules inserted. The rule base contains 100532 rules. 4138 rules in the queue.
138600 rules inserted. The rule base contains 100526 rules. 4139 rules in the queue.
138800 rules inserted. The rule base contains 100505 rules. 4103 rules in the queue.
139000 rules inserted. The rule base contains 100536 rules. 3933 rules in the queue.
139200 rules inserted. The rule base contains 100727 rules. 3963 rules in the queue.
139400 rules inserted. The rule base contains 100919 rules. 3993 rules in the queue.
139600 rules inserted. The rule base contains 100270 rules. 3899 rules in the queue.
139800 rules inserted. The rule base contains 100330 rules. 3847 rules in the queue.
140000 rules inserted. The rule base contains 100418 rules. 3830 rules in the queue.
140200 rules inserted. The rule base contains 100529 rules. 3772 rules in the queue.
140400 rules inserted. The rule base contains 100721 rules. 3799 rules in the queue.
140600 rules inserted. The rule base contains 100911 rules. 3823 rules in the queue.
140800 rules inserted. The rule base contains 101103 rules. 3856 rules in the queue.
141000 rules inserted. The rule base contains 101293 rules. 3888 rules in the queue.
141200 rules inserted. The rule base contains 95943 rules. 3802 rules in the queue.
141400 rules inserted. The rule base contains 95953 rules. 3836 rules in the queue.
141600 rules inserted. The rule base contains 96032 rules. 3864 rules in the queue.
141800 rules inserted. The rule base contains 96121 rules. 3880 rules in the queue.
142000 rules inserted. The rule base contains 96136 rules. 3842 rules in the queue.
142200 rules inserted. The rule base contains 96145 rules. 3824 rules in the queue.
142400 rules inserted. The rule base contains 96153 rules. 3864 rules in the queue.
142600 rules inserted. The rule base contains 96154 rules. 3848 rules in the queue.
142800 rules inserted. The rule base contains 96125 rules. 3725 rules in the queue.
143000 rules inserted. The rule base contains 96318 rules. 3755 rules in the queue.
143200 rules inserted. The rule base contains 96512 rules. 3785 rules in the queue.
143400 rules inserted. The rule base contains 71911 rules. 3204 rules in the queue.
143600 rules inserted. The rule base contains 71927 rules. 3144 rules in the queue.
143800 rules inserted. The rule base contains 72054 rules. 3140 rules in the queue.
144000 rules inserted. The rule base contains 72246 rules. 3143 rules in the queue.
144200 rules inserted. The rule base contains 72438 rules. 3152 rules in the queue.
144400 rules inserted. The rule base contains 72628 rules. 3167 rules in the queue.
144600 rules inserted. The rule base contains 72820 rules. 3184 rules in the queue.
144800 rules inserted. The rule base contains 72391 rules. 3164 rules in the queue.
145000 rules inserted. The rule base contains 72409 rules. 3088 rules in the queue.
145200 rules inserted. The rule base contains 72317 rules. 3056 rules in the queue.
145400 rules inserted. The rule base contains 72284 rules. 3013 rules in the queue.
145600 rules inserted. The rule base contains 72318 rules. 2979 rules in the queue.
145800 rules inserted. The rule base contains 72330 rules. 2967 rules in the queue.
146000 rules inserted. The rule base contains 70364 rules. 2888 rules in the queue.
146200 rules inserted. The rule base contains 70475 rules. 2808 rules in the queue.
146400 rules inserted. The rule base contains 70372 rules. 2785 rules in the queue.
146600 rules inserted. The rule base contains 70392 rules. 2786 rules in the queue.
146800 rules inserted. The rule base contains 70587 rules. 2793 rules in the queue.
147000 rules inserted. The rule base contains 70787 rules. 2799 rules in the queue.
147200 rules inserted. The rule base contains 70987 rules. 2783 rules in the queue.
147400 rules inserted. The rule base contains 71182 rules. 2814 rules in the queue.
147600 rules inserted. The rule base contains 71382 rules. 2847 rules in the queue.
147800 rules inserted. The rule base contains 71402 rules. 2856 rules in the queue.
148000 rules inserted. The rule base contains 71355 rules. 2870 rules in the queue.
148200 rules inserted. The rule base contains 71307 rules. 2783 rules in the queue.
148400 rules inserted. The rule base contains 71397 rules. 2692 rules in the queue.
148600 rules inserted. The rule base contains 71482 rules. 2611 rules in the queue.
148800 rules inserted. The rule base contains 71591 rules. 2591 rules in the queue.
149000 rules inserted. The rule base contains 71724 rules. 2608 rules in the queue.
149200 rules inserted. The rule base contains 71633 rules. 2586 rules in the queue.
149400 rules inserted. The rule base contains 71746 rules. 2596 rules in the queue.
149600 rules inserted. The rule base contains 71938 rules. 2587 rules in the queue.
149800 rules inserted. The rule base contains 72132 rules. 2592 rules in the queue.
150000 rules inserted. The rule base contains 72319 rules. 2594 rules in the queue.
150200 rules inserted. The rule base contains 72506 rules. 2611 rules in the queue.
150400 rules inserted. The rule base contains 72698 rules. 2626 rules in the queue.
150600 rules inserted. The rule base contains 72649 rules. 2641 rules in the queue.
150800 rules inserted. The rule base contains 72595 rules. 2658 rules in the queue.
151000 rules inserted. The rule base contains 72660 rules. 2576 rules in the queue.
151200 rules inserted. The rule base contains 72726 rules. 2506 rules in the queue.
151400 rules inserted. The rule base contains 72868 rules. 2520 rules in the queue.
151600 rules inserted. The rule base contains 73012 rules. 2510 rules in the queue.
151800 rules inserted. The rule base contains 73081 rules. 2435 rules in the queue.
152000 rules inserted. The rule base contains 73254 rules. 2415 rules in the queue.
152200 rules inserted. The rule base contains 73449 rules. 2387 rules in the queue.
152400 rules inserted. The rule base contains 73644 rules. 2364 rules in the queue.
152600 rules inserted. The rule base contains 73813 rules. 2335 rules in the queue.
152800 rules inserted. The rule base contains 74010 rules. 2313 rules in the queue.
153000 rules inserted. The rule base contains 74124 rules. 2281 rules in the queue.
153200 rules inserted. The rule base contains 74107 rules. 2292 rules in the queue.
153400 rules inserted. The rule base contains 74086 rules. 2315 rules in the queue.
153600 rules inserted. The rule base contains 73977 rules. 2306 rules in the queue.
153800 rules inserted. The rule base contains 73991 rules. 2297 rules in the queue.
154000 rules inserted. The rule base contains 74191 rules. 2319 rules in the queue.
154200 rules inserted. The rule base contains 73987 rules. 2256 rules in the queue.
154400 rules inserted. The rule base contains 74140 rules. 2247 rules in the queue.
154600 rules inserted. The rule base contains 74321 rules. 2257 rules in the queue.
154800 rules inserted. The rule base contains 74487 rules. 2248 rules in the queue.
155000 rules inserted. The rule base contains 74649 rules. 2254 rules in the queue.
155200 rules inserted. The rule base contains 74827 rules. 2265 rules in the queue.
155400 rules inserted. The rule base contains 74816 rules. 2242 rules in the queue.
155600 rules inserted. The rule base contains 74813 rules. 2244 rules in the queue.
155800 rules inserted. The rule base contains 74547 rules. 2227 rules in the queue.
156000 rules inserted. The rule base contains 74437 rules. 2173 rules in the queue.
156200 rules inserted. The rule base contains 74636 rules. 2171 rules in the queue.
156400 rules inserted. The rule base contains 74276 rules. 2159 rules in the queue.
156600 rules inserted. The rule base contains 74287 rules. 2154 rules in the queue.
156800 rules inserted. The rule base contains 74462 rules. 2197 rules in the queue.
157000 rules inserted. The rule base contains 74625 rules. 2205 rules in the queue.
157200 rules inserted. The rule base contains 74769 rules. 2189 rules in the queue.
157400 rules inserted. The rule base contains 74942 rules. 2186 rules in the queue.
157600 rules inserted. The rule base contains 75042 rules. 2129 rules in the queue.
157800 rules inserted. The rule base contains 75162 rules. 2045 rules in the queue.
158000 rules inserted. The rule base contains 74964 rules. 2029 rules in the queue.
158200 rules inserted. The rule base contains 75157 rules. 1946 rules in the queue.
158400 rules inserted. The rule base contains 75356 rules. 1861 rules in the queue.
158600 rules inserted. The rule base contains 75178 rules. 1829 rules in the queue.
158800 rules inserted. The rule base contains 75291 rules. 1786 rules in the queue.
159000 rules inserted. The rule base contains 75453 rules. 1744 rules in the queue.
159200 rules inserted. The rule base contains 75559 rules. 1661 rules in the queue.
159400 rules inserted. The rule base contains 75702 rules. 1613 rules in the queue.
159600 rules inserted. The rule base contains 75780 rules. 1547 rules in the queue.
159800 rules inserted. The rule base contains 75879 rules. 1536 rules in the queue.
160000 rules inserted. The rule base contains 76044 rules. 1486 rules in the queue.
160200 rules inserted. The rule base contains 76152 rules. 1420 rules in the queue.
160400 rules inserted. The rule base contains 75472 rules. 1287 rules in the queue.
160600 rules inserted. The rule base contains 75018 rules. 1129 rules in the queue.
160800 rules inserted. The rule base contains 75074 rules. 1079 rules in the queue.
161000 rules inserted. The rule base contains 75209 rules. 1097 rules in the queue.
161200 rules inserted. The rule base contains 75393 rules. 1107 rules in the queue.
161400 rules inserted. The rule base contains 75442 rules. 945 rules in the queue.
161600 rules inserted. The rule base contains 75461 rules. 786 rules in the queue.
161800 rules inserted. The rule base contains 75611 rules. 776 rules in the queue.
162000 rules inserted. The rule base contains 75778 rules. 767 rules in the queue.
162200 rules inserted. The rule base contains 61623 rules. 594 rules in the queue.
162400 rules inserted. The rule base contains 61722 rules. 621 rules in the queue.
162600 rules inserted. The rule base contains 61885 rules. 671 rules in the queue.
162800 rules inserted. The rule base contains 61798 rules. 696 rules in the queue.
163000 rules inserted. The rule base contains 61913 rules. 739 rules in the queue.
163200 rules inserted. The rule base contains 62073 rules. 779 rules in the queue.
163400 rules inserted. The rule base contains 62189 rules. 821 rules in the queue.
163600 rules inserted. The rule base contains 62252 rules. 825 rules in the queue.
163800 rules inserted. The rule base contains 62403 rules. 848 rules in the queue.
164000 rules inserted. The rule base contains 62502 rules. 856 rules in the queue.
164200 rules inserted. The rule base contains 62648 rules. 886 rules in the queue.
164400 rules inserted. The rule base contains 62770 rules. 880 rules in the queue.
164600 rules inserted. The rule base contains 62920 rules. 876 rules in the queue.
164800 rules inserted. The rule base contains 63068 rules. 878 rules in the queue.
165000 rules inserted. The rule base contains 63262 rules. 901 rules in the queue.
165200 rules inserted. The rule base contains 63401 rules. 875 rules in the queue.
165400 rules inserted. The rule base contains 63572 rules. 882 rules in the queue.
165600 rules inserted. The rule base contains 63743 rules. 875 rules in the queue.
165800 rules inserted. The rule base contains 63917 rules. 885 rules in the queue.
166000 rules inserted. The rule base contains 64067 rules. 880 rules in the queue.
166200 rules inserted. The rule base contains 64196 rules. 893 rules in the queue.
166400 rules inserted. The rule base contains 64295 rules. 842 rules in the queue.
166600 rules inserted. The rule base contains 64393 rules. 808 rules in the queue.
166800 rules inserted. The rule base contains 64520 rules. 817 rules in the queue.
167000 rules inserted. The rule base contains 64628 rules. 789 rules in the queue.
167200 rules inserted. The rule base contains 64755 rules. 773 rules in the queue.
167400 rules inserted. The rule base contains 64901 rules. 801 rules in the queue.
167600 rules inserted. The rule base contains 65055 rules. 817 rules in the queue.
167800 rules inserted. The rule base contains 65223 rules. 837 rules in the queue.
168000 rules inserted. The rule base contains 65383 rules. 881 rules in the queue.
168200 rules inserted. The rule base contains 65525 rules. 934 rules in the queue.
168400 rules inserted. The rule base contains 65689 rules. 978 rules in the queue.
168600 rules inserted. The rule base contains 65859 rules. 1037 rules in the queue.
168800 rules inserted. The rule base contains 66019 rules. 1087 rules in the queue.
169000 rules inserted. The rule base contains 66152 rules. 1128 rules in the queue.
169200 rules inserted. The rule base contains 66312 rules. 1180 rules in the queue.
169400 rules inserted. The rule base contains 66476 rules. 1208 rules in the queue.
169600 rules inserted. The rule base contains 66637 rules. 1255 rules in the queue.
169800 rules inserted. The rule base contains 66787 rules. 1279 rules in the queue.
170000 rules inserted. The rule base contains 66937 rules. 1298 rules in the queue.
170200 rules inserted. The rule base contains 67067 rules. 1297 rules in the queue.
170400 rules inserted. The rule base contains 67227 rules. 1286 rules in the queue.
170600 rules inserted. The rule base contains 67382 rules. 1293 rules in the queue.
170800 rules inserted. The rule base contains 67525 rules. 1300 rules in the queue.
171000 rules inserted. The rule base contains 67671 rules. 1316 rules in the queue.
171200 rules inserted. The rule base contains 67822 rules. 1336 rules in the queue.
171400 rules inserted. The rule base contains 67956 rules. 1354 rules in the queue.
171600 rules inserted. The rule base contains 68110 rules. 1357 rules in the queue.
171800 rules inserted. The rule base contains 68258 rules. 1372 rules in the queue.
172000 rules inserted. The rule base contains 68408 rules. 1393 rules in the queue.
172200 rules inserted. The rule base contains 68565 rules. 1429 rules in the queue.
172400 rules inserted. The rule base contains 68706 rules. 1426 rules in the queue.
172600 rules inserted. The rule base contains 68825 rules. 1468 rules in the queue.
172800 rules inserted. The rule base contains 68989 rules. 1485 rules in the queue.
173000 rules inserted. The rule base contains 69141 rules. 1525 rules in the queue.
173200 rules inserted. The rule base contains 69287 rules. 1542 rules in the queue.
173400 rules inserted. The rule base contains 69450 rules. 1565 rules in the queue.
173600 rules inserted. The rule base contains 69578 rules. 1562 rules in the queue.
173800 rules inserted. The rule base contains 69740 rules. 1567 rules in the queue.
174000 rules inserted. The rule base contains 69862 rules. 1537 rules in the queue.
174200 rules inserted. The rule base contains 70019 rules. 1547 rules in the queue.
174400 rules inserted. The rule base contains 70178 rules. 1535 rules in the queue.
174600 rules inserted. The rule base contains 70338 rules. 1521 rules in the queue.
174800 rules inserted. The rule base contains 70505 rules. 1537 rules in the queue.
175000 rules inserted. The rule base contains 70652 rules. 1524 rules in the queue.
175200 rules inserted. The rule base contains 70818 rules. 1533 rules in the queue.
175400 rules inserted. The rule base contains 70931 rules. 1544 rules in the queue.
175600 rules inserted. The rule base contains 71100 rules. 1518 rules in the queue.
175800 rules inserted. The rule base contains 71259 rules. 1531 rules in the queue.
176000 rules inserted. The rule base contains 71426 rules. 1519 rules in the queue.
176200 rules inserted. The rule base contains 71596 rules. 1516 rules in the queue.
176400 rules inserted. The rule base contains 71755 rules. 1553 rules in the queue.
176600 rules inserted. The rule base contains 71882 rules. 1577 rules in the queue.
176800 rules inserted. The rule base contains 72005 rules. 1620 rules in the queue.
177000 rules inserted. The rule base contains 72159 rules. 1626 rules in the queue.
177200 rules inserted. The rule base contains 72320 rules. 1643 rules in the queue.
177400 rules inserted. The rule base contains 72481 rules. 1685 rules in the queue.
177600 rules inserted. The rule base contains 72639 rules. 1732 rules in the queue.
177800 rules inserted. The rule base contains 72772 rules. 1757 rules in the queue.
178000 rules inserted. The rule base contains 72913 rules. 1781 rules in the queue.
178200 rules inserted. The rule base contains 73039 rules. 1801 rules in the queue.
178400 rules inserted. The rule base contains 73128 rules. 1835 rules in the queue.
178600 rules inserted. The rule base contains 73274 rules. 1839 rules in the queue.
178800 rules inserted. The rule base contains 73407 rules. 1849 rules in the queue.
179000 rules inserted. The rule base contains 73556 rules. 1882 rules in the queue.
179200 rules inserted. The rule base contains 73689 rules. 1918 rules in the queue.
179400 rules inserted. The rule base contains 73830 rules. 1926 rules in the queue.
179600 rules inserted. The rule base contains 73958 rules. 1930 rules in the queue.
179800 rules inserted. The rule base contains 74102 rules. 1941 rules in the queue.
180000 rules inserted. The rule base contains 74202 rules. 1942 rules in the queue.
180200 rules inserted. The rule base contains 74299 rules. 1946 rules in the queue.
180400 rules inserted. The rule base contains 74449 rules. 1938 rules in the queue.
180600 rules inserted. The rule base contains 74570 rules. 1925 rules in the queue.
180800 rules inserted. The rule base contains 74715 rules. 1933 rules in the queue.
181000 rules inserted. The rule base contains 74851 rules. 1911 rules in the queue.
181200 rules inserted. The rule base contains 74991 rules. 1896 rules in the queue.
181400 rules inserted. The rule base contains 75099 rules. 1886 rules in the queue.
181600 rules inserted. The rule base contains 75251 rules. 1847 rules in the queue.
181800 rules inserted. The rule base contains 75353 rules. 1866 rules in the queue.
182000 rules inserted. The rule base contains 75423 rules. 1854 rules in the queue.
182200 rules inserted. The rule base contains 75574 rules. 1834 rules in the queue.
182400 rules inserted. The rule base contains 75695 rules. 1845 rules in the queue.
182600 rules inserted. The rule base contains 75843 rules. 1792 rules in the queue.
182800 rules inserted. The rule base contains 75990 rules. 1775 rules in the queue.
183000 rules inserted. The rule base contains 76143 rules. 1784 rules in the queue.
183200 rules inserted. The rule base contains 76242 rules. 1789 rules in the queue.
183400 rules inserted. The rule base contains 76401 rules. 1785 rules in the queue.
183600 rules inserted. The rule base contains 76472 rules. 1829 rules in the queue.
183800 rules inserted. The rule base contains 76570 rules. 1879 rules in the queue.
184000 rules inserted. The rule base contains 76697 rules. 1933 rules in the queue.
184200 rules inserted. The rule base contains 76825 rules. 1976 rules in the queue.
184400 rules inserted. The rule base contains 76991 rules. 2028 rules in the queue.
184600 rules inserted. The rule base contains 77167 rules. 2121 rules in the queue.
184800 rules inserted. The rule base contains 77308 rules. 2147 rules in the queue.
185000 rules inserted. The rule base contains 77405 rules. 2114 rules in the queue.
185200 rules inserted. The rule base contains 77553 rules. 2102 rules in the queue.
185400 rules inserted. The rule base contains 77598 rules. 2095 rules in the queue.
185600 rules inserted. The rule base contains 77740 rules. 2126 rules in the queue.
185800 rules inserted. The rule base contains 77895 rules. 2146 rules in the queue.
186000 rules inserted. The rule base contains 78034 rules. 2177 rules in the queue.
186200 rules inserted. The rule base contains 78154 rules. 2177 rules in the queue.
186400 rules inserted. The rule base contains 78305 rules. 2211 rules in the queue.
186600 rules inserted. The rule base contains 78459 rules. 2241 rules in the queue.
186800 rules inserted. The rule base contains 78586 rules. 2214 rules in the queue.
187000 rules inserted. The rule base contains 77567 rules. 2159 rules in the queue.
187200 rules inserted. The rule base contains 77705 rules. 2116 rules in the queue.
187400 rules inserted. The rule base contains 77760 rules. 2071 rules in the queue.
187600 rules inserted. The rule base contains 77893 rules. 2078 rules in the queue.
187800 rules inserted. The rule base contains 78017 rules. 2069 rules in the queue.
188000 rules inserted. The rule base contains 78156 rules. 2051 rules in the queue.
188200 rules inserted. The rule base contains 77621 rules. 2010 rules in the queue.
188400 rules inserted. The rule base contains 77758 rules. 1986 rules in the queue.
188600 rules inserted. The rule base contains 77884 rules. 1954 rules in the queue.
188800 rules inserted. The rule base contains 78033 rules. 1915 rules in the queue.
189000 rules inserted. The rule base contains 77992 rules. 1672 rules in the queue.
189200 rules inserted. The rule base contains 78112 rules. 1609 rules in the queue.
189400 rules inserted. The rule base contains 78251 rules. 1525 rules in the queue.
189600 rules inserted. The rule base contains 78420 rules. 1460 rules in the queue.
189800 rules inserted. The rule base contains 78374 rules. 1180 rules in the queue.
190000 rules inserted. The rule base contains 78528 rules. 1122 rules in the queue.
190200 rules inserted. The rule base contains 78695 rules. 1071 rules in the queue.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m))
goal reachable: begin(LeakS(phase0,bob)) && attacker(m_980312024) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_980312025]),m_980312024))
Abbreviations:
sid_980312109 = sid[!1 = @sid_980312100]

1. The entry statestore(bob,alice,sid_980312109,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) may be inserted in a table at insert {311}.
table(statestore(bob,alice,sid_980312109,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false)))).

2. We assume as hypothesis that
attacker(m_980312108).

3. Using the function g the attacker may obtain g.
attacker(g).

4. Using the function pub the attacker may obtain pub.
attacker(pub).

5. The message dhexp(key_s(bob),g) may be sent on channel pub at output {296}.
mess(pub,dhexp(key_s(bob),g)).

6. By 4, the attacker may have the channel pub.
By 5, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

7. The message dhexp(key_s(alice),g) may be sent on channel pub at output {6}.
mess(pub,dhexp(key_s(alice),g)).

8. By 4, the attacker may have the channel pub.
By 7, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

9. Using the function empty the attacker may obtain empty.
attacker(empty).

10. Using the function somename the attacker may obtain somename.
attacker(somename).

11. By 10, the attacker may know somename.
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

12. By 11, the attacker may know hash(somename,empty).
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

13. By 12, the attacker may know hash(hash(somename,empty),empty).
By 8, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

14. By 13, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

15. By 14, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 3, the attacker may know g.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g)).

16. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

17. The event LeakS(phase0,bob) may be executed at {433}.
So the message key_s(bob) may be sent on channel pub at output {434}.
mess(pub,key_s(bob)).

18. By 4, the attacker may have the channel pub.
By 17, the message key_s(bob) may be sent on this channel.
So the attacker may obtain the message key_s(bob) by listening on this channel.
attacker(key_s(bob)).

19. By 18, the attacker may know key_s(bob).
By 8, the attacker may know dhexp(key_s(alice),g).
Using the function dhexp the attacker may obtain dhexp(key_s(bob),dhexp(key_s(alice),g)).
attacker(dhexp(key_s(bob),dhexp(key_s(alice),g))).

20. By 11, the attacker may know hash(somename,empty).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)).
attacker(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g))).

21. By 20, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)).
By 19, the attacker may know dhexp(key_s(bob),dhexp(key_s(alice),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
attacker(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g)))).

22. By 21, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
By 16, the attacker may know minnonce.
By 15, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
By 2, the attacker may know m_980312108.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_980312108).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_980312108)).

23. The attacker has some term b_980312094.
attacker(b_980312094).

24. By 3, the attacker may know g.
By 23, the attacker may know b_980312094.
By 22, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_980312108).
Using the function concat3 the attacker may obtain concat3(g,b_980312094,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_980312108)).
attacker(concat3(g,b_980312094,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_980312108))).

25. By 4, the attacker may have the channel pub.
By 24, the attacker may have the message concat3(g,b_980312094,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_980312108)).
So the attacker may send this message on this channel.
mess(pub,concat3(g,b_980312094,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_980312108))).

26. The entry statestore(bob,alice,sid_980312109,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 1 may be read at get {347}.
The message concat3(g,b_980312094,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_980312108)) that may be sent on channel pub by 25 may be received at input {312}.
We have g <> caught-fail.
So event RecvMsg(bob,alice,stagepack_a(sid_980312109),m_980312108) may be executed at {345}.
end(RecvMsg(bob,alice,stagepack_a(sid_980312109),m_980312108)).


RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) cannot be proved.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1155,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(LeakS(phase0,bob)) && attacker(m_980312112) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_980312113]),m_980312112))
goal reachable: begin(LeakS(phase0,alice)) && attacker(m_980312116) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_980312117]),m_980312116))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_980312120]),msg_a(alice,bob,sid[!1 = @sid_980312120]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_980312121]),msg_a(alice,bob,sid[!1 = @sid_980312120])))
RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1155,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1155,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(LeakS(phase0,bob)) && attacker(m_980312146) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_980312147]),m_980312146))
Abbreviations:
sid_980312232 = sid[!1 = @sid_980312223]

1. The entry statestore(bob,alice,sid_980312232,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) may be inserted in a table at insert {311}.
table(statestore(bob,alice,sid_980312232,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false)))).

2. We assume as hypothesis that
attacker(m_980312231).

3. Using the function g the attacker may obtain g.
attacker(g).

4. Using the function pub the attacker may obtain pub.
attacker(pub).

5. The message dhexp(key_s(bob),g) may be sent on channel pub at output {296}.
mess(pub,dhexp(key_s(bob),g)).

6. By 4, the attacker may have the channel pub.
By 5, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

7. The message dhexp(key_s(alice),g) may be sent on channel pub at output {6}.
mess(pub,dhexp(key_s(alice),g)).

8. By 4, the attacker may have the channel pub.
By 7, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

9. Using the function empty the attacker may obtain empty.
attacker(empty).

10. Using the function somename the attacker may obtain somename.
attacker(somename).

11. By 10, the attacker may know somename.
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

12. By 11, the attacker may know hash(somename,empty).
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

13. By 12, the attacker may know hash(hash(somename,empty),empty).
By 8, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

14. By 13, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

15. By 14, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 3, the attacker may know g.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g)).

16. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

17. The event LeakS(phase0,bob) may be executed at {433}.
So the message key_s(bob) may be sent on channel pub at output {434}.
mess(pub,key_s(bob)).

18. By 4, the attacker may have the channel pub.
By 17, the message key_s(bob) may be sent on this channel.
So the attacker may obtain the message key_s(bob) by listening on this channel.
attacker(key_s(bob)).

19. By 18, the attacker may know key_s(bob).
By 8, the attacker may know dhexp(key_s(alice),g).
Using the function dhexp the attacker may obtain dhexp(key_s(bob),dhexp(key_s(alice),g)).
attacker(dhexp(key_s(bob),dhexp(key_s(alice),g))).

20. By 11, the attacker may know hash(somename,empty).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)).
attacker(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g))).

21. By 20, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)).
By 19, the attacker may know dhexp(key_s(bob),dhexp(key_s(alice),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
attacker(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g)))).

22. By 21, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
By 16, the attacker may know minnonce.
By 15, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
By 2, the attacker may know m_980312231.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_980312231).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_980312231)).

23. The attacker has some term b_980312217.
attacker(b_980312217).

24. By 3, the attacker may know g.
By 23, the attacker may know b_980312217.
By 22, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_980312231).
Using the function concat3 the attacker may obtain concat3(g,b_980312217,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_980312231)).
attacker(concat3(g,b_980312217,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_980312231))).

25. By 4, the attacker may have the channel pub.
By 24, the attacker may have the message concat3(g,b_980312217,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_980312231)).
So the attacker may send this message on this channel.
mess(pub,concat3(g,b_980312217,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_980312231))).

26. The entry statestore(bob,alice,sid_980312232,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 1 may be read at get {347}.
The message concat3(g,b_980312217,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_980312231)) that may be sent on channel pub by 25 may be received at input {312}.
We have g <> caught-fail.
So event RecvMsg(bob,alice,stagepack_a(sid_980312232),m_980312231) may be executed at {345}.
end(RecvMsg(bob,alice,stagepack_a(sid_980312232),m_980312231)).


RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1155,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) cannot be proved.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(LeakS(phase0,bob)) && attacker(m_980312235) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_980312236]),m_980312235))
goal reachable: begin(LeakS(phase0,alice)) && attacker(m_980312239) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_980312240]),m_980312239))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_980312243]),msg_a(alice,bob,sid[!1 = @sid_980312243]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_980312244]),msg_a(alice,bob,sid[!1 = @sid_980312243])))
RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(LeakS(phase0,bob)) && attacker(m_980312268) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_980312269]),m_980312268))
Abbreviations:
sid_980312353 = sid[!1 = @sid_980312344]

1. The entry statestore(bob,alice,sid_980312353,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) may be inserted in a table at insert {311}.
table(statestore(bob,alice,sid_980312353,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false)))).

2. We assume as hypothesis that
attacker(m_980312352).

3. Using the function g the attacker may obtain g.
attacker(g).

4. Using the function pub the attacker may obtain pub.
attacker(pub).

5. The message dhexp(key_s(bob),g) may be sent on channel pub at output {296}.
mess(pub,dhexp(key_s(bob),g)).

6. By 4, the attacker may have the channel pub.
By 5, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

7. The message dhexp(key_s(alice),g) may be sent on channel pub at output {6}.
mess(pub,dhexp(key_s(alice),g)).

8. By 4, the attacker may have the channel pub.
By 7, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

9. Using the function empty the attacker may obtain empty.
attacker(empty).

10. Using the function somename the attacker may obtain somename.
attacker(somename).

11. By 10, the attacker may know somename.
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

12. By 11, the attacker may know hash(somename,empty).
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

13. By 12, the attacker may know hash(hash(somename,empty),empty).
By 8, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

14. By 13, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

15. By 14, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 3, the attacker may know g.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g)).

16. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

17. The event LeakS(phase0,bob) may be executed at {433}.
So the message key_s(bob) may be sent on channel pub at output {434}.
mess(pub,key_s(bob)).

18. By 4, the attacker may have the channel pub.
By 17, the message key_s(bob) may be sent on this channel.
So the attacker may obtain the message key_s(bob) by listening on this channel.
attacker(key_s(bob)).

19. By 18, the attacker may know key_s(bob).
By 8, the attacker may know dhexp(key_s(alice),g).
Using the function dhexp the attacker may obtain dhexp(key_s(bob),dhexp(key_s(alice),g)).
attacker(dhexp(key_s(bob),dhexp(key_s(alice),g))).

20. By 11, the attacker may know hash(somename,empty).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)).
attacker(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g))).

21. By 20, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)).
By 19, the attacker may know dhexp(key_s(bob),dhexp(key_s(alice),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
attacker(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g)))).

22. By 21, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
By 16, the attacker may know minnonce.
By 15, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
By 2, the attacker may know m_980312352.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_980312352).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_980312352)).

23. The attacker has some term b_980312338.
attacker(b_980312338).

24. By 3, the attacker may know g.
By 23, the attacker may know b_980312338.
By 22, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_980312352).
Using the function concat3 the attacker may obtain concat3(g,b_980312338,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_980312352)).
attacker(concat3(g,b_980312338,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_980312352))).

25. By 4, the attacker may have the channel pub.
By 24, the attacker may have the message concat3(g,b_980312338,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_980312352)).
So the attacker may send this message on this channel.
mess(pub,concat3(g,b_980312338,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_980312352))).

26. The entry statestore(bob,alice,sid_980312353,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 1 may be read at get {347}.
The message concat3(g,b_980312338,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_980312352)) that may be sent on channel pub by 25 may be received at input {312}.
We have g <> caught-fail.
So event RecvMsg(bob,alice,stagepack_a(sid_980312353),m_980312352) may be executed at {345}.
end(RecvMsg(bob,alice,stagepack_a(sid_980312353),m_980312352)).


RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) cannot be proved.
Starting query not attacker_p1(msg_a(alice,bob,sid_a))
goal reachable: begin(LeakS(phase1,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_980312355]),msg_a(alice,bob,sid[!1 = @sid_980312355]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_980312355]))
Abbreviations:
sid_980312457 = sid[!1 = @sid_980312432]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_980312457,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {21}.
table(statestore(alice,bob,sid_980312457,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

3. The entry statestore(alice,bob,sid_980312457,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 2 may be read at get {58}.
The event SendMsg(alice,bob,stagepack_a(sid_980312457),msg_a(alice,bob,sid_980312457)) may be executed at {55}.
So the message concat3(dhexp(key_e(alice,bob,sid_980312457),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312457),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312457),g)),msg_a(alice,bob,sid_980312457))) may be sent on channel pub at output {57}.
mess(pub,concat3(dhexp(key_e(alice,bob,sid_980312457),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312457),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312457),g)),msg_a(alice,bob,sid_980312457)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(dhexp(key_e(alice,bob,sid_980312457),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312457),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312457),g)),msg_a(alice,bob,sid_980312457))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e(alice,bob,sid_980312457),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312457),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312457),g)),msg_a(alice,bob,sid_980312457))) by listening on this channel.
attacker(concat3(dhexp(key_e(alice,bob,sid_980312457),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312457),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312457),g)),msg_a(alice,bob,sid_980312457)))).

5. By 4, the attacker may know concat3(dhexp(key_e(alice,bob,sid_980312457),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312457),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312457),g)),msg_a(alice,bob,sid_980312457))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312457),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312457),g)),msg_a(alice,bob,sid_980312457)).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312457),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312457),g)),msg_a(alice,bob,sid_980312457))).

6. By 5, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312457),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312457),g)),msg_a(alice,bob,sid_980312457)).
So the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312457),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312457),g)),msg_a(alice,bob,sid_980312457)) in phase 1.
attacker_p1(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312457),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312457),g)),msg_a(alice,bob,sid_980312457))).

7. By 4, the attacker may know concat3(dhexp(key_e(alice,bob,sid_980312457),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312457),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312457),g)),msg_a(alice,bob,sid_980312457))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_e(alice,bob,sid_980312457),g).
attacker(dhexp(key_e(alice,bob,sid_980312457),g)).

8. The message dhexp(key_s(bob),g) may be sent on channel pub at output {296}.
mess(pub,dhexp(key_s(bob),g)).

9. By 1, the attacker may have the channel pub.
By 8, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

10. The message dhexp(key_s(alice),g) may be sent on channel pub at output {6}.
mess(pub,dhexp(key_s(alice),g)).

11. By 1, the attacker may have the channel pub.
By 10, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

12. Using the function empty the attacker may obtain empty.
attacker(empty).

13. Using the function somename the attacker may obtain somename.
attacker(somename).

14. By 13, the attacker may know somename.
By 12, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

15. By 14, the attacker may know hash(somename,empty).
By 12, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

16. By 15, the attacker may know hash(hash(somename,empty),empty).
By 11, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

17. By 16, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 9, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

18. By 17, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 7, the attacker may know dhexp(key_e(alice,bob,sid_980312457),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312457),g)).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312457),g))).

19. By 18, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312457),g)).
So the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312457),g)) in phase 1.
attacker_p1(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312457),g))).

20. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

21. By 11, the attacker may know dhexp(key_s(alice),g).
So the attacker may know dhexp(key_s(alice),g) in phase 1.
attacker_p1(dhexp(key_s(alice),g)).

22. Using the function pub the attacker may obtain pub in phase 1.
attacker_p1(pub).

23. The event LeakS(phase1,bob) may be executed at {436}.
So the message key_s(bob) may be sent on channel pub in phase 1 at output {437}.
mess_p1(pub,key_s(bob)).

24. By 22, the attacker may have the channel pub in phase 1.
By 23, the message key_s(bob) in phase 1 may be sent on this channel.
So the attacker may obtain the message key_s(bob) in phase 1 by listening on this channel.
attacker_p1(key_s(bob)).

25. By 24, the attacker may know key_s(bob) in phase 1.
By 21, the attacker may know dhexp(key_s(alice),g) in phase 1.
Using the function dhexp the attacker may obtain dhexp(key_s(alice),dhexp(key_s(bob),g)) in phase 1.
attacker_p1(dhexp(key_s(alice),dhexp(key_s(bob),g))).

26. By 7, the attacker may know dhexp(key_e(alice,bob,sid_980312457),g).
So the attacker may know dhexp(key_e(alice,bob,sid_980312457),g) in phase 1.
attacker_p1(dhexp(key_e(alice,bob,sid_980312457),g)).

27. By 24, the attacker may know key_s(bob) in phase 1.
By 26, the attacker may know dhexp(key_e(alice,bob,sid_980312457),g) in phase 1.
Using the function dhexp the attacker may obtain dhexp(key_e(alice,bob,sid_980312457),dhexp(key_s(bob),g)) in phase 1.
attacker_p1(dhexp(key_e(alice,bob,sid_980312457),dhexp(key_s(bob),g))).

28. By 14, the attacker may know hash(somename,empty).
So the attacker may know hash(somename,empty) in phase 1.
attacker_p1(hash(somename,empty)).

29. By 28, the attacker may know hash(somename,empty) in phase 1.
By 27, the attacker may know dhexp(key_e(alice,bob,sid_980312457),dhexp(key_s(bob),g)) in phase 1.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312457),dhexp(key_s(bob),g))) in phase 1.
attacker_p1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312457),dhexp(key_s(bob),g)))).

30. By 29, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312457),dhexp(key_s(bob),g))) in phase 1.
By 25, the attacker may know dhexp(key_s(alice),dhexp(key_s(bob),g)) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312457),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312457),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g)))).

31. By 30, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312457),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))) in phase 1.
By 20, the attacker may know minnonce in phase 1.
By 19, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312457),g)) in phase 1.
By 6, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312457),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312457),g)),msg_a(alice,bob,sid_980312457)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312457),g)),msg_a(alice,bob,sid_980312457)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312457),g)),msg_a(alice,bob,sid_980312457))).

32. By 31, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312457),g)),msg_a(alice,bob,sid_980312457)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_980312457) in phase 1.
attacker_p1(msg_a(alice,bob,sid_980312457)).


RESULT not attacker_p1(msg_a(alice,bob,sid_a)) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob))
goal reachable: begin(LeakS(phase1,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_980312459]),msg_a(alice,bob,sid[!1 = @sid_980312459]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_980312459]))
goal reachable: begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_980312462]),msg_a(alice,bob,sid[!1 = @sid_980312462]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_980312462]))
RESULT attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob)) is true.
Starting query attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice)))
goal reachable: begin(LeakS(phase1,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_980312468]),msg_a(alice,bob,sid[!1 = @sid_980312468]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_980312468]))
Abbreviations:
sid_980312571 = sid[!1 = @sid_980312546]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_980312571,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {21}.
table(statestore(alice,bob,sid_980312571,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

3. The entry statestore(alice,bob,sid_980312571,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 2 may be read at get {58}.
The event SendMsg(alice,bob,stagepack_a(sid_980312571),msg_a(alice,bob,sid_980312571)) may be executed at {55}.
So the message concat3(dhexp(key_e(alice,bob,sid_980312571),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312571),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312571),g)),msg_a(alice,bob,sid_980312571))) may be sent on channel pub at output {57}.
mess(pub,concat3(dhexp(key_e(alice,bob,sid_980312571),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312571),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312571),g)),msg_a(alice,bob,sid_980312571)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(dhexp(key_e(alice,bob,sid_980312571),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312571),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312571),g)),msg_a(alice,bob,sid_980312571))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e(alice,bob,sid_980312571),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312571),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312571),g)),msg_a(alice,bob,sid_980312571))) by listening on this channel.
attacker(concat3(dhexp(key_e(alice,bob,sid_980312571),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312571),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312571),g)),msg_a(alice,bob,sid_980312571)))).

5. By 4, the attacker may know concat3(dhexp(key_e(alice,bob,sid_980312571),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312571),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312571),g)),msg_a(alice,bob,sid_980312571))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312571),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312571),g)),msg_a(alice,bob,sid_980312571)).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312571),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312571),g)),msg_a(alice,bob,sid_980312571))).

6. By 5, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312571),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312571),g)),msg_a(alice,bob,sid_980312571)).
So the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312571),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312571),g)),msg_a(alice,bob,sid_980312571)) in phase 1.
attacker_p1(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312571),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312571),g)),msg_a(alice,bob,sid_980312571))).

7. By 4, the attacker may know concat3(dhexp(key_e(alice,bob,sid_980312571),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312571),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312571),g)),msg_a(alice,bob,sid_980312571))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_e(alice,bob,sid_980312571),g).
attacker(dhexp(key_e(alice,bob,sid_980312571),g)).

8. The message dhexp(key_s(bob),g) may be sent on channel pub at output {296}.
mess(pub,dhexp(key_s(bob),g)).

9. By 1, the attacker may have the channel pub.
By 8, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

10. The message dhexp(key_s(alice),g) may be sent on channel pub at output {6}.
mess(pub,dhexp(key_s(alice),g)).

11. By 1, the attacker may have the channel pub.
By 10, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

12. Using the function empty the attacker may obtain empty.
attacker(empty).

13. Using the function somename the attacker may obtain somename.
attacker(somename).

14. By 13, the attacker may know somename.
By 12, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

15. By 14, the attacker may know hash(somename,empty).
By 12, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

16. By 15, the attacker may know hash(hash(somename,empty),empty).
By 11, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

17. By 16, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 9, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

18. By 17, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 7, the attacker may know dhexp(key_e(alice,bob,sid_980312571),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312571),g)).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312571),g))).

19. By 18, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312571),g)).
So the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312571),g)) in phase 1.
attacker_p1(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312571),g))).

20. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

21. By 11, the attacker may know dhexp(key_s(alice),g).
So the attacker may know dhexp(key_s(alice),g) in phase 1.
attacker_p1(dhexp(key_s(alice),g)).

22. Using the function pub the attacker may obtain pub in phase 1.
attacker_p1(pub).

23. The event LeakS(phase1,bob) may be executed at {436}.
So the message key_s(bob) may be sent on channel pub in phase 1 at output {437}.
mess_p1(pub,key_s(bob)).

24. By 22, the attacker may have the channel pub in phase 1.
By 23, the message key_s(bob) in phase 1 may be sent on this channel.
So the attacker may obtain the message key_s(bob) in phase 1 by listening on this channel.
attacker_p1(key_s(bob)).

25. By 24, the attacker may know key_s(bob) in phase 1.
By 21, the attacker may know dhexp(key_s(alice),g) in phase 1.
Using the function dhexp the attacker may obtain dhexp(key_s(alice),dhexp(key_s(bob),g)) in phase 1.
attacker_p1(dhexp(key_s(alice),dhexp(key_s(bob),g))).

26. By 7, the attacker may know dhexp(key_e(alice,bob,sid_980312571),g).
So the attacker may know dhexp(key_e(alice,bob,sid_980312571),g) in phase 1.
attacker_p1(dhexp(key_e(alice,bob,sid_980312571),g)).

27. By 24, the attacker may know key_s(bob) in phase 1.
By 26, the attacker may know dhexp(key_e(alice,bob,sid_980312571),g) in phase 1.
Using the function dhexp the attacker may obtain dhexp(key_e(alice,bob,sid_980312571),dhexp(key_s(bob),g)) in phase 1.
attacker_p1(dhexp(key_e(alice,bob,sid_980312571),dhexp(key_s(bob),g))).

28. By 14, the attacker may know hash(somename,empty).
So the attacker may know hash(somename,empty) in phase 1.
attacker_p1(hash(somename,empty)).

29. By 28, the attacker may know hash(somename,empty) in phase 1.
By 27, the attacker may know dhexp(key_e(alice,bob,sid_980312571),dhexp(key_s(bob),g)) in phase 1.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312571),dhexp(key_s(bob),g))) in phase 1.
attacker_p1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312571),dhexp(key_s(bob),g)))).

30. By 29, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312571),dhexp(key_s(bob),g))) in phase 1.
By 25, the attacker may know dhexp(key_s(alice),dhexp(key_s(bob),g)) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312571),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312571),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g)))).

31. By 30, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312571),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))) in phase 1.
By 20, the attacker may know minnonce in phase 1.
By 19, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312571),g)) in phase 1.
By 6, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312571),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312571),g)),msg_a(alice,bob,sid_980312571)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312571),g)),msg_a(alice,bob,sid_980312571)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312571),g)),msg_a(alice,bob,sid_980312571))).

32. By 31, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312571),g)),msg_a(alice,bob,sid_980312571)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_980312571) in phase 1.
attacker_p1(msg_a(alice,bob,sid_980312571)).


RESULT attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice))) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob))
goal reachable: begin(LeakS(phase1,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_980312573]),msg_a(alice,bob,sid[!1 = @sid_980312573]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_980312573]))
Abbreviations:
sid_980312675 = sid[!1 = @sid_980312650]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_980312675,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {21}.
table(statestore(alice,bob,sid_980312675,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

3. The entry statestore(alice,bob,sid_980312675,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 2 may be read at get {58}.
The event SendMsg(alice,bob,stagepack_a(sid_980312675),msg_a(alice,bob,sid_980312675)) may be executed at {55}.
So the message concat3(dhexp(key_e(alice,bob,sid_980312675),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312675),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312675),g)),msg_a(alice,bob,sid_980312675))) may be sent on channel pub at output {57}.
mess(pub,concat3(dhexp(key_e(alice,bob,sid_980312675),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312675),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312675),g)),msg_a(alice,bob,sid_980312675)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(dhexp(key_e(alice,bob,sid_980312675),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312675),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312675),g)),msg_a(alice,bob,sid_980312675))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e(alice,bob,sid_980312675),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312675),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312675),g)),msg_a(alice,bob,sid_980312675))) by listening on this channel.
attacker(concat3(dhexp(key_e(alice,bob,sid_980312675),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312675),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312675),g)),msg_a(alice,bob,sid_980312675)))).

5. By 4, the attacker may know concat3(dhexp(key_e(alice,bob,sid_980312675),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312675),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312675),g)),msg_a(alice,bob,sid_980312675))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312675),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312675),g)),msg_a(alice,bob,sid_980312675)).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312675),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312675),g)),msg_a(alice,bob,sid_980312675))).

6. By 5, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312675),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312675),g)),msg_a(alice,bob,sid_980312675)).
So the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312675),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312675),g)),msg_a(alice,bob,sid_980312675)) in phase 1.
attacker_p1(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312675),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312675),g)),msg_a(alice,bob,sid_980312675))).

7. By 4, the attacker may know concat3(dhexp(key_e(alice,bob,sid_980312675),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312675),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312675),g)),msg_a(alice,bob,sid_980312675))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_e(alice,bob,sid_980312675),g).
attacker(dhexp(key_e(alice,bob,sid_980312675),g)).

8. The message dhexp(key_s(bob),g) may be sent on channel pub at output {296}.
mess(pub,dhexp(key_s(bob),g)).

9. By 1, the attacker may have the channel pub.
By 8, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

10. The message dhexp(key_s(alice),g) may be sent on channel pub at output {6}.
mess(pub,dhexp(key_s(alice),g)).

11. By 1, the attacker may have the channel pub.
By 10, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

12. Using the function empty the attacker may obtain empty.
attacker(empty).

13. Using the function somename the attacker may obtain somename.
attacker(somename).

14. By 13, the attacker may know somename.
By 12, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

15. By 14, the attacker may know hash(somename,empty).
By 12, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

16. By 15, the attacker may know hash(hash(somename,empty),empty).
By 11, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

17. By 16, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 9, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

18. By 17, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 7, the attacker may know dhexp(key_e(alice,bob,sid_980312675),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312675),g)).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312675),g))).

19. By 18, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312675),g)).
So the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312675),g)) in phase 1.
attacker_p1(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312675),g))).

20. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

21. By 11, the attacker may know dhexp(key_s(alice),g).
So the attacker may know dhexp(key_s(alice),g) in phase 1.
attacker_p1(dhexp(key_s(alice),g)).

22. Using the function pub the attacker may obtain pub in phase 1.
attacker_p1(pub).

23. The event LeakS(phase1,bob) may be executed at {436}.
So the message key_s(bob) may be sent on channel pub in phase 1 at output {437}.
mess_p1(pub,key_s(bob)).

24. By 22, the attacker may have the channel pub in phase 1.
By 23, the message key_s(bob) in phase 1 may be sent on this channel.
So the attacker may obtain the message key_s(bob) in phase 1 by listening on this channel.
attacker_p1(key_s(bob)).

25. By 24, the attacker may know key_s(bob) in phase 1.
By 21, the attacker may know dhexp(key_s(alice),g) in phase 1.
Using the function dhexp the attacker may obtain dhexp(key_s(alice),dhexp(key_s(bob),g)) in phase 1.
attacker_p1(dhexp(key_s(alice),dhexp(key_s(bob),g))).

26. By 7, the attacker may know dhexp(key_e(alice,bob,sid_980312675),g).
So the attacker may know dhexp(key_e(alice,bob,sid_980312675),g) in phase 1.
attacker_p1(dhexp(key_e(alice,bob,sid_980312675),g)).

27. By 24, the attacker may know key_s(bob) in phase 1.
By 26, the attacker may know dhexp(key_e(alice,bob,sid_980312675),g) in phase 1.
Using the function dhexp the attacker may obtain dhexp(key_e(alice,bob,sid_980312675),dhexp(key_s(bob),g)) in phase 1.
attacker_p1(dhexp(key_e(alice,bob,sid_980312675),dhexp(key_s(bob),g))).

28. By 14, the attacker may know hash(somename,empty).
So the attacker may know hash(somename,empty) in phase 1.
attacker_p1(hash(somename,empty)).

29. By 28, the attacker may know hash(somename,empty) in phase 1.
By 27, the attacker may know dhexp(key_e(alice,bob,sid_980312675),dhexp(key_s(bob),g)) in phase 1.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312675),dhexp(key_s(bob),g))) in phase 1.
attacker_p1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312675),dhexp(key_s(bob),g)))).

30. By 29, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312675),dhexp(key_s(bob),g))) in phase 1.
By 25, the attacker may know dhexp(key_s(alice),dhexp(key_s(bob),g)) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312675),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312675),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g)))).

31. By 30, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312675),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))) in phase 1.
By 20, the attacker may know minnonce in phase 1.
By 19, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312675),g)) in phase 1.
By 6, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312675),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312675),g)),msg_a(alice,bob,sid_980312675)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312675),g)),msg_a(alice,bob,sid_980312675)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312675),g)),msg_a(alice,bob,sid_980312675))).

32. By 31, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312675),g)),msg_a(alice,bob,sid_980312675)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_980312675) in phase 1.
attacker_p1(msg_a(alice,bob,sid_980312675)).


RESULT attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m))
goal reachable: begin(LeakS(phase0,bob)) && attacker(m_980312678) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_980312679]),msg_a(alice,bob,sid[!1 = @sid_980312679]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_980312679]),m_980312678))
Abbreviations:
sid_980312822 = sid[!1 = @sid_980312812]

1. The entry statestore(alice,bob,sid_980312822,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {21}.
table(statestore(alice,bob,sid_980312822,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

2. The entry statestore(alice,bob,sid_980312822,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 1 may be read at get {58}.
The event SendMsg(alice,bob,stagepack_a(sid_980312822),msg_a(alice,bob,sid_980312822)) may be executed at {55}.
So the entry statestore(alice,bob,sid_980312822,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),msg_a(alice,bob,sid_980312822)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_e(alice,bob,sid_980312822),g),key_e(alice,bob,sid_980312822)),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {56}.
table(statestore(alice,bob,sid_980312822,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),msg_a(alice,bob,sid_980312822)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_e(alice,bob,sid_980312822),g),key_e(alice,bob,sid_980312822)),dhexp(key_s(bob),g),empty,empty,true)))).

3. We assume as hypothesis that
attacker(m_980312821).

4. Using the function pub the attacker may obtain pub.
attacker(pub).

5. The message dhexp(key_s(bob),g) may be sent on channel pub at output {296}.
mess(pub,dhexp(key_s(bob),g)).

6. By 4, the attacker may have the channel pub.
By 5, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

7. The entry statestore(alice,bob,sid_980312822,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 1 may be read at get {58}.
The event SendMsg(alice,bob,stagepack_a(sid_980312822),msg_a(alice,bob,sid_980312822)) may be executed at {55}.
So the message concat3(dhexp(key_e(alice,bob,sid_980312822),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),msg_a(alice,bob,sid_980312822))) may be sent on channel pub at output {57}.
mess(pub,concat3(dhexp(key_e(alice,bob,sid_980312822),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),msg_a(alice,bob,sid_980312822)))).

8. By 4, the attacker may have the channel pub.
By 7, the message concat3(dhexp(key_e(alice,bob,sid_980312822),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),msg_a(alice,bob,sid_980312822))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e(alice,bob,sid_980312822),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),msg_a(alice,bob,sid_980312822))) by listening on this channel.
attacker(concat3(dhexp(key_e(alice,bob,sid_980312822),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),msg_a(alice,bob,sid_980312822)))).

9. By 8, the attacker may know concat3(dhexp(key_e(alice,bob,sid_980312822),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),msg_a(alice,bob,sid_980312822))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),msg_a(alice,bob,sid_980312822)).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),msg_a(alice,bob,sid_980312822))).

10. The entry statestore(alice,bob,sid_980312822,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 1 may be read at get {58}.
The event SendMsg(alice,bob,stagepack_a(sid_980312822),msg_a(alice,bob,sid_980312822)) may be executed at {55}.
So the message concat3(dhexp(key_e(alice,bob,sid_980312822),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),msg_a(alice,bob,sid_980312822))) may be sent on channel pub at output {57}.
mess(pub,concat3(dhexp(key_e(alice,bob,sid_980312822),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),msg_a(alice,bob,sid_980312822)))).

11. By 4, the attacker may have the channel pub.
By 10, the message concat3(dhexp(key_e(alice,bob,sid_980312822),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),msg_a(alice,bob,sid_980312822))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e(alice,bob,sid_980312822),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),msg_a(alice,bob,sid_980312822))) by listening on this channel.
attacker(concat3(dhexp(key_e(alice,bob,sid_980312822),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),msg_a(alice,bob,sid_980312822)))).

12. By 11, the attacker may know concat3(dhexp(key_e(alice,bob,sid_980312822),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),msg_a(alice,bob,sid_980312822))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_e(alice,bob,sid_980312822),g).
attacker(dhexp(key_e(alice,bob,sid_980312822),g)).

13. The message dhexp(key_s(alice),g) may be sent on channel pub at output {6}.
mess(pub,dhexp(key_s(alice),g)).

14. By 4, the attacker may have the channel pub.
By 13, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

15. Using the function empty the attacker may obtain empty.
attacker(empty).

16. Using the function somename the attacker may obtain somename.
attacker(somename).

17. By 16, the attacker may know somename.
By 15, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

18. By 17, the attacker may know hash(somename,empty).
By 15, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

19. By 18, the attacker may know hash(hash(somename,empty),empty).
By 14, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

20. By 19, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

21. By 20, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 12, the attacker may know dhexp(key_e(alice,bob,sid_980312822),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g))).

22. By 21, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)).
By 9, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),msg_a(alice,bob,sid_980312822)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),msg_a(alice,bob,sid_980312822))).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),msg_a(alice,bob,sid_980312822)))).

23. By 22, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),msg_a(alice,bob,sid_980312822))).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),msg_a(alice,bob,sid_980312822))),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),msg_a(alice,bob,sid_980312822))),dhexp(key_s(bob),g))).

24. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

25. The event LeakS(phase0,bob) may be executed at {433}.
So the message key_s(bob) may be sent on channel pub at output {434}.
mess(pub,key_s(bob)).

26. By 4, the attacker may have the channel pub.
By 25, the message key_s(bob) may be sent on this channel.
So the attacker may obtain the message key_s(bob) by listening on this channel.
attacker(key_s(bob)).

27. By 26, the attacker may know key_s(bob).
By 14, the attacker may know dhexp(key_s(alice),g).
Using the function dhexp the attacker may obtain dhexp(key_s(alice),dhexp(key_s(bob),g)).
attacker(dhexp(key_s(alice),dhexp(key_s(bob),g))).

28. By 26, the attacker may know key_s(bob).
By 12, the attacker may know dhexp(key_e(alice,bob,sid_980312822),g).
Using the function dhexp the attacker may obtain dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g)).
attacker(dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))).

29. By 17, the attacker may know hash(somename,empty).
By 28, the attacker may know dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))).
attacker(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g)))).

30. By 29, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))).
By 27, the attacker may know dhexp(key_s(alice),dhexp(key_s(bob),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g)))).

31. By 30, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))).
By 28, the attacker may know dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g)))).

32. By 31, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))).
By 27, the attacker may know dhexp(key_s(alice),dhexp(key_s(bob),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))).
attacker(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g)))).

33. By 32, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))).
By 24, the attacker may know minnonce.
By 23, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),msg_a(alice,bob,sid_980312822))),dhexp(key_s(bob),g)).
By 3, the attacker may know m_980312821.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),msg_a(alice,bob,sid_980312822))),dhexp(key_s(bob),g)),m_980312821).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),msg_a(alice,bob,sid_980312822))),dhexp(key_s(bob),g)),m_980312821)).

34. The attacker has some term b_980312806.
attacker(b_980312806).

35. By 6, the attacker may know dhexp(key_s(bob),g).
By 34, the attacker may know b_980312806.
By 33, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),msg_a(alice,bob,sid_980312822))),dhexp(key_s(bob),g)),m_980312821).
Using the function concat3 the attacker may obtain concat3(dhexp(key_s(bob),g),b_980312806,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),msg_a(alice,bob,sid_980312822))),dhexp(key_s(bob),g)),m_980312821)).
attacker(concat3(dhexp(key_s(bob),g),b_980312806,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),msg_a(alice,bob,sid_980312822))),dhexp(key_s(bob),g)),m_980312821))).

36. By 4, the attacker may have the channel pub.
By 35, the attacker may have the message concat3(dhexp(key_s(bob),g),b_980312806,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),msg_a(alice,bob,sid_980312822))),dhexp(key_s(bob),g)),m_980312821)).
So the attacker may send this message on this channel.
mess(pub,concat3(dhexp(key_s(bob),g),b_980312806,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),msg_a(alice,bob,sid_980312822))),dhexp(key_s(bob),g)),m_980312821))).

37. The entry statestore(alice,bob,sid_980312822,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),msg_a(alice,bob,sid_980312822)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_e(alice,bob,sid_980312822),g),key_e(alice,bob,sid_980312822)),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 2 may be read at get {102}.
The message concat3(dhexp(key_s(bob),g),b_980312806,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980312822),dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980312822),g)),msg_a(alice,bob,sid_980312822))),dhexp(key_s(bob),g)),m_980312821)) that may be sent on channel pub by 36 may be received at input {59}.
We have dhexp(key_s(bob),g) <> caught-fail.
So event RecvMsg(alice,bob,stagepack_b(sid_980312822),m_980312821) may be executed at {100}.
end(RecvMsg(alice,bob,stagepack_b(sid_980312822),m_980312821)).


RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1155,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: begin(LeakS(phase0,bob)) && attacker(m_980312825) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_980312826]),msg_a(alice,bob,sid[!1 = @sid_980312826]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_980312826]),m_980312825))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_980312829]),msg_b(bob,alice,sid[!1 = @sid_980312829]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_980312830]),msg_a(alice,bob,sid[!1 = @sid_980312830]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_980312830]),msg_b(bob,alice,sid[!1 = @sid_980312829])))
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1155,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1155,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob))
goal reachable: begin(LeakS(phase0,bob)) && attacker(m_980312845) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_980312846]),msg_a(alice,bob,sid[!1 = @sid_980312846]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_980312846]),m_980312845))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_980312849]),msg_b(bob,alice,sid[!1 = @sid_980312849]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_980312850]),msg_a(alice,bob,sid[!1 = @sid_980312850]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_980312850]),msg_b(bob,alice,sid[!1 = @sid_980312849])))
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1155,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: begin(LeakS(phase0,bob)) && attacker(m_980312865) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_980312866]),msg_a(alice,bob,sid[!1 = @sid_980312866]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_980312866]),m_980312865))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_980312869]),msg_b(bob,alice,sid[!1 = @sid_980312869]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_980312870]),msg_a(alice,bob,sid[!1 = @sid_980312870]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_980312870]),msg_b(bob,alice,sid[!1 = @sid_980312869])))
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob))
goal reachable: begin(LeakS(phase0,bob)) && attacker(m_980312884) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_980312885]),msg_a(alice,bob,sid[!1 = @sid_980312885]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_980312885]),m_980312884))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_980312888]),msg_b(bob,alice,sid[!1 = @sid_980312888]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_980312889]),msg_a(alice,bob,sid[!1 = @sid_980312889]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_980312889]),msg_b(bob,alice,sid[!1 = @sid_980312888])))
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) is true.
Starting query not attacker_p1(msg_b(bob,alice,sid_b))
goal reachable: begin(LeakS(phase1,alice)) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_980312902]),msg_b(bob,alice,sid[!1 = @sid_980312902]))) && begin(LeakS(phase0,bob)) -> attacker_p1(msg_b(bob,alice,sid[!1 = @sid_980312902]))
Abbreviations:
sid_980313167 = sid[!1 = @sid_980313143]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(bob,alice,sid_980313167,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) may be inserted in a table at insert {311}.
table(statestore(bob,alice,sid_980313167,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false)))).

3. The attacker has some term plaintext_a_980313135.
attacker(plaintext_a_980313135).

4. Using the function g the attacker may obtain g.
attacker(g).

5. The message dhexp(key_s(bob),g) may be sent on channel pub at output {296}.
mess(pub,dhexp(key_s(bob),g)).

6. By 1, the attacker may have the channel pub.
By 5, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

7. The message dhexp(key_s(alice),g) may be sent on channel pub at output {6}.
mess(pub,dhexp(key_s(alice),g)).

8. By 1, the attacker may have the channel pub.
By 7, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

9. Using the function empty the attacker may obtain empty.
attacker(empty).

10. Using the function somename the attacker may obtain somename.
attacker(somename).

11. By 10, the attacker may know somename.
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

12. By 11, the attacker may know hash(somename,empty).
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

13. By 12, the attacker may know hash(hash(somename,empty),empty).
By 8, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

14. By 13, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

15. By 14, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 4, the attacker may know g.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g)).

16. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

17. The event LeakS(phase0,bob) may be executed at {433}.
So the message key_s(bob) may be sent on channel pub at output {434}.
mess(pub,key_s(bob)).

18. By 1, the attacker may have the channel pub.
By 17, the message key_s(bob) may be sent on this channel.
So the attacker may obtain the message key_s(bob) by listening on this channel.
attacker(key_s(bob)).

19. By 18, the attacker may know key_s(bob).
By 8, the attacker may know dhexp(key_s(alice),g).
Using the function dhexp the attacker may obtain dhexp(key_s(bob),dhexp(key_s(alice),g)).
attacker(dhexp(key_s(bob),dhexp(key_s(alice),g))).

20. By 11, the attacker may know hash(somename,empty).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)).
attacker(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g))).

21. By 20, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)).
By 19, the attacker may know dhexp(key_s(bob),dhexp(key_s(alice),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
attacker(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g)))).

22. By 21, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
By 16, the attacker may know minnonce.
By 15, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
By 3, the attacker may know plaintext_a_980313135.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313135).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313135)).

23. The attacker has some term b_980313130.
attacker(b_980313130).

24. By 4, the attacker may know g.
By 23, the attacker may know b_980313130.
By 22, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313135).
Using the function concat3 the attacker may obtain concat3(g,b_980313130,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313135)).
attacker(concat3(g,b_980313130,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313135))).

25. By 1, the attacker may have the channel pub.
By 24, the attacker may have the message concat3(g,b_980313130,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313135)).
So the attacker may send this message on this channel.
mess(pub,concat3(g,b_980313130,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313135))).

26. The entry statestore(bob,alice,sid_980313167,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 2 may be read at get {347}.
The message concat3(g,b_980313130,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313135)) that may be sent on channel pub by 25 may be received at input {312}.
We have g <> caught-fail.
So the entry statestore(bob,alice,sid_980313167,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313135))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) may be inserted in a table at insert {346}.
table(statestore(bob,alice,sid_980313167,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313135))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false)))).

27. The entry statestore(bob,alice,sid_980313167,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313135))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) that may be in a table by 26 may be read at get {392}.
The event SendMsg(bob,alice,stagepack_b(sid_980313167),msg_b(bob,alice,sid_980313167)) may be executed at {389}.
So the message concat3(dhexp(key_e(bob,alice,sid_980313167),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313167),g)),dhexp(key_e(bob,alice,sid_980313167),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313135)),dhexp(key_e(bob,alice,sid_980313167),g)),msg_b(bob,alice,sid_980313167))) may be sent on channel pub at output {391}.
mess(pub,concat3(dhexp(key_e(bob,alice,sid_980313167),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313167),g)),dhexp(key_e(bob,alice,sid_980313167),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313135)),dhexp(key_e(bob,alice,sid_980313167),g)),msg_b(bob,alice,sid_980313167)))).

28. By 1, the attacker may have the channel pub.
By 27, the message concat3(dhexp(key_e(bob,alice,sid_980313167),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313167),g)),dhexp(key_e(bob,alice,sid_980313167),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313135)),dhexp(key_e(bob,alice,sid_980313167),g)),msg_b(bob,alice,sid_980313167))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e(bob,alice,sid_980313167),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313167),g)),dhexp(key_e(bob,alice,sid_980313167),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313135)),dhexp(key_e(bob,alice,sid_980313167),g)),msg_b(bob,alice,sid_980313167))) by listening on this channel.
attacker(concat3(dhexp(key_e(bob,alice,sid_980313167),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313167),g)),dhexp(key_e(bob,alice,sid_980313167),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313135)),dhexp(key_e(bob,alice,sid_980313167),g)),msg_b(bob,alice,sid_980313167)))).

29. By 28, the attacker may know concat3(dhexp(key_e(bob,alice,sid_980313167),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313167),g)),dhexp(key_e(bob,alice,sid_980313167),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313135)),dhexp(key_e(bob,alice,sid_980313167),g)),msg_b(bob,alice,sid_980313167))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313167),g)),dhexp(key_e(bob,alice,sid_980313167),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313135)),dhexp(key_e(bob,alice,sid_980313167),g)),msg_b(bob,alice,sid_980313167)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313167),g)),dhexp(key_e(bob,alice,sid_980313167),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313135)),dhexp(key_e(bob,alice,sid_980313167),g)),msg_b(bob,alice,sid_980313167))).

30. By 29, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313167),g)),dhexp(key_e(bob,alice,sid_980313167),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313135)),dhexp(key_e(bob,alice,sid_980313167),g)),msg_b(bob,alice,sid_980313167)).
So the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313167),g)),dhexp(key_e(bob,alice,sid_980313167),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313135)),dhexp(key_e(bob,alice,sid_980313167),g)),msg_b(bob,alice,sid_980313167)) in phase 1.
attacker_p1(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313167),g)),dhexp(key_e(bob,alice,sid_980313167),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313135)),dhexp(key_e(bob,alice,sid_980313167),g)),msg_b(bob,alice,sid_980313167))).

31. The attacker has some term plaintext_a_980312970.
attacker(plaintext_a_980312970).

32. By 21, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
By 16, the attacker may know minnonce.
By 15, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
By 31, the attacker may know plaintext_a_980312970.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980312970).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980312970)).

33. The attacker has some term b_980312965.
attacker(b_980312965).

34. By 4, the attacker may know g.
By 33, the attacker may know b_980312965.
By 32, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980312970).
Using the function concat3 the attacker may obtain concat3(g,b_980312965,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980312970)).
attacker(concat3(g,b_980312965,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980312970))).

35. By 1, the attacker may have the channel pub.
By 34, the attacker may have the message concat3(g,b_980312965,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980312970)).
So the attacker may send this message on this channel.
mess(pub,concat3(g,b_980312965,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980312970))).

36. The entry statestore(bob,alice,sid_980313167,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 2 may be read at get {347}.
The message concat3(g,b_980312965,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980312970)) that may be sent on channel pub by 35 may be received at input {312}.
We have g <> caught-fail.
So the entry statestore(bob,alice,sid_980313167,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980312970))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) may be inserted in a table at insert {346}.
table(statestore(bob,alice,sid_980313167,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980312970))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false)))).

37. The entry statestore(bob,alice,sid_980313167,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980312970))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) that may be in a table by 36 may be read at get {392}.
The event SendMsg(bob,alice,stagepack_b(sid_980313167),msg_b(bob,alice,sid_980313167)) may be executed at {389}.
So the message concat3(dhexp(key_e(bob,alice,sid_980313167),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313167),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313167),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980312970)),dhexp(key_e(bob,alice,sid_980313167),g)),msg_b(bob,alice,sid_980313167))) may be sent on channel pub at output {391}.
mess(pub,concat3(dhexp(key_e(bob,alice,sid_980313167),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313167),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313167),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980312970)),dhexp(key_e(bob,alice,sid_980313167),g)),msg_b(bob,alice,sid_980313167)))).

38. By 1, the attacker may have the channel pub.
By 37, the message concat3(dhexp(key_e(bob,alice,sid_980313167),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313167),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313167),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980312970)),dhexp(key_e(bob,alice,sid_980313167),g)),msg_b(bob,alice,sid_980313167))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e(bob,alice,sid_980313167),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313167),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313167),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980312970)),dhexp(key_e(bob,alice,sid_980313167),g)),msg_b(bob,alice,sid_980313167))) by listening on this channel.
attacker(concat3(dhexp(key_e(bob,alice,sid_980313167),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313167),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313167),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980312970)),dhexp(key_e(bob,alice,sid_980313167),g)),msg_b(bob,alice,sid_980313167)))).

39. By 38, the attacker may know concat3(dhexp(key_e(bob,alice,sid_980313167),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313167),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313167),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980312970)),dhexp(key_e(bob,alice,sid_980313167),g)),msg_b(bob,alice,sid_980313167))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_e(bob,alice,sid_980313167),g).
attacker(dhexp(key_e(bob,alice,sid_980313167),g)).

40. By 15, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
By 22, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313135).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313135)).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313135))).

41. By 40, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313135)).
By 39, the attacker may know dhexp(key_e(bob,alice,sid_980313167),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313135)),dhexp(key_e(bob,alice,sid_980313167),g)).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313135)),dhexp(key_e(bob,alice,sid_980313167),g))).

42. By 41, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313135)),dhexp(key_e(bob,alice,sid_980313167),g)).
So the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313135)),dhexp(key_e(bob,alice,sid_980313167),g)) in phase 1.
attacker_p1(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313135)),dhexp(key_e(bob,alice,sid_980313167),g))).

43. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

44. By 39, the attacker may know dhexp(key_e(bob,alice,sid_980313167),g).
So the attacker may know dhexp(key_e(bob,alice,sid_980313167),g) in phase 1.
attacker_p1(dhexp(key_e(bob,alice,sid_980313167),g)).

45. Using the function pub the attacker may obtain pub in phase 1.
attacker_p1(pub).

46. The event LeakS(phase1,alice) may be executed at {147}.
So the message key_s(alice) may be sent on channel pub in phase 1 at output {148}.
mess_p1(pub,key_s(alice)).

47. By 45, the attacker may have the channel pub in phase 1.
By 46, the message key_s(alice) in phase 1 may be sent on this channel.
So the attacker may obtain the message key_s(alice) in phase 1 by listening on this channel.
attacker_p1(key_s(alice)).

48. By 47, the attacker may know key_s(alice) in phase 1.
By 44, the attacker may know dhexp(key_e(bob,alice,sid_980313167),g) in phase 1.
Using the function dhexp the attacker may obtain dhexp(key_e(bob,alice,sid_980313167),dhexp(key_s(alice),g)) in phase 1.
attacker_p1(dhexp(key_e(bob,alice,sid_980313167),dhexp(key_s(alice),g))).

49. By 20, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)).
By 19, the attacker may know dhexp(key_s(bob),dhexp(key_s(alice),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g)))).

50. By 49, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
By 39, the attacker may know dhexp(key_e(bob,alice,sid_980313167),g).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313167),g)).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313167),g))).

51. By 50, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313167),g)).
So the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313167),g)) in phase 1.
attacker_p1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313167),g))).

52. By 51, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313167),g)) in phase 1.
By 48, the attacker may know dhexp(key_e(bob,alice,sid_980313167),dhexp(key_s(alice),g)) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313167),g)),dhexp(key_e(bob,alice,sid_980313167),dhexp(key_s(alice),g))) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313167),g)),dhexp(key_e(bob,alice,sid_980313167),dhexp(key_s(alice),g)))).

53. By 52, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313167),g)),dhexp(key_e(bob,alice,sid_980313167),dhexp(key_s(alice),g))) in phase 1.
By 43, the attacker may know minnonce in phase 1.
By 42, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313135)),dhexp(key_e(bob,alice,sid_980313167),g)) in phase 1.
By 30, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313167),g)),dhexp(key_e(bob,alice,sid_980313167),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313135)),dhexp(key_e(bob,alice,sid_980313167),g)),msg_b(bob,alice,sid_980313167)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313135)),dhexp(key_e(bob,alice,sid_980313167),g)),msg_b(bob,alice,sid_980313167)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313135)),dhexp(key_e(bob,alice,sid_980313167),g)),msg_b(bob,alice,sid_980313167))).

54. By 53, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313135)),dhexp(key_e(bob,alice,sid_980313167),g)),msg_b(bob,alice,sid_980313167)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_b(bob,alice,sid_980313167) in phase 1.
attacker_p1(msg_b(bob,alice,sid_980313167)).


RESULT not attacker_p1(msg_b(bob,alice,sid_b)) cannot be proved.
Starting query attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice))
goal reachable: begin(LeakS(phase1,alice)) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_980313169]),msg_b(bob,alice,sid[!1 = @sid_980313169]))) && begin(LeakS(phase0,bob)) -> attacker_p1(msg_b(bob,alice,sid[!1 = @sid_980313169]))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_980313172]),msg_b(bob,alice,sid[!1 = @sid_980313172]))) && begin(LeakS(phase0,alice)) -> attacker_p1(msg_b(bob,alice,sid[!1 = @sid_980313172]))
RESULT attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice)) is true.
Starting query attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob)))
goal reachable: begin(LeakS(phase1,alice)) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_980313178]),msg_b(bob,alice,sid[!1 = @sid_980313178]))) && begin(LeakS(phase0,bob)) -> attacker_p1(msg_b(bob,alice,sid[!1 = @sid_980313178]))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_980313181]),msg_b(bob,alice,sid[!1 = @sid_980313181]))) && begin(LeakS(phase0,alice)) -> attacker_p1(msg_b(bob,alice,sid[!1 = @sid_980313181]))
RESULT attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob))) is true.
Starting query attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice))
goal reachable: begin(LeakS(phase1,alice)) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_980313188]),msg_b(bob,alice,sid[!1 = @sid_980313188]))) && begin(LeakS(phase0,bob)) -> attacker_p1(msg_b(bob,alice,sid[!1 = @sid_980313188]))
Abbreviations:
sid_980313453 = sid[!1 = @sid_980313429]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(bob,alice,sid_980313453,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) may be inserted in a table at insert {311}.
table(statestore(bob,alice,sid_980313453,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false)))).

3. The attacker has some term plaintext_a_980313421.
attacker(plaintext_a_980313421).

4. Using the function g the attacker may obtain g.
attacker(g).

5. The message dhexp(key_s(bob),g) may be sent on channel pub at output {296}.
mess(pub,dhexp(key_s(bob),g)).

6. By 1, the attacker may have the channel pub.
By 5, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

7. The message dhexp(key_s(alice),g) may be sent on channel pub at output {6}.
mess(pub,dhexp(key_s(alice),g)).

8. By 1, the attacker may have the channel pub.
By 7, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

9. Using the function empty the attacker may obtain empty.
attacker(empty).

10. Using the function somename the attacker may obtain somename.
attacker(somename).

11. By 10, the attacker may know somename.
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

12. By 11, the attacker may know hash(somename,empty).
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

13. By 12, the attacker may know hash(hash(somename,empty),empty).
By 8, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

14. By 13, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

15. By 14, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 4, the attacker may know g.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g)).

16. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

17. The event LeakS(phase0,bob) may be executed at {433}.
So the message key_s(bob) may be sent on channel pub at output {434}.
mess(pub,key_s(bob)).

18. By 1, the attacker may have the channel pub.
By 17, the message key_s(bob) may be sent on this channel.
So the attacker may obtain the message key_s(bob) by listening on this channel.
attacker(key_s(bob)).

19. By 18, the attacker may know key_s(bob).
By 8, the attacker may know dhexp(key_s(alice),g).
Using the function dhexp the attacker may obtain dhexp(key_s(bob),dhexp(key_s(alice),g)).
attacker(dhexp(key_s(bob),dhexp(key_s(alice),g))).

20. By 11, the attacker may know hash(somename,empty).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)).
attacker(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g))).

21. By 20, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)).
By 19, the attacker may know dhexp(key_s(bob),dhexp(key_s(alice),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
attacker(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g)))).

22. By 21, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
By 16, the attacker may know minnonce.
By 15, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
By 3, the attacker may know plaintext_a_980313421.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313421).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313421)).

23. The attacker has some term b_980313416.
attacker(b_980313416).

24. By 4, the attacker may know g.
By 23, the attacker may know b_980313416.
By 22, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313421).
Using the function concat3 the attacker may obtain concat3(g,b_980313416,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313421)).
attacker(concat3(g,b_980313416,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313421))).

25. By 1, the attacker may have the channel pub.
By 24, the attacker may have the message concat3(g,b_980313416,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313421)).
So the attacker may send this message on this channel.
mess(pub,concat3(g,b_980313416,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313421))).

26. The entry statestore(bob,alice,sid_980313453,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 2 may be read at get {347}.
The message concat3(g,b_980313416,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313421)) that may be sent on channel pub by 25 may be received at input {312}.
We have g <> caught-fail.
So the entry statestore(bob,alice,sid_980313453,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313421))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) may be inserted in a table at insert {346}.
table(statestore(bob,alice,sid_980313453,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313421))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false)))).

27. The entry statestore(bob,alice,sid_980313453,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313421))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) that may be in a table by 26 may be read at get {392}.
The event SendMsg(bob,alice,stagepack_b(sid_980313453),msg_b(bob,alice,sid_980313453)) may be executed at {389}.
So the message concat3(dhexp(key_e(bob,alice,sid_980313453),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313453),g)),dhexp(key_e(bob,alice,sid_980313453),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313421)),dhexp(key_e(bob,alice,sid_980313453),g)),msg_b(bob,alice,sid_980313453))) may be sent on channel pub at output {391}.
mess(pub,concat3(dhexp(key_e(bob,alice,sid_980313453),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313453),g)),dhexp(key_e(bob,alice,sid_980313453),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313421)),dhexp(key_e(bob,alice,sid_980313453),g)),msg_b(bob,alice,sid_980313453)))).

28. By 1, the attacker may have the channel pub.
By 27, the message concat3(dhexp(key_e(bob,alice,sid_980313453),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313453),g)),dhexp(key_e(bob,alice,sid_980313453),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313421)),dhexp(key_e(bob,alice,sid_980313453),g)),msg_b(bob,alice,sid_980313453))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e(bob,alice,sid_980313453),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313453),g)),dhexp(key_e(bob,alice,sid_980313453),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313421)),dhexp(key_e(bob,alice,sid_980313453),g)),msg_b(bob,alice,sid_980313453))) by listening on this channel.
attacker(concat3(dhexp(key_e(bob,alice,sid_980313453),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313453),g)),dhexp(key_e(bob,alice,sid_980313453),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313421)),dhexp(key_e(bob,alice,sid_980313453),g)),msg_b(bob,alice,sid_980313453)))).

29. By 28, the attacker may know concat3(dhexp(key_e(bob,alice,sid_980313453),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313453),g)),dhexp(key_e(bob,alice,sid_980313453),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313421)),dhexp(key_e(bob,alice,sid_980313453),g)),msg_b(bob,alice,sid_980313453))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313453),g)),dhexp(key_e(bob,alice,sid_980313453),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313421)),dhexp(key_e(bob,alice,sid_980313453),g)),msg_b(bob,alice,sid_980313453)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313453),g)),dhexp(key_e(bob,alice,sid_980313453),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313421)),dhexp(key_e(bob,alice,sid_980313453),g)),msg_b(bob,alice,sid_980313453))).

30. By 29, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313453),g)),dhexp(key_e(bob,alice,sid_980313453),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313421)),dhexp(key_e(bob,alice,sid_980313453),g)),msg_b(bob,alice,sid_980313453)).
So the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313453),g)),dhexp(key_e(bob,alice,sid_980313453),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313421)),dhexp(key_e(bob,alice,sid_980313453),g)),msg_b(bob,alice,sid_980313453)) in phase 1.
attacker_p1(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313453),g)),dhexp(key_e(bob,alice,sid_980313453),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313421)),dhexp(key_e(bob,alice,sid_980313453),g)),msg_b(bob,alice,sid_980313453))).

31. The attacker has some term plaintext_a_980313256.
attacker(plaintext_a_980313256).

32. By 21, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
By 16, the attacker may know minnonce.
By 15, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
By 31, the attacker may know plaintext_a_980313256.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313256).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313256)).

33. The attacker has some term b_980313251.
attacker(b_980313251).

34. By 4, the attacker may know g.
By 33, the attacker may know b_980313251.
By 32, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313256).
Using the function concat3 the attacker may obtain concat3(g,b_980313251,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313256)).
attacker(concat3(g,b_980313251,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313256))).

35. By 1, the attacker may have the channel pub.
By 34, the attacker may have the message concat3(g,b_980313251,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313256)).
So the attacker may send this message on this channel.
mess(pub,concat3(g,b_980313251,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313256))).

36. The entry statestore(bob,alice,sid_980313453,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 2 may be read at get {347}.
The message concat3(g,b_980313251,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313256)) that may be sent on channel pub by 35 may be received at input {312}.
We have g <> caught-fail.
So the entry statestore(bob,alice,sid_980313453,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313256))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) may be inserted in a table at insert {346}.
table(statestore(bob,alice,sid_980313453,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313256))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false)))).

37. The entry statestore(bob,alice,sid_980313453,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313256))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) that may be in a table by 36 may be read at get {392}.
The event SendMsg(bob,alice,stagepack_b(sid_980313453),msg_b(bob,alice,sid_980313453)) may be executed at {389}.
So the message concat3(dhexp(key_e(bob,alice,sid_980313453),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313453),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313453),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313256)),dhexp(key_e(bob,alice,sid_980313453),g)),msg_b(bob,alice,sid_980313453))) may be sent on channel pub at output {391}.
mess(pub,concat3(dhexp(key_e(bob,alice,sid_980313453),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313453),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313453),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313256)),dhexp(key_e(bob,alice,sid_980313453),g)),msg_b(bob,alice,sid_980313453)))).

38. By 1, the attacker may have the channel pub.
By 37, the message concat3(dhexp(key_e(bob,alice,sid_980313453),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313453),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313453),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313256)),dhexp(key_e(bob,alice,sid_980313453),g)),msg_b(bob,alice,sid_980313453))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e(bob,alice,sid_980313453),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313453),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313453),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313256)),dhexp(key_e(bob,alice,sid_980313453),g)),msg_b(bob,alice,sid_980313453))) by listening on this channel.
attacker(concat3(dhexp(key_e(bob,alice,sid_980313453),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313453),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313453),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313256)),dhexp(key_e(bob,alice,sid_980313453),g)),msg_b(bob,alice,sid_980313453)))).

39. By 38, the attacker may know concat3(dhexp(key_e(bob,alice,sid_980313453),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313453),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313453),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313256)),dhexp(key_e(bob,alice,sid_980313453),g)),msg_b(bob,alice,sid_980313453))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_e(bob,alice,sid_980313453),g).
attacker(dhexp(key_e(bob,alice,sid_980313453),g)).

40. By 15, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
By 22, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313421).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313421)).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313421))).

41. By 40, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313421)).
By 39, the attacker may know dhexp(key_e(bob,alice,sid_980313453),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313421)),dhexp(key_e(bob,alice,sid_980313453),g)).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313421)),dhexp(key_e(bob,alice,sid_980313453),g))).

42. By 41, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313421)),dhexp(key_e(bob,alice,sid_980313453),g)).
So the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313421)),dhexp(key_e(bob,alice,sid_980313453),g)) in phase 1.
attacker_p1(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313421)),dhexp(key_e(bob,alice,sid_980313453),g))).

43. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

44. By 39, the attacker may know dhexp(key_e(bob,alice,sid_980313453),g).
So the attacker may know dhexp(key_e(bob,alice,sid_980313453),g) in phase 1.
attacker_p1(dhexp(key_e(bob,alice,sid_980313453),g)).

45. Using the function pub the attacker may obtain pub in phase 1.
attacker_p1(pub).

46. The event LeakS(phase1,alice) may be executed at {147}.
So the message key_s(alice) may be sent on channel pub in phase 1 at output {148}.
mess_p1(pub,key_s(alice)).

47. By 45, the attacker may have the channel pub in phase 1.
By 46, the message key_s(alice) in phase 1 may be sent on this channel.
So the attacker may obtain the message key_s(alice) in phase 1 by listening on this channel.
attacker_p1(key_s(alice)).

48. By 47, the attacker may know key_s(alice) in phase 1.
By 44, the attacker may know dhexp(key_e(bob,alice,sid_980313453),g) in phase 1.
Using the function dhexp the attacker may obtain dhexp(key_e(bob,alice,sid_980313453),dhexp(key_s(alice),g)) in phase 1.
attacker_p1(dhexp(key_e(bob,alice,sid_980313453),dhexp(key_s(alice),g))).

49. By 20, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)).
By 19, the attacker may know dhexp(key_s(bob),dhexp(key_s(alice),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g)))).

50. By 49, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
By 39, the attacker may know dhexp(key_e(bob,alice,sid_980313453),g).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313453),g)).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313453),g))).

51. By 50, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313453),g)).
So the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313453),g)) in phase 1.
attacker_p1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313453),g))).

52. By 51, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313453),g)) in phase 1.
By 48, the attacker may know dhexp(key_e(bob,alice,sid_980313453),dhexp(key_s(alice),g)) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313453),g)),dhexp(key_e(bob,alice,sid_980313453),dhexp(key_s(alice),g))) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313453),g)),dhexp(key_e(bob,alice,sid_980313453),dhexp(key_s(alice),g)))).

53. By 52, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313453),g)),dhexp(key_e(bob,alice,sid_980313453),dhexp(key_s(alice),g))) in phase 1.
By 43, the attacker may know minnonce in phase 1.
By 42, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313421)),dhexp(key_e(bob,alice,sid_980313453),g)) in phase 1.
By 30, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313453),g)),dhexp(key_e(bob,alice,sid_980313453),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313421)),dhexp(key_e(bob,alice,sid_980313453),g)),msg_b(bob,alice,sid_980313453)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313421)),dhexp(key_e(bob,alice,sid_980313453),g)),msg_b(bob,alice,sid_980313453)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313421)),dhexp(key_e(bob,alice,sid_980313453),g)),msg_b(bob,alice,sid_980313453))).

54. By 53, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313421)),dhexp(key_e(bob,alice,sid_980313453),g)),msg_b(bob,alice,sid_980313453)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_b(bob,alice,sid_980313453) in phase 1.
attacker_p1(msg_b(bob,alice,sid_980313453)).


RESULT attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) cannot be proved.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m))
goal reachable: attacker(m_980313456) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_980313457]),msg_b(bob,alice,sid[!1 = @sid_980313457]))) && begin(LeakS(phase0,alice)) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_980313457]),m_980313456))
Abbreviations:
sid_980313754 = sid[!1 = @sid_980313741]

1. The entry statestore(bob,alice,sid_980313754,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) may be inserted in a table at insert {311}.
table(statestore(bob,alice,sid_980313754,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false)))).

2. The attacker has some term plaintext_a_980313717.
attacker(plaintext_a_980313717).

3. Using the function g the attacker may obtain g.
attacker(g).

4. Using the function pub the attacker may obtain pub.
attacker(pub).

5. The message dhexp(key_s(bob),g) may be sent on channel pub at output {296}.
mess(pub,dhexp(key_s(bob),g)).

6. By 4, the attacker may have the channel pub.
By 5, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

7. The message dhexp(key_s(alice),g) may be sent on channel pub at output {6}.
mess(pub,dhexp(key_s(alice),g)).

8. By 4, the attacker may have the channel pub.
By 7, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

9. Using the function empty the attacker may obtain empty.
attacker(empty).

10. Using the function somename the attacker may obtain somename.
attacker(somename).

11. By 10, the attacker may know somename.
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

12. By 11, the attacker may know hash(somename,empty).
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

13. By 12, the attacker may know hash(hash(somename,empty),empty).
By 8, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

14. By 13, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

15. By 14, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 3, the attacker may know g.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g)).

16. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

17. The event LeakS(phase0,alice) may be executed at {144}.
So the message key_s(alice) may be sent on channel pub at output {145}.
mess(pub,key_s(alice)).

18. By 4, the attacker may have the channel pub.
By 17, the message key_s(alice) may be sent on this channel.
So the attacker may obtain the message key_s(alice) by listening on this channel.
attacker(key_s(alice)).

19. By 18, the attacker may know key_s(alice).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function dhexp the attacker may obtain dhexp(key_s(bob),dhexp(key_s(alice),g)).
attacker(dhexp(key_s(bob),dhexp(key_s(alice),g))).

20. By 11, the attacker may know hash(somename,empty).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)).
attacker(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g))).

21. By 20, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)).
By 19, the attacker may know dhexp(key_s(bob),dhexp(key_s(alice),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
attacker(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g)))).

22. By 21, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
By 16, the attacker may know minnonce.
By 15, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
By 2, the attacker may know plaintext_a_980313717.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)).

23. The attacker has some term b_980313712.
attacker(b_980313712).

24. By 3, the attacker may know g.
By 23, the attacker may know b_980313712.
By 22, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717).
Using the function concat3 the attacker may obtain concat3(g,b_980313712,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)).
attacker(concat3(g,b_980313712,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717))).

25. By 4, the attacker may have the channel pub.
By 24, the attacker may have the message concat3(g,b_980313712,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)).
So the attacker may send this message on this channel.
mess(pub,concat3(g,b_980313712,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717))).

26. The entry statestore(bob,alice,sid_980313754,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 1 may be read at get {347}.
The message concat3(g,b_980313712,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)) that may be sent on channel pub by 25 may be received at input {312}.
We have g <> caught-fail.
So the entry statestore(bob,alice,sid_980313754,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) may be inserted in a table at insert {346}.
table(statestore(bob,alice,sid_980313754,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false)))).

27. The entry statestore(bob,alice,sid_980313754,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) that may be in a table by 26 may be read at get {392}.
The event SendMsg(bob,alice,stagepack_b(sid_980313754),msg_b(bob,alice,sid_980313754)) may be executed at {389}.
So the entry statestore(bob,alice,sid_980313754,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)),dhexp(key_e(bob,alice,sid_980313754),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)),dhexp(key_e(bob,alice,sid_980313754),g)),msg_b(bob,alice,sid_980313754)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,alice,sid_980313754),g),key_e(bob,alice,sid_980313754)),dhexp(key_s(alice),g),g,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),zero),minnonce))) may be inserted in a table at insert {390}.
table(statestore(bob,alice,sid_980313754,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)),dhexp(key_e(bob,alice,sid_980313754),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)),dhexp(key_e(bob,alice,sid_980313754),g)),msg_b(bob,alice,sid_980313754)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,alice,sid_980313754),g),key_e(bob,alice,sid_980313754)),dhexp(key_s(alice),g),g,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),zero),minnonce)))).

28. We assume as hypothesis that
attacker(m_980313753).

29. The attacker has some term b_980313631.
attacker(b_980313631).

30. By 3, the attacker may know g.
By 29, the attacker may know b_980313631.
By 22, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717).
Using the function concat3 the attacker may obtain concat3(g,b_980313631,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)).
attacker(concat3(g,b_980313631,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717))).

31. By 4, the attacker may have the channel pub.
By 30, the attacker may have the message concat3(g,b_980313631,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)).
So the attacker may send this message on this channel.
mess(pub,concat3(g,b_980313631,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717))).

32. The entry statestore(bob,alice,sid_980313754,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 1 may be read at get {347}.
The message concat3(g,b_980313631,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)) that may be sent on channel pub by 31 may be received at input {312}.
We have g <> caught-fail.
So the entry statestore(bob,alice,sid_980313754,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) may be inserted in a table at insert {346}.
table(statestore(bob,alice,sid_980313754,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false)))).

33. The entry statestore(bob,alice,sid_980313754,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) that may be in a table by 32 may be read at get {392}.
The event SendMsg(bob,alice,stagepack_b(sid_980313754),msg_b(bob,alice,sid_980313754)) may be executed at {389}.
So the message concat3(dhexp(key_e(bob,alice,sid_980313754),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)),dhexp(key_e(bob,alice,sid_980313754),g)),msg_b(bob,alice,sid_980313754))) may be sent on channel pub at output {391}.
mess(pub,concat3(dhexp(key_e(bob,alice,sid_980313754),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)),dhexp(key_e(bob,alice,sid_980313754),g)),msg_b(bob,alice,sid_980313754)))).

34. By 4, the attacker may have the channel pub.
By 33, the message concat3(dhexp(key_e(bob,alice,sid_980313754),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)),dhexp(key_e(bob,alice,sid_980313754),g)),msg_b(bob,alice,sid_980313754))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e(bob,alice,sid_980313754),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)),dhexp(key_e(bob,alice,sid_980313754),g)),msg_b(bob,alice,sid_980313754))) by listening on this channel.
attacker(concat3(dhexp(key_e(bob,alice,sid_980313754),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)),dhexp(key_e(bob,alice,sid_980313754),g)),msg_b(bob,alice,sid_980313754)))).

35. By 34, the attacker may know concat3(dhexp(key_e(bob,alice,sid_980313754),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)),dhexp(key_e(bob,alice,sid_980313754),g)),msg_b(bob,alice,sid_980313754))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)),dhexp(key_e(bob,alice,sid_980313754),g)),msg_b(bob,alice,sid_980313754)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)),dhexp(key_e(bob,alice,sid_980313754),g)),msg_b(bob,alice,sid_980313754))).

36. The attacker has some term plaintext_a_980313533.
attacker(plaintext_a_980313533).

37. By 21, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
By 16, the attacker may know minnonce.
By 15, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
By 36, the attacker may know plaintext_a_980313533.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313533).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313533)).

38. The attacker has some term b_980313528.
attacker(b_980313528).

39. By 3, the attacker may know g.
By 38, the attacker may know b_980313528.
By 37, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313533).
Using the function concat3 the attacker may obtain concat3(g,b_980313528,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313533)).
attacker(concat3(g,b_980313528,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313533))).

40. By 4, the attacker may have the channel pub.
By 39, the attacker may have the message concat3(g,b_980313528,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313533)).
So the attacker may send this message on this channel.
mess(pub,concat3(g,b_980313528,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313533))).

41. The entry statestore(bob,alice,sid_980313754,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 1 may be read at get {347}.
The message concat3(g,b_980313528,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313533)) that may be sent on channel pub by 40 may be received at input {312}.
We have g <> caught-fail.
So the entry statestore(bob,alice,sid_980313754,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313533))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) may be inserted in a table at insert {346}.
table(statestore(bob,alice,sid_980313754,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313533))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false)))).

42. The entry statestore(bob,alice,sid_980313754,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313533))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) that may be in a table by 41 may be read at get {392}.
The event SendMsg(bob,alice,stagepack_b(sid_980313754),msg_b(bob,alice,sid_980313754)) may be executed at {389}.
So the message concat3(dhexp(key_e(bob,alice,sid_980313754),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313533)),dhexp(key_e(bob,alice,sid_980313754),g)),msg_b(bob,alice,sid_980313754))) may be sent on channel pub at output {391}.
mess(pub,concat3(dhexp(key_e(bob,alice,sid_980313754),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313533)),dhexp(key_e(bob,alice,sid_980313754),g)),msg_b(bob,alice,sid_980313754)))).

43. By 4, the attacker may have the channel pub.
By 42, the message concat3(dhexp(key_e(bob,alice,sid_980313754),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313533)),dhexp(key_e(bob,alice,sid_980313754),g)),msg_b(bob,alice,sid_980313754))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e(bob,alice,sid_980313754),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313533)),dhexp(key_e(bob,alice,sid_980313754),g)),msg_b(bob,alice,sid_980313754))) by listening on this channel.
attacker(concat3(dhexp(key_e(bob,alice,sid_980313754),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313533)),dhexp(key_e(bob,alice,sid_980313754),g)),msg_b(bob,alice,sid_980313754)))).

44. By 43, the attacker may know concat3(dhexp(key_e(bob,alice,sid_980313754),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313533)),dhexp(key_e(bob,alice,sid_980313754),g)),msg_b(bob,alice,sid_980313754))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_e(bob,alice,sid_980313754),g).
attacker(dhexp(key_e(bob,alice,sid_980313754),g)).

45. By 15, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
By 22, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717))).

46. By 45, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)).
By 44, the attacker may know dhexp(key_e(bob,alice,sid_980313754),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)),dhexp(key_e(bob,alice,sid_980313754),g)).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)),dhexp(key_e(bob,alice,sid_980313754),g))).

47. By 46, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)),dhexp(key_e(bob,alice,sid_980313754),g)).
By 35, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)),dhexp(key_e(bob,alice,sid_980313754),g)),msg_b(bob,alice,sid_980313754)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)),dhexp(key_e(bob,alice,sid_980313754),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)),dhexp(key_e(bob,alice,sid_980313754),g)),msg_b(bob,alice,sid_980313754))).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)),dhexp(key_e(bob,alice,sid_980313754),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)),dhexp(key_e(bob,alice,sid_980313754),g)),msg_b(bob,alice,sid_980313754)))).

48. Using the function zero the attacker may obtain zero.
attacker(zero).

49. By 18, the attacker may know key_s(alice).
By 44, the attacker may know dhexp(key_e(bob,alice,sid_980313754),g).
Using the function dhexp the attacker may obtain dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g)).
attacker(dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))).

50. By 20, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)).
By 19, the attacker may know dhexp(key_s(bob),dhexp(key_s(alice),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g)))).

51. By 50, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
By 44, the attacker may know dhexp(key_e(bob,alice,sid_980313754),g).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g))).

52. By 51, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)).
By 49, the attacker may know dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g)))).

53. By 52, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))).
By 48, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),zero).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),zero)).

54. By 53, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),zero).
By 16, the attacker may know minnonce.
By 47, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)),dhexp(key_e(bob,alice,sid_980313754),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)),dhexp(key_e(bob,alice,sid_980313754),g)),msg_b(bob,alice,sid_980313754))).
By 28, the attacker may know m_980313753.
Using the function encrypt the attacker may obtain encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)),dhexp(key_e(bob,alice,sid_980313754),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)),dhexp(key_e(bob,alice,sid_980313754),g)),msg_b(bob,alice,sid_980313754))),m_980313753).
attacker(encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)),dhexp(key_e(bob,alice,sid_980313754),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)),dhexp(key_e(bob,alice,sid_980313754),g)),msg_b(bob,alice,sid_980313754))),m_980313753)).

55. The attacker has some term b_980313736.
attacker(b_980313736).

56. The attacker has some term a_980313735.
attacker(a_980313735).

57. By 56, the attacker may know a_980313735.
By 55, the attacker may know b_980313736.
By 54, the attacker may know encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)),dhexp(key_e(bob,alice,sid_980313754),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)),dhexp(key_e(bob,alice,sid_980313754),g)),msg_b(bob,alice,sid_980313754))),m_980313753).
Using the function concat3 the attacker may obtain concat3(a_980313735,b_980313736,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)),dhexp(key_e(bob,alice,sid_980313754),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)),dhexp(key_e(bob,alice,sid_980313754),g)),msg_b(bob,alice,sid_980313754))),m_980313753)).
attacker(concat3(a_980313735,b_980313736,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)),dhexp(key_e(bob,alice,sid_980313754),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)),dhexp(key_e(bob,alice,sid_980313754),g)),msg_b(bob,alice,sid_980313754))),m_980313753))).

58. By 4, the attacker may have the channel pub.
By 57, the attacker may have the message concat3(a_980313735,b_980313736,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)),dhexp(key_e(bob,alice,sid_980313754),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)),dhexp(key_e(bob,alice,sid_980313754),g)),msg_b(bob,alice,sid_980313754))),m_980313753)).
So the attacker may send this message on this channel.
mess(pub,concat3(a_980313735,b_980313736,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)),dhexp(key_e(bob,alice,sid_980313754),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)),dhexp(key_e(bob,alice,sid_980313754),g)),msg_b(bob,alice,sid_980313754))),m_980313753))).

59. The entry statestore(bob,alice,sid_980313754,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)),dhexp(key_e(bob,alice,sid_980313754),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)),dhexp(key_e(bob,alice,sid_980313754),g)),msg_b(bob,alice,sid_980313754)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,alice,sid_980313754),g),key_e(bob,alice,sid_980313754)),dhexp(key_s(alice),g),g,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),zero),minnonce))) that may be in a table by 27 may be read at get {413}.
The message concat3(a_980313735,b_980313736,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)),dhexp(key_e(bob,alice,sid_980313754),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980313754),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980313754),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980313717)),dhexp(key_e(bob,alice,sid_980313754),g)),msg_b(bob,alice,sid_980313754))),m_980313753)) that may be sent on channel pub by 58 may be received at input {395}.
So event RecvMsg(bob,alice,stagepack_c(sid_980313754),m_980313753) may be executed at {411}.
end(RecvMsg(bob,alice,stagepack_c(sid_980313754),m_980313753)).


RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) cannot be proved.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1155,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: attacker(m_980313757) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_980313758]),msg_b(bob,alice,sid[!1 = @sid_980313758]))) && begin(LeakS(phase0,alice)) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_980313758]),m_980313757))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_980313761]),msg_c(alice,bob,sid[!1 = @sid_980313761]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_980313762]),msg_b(bob,alice,sid[!1 = @sid_980313762]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_980313761]),msg_a(alice,bob,sid[!1 = @sid_980313761]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_980313762]),msg_c(alice,bob,sid[!1 = @sid_980313761])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1155,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1155,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: attacker(m_980313777) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_980313778]),msg_b(bob,alice,sid[!1 = @sid_980313778]))) && begin(LeakS(phase0,alice)) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_980313778]),m_980313777))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_980313781]),msg_c(alice,bob,sid[!1 = @sid_980313781]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_980313782]),msg_b(bob,alice,sid[!1 = @sid_980313782]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_980313781]),msg_a(alice,bob,sid[!1 = @sid_980313781]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_980313782]),msg_c(alice,bob,sid[!1 = @sid_980313781])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1155,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: attacker(m_980313797) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_980313798]),msg_b(bob,alice,sid[!1 = @sid_980313798]))) && begin(LeakS(phase0,alice)) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_980313798]),m_980313797))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_980313801]),msg_c(alice,bob,sid[!1 = @sid_980313801]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_980313802]),msg_b(bob,alice,sid[!1 = @sid_980313802]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_980313801]),msg_a(alice,bob,sid[!1 = @sid_980313801]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_980313802]),msg_c(alice,bob,sid[!1 = @sid_980313801])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: attacker(m_980313816) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_980313817]),msg_b(bob,alice,sid[!1 = @sid_980313817]))) && begin(LeakS(phase0,alice)) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_980313817]),m_980313816))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_980313820]),msg_c(alice,bob,sid[!1 = @sid_980313820]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_980313821]),msg_b(bob,alice,sid[!1 = @sid_980313821]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_980313820]),msg_a(alice,bob,sid[!1 = @sid_980313820]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_980313821]),msg_c(alice,bob,sid[!1 = @sid_980313820])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query not attacker_p1(msg_c(alice,bob,sid_a))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_980313835]),msg_c(alice,bob,sid[!1 = @sid_980313835]))) && begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_980313835]),msg_a(alice,bob,sid[!1 = @sid_980313835]))) -> attacker_p1(msg_c(alice,bob,sid[!1 = @sid_980313835]))
Abbreviations:
sid_980314067 = sid[!1 = @sid_980314039]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_980314067,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {21}.
table(statestore(alice,bob,sid_980314067,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

3. The entry statestore(alice,bob,sid_980314067,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 2 may be read at get {58}.
The event SendMsg(alice,bob,stagepack_a(sid_980314067),msg_a(alice,bob,sid_980314067)) may be executed at {55}.
So the entry statestore(alice,bob,sid_980314067,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_e(alice,bob,sid_980314067),g),key_e(alice,bob,sid_980314067)),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {56}.
table(statestore(alice,bob,sid_980314067,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_e(alice,bob,sid_980314067),g),key_e(alice,bob,sid_980314067)),dhexp(key_s(bob),g),empty,empty,true)))).

4. The attacker has some term plaintext_b_980314030.
attacker(plaintext_b_980314030).

5. Using the function g the attacker may obtain g.
attacker(g).

6. The entry statestore(alice,bob,sid_980314067,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 2 may be read at get {58}.
The event SendMsg(alice,bob,stagepack_a(sid_980314067),msg_a(alice,bob,sid_980314067)) may be executed at {55}.
So the message concat3(dhexp(key_e(alice,bob,sid_980314067),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))) may be sent on channel pub at output {57}.
mess(pub,concat3(dhexp(key_e(alice,bob,sid_980314067),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067)))).

7. By 1, the attacker may have the channel pub.
By 6, the message concat3(dhexp(key_e(alice,bob,sid_980314067),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e(alice,bob,sid_980314067),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))) by listening on this channel.
attacker(concat3(dhexp(key_e(alice,bob,sid_980314067),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067)))).

8. By 7, the attacker may know concat3(dhexp(key_e(alice,bob,sid_980314067),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067)).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))).

9. The entry statestore(alice,bob,sid_980314067,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 2 may be read at get {58}.
The event SendMsg(alice,bob,stagepack_a(sid_980314067),msg_a(alice,bob,sid_980314067)) may be executed at {55}.
So the message concat3(dhexp(key_e(alice,bob,sid_980314067),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980314067),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))) may be sent on channel pub at output {57}.
mess(pub,concat3(dhexp(key_e(alice,bob,sid_980314067),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980314067),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067)))).

10. By 1, the attacker may have the channel pub.
By 9, the message concat3(dhexp(key_e(alice,bob,sid_980314067),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980314067),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e(alice,bob,sid_980314067),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980314067),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))) by listening on this channel.
attacker(concat3(dhexp(key_e(alice,bob,sid_980314067),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980314067),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067)))).

11. By 10, the attacker may know concat3(dhexp(key_e(alice,bob,sid_980314067),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980314067),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_e(alice,bob,sid_980314067),g).
attacker(dhexp(key_e(alice,bob,sid_980314067),g)).

12. The message dhexp(key_s(bob),g) may be sent on channel pub at output {296}.
mess(pub,dhexp(key_s(bob),g)).

13. By 1, the attacker may have the channel pub.
By 12, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

14. The message dhexp(key_s(alice),g) may be sent on channel pub at output {6}.
mess(pub,dhexp(key_s(alice),g)).

15. By 1, the attacker may have the channel pub.
By 14, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

16. Using the function empty the attacker may obtain empty.
attacker(empty).

17. Using the function somename the attacker may obtain somename.
attacker(somename).

18. By 17, the attacker may know somename.
By 16, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

19. By 18, the attacker may know hash(somename,empty).
By 16, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

20. By 19, the attacker may know hash(hash(somename,empty),empty).
By 15, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

21. By 20, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 13, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

22. By 21, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 11, the attacker may know dhexp(key_e(alice,bob,sid_980314067),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g))).

23. By 22, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)).
By 8, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067)))).

24. By 23, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))).
By 5, the attacker may know g.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g)).

25. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

26. The event LeakS(phase0,bob) may be executed at {433}.
So the message key_s(bob) may be sent on channel pub at output {434}.
mess(pub,key_s(bob)).

27. By 1, the attacker may have the channel pub.
By 26, the message key_s(bob) may be sent on this channel.
So the attacker may obtain the message key_s(bob) by listening on this channel.
attacker(key_s(bob)).

28. By 27, the attacker may know key_s(bob).
By 15, the attacker may know dhexp(key_s(alice),g).
Using the function dhexp the attacker may obtain dhexp(key_s(bob),dhexp(key_s(alice),g)).
attacker(dhexp(key_s(bob),dhexp(key_s(alice),g))).

29. By 27, the attacker may know key_s(bob).
By 11, the attacker may know dhexp(key_e(alice,bob,sid_980314067),g).
Using the function dhexp the attacker may obtain dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g)).
attacker(dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))).

30. By 18, the attacker may know hash(somename,empty).
By 29, the attacker may know dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))).
attacker(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g)))).

31. By 30, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))).
By 28, the attacker may know dhexp(key_s(bob),dhexp(key_s(alice),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g)))).

32. By 31, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))).
By 11, the attacker may know dhexp(key_e(alice,bob,sid_980314067),g).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g))).

33. By 32, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)).
By 15, the attacker may know dhexp(key_s(alice),g).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)).
attacker(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g))).

34. By 33, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)).
By 25, the attacker may know minnonce.
By 24, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g).
By 4, the attacker may know plaintext_b_980314030.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),plaintext_b_980314030).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),plaintext_b_980314030)).

35. The attacker has some term b_980314025.
attacker(b_980314025).

36. By 5, the attacker may know g.
By 35, the attacker may know b_980314025.
By 34, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),plaintext_b_980314030).
Using the function concat3 the attacker may obtain concat3(g,b_980314025,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),plaintext_b_980314030)).
attacker(concat3(g,b_980314025,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),plaintext_b_980314030))).

37. By 1, the attacker may have the channel pub.
By 36, the attacker may have the message concat3(g,b_980314025,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),plaintext_b_980314030)).
So the attacker may send this message on this channel.
mess(pub,concat3(g,b_980314025,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),plaintext_b_980314030))).

38. The entry statestore(alice,bob,sid_980314067,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_e(alice,bob,sid_980314067),g),key_e(alice,bob,sid_980314067)),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 3 may be read at get {102}.
The message concat3(g,b_980314025,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),plaintext_b_980314030)) that may be sent on channel pub by 37 may be received at input {59}.
We have g <> caught-fail.
So the entry statestore(alice,bob,sid_980314067,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),plaintext_b_980314030))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_e(alice,bob,sid_980314067),g),key_e(alice,bob,sid_980314067)),dhexp(key_s(bob),g),g,empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),zero),minnonce))) may be inserted in a table at insert {101}.
table(statestore(alice,bob,sid_980314067,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),plaintext_b_980314030))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_e(alice,bob,sid_980314067),g),key_e(alice,bob,sid_980314067)),dhexp(key_s(bob),g),g,empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),zero),minnonce)))).

39. The entry statestore(alice,bob,sid_980314067,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),plaintext_b_980314030))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_e(alice,bob,sid_980314067),g),key_e(alice,bob,sid_980314067)),dhexp(key_s(bob),g),g,empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),zero),minnonce))) that may be in a table by 38 may be read at get {122}.
The event SendMsg(alice,bob,stagepack_c(sid_980314067),msg_c(alice,bob,sid_980314067)) may be executed at {119}.
So the message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),plaintext_b_980314030)),msg_c(alice,bob,sid_980314067))) may be sent on channel pub at output {121}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),plaintext_b_980314030)),msg_c(alice,bob,sid_980314067)))).

40. By 1, the attacker may have the channel pub.
By 39, the message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),plaintext_b_980314030)),msg_c(alice,bob,sid_980314067))) may be sent on this channel.
So the attacker may obtain the message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),plaintext_b_980314030)),msg_c(alice,bob,sid_980314067))) by listening on this channel.
attacker(concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),plaintext_b_980314030)),msg_c(alice,bob,sid_980314067)))).

41. By 40, the attacker may know concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),plaintext_b_980314030)),msg_c(alice,bob,sid_980314067))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),plaintext_b_980314030)),msg_c(alice,bob,sid_980314067)).
attacker(encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),plaintext_b_980314030)),msg_c(alice,bob,sid_980314067))).

42. By 24, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g).
By 34, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),plaintext_b_980314030).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),plaintext_b_980314030)).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),plaintext_b_980314030))).

43. Using the function zero the attacker may obtain zero.
attacker(zero).

44. By 32, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)).
By 15, the attacker may know dhexp(key_s(alice),g).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g))).

45. By 44, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)).
By 43, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),zero).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),zero)).

46. By 45, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),zero).
By 25, the attacker may know minnonce.
By 42, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),plaintext_b_980314030)).
By 41, the attacker may know encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),plaintext_b_980314030)),msg_c(alice,bob,sid_980314067)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),plaintext_b_980314030)),msg_c(alice,bob,sid_980314067)).
attacker(aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),plaintext_b_980314030)),msg_c(alice,bob,sid_980314067))).

47. By 46, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314067),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314067),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314067),g)),msg_a(alice,bob,sid_980314067))),g),plaintext_b_980314030)),msg_c(alice,bob,sid_980314067)).
Using the function 3-proj-aeadpack the attacker may obtain msg_c(alice,bob,sid_980314067).
attacker(msg_c(alice,bob,sid_980314067)).

48. By 47, the attacker may know msg_c(alice,bob,sid_980314067).
So the attacker may know msg_c(alice,bob,sid_980314067) in phase 1.
attacker_p1(msg_c(alice,bob,sid_980314067)).


RESULT not attacker_p1(msg_c(alice,bob,sid_a)) cannot be proved.
Starting query attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_980314070]),msg_c(alice,bob,sid[!1 = @sid_980314070]))) && begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_980314070]),msg_a(alice,bob,sid[!1 = @sid_980314070]))) -> attacker_p1(msg_c(alice,bob,sid[!1 = @sid_980314070]))
RESULT attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob)) is true.
Starting query attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice)))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_980314075]),msg_c(alice,bob,sid[!1 = @sid_980314075]))) && begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_980314075]),msg_a(alice,bob,sid[!1 = @sid_980314075]))) -> attacker_p1(msg_c(alice,bob,sid[!1 = @sid_980314075]))
RESULT attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice))) is true.
Starting query attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_980314081]),msg_c(alice,bob,sid[!1 = @sid_980314081]))) && begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_980314081]),msg_a(alice,bob,sid[!1 = @sid_980314081]))) -> attacker_p1(msg_c(alice,bob,sid[!1 = @sid_980314081]))
RESULT attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m))
goal reachable: attacker(m_980314086) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_980314087]),msg_c(alice,bob,sid[!1 = @sid_980314087]))) && begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_980314087]),msg_a(alice,bob,sid[!1 = @sid_980314087]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_980314087]),m_980314086))
Abbreviations:
sid_980314489 = sid[!1 = @sid_980314476]

1. The entry statestore(alice,bob,sid_980314489,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {21}.
table(statestore(alice,bob,sid_980314489,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

2. The entry statestore(alice,bob,sid_980314489,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 1 may be read at get {58}.
The event SendMsg(alice,bob,stagepack_a(sid_980314489),msg_a(alice,bob,sid_980314489)) may be executed at {55}.
So the entry statestore(alice,bob,sid_980314489,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_e(alice,bob,sid_980314489),g),key_e(alice,bob,sid_980314489)),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {56}.
table(statestore(alice,bob,sid_980314489,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_e(alice,bob,sid_980314489),g),key_e(alice,bob,sid_980314489)),dhexp(key_s(bob),g),empty,empty,true)))).

3. The attacker has some term plaintext_b_980314447.
attacker(plaintext_b_980314447).

4. Using the function g the attacker may obtain g.
attacker(g).

5. Using the function pub the attacker may obtain pub.
attacker(pub).

6. The entry statestore(alice,bob,sid_980314489,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 1 may be read at get {58}.
The event SendMsg(alice,bob,stagepack_a(sid_980314489),msg_a(alice,bob,sid_980314489)) may be executed at {55}.
So the message concat3(dhexp(key_e(alice,bob,sid_980314489),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))) may be sent on channel pub at output {57}.
mess(pub,concat3(dhexp(key_e(alice,bob,sid_980314489),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489)))).

7. By 5, the attacker may have the channel pub.
By 6, the message concat3(dhexp(key_e(alice,bob,sid_980314489),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e(alice,bob,sid_980314489),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))) by listening on this channel.
attacker(concat3(dhexp(key_e(alice,bob,sid_980314489),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489)))).

8. By 7, the attacker may know concat3(dhexp(key_e(alice,bob,sid_980314489),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489)).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))).

9. The entry statestore(alice,bob,sid_980314489,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 1 may be read at get {58}.
The event SendMsg(alice,bob,stagepack_a(sid_980314489),msg_a(alice,bob,sid_980314489)) may be executed at {55}.
So the message concat3(dhexp(key_e(alice,bob,sid_980314489),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980314489),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))) may be sent on channel pub at output {57}.
mess(pub,concat3(dhexp(key_e(alice,bob,sid_980314489),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980314489),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489)))).

10. By 5, the attacker may have the channel pub.
By 9, the message concat3(dhexp(key_e(alice,bob,sid_980314489),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980314489),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e(alice,bob,sid_980314489),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980314489),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))) by listening on this channel.
attacker(concat3(dhexp(key_e(alice,bob,sid_980314489),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980314489),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489)))).

11. By 10, the attacker may know concat3(dhexp(key_e(alice,bob,sid_980314489),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_980314489),dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_e(alice,bob,sid_980314489),g).
attacker(dhexp(key_e(alice,bob,sid_980314489),g)).

12. The message dhexp(key_s(bob),g) may be sent on channel pub at output {296}.
mess(pub,dhexp(key_s(bob),g)).

13. By 5, the attacker may have the channel pub.
By 12, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

14. The message dhexp(key_s(alice),g) may be sent on channel pub at output {6}.
mess(pub,dhexp(key_s(alice),g)).

15. By 5, the attacker may have the channel pub.
By 14, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

16. Using the function empty the attacker may obtain empty.
attacker(empty).

17. Using the function somename the attacker may obtain somename.
attacker(somename).

18. By 17, the attacker may know somename.
By 16, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

19. By 18, the attacker may know hash(somename,empty).
By 16, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

20. By 19, the attacker may know hash(hash(somename,empty),empty).
By 15, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

21. By 20, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 13, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

22. By 21, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 11, the attacker may know dhexp(key_e(alice,bob,sid_980314489),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g))).

23. By 22, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)).
By 8, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489)))).

24. By 23, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))).
By 4, the attacker may know g.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g)).

25. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

26. The event LeakS(phase0,bob) may be executed at {433}.
So the message key_s(bob) may be sent on channel pub at output {434}.
mess(pub,key_s(bob)).

27. By 5, the attacker may have the channel pub.
By 26, the message key_s(bob) may be sent on this channel.
So the attacker may obtain the message key_s(bob) by listening on this channel.
attacker(key_s(bob)).

28. By 27, the attacker may know key_s(bob).
By 15, the attacker may know dhexp(key_s(alice),g).
Using the function dhexp the attacker may obtain dhexp(key_s(bob),dhexp(key_s(alice),g)).
attacker(dhexp(key_s(bob),dhexp(key_s(alice),g))).

29. By 27, the attacker may know key_s(bob).
By 11, the attacker may know dhexp(key_e(alice,bob,sid_980314489),g).
Using the function dhexp the attacker may obtain dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g)).
attacker(dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))).

30. By 18, the attacker may know hash(somename,empty).
By 29, the attacker may know dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))).
attacker(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g)))).

31. By 30, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))).
By 28, the attacker may know dhexp(key_s(bob),dhexp(key_s(alice),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g)))).

32. By 31, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))).
By 11, the attacker may know dhexp(key_e(alice,bob,sid_980314489),g).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g))).

33. By 32, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)).
By 15, the attacker may know dhexp(key_s(alice),g).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)).
attacker(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g))).

34. By 33, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)).
By 25, the attacker may know minnonce.
By 24, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g).
By 3, the attacker may know plaintext_b_980314447.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)).

35. The attacker has some term b_980314442.
attacker(b_980314442).

36. By 4, the attacker may know g.
By 35, the attacker may know b_980314442.
By 34, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447).
Using the function concat3 the attacker may obtain concat3(g,b_980314442,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)).
attacker(concat3(g,b_980314442,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447))).

37. By 5, the attacker may have the channel pub.
By 36, the attacker may have the message concat3(g,b_980314442,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)).
So the attacker may send this message on this channel.
mess(pub,concat3(g,b_980314442,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447))).

38. The entry statestore(alice,bob,sid_980314489,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_e(alice,bob,sid_980314489),g),key_e(alice,bob,sid_980314489)),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 2 may be read at get {102}.
The message concat3(g,b_980314442,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)) that may be sent on channel pub by 37 may be received at input {59}.
We have g <> caught-fail.
So the entry statestore(alice,bob,sid_980314489,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_e(alice,bob,sid_980314489),g),key_e(alice,bob,sid_980314489)),dhexp(key_s(bob),g),g,empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce))) may be inserted in a table at insert {101}.
table(statestore(alice,bob,sid_980314489,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_e(alice,bob,sid_980314489),g),key_e(alice,bob,sid_980314489)),dhexp(key_s(bob),g),g,empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce)))).

39. The entry statestore(alice,bob,sid_980314489,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_e(alice,bob,sid_980314489),g),key_e(alice,bob,sid_980314489)),dhexp(key_s(bob),g),g,empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce))) that may be in a table by 38 may be read at get {122}.
The event SendMsg(alice,bob,stagepack_c(sid_980314489),msg_c(alice,bob,sid_980314489)) may be executed at {119}.
So the entry statestore(alice,bob,sid_980314489,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)),msg_c(alice,bob,sid_980314489)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_e(alice,bob,sid_980314489),g),key_e(alice,bob,sid_980314489)),dhexp(key_s(bob),g),g,empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce))) may be inserted in a table at insert {120}.
table(statestore(alice,bob,sid_980314489,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)),msg_c(alice,bob,sid_980314489)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_e(alice,bob,sid_980314489),g),key_e(alice,bob,sid_980314489)),dhexp(key_s(bob),g),g,empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce)))).

40. We assume as hypothesis that
attacker(m_980314488).

41. The attacker has some term b_980314290.
attacker(b_980314290).

42. By 4, the attacker may know g.
By 41, the attacker may know b_980314290.
By 34, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447).
Using the function concat3 the attacker may obtain concat3(g,b_980314290,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)).
attacker(concat3(g,b_980314290,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447))).

43. By 5, the attacker may have the channel pub.
By 42, the attacker may have the message concat3(g,b_980314290,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)).
So the attacker may send this message on this channel.
mess(pub,concat3(g,b_980314290,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447))).

44. The entry statestore(alice,bob,sid_980314489,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_e(alice,bob,sid_980314489),g),key_e(alice,bob,sid_980314489)),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 2 may be read at get {102}.
The message concat3(g,b_980314290,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)) that may be sent on channel pub by 43 may be received at input {59}.
We have g <> caught-fail.
So the entry statestore(alice,bob,sid_980314489,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_e(alice,bob,sid_980314489),g),key_e(alice,bob,sid_980314489)),dhexp(key_s(bob),g),g,empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce))) may be inserted in a table at insert {101}.
table(statestore(alice,bob,sid_980314489,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_e(alice,bob,sid_980314489),g),key_e(alice,bob,sid_980314489)),dhexp(key_s(bob),g),g,empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce)))).

45. The entry statestore(alice,bob,sid_980314489,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_e(alice,bob,sid_980314489),g),key_e(alice,bob,sid_980314489)),dhexp(key_s(bob),g),g,empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce))) that may be in a table by 44 may be read at get {122}.
The event SendMsg(alice,bob,stagepack_c(sid_980314489),msg_c(alice,bob,sid_980314489)) may be executed at {119}.
So the message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)),msg_c(alice,bob,sid_980314489))) may be sent on channel pub at output {121}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)),msg_c(alice,bob,sid_980314489)))).

46. By 5, the attacker may have the channel pub.
By 45, the message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)),msg_c(alice,bob,sid_980314489))) may be sent on this channel.
So the attacker may obtain the message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)),msg_c(alice,bob,sid_980314489))) by listening on this channel.
attacker(concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)),msg_c(alice,bob,sid_980314489)))).

47. By 46, the attacker may know concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)),msg_c(alice,bob,sid_980314489))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)),msg_c(alice,bob,sid_980314489)).
attacker(encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)),msg_c(alice,bob,sid_980314489))).

48. By 24, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g).
By 34, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447))).

49. By 48, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)).
By 47, the attacker may know encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)),msg_c(alice,bob,sid_980314489)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)),msg_c(alice,bob,sid_980314489))).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)),msg_c(alice,bob,sid_980314489)))).

50. Using the function zero the attacker may obtain zero.
attacker(zero).

51. By 32, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)).
By 15, the attacker may know dhexp(key_s(alice),g).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g))).

52. By 51, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)).
By 50, the attacker may know zero.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero).
attacker(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero)).

53. By 52, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero).
By 25, the attacker may know minnonce.
By 49, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)),msg_c(alice,bob,sid_980314489))).
By 40, the attacker may know m_980314488.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)),msg_c(alice,bob,sid_980314489))),m_980314488).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)),msg_c(alice,bob,sid_980314489))),m_980314488)).

54. The attacker has some term b_980314471.
attacker(b_980314471).

55. The attacker has some term a_980314470.
attacker(a_980314470).

56. By 55, the attacker may know a_980314470.
By 54, the attacker may know b_980314471.
By 53, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)),msg_c(alice,bob,sid_980314489))),m_980314488).
Using the function concat3 the attacker may obtain concat3(a_980314470,b_980314471,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)),msg_c(alice,bob,sid_980314489))),m_980314488)).
attacker(concat3(a_980314470,b_980314471,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)),msg_c(alice,bob,sid_980314489))),m_980314488))).

57. By 5, the attacker may have the channel pub.
By 56, the attacker may have the message concat3(a_980314470,b_980314471,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)),msg_c(alice,bob,sid_980314489))),m_980314488)).
So the attacker may send this message on this channel.
mess(pub,concat3(a_980314470,b_980314471,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)),msg_c(alice,bob,sid_980314489))),m_980314488))).

58. The entry statestore(alice,bob,sid_980314489,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)),msg_c(alice,bob,sid_980314489)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_e(alice,bob,sid_980314489),g),key_e(alice,bob,sid_980314489)),dhexp(key_s(bob),g),g,empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce))) that may be in a table by 39 may be read at get {143}.
The message concat3(a_980314470,b_980314471,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(alice,bob,sid_980314489),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_980314489),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_e(alice,bob,sid_980314489),g)),msg_a(alice,bob,sid_980314489))),g),plaintext_b_980314447)),msg_c(alice,bob,sid_980314489))),m_980314488)) that may be sent on channel pub by 57 may be received at input {125}.
So event RecvMsg(alice,bob,stagepack_d(sid_980314489),m_980314488) may be executed at {141}.
end(RecvMsg(alice,bob,stagepack_d(sid_980314489),m_980314488)).


RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1155,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: attacker(m_980314492) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_980314493]),msg_c(alice,bob,sid[!1 = @sid_980314493]))) && begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_980314493]),msg_a(alice,bob,sid[!1 = @sid_980314493]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_980314493]),m_980314492))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_980314496]),msg_d(bob,alice,sid[!1 = @sid_980314496]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_980314497]),msg_c(alice,bob,sid[!1 = @sid_980314497]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_980314496]),msg_b(bob,alice,sid[!1 = @sid_980314496]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_980314497]),msg_a(alice,bob,sid[!1 = @sid_980314497]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_980314497]),msg_d(bob,alice,sid[!1 = @sid_980314496])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1155,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1155,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob))
goal reachable: attacker(m_980314512) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_980314513]),msg_c(alice,bob,sid[!1 = @sid_980314513]))) && begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_980314513]),msg_a(alice,bob,sid[!1 = @sid_980314513]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_980314513]),m_980314512))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_980314516]),msg_d(bob,alice,sid[!1 = @sid_980314516]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_980314517]),msg_c(alice,bob,sid[!1 = @sid_980314517]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_980314516]),msg_b(bob,alice,sid[!1 = @sid_980314516]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_980314517]),msg_a(alice,bob,sid[!1 = @sid_980314517]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_980314517]),msg_d(bob,alice,sid[!1 = @sid_980314516])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1155,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: attacker(m_980314532) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_980314533]),msg_c(alice,bob,sid[!1 = @sid_980314533]))) && begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_980314533]),msg_a(alice,bob,sid[!1 = @sid_980314533]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_980314533]),m_980314532))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_980314536]),msg_d(bob,alice,sid[!1 = @sid_980314536]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_980314537]),msg_c(alice,bob,sid[!1 = @sid_980314537]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_980314536]),msg_b(bob,alice,sid[!1 = @sid_980314536]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_980314537]),msg_a(alice,bob,sid[!1 = @sid_980314537]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_980314537]),msg_d(bob,alice,sid[!1 = @sid_980314536])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob))
goal reachable: attacker(m_980314551) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_980314552]),msg_c(alice,bob,sid[!1 = @sid_980314552]))) && begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_980314552]),msg_a(alice,bob,sid[!1 = @sid_980314552]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_980314552]),m_980314551))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_980314555]),msg_d(bob,alice,sid[!1 = @sid_980314555]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_980314556]),msg_c(alice,bob,sid[!1 = @sid_980314556]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_980314555]),msg_b(bob,alice,sid[!1 = @sid_980314555]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_980314556]),msg_a(alice,bob,sid[!1 = @sid_980314556]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_980314556]),msg_d(bob,alice,sid[!1 = @sid_980314555])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) is true.
Starting query not attacker_p1(msg_d(bob,alice,sid_b))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_980314570]),msg_d(bob,alice,sid[!1 = @sid_980314570]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_980314570]),msg_b(bob,alice,sid[!1 = @sid_980314570]))) && begin(LeakS(phase0,alice)) -> attacker_p1(msg_d(bob,alice,sid[!1 = @sid_980314570]))
Abbreviations:
sid_980315076 = sid[!1 = @sid_980315048]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(bob,alice,sid_980315076,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) may be inserted in a table at insert {311}.
table(statestore(bob,alice,sid_980315076,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false)))).

3. The attacker has some term plaintext_a_980315013.
attacker(plaintext_a_980315013).

4. Using the function g the attacker may obtain g.
attacker(g).

5. The message dhexp(key_s(bob),g) may be sent on channel pub at output {296}.
mess(pub,dhexp(key_s(bob),g)).

6. By 1, the attacker may have the channel pub.
By 5, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

7. The message dhexp(key_s(alice),g) may be sent on channel pub at output {6}.
mess(pub,dhexp(key_s(alice),g)).

8. By 1, the attacker may have the channel pub.
By 7, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

9. Using the function empty the attacker may obtain empty.
attacker(empty).

10. Using the function somename the attacker may obtain somename.
attacker(somename).

11. By 10, the attacker may know somename.
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

12. By 11, the attacker may know hash(somename,empty).
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

13. By 12, the attacker may know hash(hash(somename,empty),empty).
By 8, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

14. By 13, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

15. By 14, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 4, the attacker may know g.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g)).

16. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

17. The event LeakS(phase0,alice) may be executed at {144}.
So the message key_s(alice) may be sent on channel pub at output {145}.
mess(pub,key_s(alice)).

18. By 1, the attacker may have the channel pub.
By 17, the message key_s(alice) may be sent on this channel.
So the attacker may obtain the message key_s(alice) by listening on this channel.
attacker(key_s(alice)).

19. By 18, the attacker may know key_s(alice).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function dhexp the attacker may obtain dhexp(key_s(bob),dhexp(key_s(alice),g)).
attacker(dhexp(key_s(bob),dhexp(key_s(alice),g))).

20. By 11, the attacker may know hash(somename,empty).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)).
attacker(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g))).

21. By 20, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)).
By 19, the attacker may know dhexp(key_s(bob),dhexp(key_s(alice),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
attacker(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g)))).

22. By 21, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
By 16, the attacker may know minnonce.
By 15, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
By 3, the attacker may know plaintext_a_980315013.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)).

23. The attacker has some term b_980315008.
attacker(b_980315008).

24. By 4, the attacker may know g.
By 23, the attacker may know b_980315008.
By 22, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013).
Using the function concat3 the attacker may obtain concat3(g,b_980315008,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)).
attacker(concat3(g,b_980315008,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013))).

25. By 1, the attacker may have the channel pub.
By 24, the attacker may have the message concat3(g,b_980315008,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)).
So the attacker may send this message on this channel.
mess(pub,concat3(g,b_980315008,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013))).

26. The entry statestore(bob,alice,sid_980315076,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 2 may be read at get {347}.
The message concat3(g,b_980315008,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)) that may be sent on channel pub by 25 may be received at input {312}.
We have g <> caught-fail.
So the entry statestore(bob,alice,sid_980315076,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) may be inserted in a table at insert {346}.
table(statestore(bob,alice,sid_980315076,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false)))).

27. The entry statestore(bob,alice,sid_980315076,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) that may be in a table by 26 may be read at get {392}.
The event SendMsg(bob,alice,stagepack_b(sid_980315076),msg_b(bob,alice,sid_980315076)) may be executed at {389}.
So the entry statestore(bob,alice,sid_980315076,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,alice,sid_980315076),g),key_e(bob,alice,sid_980315076)),dhexp(key_s(alice),g),g,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce))) may be inserted in a table at insert {390}.
table(statestore(bob,alice,sid_980315076,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,alice,sid_980315076),g),key_e(bob,alice,sid_980315076)),dhexp(key_s(alice),g),g,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce)))).

28. The attacker has some term plaintext_c_980315036.
attacker(plaintext_c_980315036).

29. The attacker has some term b_980314927.
attacker(b_980314927).

30. By 4, the attacker may know g.
By 29, the attacker may know b_980314927.
By 22, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013).
Using the function concat3 the attacker may obtain concat3(g,b_980314927,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)).
attacker(concat3(g,b_980314927,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013))).

31. By 1, the attacker may have the channel pub.
By 30, the attacker may have the message concat3(g,b_980314927,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)).
So the attacker may send this message on this channel.
mess(pub,concat3(g,b_980314927,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013))).

32. The entry statestore(bob,alice,sid_980315076,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 2 may be read at get {347}.
The message concat3(g,b_980314927,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)) that may be sent on channel pub by 31 may be received at input {312}.
We have g <> caught-fail.
So the entry statestore(bob,alice,sid_980315076,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) may be inserted in a table at insert {346}.
table(statestore(bob,alice,sid_980315076,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false)))).

33. The entry statestore(bob,alice,sid_980315076,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) that may be in a table by 32 may be read at get {392}.
The event SendMsg(bob,alice,stagepack_b(sid_980315076),msg_b(bob,alice,sid_980315076)) may be executed at {389}.
So the message concat3(dhexp(key_e(bob,alice,sid_980315076),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))) may be sent on channel pub at output {391}.
mess(pub,concat3(dhexp(key_e(bob,alice,sid_980315076),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076)))).

34. By 1, the attacker may have the channel pub.
By 33, the message concat3(dhexp(key_e(bob,alice,sid_980315076),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e(bob,alice,sid_980315076),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))) by listening on this channel.
attacker(concat3(dhexp(key_e(bob,alice,sid_980315076),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076)))).

35. By 34, the attacker may know concat3(dhexp(key_e(bob,alice,sid_980315076),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))).

36. The attacker has some term plaintext_a_980314829.
attacker(plaintext_a_980314829).

37. By 21, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
By 16, the attacker may know minnonce.
By 15, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
By 36, the attacker may know plaintext_a_980314829.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980314829).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980314829)).

38. The attacker has some term b_980314824.
attacker(b_980314824).

39. By 4, the attacker may know g.
By 38, the attacker may know b_980314824.
By 37, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980314829).
Using the function concat3 the attacker may obtain concat3(g,b_980314824,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980314829)).
attacker(concat3(g,b_980314824,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980314829))).

40. By 1, the attacker may have the channel pub.
By 39, the attacker may have the message concat3(g,b_980314824,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980314829)).
So the attacker may send this message on this channel.
mess(pub,concat3(g,b_980314824,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980314829))).

41. The entry statestore(bob,alice,sid_980315076,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 2 may be read at get {347}.
The message concat3(g,b_980314824,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980314829)) that may be sent on channel pub by 40 may be received at input {312}.
We have g <> caught-fail.
So the entry statestore(bob,alice,sid_980315076,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980314829))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) may be inserted in a table at insert {346}.
table(statestore(bob,alice,sid_980315076,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980314829))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false)))).

42. The entry statestore(bob,alice,sid_980315076,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980314829))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) that may be in a table by 41 may be read at get {392}.
The event SendMsg(bob,alice,stagepack_b(sid_980315076),msg_b(bob,alice,sid_980315076)) may be executed at {389}.
So the message concat3(dhexp(key_e(bob,alice,sid_980315076),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980314829)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))) may be sent on channel pub at output {391}.
mess(pub,concat3(dhexp(key_e(bob,alice,sid_980315076),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980314829)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076)))).

43. By 1, the attacker may have the channel pub.
By 42, the message concat3(dhexp(key_e(bob,alice,sid_980315076),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980314829)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e(bob,alice,sid_980315076),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980314829)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))) by listening on this channel.
attacker(concat3(dhexp(key_e(bob,alice,sid_980315076),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980314829)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076)))).

44. By 43, the attacker may know concat3(dhexp(key_e(bob,alice,sid_980315076),g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980314829)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_e(bob,alice,sid_980315076),g).
attacker(dhexp(key_e(bob,alice,sid_980315076),g)).

45. By 15, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
By 22, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013))).

46. By 45, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)).
By 44, the attacker may know dhexp(key_e(bob,alice,sid_980315076),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g))).

47. By 46, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)).
By 35, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076)))).

48. Using the function zero the attacker may obtain zero.
attacker(zero).

49. By 18, the attacker may know key_s(alice).
By 44, the attacker may know dhexp(key_e(bob,alice,sid_980315076),g).
Using the function dhexp the attacker may obtain dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g)).
attacker(dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))).

50. By 20, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)).
By 19, the attacker may know dhexp(key_s(bob),dhexp(key_s(alice),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g)))).

51. By 50, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
By 44, the attacker may know dhexp(key_e(bob,alice,sid_980315076),g).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g))).

52. By 51, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)).
By 49, the attacker may know dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g)))).

53. By 52, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))).
By 48, the attacker may know zero.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero)).

54. By 53, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero).
By 16, the attacker may know minnonce.
By 47, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))).
By 28, the attacker may know plaintext_c_980315036.
Using the function encrypt the attacker may obtain encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),plaintext_c_980315036).
attacker(encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),plaintext_c_980315036)).

55. The attacker has some term b_980315032.
attacker(b_980315032).

56. The attacker has some term a_980315031.
attacker(a_980315031).

57. By 56, the attacker may know a_980315031.
By 55, the attacker may know b_980315032.
By 54, the attacker may know encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),plaintext_c_980315036).
Using the function concat3 the attacker may obtain concat3(a_980315031,b_980315032,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),plaintext_c_980315036)).
attacker(concat3(a_980315031,b_980315032,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),plaintext_c_980315036))).

58. By 1, the attacker may have the channel pub.
By 57, the attacker may have the message concat3(a_980315031,b_980315032,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),plaintext_c_980315036)).
So the attacker may send this message on this channel.
mess(pub,concat3(a_980315031,b_980315032,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),plaintext_c_980315036))).

59. The entry statestore(bob,alice,sid_980315076,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,alice,sid_980315076),g),key_e(bob,alice,sid_980315076)),dhexp(key_s(alice),g),g,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce))) that may be in a table by 27 may be read at get {413}.
The message concat3(a_980315031,b_980315032,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),plaintext_c_980315036)) that may be sent on channel pub by 58 may be received at input {395}.
So the entry statestore(bob,alice,sid_980315076,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),plaintext_c_980315036))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,alice,sid_980315076),g),key_e(bob,alice,sid_980315076)),dhexp(key_s(alice),g),g,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce))) may be inserted in a table at insert {412}.
table(statestore(bob,alice,sid_980315076,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),plaintext_c_980315036))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,alice,sid_980315076),g),key_e(bob,alice,sid_980315076)),dhexp(key_s(alice),g),g,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce)))).

60. The entry statestore(bob,alice,sid_980315076,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),plaintext_c_980315036))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,alice,sid_980315076),g),key_e(bob,alice,sid_980315076)),dhexp(key_s(alice),g),g,empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce))) that may be in a table by 59 may be read at get {432}.
The event SendMsg(bob,alice,stagepack_d(sid_980315076),msg_d(bob,alice,sid_980315076)) may be executed at {430}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),plaintext_c_980315036)),msg_d(bob,alice,sid_980315076))) may be sent on channel pub at output {431}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),plaintext_c_980315036)),msg_d(bob,alice,sid_980315076)))).

61. By 1, the attacker may have the channel pub.
By 60, the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),plaintext_c_980315036)),msg_d(bob,alice,sid_980315076))) may be sent on this channel.
So the attacker may obtain the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),plaintext_c_980315036)),msg_d(bob,alice,sid_980315076))) by listening on this channel.
attacker(concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),plaintext_c_980315036)),msg_d(bob,alice,sid_980315076)))).

62. By 61, the attacker may know concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),plaintext_c_980315036)),msg_d(bob,alice,sid_980315076))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),plaintext_c_980315036)),msg_d(bob,alice,sid_980315076)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),plaintext_c_980315036)),msg_d(bob,alice,sid_980315076))).

63. By 47, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))).
By 54, the attacker may know encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),plaintext_c_980315036).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),plaintext_c_980315036)).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),plaintext_c_980315036))).

64. By 52, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))).
By 48, the attacker may know zero.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero).
attacker(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero)).

65. By 64, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero).
By 16, the attacker may know minnonce.
By 63, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),plaintext_c_980315036)).
By 62, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),plaintext_c_980315036)),msg_d(bob,alice,sid_980315076)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),plaintext_c_980315036)),msg_d(bob,alice,sid_980315076)).
attacker(aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),plaintext_c_980315036)),msg_d(bob,alice,sid_980315076))).

66. By 65, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e(bob,alice,sid_980315076),g)),dhexp(key_s(alice),dhexp(key_e(bob,alice,sid_980315076),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_980315013)),dhexp(key_e(bob,alice,sid_980315076),g)),msg_b(bob,alice,sid_980315076))),plaintext_c_980315036)),msg_d(bob,alice,sid_980315076)).
Using the function 3-proj-aeadpack the attacker may obtain msg_d(bob,alice,sid_980315076).
attacker(msg_d(bob,alice,sid_980315076)).

67. By 66, the attacker may know msg_d(bob,alice,sid_980315076).
So the attacker may know msg_d(bob,alice,sid_980315076) in phase 1.
attacker_p1(msg_d(bob,alice,sid_980315076)).


RESULT not attacker_p1(msg_d(bob,alice,sid_b)) cannot be proved.
Starting query attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_980315079]),msg_d(bob,alice,sid[!1 = @sid_980315079]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_980315079]),msg_b(bob,alice,sid[!1 = @sid_980315079]))) && begin(LeakS(phase0,alice)) -> attacker_p1(msg_d(bob,alice,sid[!1 = @sid_980315079]))
RESULT attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice)) is true.
Starting query attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob)))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_980315084]),msg_d(bob,alice,sid[!1 = @sid_980315084]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_980315084]),msg_b(bob,alice,sid[!1 = @sid_980315084]))) && begin(LeakS(phase0,alice)) -> attacker_p1(msg_d(bob,alice,sid[!1 = @sid_980315084]))
RESULT attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob))) is true.
Starting query attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_980315090]),msg_d(bob,alice,sid[!1 = @sid_980315090]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_980315090]),msg_b(bob,alice,sid[!1 = @sid_980315090]))) && begin(LeakS(phase0,alice)) -> attacker_p1(msg_d(bob,alice,sid[!1 = @sid_980315090]))
RESULT attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) is true.
Starting query not event(RecvEnd(true))
goal reachable: begin(SendMsg(alice,charlie,stagepack_c(sid[!1 = @sid_980315093]),msg_c(alice,charlie,sid[!1 = @sid_980315093]))) && begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_980315093]),msg_a(alice,charlie,sid[!1 = @sid_980315093]))) -> end(RecvEnd(true))
Abbreviations:
sid_980315487 = sid[!1 = @sid_980315476]

1. The entry statestore(alice,charlie,sid_980315487,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,true))) may be inserted in a table at insert {166}.
table(statestore(alice,charlie,sid_980315487,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,true)))).

2. The entry statestore(alice,charlie,sid_980315487,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,true))) that may be in a table by 1 may be read at get {203}.
The event SendMsg(alice,charlie,stagepack_a(sid_980315487),msg_a(alice,charlie,sid_980315487)) may be executed at {200}.
So the entry statestore(alice,charlie,sid_980315487,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_e(alice,charlie,sid_980315487),g),key_e(alice,charlie,sid_980315487)),dhexp(key_s(charlie),g),empty,empty,true))) may be inserted in a table at insert {201}.
table(statestore(alice,charlie,sid_980315487,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_e(alice,charlie,sid_980315487),g),key_e(alice,charlie,sid_980315487)),dhexp(key_s(charlie),g),empty,empty,true)))).

3. The attacker has some term plaintext_b_980315447.
attacker(plaintext_b_980315447).

4. Using the function g the attacker may obtain g.
attacker(g).

5. Using the function pub the attacker may obtain pub.
attacker(pub).

6. The entry statestore(alice,charlie,sid_980315487,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,true))) that may be in a table by 1 may be read at get {203}.
The event SendMsg(alice,charlie,stagepack_a(sid_980315487),msg_a(alice,charlie,sid_980315487)) may be executed at {200}.
So the message concat3(dhexp(key_e(alice,charlie,sid_980315487),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))) may be sent on channel pub at output {202}.
mess(pub,concat3(dhexp(key_e(alice,charlie,sid_980315487),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487)))).

7. By 5, the attacker may have the channel pub.
By 6, the message concat3(dhexp(key_e(alice,charlie,sid_980315487),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e(alice,charlie,sid_980315487),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))) by listening on this channel.
attacker(concat3(dhexp(key_e(alice,charlie,sid_980315487),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487)))).

8. By 7, the attacker may know concat3(dhexp(key_e(alice,charlie,sid_980315487),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487)).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))).

9. The entry statestore(alice,charlie,sid_980315487,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(charlie),g),empty,empty,true))) that may be in a table by 1 may be read at get {203}.
The event SendMsg(alice,charlie,stagepack_a(sid_980315487),msg_a(alice,charlie,sid_980315487)) may be executed at {200}.
So the message concat3(dhexp(key_e(alice,charlie,sid_980315487),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_980315487),dhexp(key_s(charlie),g))),dhexp(key_s(alice),dhexp(key_s(charlie),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))) may be sent on channel pub at output {202}.
mess(pub,concat3(dhexp(key_e(alice,charlie,sid_980315487),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_980315487),dhexp(key_s(charlie),g))),dhexp(key_s(alice),dhexp(key_s(charlie),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487)))).

10. By 5, the attacker may have the channel pub.
By 9, the message concat3(dhexp(key_e(alice,charlie,sid_980315487),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_980315487),dhexp(key_s(charlie),g))),dhexp(key_s(alice),dhexp(key_s(charlie),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e(alice,charlie,sid_980315487),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_980315487),dhexp(key_s(charlie),g))),dhexp(key_s(alice),dhexp(key_s(charlie),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))) by listening on this channel.
attacker(concat3(dhexp(key_e(alice,charlie,sid_980315487),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_980315487),dhexp(key_s(charlie),g))),dhexp(key_s(alice),dhexp(key_s(charlie),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487)))).

11. By 10, the attacker may know concat3(dhexp(key_e(alice,charlie,sid_980315487),g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_980315487),dhexp(key_s(charlie),g))),dhexp(key_s(alice),dhexp(key_s(charlie),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_e(alice,charlie,sid_980315487),g).
attacker(dhexp(key_e(alice,charlie,sid_980315487),g)).

12. The message key_s(charlie) may be sent on channel pub at output {1}.
mess(pub,key_s(charlie)).

13. By 5, the attacker may have the channel pub.
By 12, the message key_s(charlie) may be sent on this channel.
So the attacker may obtain the message key_s(charlie) by listening on this channel.
attacker(key_s(charlie)).

14. By 13, the attacker may know key_s(charlie).
By 4, the attacker may know g.
Using the function dhexp the attacker may obtain dhexp(key_s(charlie),g).
attacker(dhexp(key_s(charlie),g)).

15. The message dhexp(key_s(alice),g) may be sent on channel pub at output {6}.
mess(pub,dhexp(key_s(alice),g)).

16. By 5, the attacker may have the channel pub.
By 15, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

17. Using the function empty the attacker may obtain empty.
attacker(empty).

18. Using the function somename the attacker may obtain somename.
attacker(somename).

19. By 18, the attacker may know somename.
By 17, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

20. By 19, the attacker may know hash(somename,empty).
By 17, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

21. By 20, the attacker may know hash(hash(somename,empty),empty).
By 16, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

22. By 21, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 14, the attacker may know dhexp(key_s(charlie),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g))).

23. By 22, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)).
By 11, the attacker may know dhexp(key_e(alice,charlie,sid_980315487),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g))).

24. By 23, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)).
By 8, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487)))).

25. By 24, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))).
By 4, the attacker may know g.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g)).

26. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

27. By 13, the attacker may know key_s(charlie).
By 16, the attacker may know dhexp(key_s(alice),g).
Using the function dhexp the attacker may obtain dhexp(key_s(charlie),dhexp(key_s(alice),g)).
attacker(dhexp(key_s(charlie),dhexp(key_s(alice),g))).

28. By 13, the attacker may know key_s(charlie).
By 11, the attacker may know dhexp(key_e(alice,charlie,sid_980315487),g).
Using the function dhexp the attacker may obtain dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g)).
attacker(dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))).

29. By 19, the attacker may know hash(somename,empty).
By 28, the attacker may know dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))).
attacker(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g)))).

30. By 29, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))).
By 27, the attacker may know dhexp(key_s(charlie),dhexp(key_s(alice),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g)))).

31. By 30, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))).
By 11, the attacker may know dhexp(key_e(alice,charlie,sid_980315487),g).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g))).

32. By 31, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)).
By 16, the attacker may know dhexp(key_s(alice),g).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)).
attacker(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g))).

33. By 32, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)).
By 26, the attacker may know minnonce.
By 25, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g).
By 3, the attacker may know plaintext_b_980315447.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)).

34. The attacker has some term b_980315442.
attacker(b_980315442).

35. By 4, the attacker may know g.
By 34, the attacker may know b_980315442.
By 33, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447).
Using the function concat3 the attacker may obtain concat3(g,b_980315442,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)).
attacker(concat3(g,b_980315442,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447))).

36. By 5, the attacker may have the channel pub.
By 35, the attacker may have the message concat3(g,b_980315442,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)).
So the attacker may send this message on this channel.
mess(pub,concat3(g,b_980315442,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447))).

37. The entry statestore(alice,charlie,sid_980315487,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_e(alice,charlie,sid_980315487),g),key_e(alice,charlie,sid_980315487)),dhexp(key_s(charlie),g),empty,empty,true))) that may be in a table by 2 may be read at get {247}.
The message concat3(g,b_980315442,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)) that may be sent on channel pub by 36 may be received at input {204}.
We have g <> caught-fail.
So the entry statestore(alice,charlie,sid_980315487,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_e(alice,charlie,sid_980315487),g),key_e(alice,charlie,sid_980315487)),dhexp(key_s(charlie),g),g,empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce))) may be inserted in a table at insert {246}.
table(statestore(alice,charlie,sid_980315487,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_e(alice,charlie,sid_980315487),g),key_e(alice,charlie,sid_980315487)),dhexp(key_s(charlie),g),g,empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce)))).

38. The entry statestore(alice,charlie,sid_980315487,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_e(alice,charlie,sid_980315487),g),key_e(alice,charlie,sid_980315487)),dhexp(key_s(charlie),g),g,empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce))) that may be in a table by 37 may be read at get {267}.
The event SendMsg(alice,charlie,stagepack_c(sid_980315487),msg_c(alice,charlie,sid_980315487)) may be executed at {264}.
So the entry statestore(alice,charlie,sid_980315487,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)),msg_c(alice,charlie,sid_980315487)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_e(alice,charlie,sid_980315487),g),key_e(alice,charlie,sid_980315487)),dhexp(key_s(charlie),g),g,empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce))) may be inserted in a table at insert {265}.
table(statestore(alice,charlie,sid_980315487,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)),msg_c(alice,charlie,sid_980315487)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_e(alice,charlie,sid_980315487),g),key_e(alice,charlie,sid_980315487)),dhexp(key_s(charlie),g),g,empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce)))).

39. The attacker has some term plaintext_d_980315475.
attacker(plaintext_d_980315475).

40. The attacker has some term b_980315292.
attacker(b_980315292).

41. By 4, the attacker may know g.
By 40, the attacker may know b_980315292.
By 33, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447).
Using the function concat3 the attacker may obtain concat3(g,b_980315292,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)).
attacker(concat3(g,b_980315292,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447))).

42. By 5, the attacker may have the channel pub.
By 41, the attacker may have the message concat3(g,b_980315292,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)).
So the attacker may send this message on this channel.
mess(pub,concat3(g,b_980315292,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447))).

43. The entry statestore(alice,charlie,sid_980315487,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_e(alice,charlie,sid_980315487),g),key_e(alice,charlie,sid_980315487)),dhexp(key_s(charlie),g),empty,empty,true))) that may be in a table by 2 may be read at get {247}.
The message concat3(g,b_980315292,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)) that may be sent on channel pub by 42 may be received at input {204}.
We have g <> caught-fail.
So the entry statestore(alice,charlie,sid_980315487,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_e(alice,charlie,sid_980315487),g),key_e(alice,charlie,sid_980315487)),dhexp(key_s(charlie),g),g,empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce))) may be inserted in a table at insert {246}.
table(statestore(alice,charlie,sid_980315487,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_e(alice,charlie,sid_980315487),g),key_e(alice,charlie,sid_980315487)),dhexp(key_s(charlie),g),g,empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce)))).

44. The entry statestore(alice,charlie,sid_980315487,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_e(alice,charlie,sid_980315487),g),key_e(alice,charlie,sid_980315487)),dhexp(key_s(charlie),g),g,empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce))) that may be in a table by 43 may be read at get {267}.
The event SendMsg(alice,charlie,stagepack_c(sid_980315487),msg_c(alice,charlie,sid_980315487)) may be executed at {264}.
So the message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)),msg_c(alice,charlie,sid_980315487))) may be sent on channel pub at output {266}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)),msg_c(alice,charlie,sid_980315487)))).

45. By 5, the attacker may have the channel pub.
By 44, the message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)),msg_c(alice,charlie,sid_980315487))) may be sent on this channel.
So the attacker may obtain the message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)),msg_c(alice,charlie,sid_980315487))) by listening on this channel.
attacker(concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)),msg_c(alice,charlie,sid_980315487)))).

46. By 45, the attacker may know concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)),msg_c(alice,charlie,sid_980315487))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)),msg_c(alice,charlie,sid_980315487)).
attacker(encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)),msg_c(alice,charlie,sid_980315487))).

47. By 25, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g).
By 33, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447))).

48. By 47, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)).
By 46, the attacker may know encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)),msg_c(alice,charlie,sid_980315487)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)),msg_c(alice,charlie,sid_980315487))).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)),msg_c(alice,charlie,sid_980315487)))).

49. Using the function zero the attacker may obtain zero.
attacker(zero).

50. By 31, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)).
By 16, the attacker may know dhexp(key_s(alice),g).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g))).

51. By 50, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)).
By 49, the attacker may know zero.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero).
attacker(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero)).

52. By 51, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero).
By 26, the attacker may know minnonce.
By 48, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)),msg_c(alice,charlie,sid_980315487))).
By 39, the attacker may know plaintext_d_980315475.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)),msg_c(alice,charlie,sid_980315487))),plaintext_d_980315475).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)),msg_c(alice,charlie,sid_980315487))),plaintext_d_980315475)).

53. The attacker has some term b_980315471.
attacker(b_980315471).

54. The attacker has some term a_980315470.
attacker(a_980315470).

55. By 54, the attacker may know a_980315470.
By 53, the attacker may know b_980315471.
By 52, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)),msg_c(alice,charlie,sid_980315487))),plaintext_d_980315475).
Using the function concat3 the attacker may obtain concat3(a_980315470,b_980315471,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)),msg_c(alice,charlie,sid_980315487))),plaintext_d_980315475)).
attacker(concat3(a_980315470,b_980315471,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)),msg_c(alice,charlie,sid_980315487))),plaintext_d_980315475))).

56. By 5, the attacker may have the channel pub.
By 55, the attacker may have the message concat3(a_980315470,b_980315471,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)),msg_c(alice,charlie,sid_980315487))),plaintext_d_980315475)).
So the attacker may send this message on this channel.
mess(pub,concat3(a_980315470,b_980315471,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)),msg_c(alice,charlie,sid_980315487))),plaintext_d_980315475))).

57. The entry statestore(alice,charlie,sid_980315487,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)),msg_c(alice,charlie,sid_980315487)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_e(alice,charlie,sid_980315487),g),key_e(alice,charlie,sid_980315487)),dhexp(key_s(charlie),g),g,empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce))) that may be in a table by 38 may be read at get {288}.
The message concat3(a_980315470,b_980315471,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)),encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),dhexp(key_e(alice,charlie,sid_980315487),g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(charlie),dhexp(key_e(alice,charlie,sid_980315487),g))),dhexp(key_s(charlie),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(charlie),g)),dhexp(key_e(alice,charlie,sid_980315487),g)),msg_a(alice,charlie,sid_980315487))),g),plaintext_b_980315447)),msg_c(alice,charlie,sid_980315487))),plaintext_d_980315475)) that may be sent on channel pub by 56 may be received at input {270}.
So event RecvEnd(true) may be executed at {287}.
end(RecvEnd(true)).


RESULT not event(RecvEnd(true)) cannot be proved.
