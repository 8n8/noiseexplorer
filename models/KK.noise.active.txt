File "KK.noise.active.pv", line 240, characters 7-8:
Warning: identifier ck rebound.
File "KK.noise.active.pv", line 249, characters 7-8:
Warning: identifier ck rebound.
File "KK.noise.active.pv", line 250, characters 7-8:
Warning: identifier cs rebound.
File "KK.noise.active.pv", line 250, character 36:
Warning: identifier h rebound.
File "KK.noise.active.pv", line 259, characters 7-8:
Warning: identifier cs rebound.
File "KK.noise.active.pv", line 260, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 265, characters 7-8:
Warning: identifier cs rebound.
File "KK.noise.active.pv", line 266, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 280, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 281, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 286, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 287, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 294, character 6:
Warning: identifier e rebound.
File "KK.noise.active.pv", line 295, characters 6-7:
Warning: identifier ne rebound.
File "KK.noise.active.pv", line 296, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 298, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 299, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 300, characters 7-8:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 300, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "KK.noise.active.pv", line 301, characters 6-7:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 309, character 6:
Warning: identifier e rebound.
File "KK.noise.active.pv", line 310, characters 6-7:
Warning: identifier ne rebound.
File "KK.noise.active.pv", line 311, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 313, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 314, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 315, characters 7-8:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 315, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "KK.noise.active.pv", line 316, characters 6-7:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 323, characters 7-8:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 323, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "KK.noise.active.pv", line 324, characters 6-7:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 331, characters 7-8:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 331, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "KK.noise.active.pv", line 332, characters 6-7:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 341, characters 6-7:
Warning: identifier re rebound.
File "KK.noise.active.pv", line 342, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 344, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 345, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 346, characters 7-8:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 348, characters 7-8:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 356, characters 6-7:
Warning: identifier re rebound.
File "KK.noise.active.pv", line 357, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 359, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 360, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 361, characters 7-8:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 363, characters 7-8:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 371, characters 7-8:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 373, characters 7-8:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 381, characters 7-8:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 383, characters 7-8:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 531, characters 8-9:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 381, characters 7-8:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 383, characters 7-8:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 265, characters 7-8:
Warning: identifier cs rebound.
File "KK.noise.active.pv", line 266, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 523, characters 8-9:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 323, characters 7-8:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 323, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "KK.noise.active.pv", line 324, characters 6-7:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 259, characters 7-8:
Warning: identifier cs rebound.
File "KK.noise.active.pv", line 260, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 516, characters 8-9:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 356, characters 6-7:
Warning: identifier re rebound.
File "KK.noise.active.pv", line 357, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 359, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 360, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 361, characters 7-8:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 363, characters 7-8:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 240, characters 7-8:
Warning: identifier ck rebound.
File "KK.noise.active.pv", line 240, characters 7-8:
Warning: identifier ck rebound.
File "KK.noise.active.pv", line 265, characters 7-8:
Warning: identifier cs rebound.
File "KK.noise.active.pv", line 266, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 508, characters 8-9:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 294, character 6:
Warning: identifier e rebound.
File "KK.noise.active.pv", line 295, characters 6-7:
Warning: identifier ne rebound.
File "KK.noise.active.pv", line 296, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 298, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 299, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 300, characters 7-8:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 300, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "KK.noise.active.pv", line 301, characters 6-7:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 240, characters 7-8:
Warning: identifier ck rebound.
File "KK.noise.active.pv", line 240, characters 7-8:
Warning: identifier ck rebound.
File "KK.noise.active.pv", line 259, characters 7-8:
Warning: identifier cs rebound.
File "KK.noise.active.pv", line 260, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 280, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 281, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 581, characters 8-9:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 331, characters 7-8:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 331, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "KK.noise.active.pv", line 332, characters 6-7:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 259, characters 7-8:
Warning: identifier cs rebound.
File "KK.noise.active.pv", line 260, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 574, characters 8-9:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 371, characters 7-8:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 373, characters 7-8:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 265, characters 7-8:
Warning: identifier cs rebound.
File "KK.noise.active.pv", line 266, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 566, characters 8-9:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 309, character 6:
Warning: identifier e rebound.
File "KK.noise.active.pv", line 310, characters 6-7:
Warning: identifier ne rebound.
File "KK.noise.active.pv", line 311, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 313, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 314, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 315, characters 7-8:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 315, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "KK.noise.active.pv", line 316, characters 6-7:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 240, characters 7-8:
Warning: identifier ck rebound.
File "KK.noise.active.pv", line 240, characters 7-8:
Warning: identifier ck rebound.
File "KK.noise.active.pv", line 259, characters 7-8:
Warning: identifier cs rebound.
File "KK.noise.active.pv", line 260, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 559, characters 8-9:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 341, characters 6-7:
Warning: identifier re rebound.
File "KK.noise.active.pv", line 342, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 344, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 345, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 346, characters 7-8:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 348, characters 7-8:
Warning: identifier hs rebound.
File "KK.noise.active.pv", line 240, characters 7-8:
Warning: identifier ck rebound.
File "KK.noise.active.pv", line 240, characters 7-8:
Warning: identifier ck rebound.
File "KK.noise.active.pv", line 265, characters 7-8:
Warning: identifier cs rebound.
File "KK.noise.active.pv", line 266, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 286, characters 6-7:
Warning: identifier ss rebound.
File "KK.noise.active.pv", line 287, characters 6-7:
Warning: identifier ss rebound.
Linear part:
dhexp(b_49,dhexp(a_48,g)) = dhexp(a_48,dhexp(b_49,g))
Completing equations...
Completed equations:
dhexp(b_49,dhexp(a_48,g)) = dhexp(a_48,dhexp(b_49,g))
Convergent part:
Completing equations...
Completed equations:
Process:
{1}out(pub, key_s(charlie));
{2}!
(
    {3}let them: principal = bob in
    {4}let me: principal = alice in
    {5}let v_486: key = catch-fail(dhexp(key_s(me),g)) in
    {6}let s_487: keypair = (if not-caught-fail(v_486) then keypairpack(v_486,key_s(me)) else fail-any) in
    {7}out(pub, getpublickey(s_487));
    (
        {8}let e_488: keypair = keypairpack(empty,empty) in
        {9}let v_489: key = catch-fail(dhexp(key_s(them),g)) in
        {10}let rs_490: key = getpublickey((if not-caught-fail(v_489) then keypairpack(v_489,key_s(them)) else fail-any)) in
        {11}let re_491: key = empty in
        {12}let v_492: bitstring = catch-fail(hash(somename,empty)) in
        {13}let v_493: key = catch-fail(v_492) in
        {14}let v_494: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {15}let v_495: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_492) then (if not-caught-fail(v_493) then (if not-caught-fail(v_494) then symmetricstatepack(v_494,v_493,v_492) else fail-any) else fail-any) else fail-any))) in
        {16}let v_496: symmetricstate = catch-fail((if success?((if not-caught-fail(v_492) then (if not-caught-fail(v_493) then (if not-caught-fail(v_494) then symmetricstatepack(v_494,v_493,v_492) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_495) && success?(is-true(success?(1-proj-3-tuple(v_495))))) then symmetricstatepack(1-proj-3-tuple(v_495),2-proj-3-tuple(v_495),hash(3-proj-3-tuple(v_495),empty)) else fail-any) else fail-any)) in
        {17}let v_497: bitstring = catch-fail(symmetricstateunpack(v_496)) in
        {18}let v_498: symmetricstate = catch-fail((if success?(getpublickey(s_487)) then (if (not-caught-fail(v_497) && success?(is-true(success?(1-proj-3-tuple(v_497))))) then symmetricstatepack(1-proj-3-tuple(v_497),2-proj-3-tuple(v_497),hash(3-proj-3-tuple(v_497),getpublickey(s_487))) else fail-any) else fail-any)) in
        {19}let v_499: bitstring = catch-fail(symmetricstateunpack(v_498)) in
        {20}let v_500: symmetricstate = catch-fail((if (not-caught-fail(v_499) && success?(is-true(success?(1-proj-3-tuple(v_499))))) then symmetricstatepack(1-proj-3-tuple(v_499),2-proj-3-tuple(v_499),hash(3-proj-3-tuple(v_499),rs_490)) else fail-any)) in
        {21}let hs: handshakestate = (if not-caught-fail(v_496) then (if not-caught-fail(v_498) then (if not-caught-fail(v_500) then handshakestatepack(v_500,s_487,e_488,rs_490,re_491,empty,true) else fail-any) else fail-any) else fail-any) in
        {22}insert statestore(me,them,statepack_a(hs))
    ) | (
        {60}get statestore(=me,=them,statepack_a(hs_501: handshakestate)) in
        {23}let v_502: bitstring = catch-fail(handshakestateunpack(hs_501)) in
        {24}let v_503: bitstring = catch-fail((empty,empty,empty)) in
        {25}new key_e[me,them]: key;
        {26}let v_504: key = catch-fail(dhexp(key_e,g)) in
        {27}let v_505: keypair = catch-fail((if not-caught-fail(v_504) then keypairpack(v_504,key_e) else fail-any)) in
        {28}let v_506: bitstring = catch-fail(getpublickey(v_505)) in
        {29}let v_507: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_502))) in
        {30}let v_508: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_502)) then (if (not-caught-fail(v_507) && success?(is-true(success?(1-proj-3-tuple(v_507))))) then symmetricstatepack(1-proj-3-tuple(v_507),2-proj-3-tuple(v_507),hash(3-proj-3-tuple(v_507),v_506)) else fail-any) else fail-any)) in
        {31}let v_509: bitstring = catch-fail(keypairunpack(v_505)) in
        {32}let v_510: bitstring = catch-fail(symmetricstateunpack(v_508)) in
        {33}let v_511: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_510),(if success?(4-proj-7-tuple(v_502)) then (if (not-caught-fail(v_509) && success?(is-true(success?(1-proj-2-tuple(v_509))))) then dhexp(2-proj-2-tuple(v_509),4-proj-7-tuple(v_502)) else fail-any) else fail-any))) in
        {34}let v_512: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_510),(if success?(4-proj-7-tuple(v_502)) then (if (not-caught-fail(v_509) && success?(is-true(success?(1-proj-2-tuple(v_509))))) then dhexp(2-proj-2-tuple(v_509),4-proj-7-tuple(v_502)) else fail-any) else fail-any))) in
        {35}let v_513: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_510),(if success?(4-proj-7-tuple(v_502)) then (if (not-caught-fail(v_509) && success?(is-true(success?(1-proj-2-tuple(v_509))))) then dhexp(2-proj-2-tuple(v_509),4-proj-7-tuple(v_502)) else fail-any) else fail-any))) in
        {36}let v_514: bitstring = catch-fail((if (success?((if success?(4-proj-7-tuple(v_502)) then (if (not-caught-fail(v_509) && success?(is-true(success?(1-proj-2-tuple(v_509))))) then dhexp(2-proj-2-tuple(v_509),4-proj-7-tuple(v_502)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_510))) then (if not-caught-fail(v_511) then (if not-caught-fail(v_512) then (if not-caught-fail(v_513) then (v_511,v_512,v_513) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {37}let v_515: symmetricstate = catch-fail((if success?((if success?(4-proj-7-tuple(v_502)) then (if (not-caught-fail(v_509) && success?(is-true(success?(1-proj-2-tuple(v_509))))) then dhexp(2-proj-2-tuple(v_509),4-proj-7-tuple(v_502)) else fail-any) else fail-any)) then (if (not-caught-fail(v_510) && success?(is-true(success?(1-proj-3-tuple(v_510))))) then (if (not-caught-fail(v_514) && success?(is-true(success?(1-proj-3-tuple(v_514))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_514)) then cipherstatepack(2-proj-3-tuple(v_514),minnonce) else fail-any),1-proj-3-tuple(v_514),3-proj-3-tuple(v_510)) else fail-any) else fail-any) else fail-any)) in
        {38}let v_516: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_502))) in
        {39}let v_517: bitstring = catch-fail(symmetricstateunpack(v_515)) in
        {40}let v_518: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_517),(if (success?(4-proj-7-tuple(v_502)) && success?(2-proj-7-tuple(v_502))) then (if (not-caught-fail(v_516) && success?(is-true(success?(1-proj-2-tuple(v_516))))) then dhexp(2-proj-2-tuple(v_516),4-proj-7-tuple(v_502)) else fail-any) else fail-any))) in
        {41}let v_519: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_517),(if (success?(4-proj-7-tuple(v_502)) && success?(2-proj-7-tuple(v_502))) then (if (not-caught-fail(v_516) && success?(is-true(success?(1-proj-2-tuple(v_516))))) then dhexp(2-proj-2-tuple(v_516),4-proj-7-tuple(v_502)) else fail-any) else fail-any))) in
        {42}let v_520: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_517),(if (success?(4-proj-7-tuple(v_502)) && success?(2-proj-7-tuple(v_502))) then (if (not-caught-fail(v_516) && success?(is-true(success?(1-proj-2-tuple(v_516))))) then dhexp(2-proj-2-tuple(v_516),4-proj-7-tuple(v_502)) else fail-any) else fail-any))) in
        {43}let v_521: bitstring = catch-fail((if (success?((if (success?(4-proj-7-tuple(v_502)) && success?(2-proj-7-tuple(v_502))) then (if (not-caught-fail(v_516) && success?(is-true(success?(1-proj-2-tuple(v_516))))) then dhexp(2-proj-2-tuple(v_516),4-proj-7-tuple(v_502)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_517))) then (if not-caught-fail(v_518) then (if not-caught-fail(v_519) then (if not-caught-fail(v_520) then (v_518,v_519,v_520) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {44}let v_522: symmetricstate = catch-fail((if success?((if (success?(4-proj-7-tuple(v_502)) && success?(2-proj-7-tuple(v_502))) then (if (not-caught-fail(v_516) && success?(is-true(success?(1-proj-2-tuple(v_516))))) then dhexp(2-proj-2-tuple(v_516),4-proj-7-tuple(v_502)) else fail-any) else fail-any)) then (if (not-caught-fail(v_517) && success?(is-true(success?(1-proj-3-tuple(v_517))))) then (if (not-caught-fail(v_521) && success?(is-true(success?(1-proj-3-tuple(v_521))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_521)) then cipherstatepack(2-proj-3-tuple(v_521),minnonce) else fail-any),1-proj-3-tuple(v_521),3-proj-3-tuple(v_517)) else fail-any) else fail-any) else fail-any)) in
        {45}let v_523: bitstring = catch-fail(symmetricstateunpack(v_522)) in
        {46}let v_524: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_523))) in
        {47}let v_525: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_524),2-proj-2-tuple(v_524),3-proj-3-tuple(v_523),msg_a(me,them))) in
        {48}let v_526: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_523))) in
        {49}let v_527: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_524))) && success?(1-proj-3-tuple(v_523))) then (if (not-caught-fail(v_526) && success?(is-true(success?(1-proj-2-tuple(v_526))))) then cipherstatepack(1-proj-2-tuple(v_526),increment_nonce(2-proj-2-tuple(v_524))) else fail-any) else fail-any)) in
        {50}let v_528: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_523)) && success?(1-proj-3-tuple(v_523))) then (if (not-caught-fail(v_524) && success?(is-true(success?(1-proj-2-tuple(v_524))))) then (if not-caught-fail(v_525) then (if not-caught-fail(v_527) then (v_527,v_525) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {51}let v_529: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_528),2-proj-3-tuple(v_523),3-proj-3-tuple(v_523)))) in
        {52}let v_530: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_528)) && success?(symmetricstatepack(1-proj-2-tuple(v_528),2-proj-3-tuple(v_523),3-proj-3-tuple(v_523)))) then (if (not-caught-fail(v_529) && success?(is-true(success?(1-proj-3-tuple(v_529))))) then symmetricstatepack(1-proj-3-tuple(v_529),2-proj-3-tuple(v_529),hash(3-proj-3-tuple(v_529),2-proj-2-tuple(v_528))) else fail-any) else fail-any)) in
        {53}let v_531: bitstring = catch-fail((if (not-caught-fail(v_523) && success?(is-true(success?(1-proj-3-tuple(v_523))))) then (if (not-caught-fail(v_528) && success?(is-true(success?(1-proj-2-tuple(v_528))))) then (if not-caught-fail(v_530) then (v_530,2-proj-2-tuple(v_528)) else fail-any) else fail-any) else fail-any)) in
        {54}let v_532: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_531),2-proj-7-tuple(v_502),v_505,4-proj-7-tuple(v_502),5-proj-7-tuple(v_502),6-proj-7-tuple(v_502),7-proj-7-tuple(v_502))) in
        {55}let v_533: bitstring = catch-fail(concat3(v_506,2-proj-3-tuple(v_503),2-proj-2-tuple(v_531))) in
        {56}let (hs_534: handshakestate,re_535: key,message_a: bitstring) = (if (not-caught-fail(v_502) && success?(is-true(success?(1-proj-7-tuple(v_502))))) then (if (not-caught-fail(v_503) && success?(is-true(success?(1-proj-3-tuple(v_503))))) then (if not-caught-fail(v_505) then (if not-caught-fail(v_506) then (if not-caught-fail(v_508) then (if not-caught-fail(v_515) then (if not-caught-fail(v_522) then (if (not-caught-fail(v_531) && success?(is-true(success?(1-proj-2-tuple(v_531))))) then (if not-caught-fail(v_532) then (if not-caught-fail(v_533) then (v_532,5-proj-7-tuple(v_502),v_533) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {57}event SendMsg(me,them,stage_a,msg_a(me,them),true);
        {58}insert statestore(me,them,statepack_b(hs_534));
        {59}out(pub, message_a)
    ) | (
        {96}get statestore(=me,=them,statepack_b(hs_536: handshakestate)) in
        {61}in(pub, message_b: bitstring);
        {62}let v_537: bitstring = catch-fail(handshakestateunpack(hs_536)) in
        {63}let v_538: bitstring = catch-fail(deconcat3(message_b)) in
        {64}let v_539: bool = catch-fail(true) in
        {65}let v_540: key = catch-fail(1-proj-3-tuple(v_538)) in
        {66}let v_541: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_537))) in
        {67}let v_542: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_537)) then (if (not-caught-fail(v_541) && success?(is-true(success?(1-proj-3-tuple(v_541))))) then symmetricstatepack(1-proj-3-tuple(v_541),2-proj-3-tuple(v_541),hash(3-proj-3-tuple(v_541),v_540)) else fail-any) else fail-any)) in
        {68}let v_543: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_537))) in
        {69}let v_544: bitstring = catch-fail(symmetricstateunpack(v_542)) in
        {70}let v_545: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_544),(if success?(3-proj-7-tuple(v_537)) then (if (not-caught-fail(v_543) && success?(is-true(success?(1-proj-2-tuple(v_543))))) then dhexp(2-proj-2-tuple(v_543),v_540) else fail-any) else fail-any))) in
        {71}let v_546: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_544),(if success?(3-proj-7-tuple(v_537)) then (if (not-caught-fail(v_543) && success?(is-true(success?(1-proj-2-tuple(v_543))))) then dhexp(2-proj-2-tuple(v_543),v_540) else fail-any) else fail-any))) in
        {72}let v_547: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_544),(if success?(3-proj-7-tuple(v_537)) then (if (not-caught-fail(v_543) && success?(is-true(success?(1-proj-2-tuple(v_543))))) then dhexp(2-proj-2-tuple(v_543),v_540) else fail-any) else fail-any))) in
        {73}let v_548: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_537)) then (if (not-caught-fail(v_543) && success?(is-true(success?(1-proj-2-tuple(v_543))))) then dhexp(2-proj-2-tuple(v_543),v_540) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_544))) then (if not-caught-fail(v_545) then (if not-caught-fail(v_546) then (if not-caught-fail(v_547) then (v_545,v_546,v_547) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {74}let v_549: symmetricstate = catch-fail((if success?((if success?(3-proj-7-tuple(v_537)) then (if (not-caught-fail(v_543) && success?(is-true(success?(1-proj-2-tuple(v_543))))) then dhexp(2-proj-2-tuple(v_543),v_540) else fail-any) else fail-any)) then (if (not-caught-fail(v_544) && success?(is-true(success?(1-proj-3-tuple(v_544))))) then (if (not-caught-fail(v_548) && success?(is-true(success?(1-proj-3-tuple(v_548))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_548)) then cipherstatepack(2-proj-3-tuple(v_548),minnonce) else fail-any),1-proj-3-tuple(v_548),3-proj-3-tuple(v_544)) else fail-any) else fail-any) else fail-any)) in
        {75}let v_550: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_537))) in
        {76}let v_551: bitstring = catch-fail(symmetricstateunpack(v_549)) in
        {77}let v_552: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_551),(if success?(2-proj-7-tuple(v_537)) then (if (not-caught-fail(v_550) && success?(is-true(success?(1-proj-2-tuple(v_550))))) then dhexp(2-proj-2-tuple(v_550),v_540) else fail-any) else fail-any))) in
        {78}let v_553: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_551),(if success?(2-proj-7-tuple(v_537)) then (if (not-caught-fail(v_550) && success?(is-true(success?(1-proj-2-tuple(v_550))))) then dhexp(2-proj-2-tuple(v_550),v_540) else fail-any) else fail-any))) in
        {79}let v_554: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_551),(if success?(2-proj-7-tuple(v_537)) then (if (not-caught-fail(v_550) && success?(is-true(success?(1-proj-2-tuple(v_550))))) then dhexp(2-proj-2-tuple(v_550),v_540) else fail-any) else fail-any))) in
        {80}let v_555: bitstring = catch-fail((if (success?((if success?(2-proj-7-tuple(v_537)) then (if (not-caught-fail(v_550) && success?(is-true(success?(1-proj-2-tuple(v_550))))) then dhexp(2-proj-2-tuple(v_550),v_540) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_551))) then (if not-caught-fail(v_552) then (if not-caught-fail(v_553) then (if not-caught-fail(v_554) then (v_552,v_553,v_554) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {81}let v_556: symmetricstate = catch-fail((if success?((if success?(2-proj-7-tuple(v_537)) then (if (not-caught-fail(v_550) && success?(is-true(success?(1-proj-2-tuple(v_550))))) then dhexp(2-proj-2-tuple(v_550),v_540) else fail-any) else fail-any)) then (if (not-caught-fail(v_551) && success?(is-true(success?(1-proj-3-tuple(v_551))))) then (if (not-caught-fail(v_555) && success?(is-true(success?(1-proj-3-tuple(v_555))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_555)) then cipherstatepack(2-proj-3-tuple(v_555),minnonce) else fail-any),1-proj-3-tuple(v_555),3-proj-3-tuple(v_551)) else fail-any) else fail-any) else fail-any)) in
        {82}let v_557: bitstring = catch-fail(symmetricstateunpack(v_556)) in
        {83}let v_558: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_557))) in
        {84}let v_559: aead = catch-fail(decrypt(1-proj-2-tuple(v_558),2-proj-2-tuple(v_558),3-proj-3-tuple(v_557),3-proj-3-tuple(v_538))) in
        {85}let v_560: bitstring = catch-fail(aeadunpack(v_559)) in
        {86}let v_561: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_557))) in
        {87}let v_562: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_558))) && success?(1-proj-3-tuple(v_557))) then (if (not-caught-fail(v_561) && success?(is-true(success?(1-proj-2-tuple(v_561))))) then cipherstatepack(1-proj-2-tuple(v_561),increment_nonce(2-proj-2-tuple(v_558))) else fail-any) else fail-any)) in
        {88}let v_563: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_538)) && (success?(3-proj-3-tuple(v_557)) && success?(1-proj-3-tuple(v_557)))) then (if (not-caught-fail(v_558) && success?(is-true(success?(1-proj-2-tuple(v_558))))) then (if not-caught-fail(v_559) then (if (not-caught-fail(v_560) && success?(is-true(success?(1-proj-3-tuple(v_560))))) then (if not-caught-fail(v_562) then (v_562,3-proj-3-tuple(v_560),1-proj-3-tuple(v_560)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {89}let v_564: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_563),2-proj-3-tuple(v_557),3-proj-3-tuple(v_557)))) in
        {90}let v_565: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_538)) && success?(symmetricstatepack(1-proj-3-tuple(v_563),2-proj-3-tuple(v_557),3-proj-3-tuple(v_557)))) then (if (not-caught-fail(v_564) && success?(is-true(success?(1-proj-3-tuple(v_564))))) then symmetricstatepack(1-proj-3-tuple(v_564),2-proj-3-tuple(v_564),hash(3-proj-3-tuple(v_564),3-proj-3-tuple(v_538))) else fail-any) else fail-any)) in
        {91}let v_566: bitstring = catch-fail((if success?(3-proj-3-tuple(v_538)) then (if (not-caught-fail(v_557) && success?(is-true(success?(1-proj-3-tuple(v_557))))) then (if (not-caught-fail(v_563) && success?(is-true(success?(1-proj-3-tuple(v_563))))) then (if not-caught-fail(v_565) then (v_565,2-proj-3-tuple(v_563),3-proj-3-tuple(v_563)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {92}let v_567: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_566),2-proj-7-tuple(v_537),3-proj-7-tuple(v_537),4-proj-7-tuple(v_537),v_540,6-proj-7-tuple(v_537),7-proj-7-tuple(v_537))) in
        {93}let (hs_568: handshakestate,re_569: key,plaintext_b: bitstring,valid: bool) = (if (not-caught-fail(v_537) && success?(is-true(success?(1-proj-7-tuple(v_537))))) then (if (not-caught-fail(v_538) && success?(is-true(success?(1-proj-3-tuple(v_538))))) then (if not-caught-fail(v_539) then (if not-caught-fail(v_540) then (if not-caught-fail(v_542) then (if not-caught-fail(v_549) then (if not-caught-fail(v_556) then (if (not-caught-fail(v_566) && success?(is-true(success?(1-proj-3-tuple(v_566))))) then (if (v_539 && 3-proj-3-tuple(v_566)) then (if not-caught-fail(v_567) then (v_567,getpublickey(3-proj-7-tuple(v_537)),2-proj-3-tuple(v_566),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {94}event RecvMsg(me,them,stage_b,plaintext_b,valid);
        {95}insert statestore(me,them,statepack_c(hs_568))
    ) | (
        {114}get statestore(=me,=them,statepack_c(hs_570: handshakestate)) in
        {97}let v_571: bitstring = catch-fail(handshakestateunpack(hs_570)) in
        {98}let v_572: bitstring = catch-fail((empty,empty,empty)) in
        {99}let v_573: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_571))) in
        {100}let v_574: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_573))) in
        {101}let v_575: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_574),2-proj-2-tuple(v_574),3-proj-3-tuple(v_573),msg_c(me,them))) in
        {102}let v_576: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_573))) in
        {103}let v_577: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_574))) && success?(1-proj-3-tuple(v_573))) then (if (not-caught-fail(v_576) && success?(is-true(success?(1-proj-2-tuple(v_576))))) then cipherstatepack(1-proj-2-tuple(v_576),increment_nonce(2-proj-2-tuple(v_574))) else fail-any) else fail-any)) in
        {104}let v_578: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_573)) && success?(1-proj-3-tuple(v_573))) then (if (not-caught-fail(v_574) && success?(is-true(success?(1-proj-2-tuple(v_574))))) then (if not-caught-fail(v_575) then (if not-caught-fail(v_577) then (v_577,v_575) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {105}let v_579: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_578),2-proj-3-tuple(v_573),3-proj-3-tuple(v_573)))) in
        {106}let v_580: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_578)) && success?(symmetricstatepack(1-proj-2-tuple(v_578),2-proj-3-tuple(v_573),3-proj-3-tuple(v_573)))) then (if (not-caught-fail(v_579) && success?(is-true(success?(1-proj-3-tuple(v_579))))) then symmetricstatepack(1-proj-3-tuple(v_579),2-proj-3-tuple(v_579),hash(3-proj-3-tuple(v_579),2-proj-2-tuple(v_578))) else fail-any) else fail-any)) in
        {107}let v_581: bitstring = catch-fail((if success?(1-proj-7-tuple(v_571)) then (if (not-caught-fail(v_573) && success?(is-true(success?(1-proj-3-tuple(v_573))))) then (if (not-caught-fail(v_578) && success?(is-true(success?(1-proj-2-tuple(v_578))))) then (if not-caught-fail(v_580) then (v_580,2-proj-2-tuple(v_578)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {108}let v_582: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_581),2-proj-7-tuple(v_571),3-proj-7-tuple(v_571),4-proj-7-tuple(v_571),5-proj-7-tuple(v_571),6-proj-7-tuple(v_571),7-proj-7-tuple(v_571))) in
        {109}let v_583: bitstring = catch-fail(concat3(1-proj-3-tuple(v_572),2-proj-3-tuple(v_572),2-proj-2-tuple(v_581))) in
        {110}let (hs_584: handshakestate,re_585: key,message_c: bitstring) = (if (not-caught-fail(v_571) && success?(is-true(success?(1-proj-7-tuple(v_571))))) then (if (not-caught-fail(v_572) && success?(is-true(success?(1-proj-3-tuple(v_572))))) then (if (not-caught-fail(v_581) && success?(is-true(success?(1-proj-2-tuple(v_581))))) then (if not-caught-fail(v_582) then (if not-caught-fail(v_583) then (v_582,5-proj-7-tuple(v_571),v_583) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {111}event SendMsg(me,them,stage_c,msg_c(me,them),true);
        {112}insert statestore(me,them,statepack_d(hs_584));
        {113}out(pub, message_c)
    ) | (
        {142}get statestore(=me,=them,statepack_d(hs_586: handshakestate)) in
        {115}in(pub, message_d: bitstring);
        {116}let v_587: bitstring = catch-fail(handshakestateunpack(hs_586)) in
        {117}let v_588: bitstring = catch-fail(deconcat3(message_d)) in
        {118}let v_589: bool = catch-fail(true) in
        {119}let v_590: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_587))) in
        {120}let v_591: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_590))) in
        {121}let v_592: aead = catch-fail(decrypt(1-proj-2-tuple(v_591),2-proj-2-tuple(v_591),3-proj-3-tuple(v_590),3-proj-3-tuple(v_588))) in
        {122}let v_593: bitstring = catch-fail(aeadunpack(v_592)) in
        {123}let v_594: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_590))) in
        {124}let v_595: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_591))) && success?(1-proj-3-tuple(v_590))) then (if (not-caught-fail(v_594) && success?(is-true(success?(1-proj-2-tuple(v_594))))) then cipherstatepack(1-proj-2-tuple(v_594),increment_nonce(2-proj-2-tuple(v_591))) else fail-any) else fail-any)) in
        {125}let v_596: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_588)) && (success?(3-proj-3-tuple(v_590)) && success?(1-proj-3-tuple(v_590)))) then (if (not-caught-fail(v_591) && success?(is-true(success?(1-proj-2-tuple(v_591))))) then (if not-caught-fail(v_592) then (if (not-caught-fail(v_593) && success?(is-true(success?(1-proj-3-tuple(v_593))))) then (if not-caught-fail(v_595) then (v_595,3-proj-3-tuple(v_593),1-proj-3-tuple(v_593)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {126}let v_597: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_596),2-proj-3-tuple(v_590),3-proj-3-tuple(v_590)))) in
        {127}let v_598: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_588)) && success?(symmetricstatepack(1-proj-3-tuple(v_596),2-proj-3-tuple(v_590),3-proj-3-tuple(v_590)))) then (if (not-caught-fail(v_597) && success?(is-true(success?(1-proj-3-tuple(v_597))))) then symmetricstatepack(1-proj-3-tuple(v_597),2-proj-3-tuple(v_597),hash(3-proj-3-tuple(v_597),3-proj-3-tuple(v_588))) else fail-any) else fail-any)) in
        {128}let v_599: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_588)) && success?(1-proj-7-tuple(v_587))) then (if (not-caught-fail(v_590) && success?(is-true(success?(1-proj-3-tuple(v_590))))) then (if (not-caught-fail(v_596) && success?(is-true(success?(1-proj-3-tuple(v_596))))) then (if not-caught-fail(v_598) then (v_598,2-proj-3-tuple(v_596),3-proj-3-tuple(v_596)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {129}let v_600: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_599),2-proj-7-tuple(v_587),3-proj-7-tuple(v_587),4-proj-7-tuple(v_587),5-proj-7-tuple(v_587),6-proj-7-tuple(v_587),7-proj-7-tuple(v_587))) in
        {130}let v_601: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_599))) in
        {131}let v_602: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_601),zero)) in
        {132}let v_603: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_601),zero)) in
        {133}let v_604: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_601),zero)) in
        {134}let v_605: bitstring = catch-fail((if success?(2-proj-3-tuple(v_601)) then (if not-caught-fail(v_602) then (if not-caught-fail(v_603) then (if not-caught-fail(v_604) then (v_602,v_603,v_604) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {135}let v_606: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_605)) then cipherstatepack(1-proj-3-tuple(v_605),minnonce) else fail-any)) in
        {136}let v_607: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_605)) then cipherstatepack(2-proj-3-tuple(v_605),minnonce) else fail-any)) in
        {137}let v_608: bitstring = catch-fail((if success?(1-proj-3-tuple(v_599)) then (if (not-caught-fail(v_601) && success?(is-true(success?(1-proj-3-tuple(v_601))))) then (if (not-caught-fail(v_605) && success?(is-true(success?(1-proj-3-tuple(v_605))))) then (if not-caught-fail(v_606) then (if not-caught-fail(v_607) then (1-proj-3-tuple(v_599),v_606,v_607) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {138}let (hs_609: handshakestate,re_610: key,plaintext_d: bitstring,valid_611: bool,cs1: cipherstate,cs2: cipherstate) = (if (not-caught-fail(v_587) && success?(is-true(success?(1-proj-7-tuple(v_587))))) then (if (not-caught-fail(v_588) && success?(is-true(success?(1-proj-3-tuple(v_588))))) then (if not-caught-fail(v_589) then (if (not-caught-fail(v_599) && success?(is-true(success?(1-proj-3-tuple(v_599))))) then (if (v_589 && 3-proj-3-tuple(v_599)) then (if not-caught-fail(v_600) then (if (not-caught-fail(v_608) && success?(is-true(success?(1-proj-3-tuple(v_608))))) then (v_600,getpublickey(3-proj-7-tuple(v_587)),2-proj-3-tuple(v_599),true,2-proj-3-tuple(v_608),3-proj-3-tuple(v_608)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {139}event RecvMsg(me,them,stage_d,plaintext_d,valid_611);
        {140}insert statestore(me,them,statepack_e(hs_609));
        {141}event RecvEnd(valid_611)
    ) | (
        {143}event LeakS(phase0,me);
        {144}out(pub, key_s(me))
    ) | (
        {145}phase 1;
        {146}event LeakS(phase1,me);
        {147}out(pub, key_s(me))
    )
) | (
    {148}let them_612: principal = charlie in
    {149}let me_613: principal = alice in
    {150}let v_614: key = catch-fail(dhexp(key_s(me_613),g)) in
    {151}let s_615: keypair = (if not-caught-fail(v_614) then keypairpack(v_614,key_s(me_613)) else fail-any) in
    {152}out(pub, getpublickey(s_615));
    (
        {153}let e_616: keypair = keypairpack(empty,empty) in
        {154}let v_617: key = catch-fail(dhexp(key_s(them_612),g)) in
        {155}let rs_618: key = getpublickey((if not-caught-fail(v_617) then keypairpack(v_617,key_s(them_612)) else fail-any)) in
        {156}let re_619: key = empty in
        {157}let v_620: bitstring = catch-fail(hash(somename,empty)) in
        {158}let v_621: key = catch-fail(v_620) in
        {159}let v_622: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {160}let v_623: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_620) then (if not-caught-fail(v_621) then (if not-caught-fail(v_622) then symmetricstatepack(v_622,v_621,v_620) else fail-any) else fail-any) else fail-any))) in
        {161}let v_624: symmetricstate = catch-fail((if success?((if not-caught-fail(v_620) then (if not-caught-fail(v_621) then (if not-caught-fail(v_622) then symmetricstatepack(v_622,v_621,v_620) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_623) && success?(is-true(success?(1-proj-3-tuple(v_623))))) then symmetricstatepack(1-proj-3-tuple(v_623),2-proj-3-tuple(v_623),hash(3-proj-3-tuple(v_623),empty)) else fail-any) else fail-any)) in
        {162}let v_625: bitstring = catch-fail(symmetricstateunpack(v_624)) in
        {163}let v_626: symmetricstate = catch-fail((if success?(getpublickey(s_615)) then (if (not-caught-fail(v_625) && success?(is-true(success?(1-proj-3-tuple(v_625))))) then symmetricstatepack(1-proj-3-tuple(v_625),2-proj-3-tuple(v_625),hash(3-proj-3-tuple(v_625),getpublickey(s_615))) else fail-any) else fail-any)) in
        {164}let v_627: bitstring = catch-fail(symmetricstateunpack(v_626)) in
        {165}let v_628: symmetricstate = catch-fail((if (not-caught-fail(v_627) && success?(is-true(success?(1-proj-3-tuple(v_627))))) then symmetricstatepack(1-proj-3-tuple(v_627),2-proj-3-tuple(v_627),hash(3-proj-3-tuple(v_627),rs_618)) else fail-any)) in
        {166}let hs_629: handshakestate = (if not-caught-fail(v_624) then (if not-caught-fail(v_626) then (if not-caught-fail(v_628) then handshakestatepack(v_628,s_615,e_616,rs_618,re_619,empty,true) else fail-any) else fail-any) else fail-any) in
        {167}insert statestore(me_613,them_612,statepack_a(hs_629))
    ) | (
        {205}get statestore(=me_613,=them_612,statepack_a(hs_630: handshakestate)) in
        {168}let v_631: bitstring = catch-fail(handshakestateunpack(hs_630)) in
        {169}let v_632: bitstring = catch-fail((empty,empty,empty)) in
        {170}new key_e_633[me_613,them_612]: key;
        {171}let v_634: key = catch-fail(dhexp(key_e_633,g)) in
        {172}let v_635: keypair = catch-fail((if not-caught-fail(v_634) then keypairpack(v_634,key_e_633) else fail-any)) in
        {173}let v_636: bitstring = catch-fail(getpublickey(v_635)) in
        {174}let v_637: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_631))) in
        {175}let v_638: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_631)) then (if (not-caught-fail(v_637) && success?(is-true(success?(1-proj-3-tuple(v_637))))) then symmetricstatepack(1-proj-3-tuple(v_637),2-proj-3-tuple(v_637),hash(3-proj-3-tuple(v_637),v_636)) else fail-any) else fail-any)) in
        {176}let v_639: bitstring = catch-fail(keypairunpack(v_635)) in
        {177}let v_640: bitstring = catch-fail(symmetricstateunpack(v_638)) in
        {178}let v_641: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_640),(if success?(4-proj-7-tuple(v_631)) then (if (not-caught-fail(v_639) && success?(is-true(success?(1-proj-2-tuple(v_639))))) then dhexp(2-proj-2-tuple(v_639),4-proj-7-tuple(v_631)) else fail-any) else fail-any))) in
        {179}let v_642: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_640),(if success?(4-proj-7-tuple(v_631)) then (if (not-caught-fail(v_639) && success?(is-true(success?(1-proj-2-tuple(v_639))))) then dhexp(2-proj-2-tuple(v_639),4-proj-7-tuple(v_631)) else fail-any) else fail-any))) in
        {180}let v_643: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_640),(if success?(4-proj-7-tuple(v_631)) then (if (not-caught-fail(v_639) && success?(is-true(success?(1-proj-2-tuple(v_639))))) then dhexp(2-proj-2-tuple(v_639),4-proj-7-tuple(v_631)) else fail-any) else fail-any))) in
        {181}let v_644: bitstring = catch-fail((if (success?((if success?(4-proj-7-tuple(v_631)) then (if (not-caught-fail(v_639) && success?(is-true(success?(1-proj-2-tuple(v_639))))) then dhexp(2-proj-2-tuple(v_639),4-proj-7-tuple(v_631)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_640))) then (if not-caught-fail(v_641) then (if not-caught-fail(v_642) then (if not-caught-fail(v_643) then (v_641,v_642,v_643) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {182}let v_645: symmetricstate = catch-fail((if success?((if success?(4-proj-7-tuple(v_631)) then (if (not-caught-fail(v_639) && success?(is-true(success?(1-proj-2-tuple(v_639))))) then dhexp(2-proj-2-tuple(v_639),4-proj-7-tuple(v_631)) else fail-any) else fail-any)) then (if (not-caught-fail(v_640) && success?(is-true(success?(1-proj-3-tuple(v_640))))) then (if (not-caught-fail(v_644) && success?(is-true(success?(1-proj-3-tuple(v_644))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_644)) then cipherstatepack(2-proj-3-tuple(v_644),minnonce) else fail-any),1-proj-3-tuple(v_644),3-proj-3-tuple(v_640)) else fail-any) else fail-any) else fail-any)) in
        {183}let v_646: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_631))) in
        {184}let v_647: bitstring = catch-fail(symmetricstateunpack(v_645)) in
        {185}let v_648: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_647),(if (success?(4-proj-7-tuple(v_631)) && success?(2-proj-7-tuple(v_631))) then (if (not-caught-fail(v_646) && success?(is-true(success?(1-proj-2-tuple(v_646))))) then dhexp(2-proj-2-tuple(v_646),4-proj-7-tuple(v_631)) else fail-any) else fail-any))) in
        {186}let v_649: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_647),(if (success?(4-proj-7-tuple(v_631)) && success?(2-proj-7-tuple(v_631))) then (if (not-caught-fail(v_646) && success?(is-true(success?(1-proj-2-tuple(v_646))))) then dhexp(2-proj-2-tuple(v_646),4-proj-7-tuple(v_631)) else fail-any) else fail-any))) in
        {187}let v_650: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_647),(if (success?(4-proj-7-tuple(v_631)) && success?(2-proj-7-tuple(v_631))) then (if (not-caught-fail(v_646) && success?(is-true(success?(1-proj-2-tuple(v_646))))) then dhexp(2-proj-2-tuple(v_646),4-proj-7-tuple(v_631)) else fail-any) else fail-any))) in
        {188}let v_651: bitstring = catch-fail((if (success?((if (success?(4-proj-7-tuple(v_631)) && success?(2-proj-7-tuple(v_631))) then (if (not-caught-fail(v_646) && success?(is-true(success?(1-proj-2-tuple(v_646))))) then dhexp(2-proj-2-tuple(v_646),4-proj-7-tuple(v_631)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_647))) then (if not-caught-fail(v_648) then (if not-caught-fail(v_649) then (if not-caught-fail(v_650) then (v_648,v_649,v_650) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {189}let v_652: symmetricstate = catch-fail((if success?((if (success?(4-proj-7-tuple(v_631)) && success?(2-proj-7-tuple(v_631))) then (if (not-caught-fail(v_646) && success?(is-true(success?(1-proj-2-tuple(v_646))))) then dhexp(2-proj-2-tuple(v_646),4-proj-7-tuple(v_631)) else fail-any) else fail-any)) then (if (not-caught-fail(v_647) && success?(is-true(success?(1-proj-3-tuple(v_647))))) then (if (not-caught-fail(v_651) && success?(is-true(success?(1-proj-3-tuple(v_651))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_651)) then cipherstatepack(2-proj-3-tuple(v_651),minnonce) else fail-any),1-proj-3-tuple(v_651),3-proj-3-tuple(v_647)) else fail-any) else fail-any) else fail-any)) in
        {190}let v_653: bitstring = catch-fail(symmetricstateunpack(v_652)) in
        {191}let v_654: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_653))) in
        {192}let v_655: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_654),2-proj-2-tuple(v_654),3-proj-3-tuple(v_653),msg_a(me_613,them_612))) in
        {193}let v_656: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_653))) in
        {194}let v_657: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_654))) && success?(1-proj-3-tuple(v_653))) then (if (not-caught-fail(v_656) && success?(is-true(success?(1-proj-2-tuple(v_656))))) then cipherstatepack(1-proj-2-tuple(v_656),increment_nonce(2-proj-2-tuple(v_654))) else fail-any) else fail-any)) in
        {195}let v_658: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_653)) && success?(1-proj-3-tuple(v_653))) then (if (not-caught-fail(v_654) && success?(is-true(success?(1-proj-2-tuple(v_654))))) then (if not-caught-fail(v_655) then (if not-caught-fail(v_657) then (v_657,v_655) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {196}let v_659: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_658),2-proj-3-tuple(v_653),3-proj-3-tuple(v_653)))) in
        {197}let v_660: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_658)) && success?(symmetricstatepack(1-proj-2-tuple(v_658),2-proj-3-tuple(v_653),3-proj-3-tuple(v_653)))) then (if (not-caught-fail(v_659) && success?(is-true(success?(1-proj-3-tuple(v_659))))) then symmetricstatepack(1-proj-3-tuple(v_659),2-proj-3-tuple(v_659),hash(3-proj-3-tuple(v_659),2-proj-2-tuple(v_658))) else fail-any) else fail-any)) in
        {198}let v_661: bitstring = catch-fail((if (not-caught-fail(v_653) && success?(is-true(success?(1-proj-3-tuple(v_653))))) then (if (not-caught-fail(v_658) && success?(is-true(success?(1-proj-2-tuple(v_658))))) then (if not-caught-fail(v_660) then (v_660,2-proj-2-tuple(v_658)) else fail-any) else fail-any) else fail-any)) in
        {199}let v_662: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_661),2-proj-7-tuple(v_631),v_635,4-proj-7-tuple(v_631),5-proj-7-tuple(v_631),6-proj-7-tuple(v_631),7-proj-7-tuple(v_631))) in
        {200}let v_663: bitstring = catch-fail(concat3(v_636,2-proj-3-tuple(v_632),2-proj-2-tuple(v_661))) in
        {201}let (hs_664: handshakestate,re_665: key,message_a_666: bitstring) = (if (not-caught-fail(v_631) && success?(is-true(success?(1-proj-7-tuple(v_631))))) then (if (not-caught-fail(v_632) && success?(is-true(success?(1-proj-3-tuple(v_632))))) then (if not-caught-fail(v_635) then (if not-caught-fail(v_636) then (if not-caught-fail(v_638) then (if not-caught-fail(v_645) then (if not-caught-fail(v_652) then (if (not-caught-fail(v_661) && success?(is-true(success?(1-proj-2-tuple(v_661))))) then (if not-caught-fail(v_662) then (if not-caught-fail(v_663) then (v_662,5-proj-7-tuple(v_631),v_663) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {202}event SendMsg(me_613,them_612,stage_a,msg_a(me_613,them_612),true);
        {203}insert statestore(me_613,them_612,statepack_b(hs_664));
        {204}out(pub, message_a_666)
    ) | (
        {241}get statestore(=me_613,=them_612,statepack_b(hs_667: handshakestate)) in
        {206}in(pub, message_b_668: bitstring);
        {207}let v_669: bitstring = catch-fail(handshakestateunpack(hs_667)) in
        {208}let v_670: bitstring = catch-fail(deconcat3(message_b_668)) in
        {209}let v_671: bool = catch-fail(true) in
        {210}let v_672: key = catch-fail(1-proj-3-tuple(v_670)) in
        {211}let v_673: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_669))) in
        {212}let v_674: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_669)) then (if (not-caught-fail(v_673) && success?(is-true(success?(1-proj-3-tuple(v_673))))) then symmetricstatepack(1-proj-3-tuple(v_673),2-proj-3-tuple(v_673),hash(3-proj-3-tuple(v_673),v_672)) else fail-any) else fail-any)) in
        {213}let v_675: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_669))) in
        {214}let v_676: bitstring = catch-fail(symmetricstateunpack(v_674)) in
        {215}let v_677: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_676),(if success?(3-proj-7-tuple(v_669)) then (if (not-caught-fail(v_675) && success?(is-true(success?(1-proj-2-tuple(v_675))))) then dhexp(2-proj-2-tuple(v_675),v_672) else fail-any) else fail-any))) in
        {216}let v_678: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_676),(if success?(3-proj-7-tuple(v_669)) then (if (not-caught-fail(v_675) && success?(is-true(success?(1-proj-2-tuple(v_675))))) then dhexp(2-proj-2-tuple(v_675),v_672) else fail-any) else fail-any))) in
        {217}let v_679: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_676),(if success?(3-proj-7-tuple(v_669)) then (if (not-caught-fail(v_675) && success?(is-true(success?(1-proj-2-tuple(v_675))))) then dhexp(2-proj-2-tuple(v_675),v_672) else fail-any) else fail-any))) in
        {218}let v_680: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_669)) then (if (not-caught-fail(v_675) && success?(is-true(success?(1-proj-2-tuple(v_675))))) then dhexp(2-proj-2-tuple(v_675),v_672) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_676))) then (if not-caught-fail(v_677) then (if not-caught-fail(v_678) then (if not-caught-fail(v_679) then (v_677,v_678,v_679) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {219}let v_681: symmetricstate = catch-fail((if success?((if success?(3-proj-7-tuple(v_669)) then (if (not-caught-fail(v_675) && success?(is-true(success?(1-proj-2-tuple(v_675))))) then dhexp(2-proj-2-tuple(v_675),v_672) else fail-any) else fail-any)) then (if (not-caught-fail(v_676) && success?(is-true(success?(1-proj-3-tuple(v_676))))) then (if (not-caught-fail(v_680) && success?(is-true(success?(1-proj-3-tuple(v_680))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_680)) then cipherstatepack(2-proj-3-tuple(v_680),minnonce) else fail-any),1-proj-3-tuple(v_680),3-proj-3-tuple(v_676)) else fail-any) else fail-any) else fail-any)) in
        {220}let v_682: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_669))) in
        {221}let v_683: bitstring = catch-fail(symmetricstateunpack(v_681)) in
        {222}let v_684: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_683),(if success?(2-proj-7-tuple(v_669)) then (if (not-caught-fail(v_682) && success?(is-true(success?(1-proj-2-tuple(v_682))))) then dhexp(2-proj-2-tuple(v_682),v_672) else fail-any) else fail-any))) in
        {223}let v_685: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_683),(if success?(2-proj-7-tuple(v_669)) then (if (not-caught-fail(v_682) && success?(is-true(success?(1-proj-2-tuple(v_682))))) then dhexp(2-proj-2-tuple(v_682),v_672) else fail-any) else fail-any))) in
        {224}let v_686: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_683),(if success?(2-proj-7-tuple(v_669)) then (if (not-caught-fail(v_682) && success?(is-true(success?(1-proj-2-tuple(v_682))))) then dhexp(2-proj-2-tuple(v_682),v_672) else fail-any) else fail-any))) in
        {225}let v_687: bitstring = catch-fail((if (success?((if success?(2-proj-7-tuple(v_669)) then (if (not-caught-fail(v_682) && success?(is-true(success?(1-proj-2-tuple(v_682))))) then dhexp(2-proj-2-tuple(v_682),v_672) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_683))) then (if not-caught-fail(v_684) then (if not-caught-fail(v_685) then (if not-caught-fail(v_686) then (v_684,v_685,v_686) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {226}let v_688: symmetricstate = catch-fail((if success?((if success?(2-proj-7-tuple(v_669)) then (if (not-caught-fail(v_682) && success?(is-true(success?(1-proj-2-tuple(v_682))))) then dhexp(2-proj-2-tuple(v_682),v_672) else fail-any) else fail-any)) then (if (not-caught-fail(v_683) && success?(is-true(success?(1-proj-3-tuple(v_683))))) then (if (not-caught-fail(v_687) && success?(is-true(success?(1-proj-3-tuple(v_687))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_687)) then cipherstatepack(2-proj-3-tuple(v_687),minnonce) else fail-any),1-proj-3-tuple(v_687),3-proj-3-tuple(v_683)) else fail-any) else fail-any) else fail-any)) in
        {227}let v_689: bitstring = catch-fail(symmetricstateunpack(v_688)) in
        {228}let v_690: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_689))) in
        {229}let v_691: aead = catch-fail(decrypt(1-proj-2-tuple(v_690),2-proj-2-tuple(v_690),3-proj-3-tuple(v_689),3-proj-3-tuple(v_670))) in
        {230}let v_692: bitstring = catch-fail(aeadunpack(v_691)) in
        {231}let v_693: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_689))) in
        {232}let v_694: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_690))) && success?(1-proj-3-tuple(v_689))) then (if (not-caught-fail(v_693) && success?(is-true(success?(1-proj-2-tuple(v_693))))) then cipherstatepack(1-proj-2-tuple(v_693),increment_nonce(2-proj-2-tuple(v_690))) else fail-any) else fail-any)) in
        {233}let v_695: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_670)) && (success?(3-proj-3-tuple(v_689)) && success?(1-proj-3-tuple(v_689)))) then (if (not-caught-fail(v_690) && success?(is-true(success?(1-proj-2-tuple(v_690))))) then (if not-caught-fail(v_691) then (if (not-caught-fail(v_692) && success?(is-true(success?(1-proj-3-tuple(v_692))))) then (if not-caught-fail(v_694) then (v_694,3-proj-3-tuple(v_692),1-proj-3-tuple(v_692)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {234}let v_696: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_695),2-proj-3-tuple(v_689),3-proj-3-tuple(v_689)))) in
        {235}let v_697: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_670)) && success?(symmetricstatepack(1-proj-3-tuple(v_695),2-proj-3-tuple(v_689),3-proj-3-tuple(v_689)))) then (if (not-caught-fail(v_696) && success?(is-true(success?(1-proj-3-tuple(v_696))))) then symmetricstatepack(1-proj-3-tuple(v_696),2-proj-3-tuple(v_696),hash(3-proj-3-tuple(v_696),3-proj-3-tuple(v_670))) else fail-any) else fail-any)) in
        {236}let v_698: bitstring = catch-fail((if success?(3-proj-3-tuple(v_670)) then (if (not-caught-fail(v_689) && success?(is-true(success?(1-proj-3-tuple(v_689))))) then (if (not-caught-fail(v_695) && success?(is-true(success?(1-proj-3-tuple(v_695))))) then (if not-caught-fail(v_697) then (v_697,2-proj-3-tuple(v_695),3-proj-3-tuple(v_695)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {237}let v_699: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_698),2-proj-7-tuple(v_669),3-proj-7-tuple(v_669),4-proj-7-tuple(v_669),v_672,6-proj-7-tuple(v_669),7-proj-7-tuple(v_669))) in
        {238}let (hs_700: handshakestate,re_701: key,plaintext_b_702: bitstring,valid_703: bool) = (if (not-caught-fail(v_669) && success?(is-true(success?(1-proj-7-tuple(v_669))))) then (if (not-caught-fail(v_670) && success?(is-true(success?(1-proj-3-tuple(v_670))))) then (if not-caught-fail(v_671) then (if not-caught-fail(v_672) then (if not-caught-fail(v_674) then (if not-caught-fail(v_681) then (if not-caught-fail(v_688) then (if (not-caught-fail(v_698) && success?(is-true(success?(1-proj-3-tuple(v_698))))) then (if (v_671 && 3-proj-3-tuple(v_698)) then (if not-caught-fail(v_699) then (v_699,getpublickey(3-proj-7-tuple(v_669)),2-proj-3-tuple(v_698),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {239}event RecvMsg(me_613,them_612,stage_b,plaintext_b_702,valid_703);
        {240}insert statestore(me_613,them_612,statepack_c(hs_700))
    ) | (
        {259}get statestore(=me_613,=them_612,statepack_c(hs_704: handshakestate)) in
        {242}let v_705: bitstring = catch-fail(handshakestateunpack(hs_704)) in
        {243}let v_706: bitstring = catch-fail((empty,empty,empty)) in
        {244}let v_707: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_705))) in
        {245}let v_708: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_707))) in
        {246}let v_709: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_708),2-proj-2-tuple(v_708),3-proj-3-tuple(v_707),msg_c(me_613,them_612))) in
        {247}let v_710: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_707))) in
        {248}let v_711: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_708))) && success?(1-proj-3-tuple(v_707))) then (if (not-caught-fail(v_710) && success?(is-true(success?(1-proj-2-tuple(v_710))))) then cipherstatepack(1-proj-2-tuple(v_710),increment_nonce(2-proj-2-tuple(v_708))) else fail-any) else fail-any)) in
        {249}let v_712: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_707)) && success?(1-proj-3-tuple(v_707))) then (if (not-caught-fail(v_708) && success?(is-true(success?(1-proj-2-tuple(v_708))))) then (if not-caught-fail(v_709) then (if not-caught-fail(v_711) then (v_711,v_709) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {250}let v_713: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_712),2-proj-3-tuple(v_707),3-proj-3-tuple(v_707)))) in
        {251}let v_714: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_712)) && success?(symmetricstatepack(1-proj-2-tuple(v_712),2-proj-3-tuple(v_707),3-proj-3-tuple(v_707)))) then (if (not-caught-fail(v_713) && success?(is-true(success?(1-proj-3-tuple(v_713))))) then symmetricstatepack(1-proj-3-tuple(v_713),2-proj-3-tuple(v_713),hash(3-proj-3-tuple(v_713),2-proj-2-tuple(v_712))) else fail-any) else fail-any)) in
        {252}let v_715: bitstring = catch-fail((if success?(1-proj-7-tuple(v_705)) then (if (not-caught-fail(v_707) && success?(is-true(success?(1-proj-3-tuple(v_707))))) then (if (not-caught-fail(v_712) && success?(is-true(success?(1-proj-2-tuple(v_712))))) then (if not-caught-fail(v_714) then (v_714,2-proj-2-tuple(v_712)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {253}let v_716: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_715),2-proj-7-tuple(v_705),3-proj-7-tuple(v_705),4-proj-7-tuple(v_705),5-proj-7-tuple(v_705),6-proj-7-tuple(v_705),7-proj-7-tuple(v_705))) in
        {254}let v_717: bitstring = catch-fail(concat3(1-proj-3-tuple(v_706),2-proj-3-tuple(v_706),2-proj-2-tuple(v_715))) in
        {255}let (hs_718: handshakestate,re_719: key,message_c_720: bitstring) = (if (not-caught-fail(v_705) && success?(is-true(success?(1-proj-7-tuple(v_705))))) then (if (not-caught-fail(v_706) && success?(is-true(success?(1-proj-3-tuple(v_706))))) then (if (not-caught-fail(v_715) && success?(is-true(success?(1-proj-2-tuple(v_715))))) then (if not-caught-fail(v_716) then (if not-caught-fail(v_717) then (v_716,5-proj-7-tuple(v_705),v_717) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {256}event SendMsg(me_613,them_612,stage_c,msg_c(me_613,them_612),true);
        {257}insert statestore(me_613,them_612,statepack_d(hs_718));
        {258}out(pub, message_c_720)
    ) | (
        {287}get statestore(=me_613,=them_612,statepack_d(hs_721: handshakestate)) in
        {260}in(pub, message_d_722: bitstring);
        {261}let v_723: bitstring = catch-fail(handshakestateunpack(hs_721)) in
        {262}let v_724: bitstring = catch-fail(deconcat3(message_d_722)) in
        {263}let v_725: bool = catch-fail(true) in
        {264}let v_726: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_723))) in
        {265}let v_727: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_726))) in
        {266}let v_728: aead = catch-fail(decrypt(1-proj-2-tuple(v_727),2-proj-2-tuple(v_727),3-proj-3-tuple(v_726),3-proj-3-tuple(v_724))) in
        {267}let v_729: bitstring = catch-fail(aeadunpack(v_728)) in
        {268}let v_730: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_726))) in
        {269}let v_731: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_727))) && success?(1-proj-3-tuple(v_726))) then (if (not-caught-fail(v_730) && success?(is-true(success?(1-proj-2-tuple(v_730))))) then cipherstatepack(1-proj-2-tuple(v_730),increment_nonce(2-proj-2-tuple(v_727))) else fail-any) else fail-any)) in
        {270}let v_732: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_724)) && (success?(3-proj-3-tuple(v_726)) && success?(1-proj-3-tuple(v_726)))) then (if (not-caught-fail(v_727) && success?(is-true(success?(1-proj-2-tuple(v_727))))) then (if not-caught-fail(v_728) then (if (not-caught-fail(v_729) && success?(is-true(success?(1-proj-3-tuple(v_729))))) then (if not-caught-fail(v_731) then (v_731,3-proj-3-tuple(v_729),1-proj-3-tuple(v_729)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {271}let v_733: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_732),2-proj-3-tuple(v_726),3-proj-3-tuple(v_726)))) in
        {272}let v_734: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_724)) && success?(symmetricstatepack(1-proj-3-tuple(v_732),2-proj-3-tuple(v_726),3-proj-3-tuple(v_726)))) then (if (not-caught-fail(v_733) && success?(is-true(success?(1-proj-3-tuple(v_733))))) then symmetricstatepack(1-proj-3-tuple(v_733),2-proj-3-tuple(v_733),hash(3-proj-3-tuple(v_733),3-proj-3-tuple(v_724))) else fail-any) else fail-any)) in
        {273}let v_735: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_724)) && success?(1-proj-7-tuple(v_723))) then (if (not-caught-fail(v_726) && success?(is-true(success?(1-proj-3-tuple(v_726))))) then (if (not-caught-fail(v_732) && success?(is-true(success?(1-proj-3-tuple(v_732))))) then (if not-caught-fail(v_734) then (v_734,2-proj-3-tuple(v_732),3-proj-3-tuple(v_732)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {274}let v_736: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_735),2-proj-7-tuple(v_723),3-proj-7-tuple(v_723),4-proj-7-tuple(v_723),5-proj-7-tuple(v_723),6-proj-7-tuple(v_723),7-proj-7-tuple(v_723))) in
        {275}let v_737: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_735))) in
        {276}let v_738: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_737),zero)) in
        {277}let v_739: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_737),zero)) in
        {278}let v_740: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_737),zero)) in
        {279}let v_741: bitstring = catch-fail((if success?(2-proj-3-tuple(v_737)) then (if not-caught-fail(v_738) then (if not-caught-fail(v_739) then (if not-caught-fail(v_740) then (v_738,v_739,v_740) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {280}let v_742: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_741)) then cipherstatepack(1-proj-3-tuple(v_741),minnonce) else fail-any)) in
        {281}let v_743: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_741)) then cipherstatepack(2-proj-3-tuple(v_741),minnonce) else fail-any)) in
        {282}let v_744: bitstring = catch-fail((if success?(1-proj-3-tuple(v_735)) then (if (not-caught-fail(v_737) && success?(is-true(success?(1-proj-3-tuple(v_737))))) then (if (not-caught-fail(v_741) && success?(is-true(success?(1-proj-3-tuple(v_741))))) then (if not-caught-fail(v_742) then (if not-caught-fail(v_743) then (1-proj-3-tuple(v_735),v_742,v_743) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {283}let (hs_745: handshakestate,re_746: key,plaintext_d_747: bitstring,valid_748: bool,cs1_749: cipherstate,cs2_750: cipherstate) = (if (not-caught-fail(v_723) && success?(is-true(success?(1-proj-7-tuple(v_723))))) then (if (not-caught-fail(v_724) && success?(is-true(success?(1-proj-3-tuple(v_724))))) then (if not-caught-fail(v_725) then (if (not-caught-fail(v_735) && success?(is-true(success?(1-proj-3-tuple(v_735))))) then (if (v_725 && 3-proj-3-tuple(v_735)) then (if not-caught-fail(v_736) then (if (not-caught-fail(v_744) && success?(is-true(success?(1-proj-3-tuple(v_744))))) then (v_736,getpublickey(3-proj-7-tuple(v_723)),2-proj-3-tuple(v_735),true,2-proj-3-tuple(v_744),3-proj-3-tuple(v_744)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {284}event RecvMsg(me_613,them_612,stage_d,plaintext_d_747,valid_748);
        {285}insert statestore(me_613,them_612,statepack_e(hs_745));
        {286}event RecvEnd(valid_748)
    ) | (
        {288}event LeakS(phase0,me_613);
        {289}out(pub, key_s(me_613))
    ) | (
        {290}phase 1;
        {291}event LeakS(phase1,me_613);
        {292}out(pub, key_s(me_613))
    )
) | (
    {293}let them_751: principal = alice in
    {294}let me_752: principal = bob in
    {295}let v_753: key = catch-fail(dhexp(key_s(me_752),g)) in
    {296}let s_754: keypair = (if not-caught-fail(v_753) then keypairpack(v_753,key_s(me_752)) else fail-any) in
    {297}out(pub, getpublickey(s_754));
    (
        {298}let e_755: keypair = keypairpack(empty,empty) in
        {299}let v_756: key = catch-fail(dhexp(key_s(them_751),g)) in
        {300}let rs_757: key = getpublickey((if not-caught-fail(v_756) then keypairpack(v_756,key_s(them_751)) else fail-any)) in
        {301}let re_758: key = empty in
        {302}let v_759: bitstring = catch-fail(hash(somename,empty)) in
        {303}let v_760: key = catch-fail(v_759) in
        {304}let v_761: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {305}let v_762: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_759) then (if not-caught-fail(v_760) then (if not-caught-fail(v_761) then symmetricstatepack(v_761,v_760,v_759) else fail-any) else fail-any) else fail-any))) in
        {306}let v_763: symmetricstate = catch-fail((if success?((if not-caught-fail(v_759) then (if not-caught-fail(v_760) then (if not-caught-fail(v_761) then symmetricstatepack(v_761,v_760,v_759) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_762) && success?(is-true(success?(1-proj-3-tuple(v_762))))) then symmetricstatepack(1-proj-3-tuple(v_762),2-proj-3-tuple(v_762),hash(3-proj-3-tuple(v_762),empty)) else fail-any) else fail-any)) in
        {307}let v_764: bitstring = catch-fail(symmetricstateunpack(v_763)) in
        {308}let v_765: symmetricstate = catch-fail((if (not-caught-fail(v_764) && success?(is-true(success?(1-proj-3-tuple(v_764))))) then symmetricstatepack(1-proj-3-tuple(v_764),2-proj-3-tuple(v_764),hash(3-proj-3-tuple(v_764),rs_757)) else fail-any)) in
        {309}let v_766: bitstring = catch-fail(symmetricstateunpack(v_765)) in
        {310}let v_767: symmetricstate = catch-fail((if success?(getpublickey(s_754)) then (if (not-caught-fail(v_766) && success?(is-true(success?(1-proj-3-tuple(v_766))))) then symmetricstatepack(1-proj-3-tuple(v_766),2-proj-3-tuple(v_766),hash(3-proj-3-tuple(v_766),getpublickey(s_754))) else fail-any) else fail-any)) in
        {311}let hs_768: handshakestate = (if not-caught-fail(v_763) then (if not-caught-fail(v_765) then (if not-caught-fail(v_767) then handshakestatepack(v_767,s_754,e_755,rs_757,re_758,empty,false) else fail-any) else fail-any) else fail-any) in
        {312}insert statestore(me_752,them_751,statepack_a(hs_768))
    ) | (
        {348}get statestore(=me_752,=them_751,statepack_a(hs_769: handshakestate)) in
        {313}in(pub, message_a_770: bitstring);
        {314}let v_771: bitstring = catch-fail(handshakestateunpack(hs_769)) in
        {315}let v_772: bitstring = catch-fail(deconcat3(message_a_770)) in
        {316}let v_773: bool = catch-fail(true) in
        {317}let v_774: key = catch-fail(1-proj-3-tuple(v_772)) in
        {318}let v_775: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_771))) in
        {319}let v_776: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_771)) then (if (not-caught-fail(v_775) && success?(is-true(success?(1-proj-3-tuple(v_775))))) then symmetricstatepack(1-proj-3-tuple(v_775),2-proj-3-tuple(v_775),hash(3-proj-3-tuple(v_775),v_774)) else fail-any) else fail-any)) in
        {320}let v_777: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_771))) in
        {321}let v_778: bitstring = catch-fail(symmetricstateunpack(v_776)) in
        {322}let v_779: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_778),(if success?(2-proj-7-tuple(v_771)) then (if (not-caught-fail(v_777) && success?(is-true(success?(1-proj-2-tuple(v_777))))) then dhexp(2-proj-2-tuple(v_777),v_774) else fail-any) else fail-any))) in
        {323}let v_780: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_778),(if success?(2-proj-7-tuple(v_771)) then (if (not-caught-fail(v_777) && success?(is-true(success?(1-proj-2-tuple(v_777))))) then dhexp(2-proj-2-tuple(v_777),v_774) else fail-any) else fail-any))) in
        {324}let v_781: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_778),(if success?(2-proj-7-tuple(v_771)) then (if (not-caught-fail(v_777) && success?(is-true(success?(1-proj-2-tuple(v_777))))) then dhexp(2-proj-2-tuple(v_777),v_774) else fail-any) else fail-any))) in
        {325}let v_782: bitstring = catch-fail((if (success?((if success?(2-proj-7-tuple(v_771)) then (if (not-caught-fail(v_777) && success?(is-true(success?(1-proj-2-tuple(v_777))))) then dhexp(2-proj-2-tuple(v_777),v_774) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_778))) then (if not-caught-fail(v_779) then (if not-caught-fail(v_780) then (if not-caught-fail(v_781) then (v_779,v_780,v_781) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {326}let v_783: symmetricstate = catch-fail((if success?((if success?(2-proj-7-tuple(v_771)) then (if (not-caught-fail(v_777) && success?(is-true(success?(1-proj-2-tuple(v_777))))) then dhexp(2-proj-2-tuple(v_777),v_774) else fail-any) else fail-any)) then (if (not-caught-fail(v_778) && success?(is-true(success?(1-proj-3-tuple(v_778))))) then (if (not-caught-fail(v_782) && success?(is-true(success?(1-proj-3-tuple(v_782))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_782)) then cipherstatepack(2-proj-3-tuple(v_782),minnonce) else fail-any),1-proj-3-tuple(v_782),3-proj-3-tuple(v_778)) else fail-any) else fail-any) else fail-any)) in
        {327}let v_784: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_771))) in
        {328}let v_785: bitstring = catch-fail(symmetricstateunpack(v_783)) in
        {329}let v_786: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_785),(if (success?(4-proj-7-tuple(v_771)) && success?(2-proj-7-tuple(v_771))) then (if (not-caught-fail(v_784) && success?(is-true(success?(1-proj-2-tuple(v_784))))) then dhexp(2-proj-2-tuple(v_784),4-proj-7-tuple(v_771)) else fail-any) else fail-any))) in
        {330}let v_787: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_785),(if (success?(4-proj-7-tuple(v_771)) && success?(2-proj-7-tuple(v_771))) then (if (not-caught-fail(v_784) && success?(is-true(success?(1-proj-2-tuple(v_784))))) then dhexp(2-proj-2-tuple(v_784),4-proj-7-tuple(v_771)) else fail-any) else fail-any))) in
        {331}let v_788: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_785),(if (success?(4-proj-7-tuple(v_771)) && success?(2-proj-7-tuple(v_771))) then (if (not-caught-fail(v_784) && success?(is-true(success?(1-proj-2-tuple(v_784))))) then dhexp(2-proj-2-tuple(v_784),4-proj-7-tuple(v_771)) else fail-any) else fail-any))) in
        {332}let v_789: bitstring = catch-fail((if (success?((if (success?(4-proj-7-tuple(v_771)) && success?(2-proj-7-tuple(v_771))) then (if (not-caught-fail(v_784) && success?(is-true(success?(1-proj-2-tuple(v_784))))) then dhexp(2-proj-2-tuple(v_784),4-proj-7-tuple(v_771)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_785))) then (if not-caught-fail(v_786) then (if not-caught-fail(v_787) then (if not-caught-fail(v_788) then (v_786,v_787,v_788) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {333}let v_790: symmetricstate = catch-fail((if success?((if (success?(4-proj-7-tuple(v_771)) && success?(2-proj-7-tuple(v_771))) then (if (not-caught-fail(v_784) && success?(is-true(success?(1-proj-2-tuple(v_784))))) then dhexp(2-proj-2-tuple(v_784),4-proj-7-tuple(v_771)) else fail-any) else fail-any)) then (if (not-caught-fail(v_785) && success?(is-true(success?(1-proj-3-tuple(v_785))))) then (if (not-caught-fail(v_789) && success?(is-true(success?(1-proj-3-tuple(v_789))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_789)) then cipherstatepack(2-proj-3-tuple(v_789),minnonce) else fail-any),1-proj-3-tuple(v_789),3-proj-3-tuple(v_785)) else fail-any) else fail-any) else fail-any)) in
        {334}let v_791: bitstring = catch-fail(symmetricstateunpack(v_790)) in
        {335}let v_792: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_791))) in
        {336}let v_793: aead = catch-fail(decrypt(1-proj-2-tuple(v_792),2-proj-2-tuple(v_792),3-proj-3-tuple(v_791),3-proj-3-tuple(v_772))) in
        {337}let v_794: bitstring = catch-fail(aeadunpack(v_793)) in
        {338}let v_795: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_791))) in
        {339}let v_796: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_792))) && success?(1-proj-3-tuple(v_791))) then (if (not-caught-fail(v_795) && success?(is-true(success?(1-proj-2-tuple(v_795))))) then cipherstatepack(1-proj-2-tuple(v_795),increment_nonce(2-proj-2-tuple(v_792))) else fail-any) else fail-any)) in
        {340}let v_797: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_772)) && (success?(3-proj-3-tuple(v_791)) && success?(1-proj-3-tuple(v_791)))) then (if (not-caught-fail(v_792) && success?(is-true(success?(1-proj-2-tuple(v_792))))) then (if not-caught-fail(v_793) then (if (not-caught-fail(v_794) && success?(is-true(success?(1-proj-3-tuple(v_794))))) then (if not-caught-fail(v_796) then (v_796,3-proj-3-tuple(v_794),1-proj-3-tuple(v_794)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {341}let v_798: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_797),2-proj-3-tuple(v_791),3-proj-3-tuple(v_791)))) in
        {342}let v_799: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_772)) && success?(symmetricstatepack(1-proj-3-tuple(v_797),2-proj-3-tuple(v_791),3-proj-3-tuple(v_791)))) then (if (not-caught-fail(v_798) && success?(is-true(success?(1-proj-3-tuple(v_798))))) then symmetricstatepack(1-proj-3-tuple(v_798),2-proj-3-tuple(v_798),hash(3-proj-3-tuple(v_798),3-proj-3-tuple(v_772))) else fail-any) else fail-any)) in
        {343}let v_800: bitstring = catch-fail((if success?(3-proj-3-tuple(v_772)) then (if (not-caught-fail(v_791) && success?(is-true(success?(1-proj-3-tuple(v_791))))) then (if (not-caught-fail(v_797) && success?(is-true(success?(1-proj-3-tuple(v_797))))) then (if not-caught-fail(v_799) then (v_799,2-proj-3-tuple(v_797),3-proj-3-tuple(v_797)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {344}let v_801: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_800),2-proj-7-tuple(v_771),3-proj-7-tuple(v_771),4-proj-7-tuple(v_771),v_774,6-proj-7-tuple(v_771),7-proj-7-tuple(v_771))) in
        {345}let (hs_802: handshakestate,re_803: key,plaintext_a: bitstring,valid_804: bool) = (if (not-caught-fail(v_771) && success?(is-true(success?(1-proj-7-tuple(v_771))))) then (if (not-caught-fail(v_772) && success?(is-true(success?(1-proj-3-tuple(v_772))))) then (if not-caught-fail(v_773) then (if not-caught-fail(v_774) then (if not-caught-fail(v_776) then (if not-caught-fail(v_783) then (if not-caught-fail(v_790) then (if (not-caught-fail(v_800) && success?(is-true(success?(1-proj-3-tuple(v_800))))) then (if (v_773 && 3-proj-3-tuple(v_800)) then (if not-caught-fail(v_801) then (v_801,getpublickey(3-proj-7-tuple(v_771)),2-proj-3-tuple(v_800),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {346}event RecvMsg(me_752,them_751,stage_a,plaintext_a,valid_804);
        {347}insert statestore(me_752,them_751,statepack_b(hs_802))
    ) | (
        {386}get statestore(=me_752,=them_751,statepack_b(hs_805: handshakestate)) in
        {349}let v_806: bitstring = catch-fail(handshakestateunpack(hs_805)) in
        {350}let v_807: bitstring = catch-fail((empty,empty,empty)) in
        {351}new key_e_808[me_752,them_751]: key;
        {352}let v_809: key = catch-fail(dhexp(key_e_808,g)) in
        {353}let v_810: keypair = catch-fail((if not-caught-fail(v_809) then keypairpack(v_809,key_e_808) else fail-any)) in
        {354}let v_811: bitstring = catch-fail(getpublickey(v_810)) in
        {355}let v_812: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_806))) in
        {356}let v_813: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_806)) then (if (not-caught-fail(v_812) && success?(is-true(success?(1-proj-3-tuple(v_812))))) then symmetricstatepack(1-proj-3-tuple(v_812),2-proj-3-tuple(v_812),hash(3-proj-3-tuple(v_812),v_811)) else fail-any) else fail-any)) in
        {357}let v_814: bitstring = catch-fail(keypairunpack(v_810)) in
        {358}let v_815: bitstring = catch-fail(symmetricstateunpack(v_813)) in
        {359}let v_816: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_815),(if success?(5-proj-7-tuple(v_806)) then (if (not-caught-fail(v_814) && success?(is-true(success?(1-proj-2-tuple(v_814))))) then dhexp(2-proj-2-tuple(v_814),5-proj-7-tuple(v_806)) else fail-any) else fail-any))) in
        {360}let v_817: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_815),(if success?(5-proj-7-tuple(v_806)) then (if (not-caught-fail(v_814) && success?(is-true(success?(1-proj-2-tuple(v_814))))) then dhexp(2-proj-2-tuple(v_814),5-proj-7-tuple(v_806)) else fail-any) else fail-any))) in
        {361}let v_818: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_815),(if success?(5-proj-7-tuple(v_806)) then (if (not-caught-fail(v_814) && success?(is-true(success?(1-proj-2-tuple(v_814))))) then dhexp(2-proj-2-tuple(v_814),5-proj-7-tuple(v_806)) else fail-any) else fail-any))) in
        {362}let v_819: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_806)) then (if (not-caught-fail(v_814) && success?(is-true(success?(1-proj-2-tuple(v_814))))) then dhexp(2-proj-2-tuple(v_814),5-proj-7-tuple(v_806)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_815))) then (if not-caught-fail(v_816) then (if not-caught-fail(v_817) then (if not-caught-fail(v_818) then (v_816,v_817,v_818) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {363}let v_820: symmetricstate = catch-fail((if success?((if success?(5-proj-7-tuple(v_806)) then (if (not-caught-fail(v_814) && success?(is-true(success?(1-proj-2-tuple(v_814))))) then dhexp(2-proj-2-tuple(v_814),5-proj-7-tuple(v_806)) else fail-any) else fail-any)) then (if (not-caught-fail(v_815) && success?(is-true(success?(1-proj-3-tuple(v_815))))) then (if (not-caught-fail(v_819) && success?(is-true(success?(1-proj-3-tuple(v_819))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_819)) then cipherstatepack(2-proj-3-tuple(v_819),minnonce) else fail-any),1-proj-3-tuple(v_819),3-proj-3-tuple(v_815)) else fail-any) else fail-any) else fail-any)) in
        {364}let v_821: bitstring = catch-fail(keypairunpack(v_810)) in
        {365}let v_822: bitstring = catch-fail(symmetricstateunpack(v_820)) in
        {366}let v_823: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_822),(if success?(4-proj-7-tuple(v_806)) then (if (not-caught-fail(v_821) && success?(is-true(success?(1-proj-2-tuple(v_821))))) then dhexp(2-proj-2-tuple(v_821),4-proj-7-tuple(v_806)) else fail-any) else fail-any))) in
        {367}let v_824: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_822),(if success?(4-proj-7-tuple(v_806)) then (if (not-caught-fail(v_821) && success?(is-true(success?(1-proj-2-tuple(v_821))))) then dhexp(2-proj-2-tuple(v_821),4-proj-7-tuple(v_806)) else fail-any) else fail-any))) in
        {368}let v_825: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_822),(if success?(4-proj-7-tuple(v_806)) then (if (not-caught-fail(v_821) && success?(is-true(success?(1-proj-2-tuple(v_821))))) then dhexp(2-proj-2-tuple(v_821),4-proj-7-tuple(v_806)) else fail-any) else fail-any))) in
        {369}let v_826: bitstring = catch-fail((if (success?((if success?(4-proj-7-tuple(v_806)) then (if (not-caught-fail(v_821) && success?(is-true(success?(1-proj-2-tuple(v_821))))) then dhexp(2-proj-2-tuple(v_821),4-proj-7-tuple(v_806)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_822))) then (if not-caught-fail(v_823) then (if not-caught-fail(v_824) then (if not-caught-fail(v_825) then (v_823,v_824,v_825) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {370}let v_827: symmetricstate = catch-fail((if success?((if success?(4-proj-7-tuple(v_806)) then (if (not-caught-fail(v_821) && success?(is-true(success?(1-proj-2-tuple(v_821))))) then dhexp(2-proj-2-tuple(v_821),4-proj-7-tuple(v_806)) else fail-any) else fail-any)) then (if (not-caught-fail(v_822) && success?(is-true(success?(1-proj-3-tuple(v_822))))) then (if (not-caught-fail(v_826) && success?(is-true(success?(1-proj-3-tuple(v_826))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_826)) then cipherstatepack(2-proj-3-tuple(v_826),minnonce) else fail-any),1-proj-3-tuple(v_826),3-proj-3-tuple(v_822)) else fail-any) else fail-any) else fail-any)) in
        {371}let v_828: bitstring = catch-fail(symmetricstateunpack(v_827)) in
        {372}let v_829: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_828))) in
        {373}let v_830: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_829),2-proj-2-tuple(v_829),3-proj-3-tuple(v_828),msg_b(me_752,them_751))) in
        {374}let v_831: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_828))) in
        {375}let v_832: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_829))) && success?(1-proj-3-tuple(v_828))) then (if (not-caught-fail(v_831) && success?(is-true(success?(1-proj-2-tuple(v_831))))) then cipherstatepack(1-proj-2-tuple(v_831),increment_nonce(2-proj-2-tuple(v_829))) else fail-any) else fail-any)) in
        {376}let v_833: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_828)) && success?(1-proj-3-tuple(v_828))) then (if (not-caught-fail(v_829) && success?(is-true(success?(1-proj-2-tuple(v_829))))) then (if not-caught-fail(v_830) then (if not-caught-fail(v_832) then (v_832,v_830) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {377}let v_834: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_833),2-proj-3-tuple(v_828),3-proj-3-tuple(v_828)))) in
        {378}let v_835: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_833)) && success?(symmetricstatepack(1-proj-2-tuple(v_833),2-proj-3-tuple(v_828),3-proj-3-tuple(v_828)))) then (if (not-caught-fail(v_834) && success?(is-true(success?(1-proj-3-tuple(v_834))))) then symmetricstatepack(1-proj-3-tuple(v_834),2-proj-3-tuple(v_834),hash(3-proj-3-tuple(v_834),2-proj-2-tuple(v_833))) else fail-any) else fail-any)) in
        {379}let v_836: bitstring = catch-fail((if (not-caught-fail(v_828) && success?(is-true(success?(1-proj-3-tuple(v_828))))) then (if (not-caught-fail(v_833) && success?(is-true(success?(1-proj-2-tuple(v_833))))) then (if not-caught-fail(v_835) then (v_835,2-proj-2-tuple(v_833)) else fail-any) else fail-any) else fail-any)) in
        {380}let v_837: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_836),2-proj-7-tuple(v_806),v_810,4-proj-7-tuple(v_806),5-proj-7-tuple(v_806),6-proj-7-tuple(v_806),7-proj-7-tuple(v_806))) in
        {381}let v_838: bitstring = catch-fail(concat3(v_811,2-proj-3-tuple(v_807),2-proj-2-tuple(v_836))) in
        {382}let (hs_839: handshakestate,re_840: key,message_b_841: bitstring) = (if (not-caught-fail(v_806) && success?(is-true(success?(1-proj-7-tuple(v_806))))) then (if (not-caught-fail(v_807) && success?(is-true(success?(1-proj-3-tuple(v_807))))) then (if not-caught-fail(v_810) then (if not-caught-fail(v_811) then (if not-caught-fail(v_813) then (if not-caught-fail(v_820) then (if not-caught-fail(v_827) then (if (not-caught-fail(v_836) && success?(is-true(success?(1-proj-2-tuple(v_836))))) then (if not-caught-fail(v_837) then (if not-caught-fail(v_838) then (v_837,5-proj-7-tuple(v_806),v_838) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {383}event SendMsg(me_752,them_751,stage_b,msg_b(me_752,them_751),true);
        {384}insert statestore(me_752,them_751,statepack_c(hs_839));
        {385}out(pub, message_b_841)
    ) | (
        {405}get statestore(=me_752,=them_751,statepack_c(hs_842: handshakestate)) in
        {387}in(pub, message_c_843: bitstring);
        {388}let v_844: bitstring = catch-fail(handshakestateunpack(hs_842)) in
        {389}let v_845: bitstring = catch-fail(deconcat3(message_c_843)) in
        {390}let v_846: bool = catch-fail(true) in
        {391}let v_847: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_844))) in
        {392}let v_848: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_847))) in
        {393}let v_849: aead = catch-fail(decrypt(1-proj-2-tuple(v_848),2-proj-2-tuple(v_848),3-proj-3-tuple(v_847),3-proj-3-tuple(v_845))) in
        {394}let v_850: bitstring = catch-fail(aeadunpack(v_849)) in
        {395}let v_851: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_847))) in
        {396}let v_852: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_848))) && success?(1-proj-3-tuple(v_847))) then (if (not-caught-fail(v_851) && success?(is-true(success?(1-proj-2-tuple(v_851))))) then cipherstatepack(1-proj-2-tuple(v_851),increment_nonce(2-proj-2-tuple(v_848))) else fail-any) else fail-any)) in
        {397}let v_853: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_845)) && (success?(3-proj-3-tuple(v_847)) && success?(1-proj-3-tuple(v_847)))) then (if (not-caught-fail(v_848) && success?(is-true(success?(1-proj-2-tuple(v_848))))) then (if not-caught-fail(v_849) then (if (not-caught-fail(v_850) && success?(is-true(success?(1-proj-3-tuple(v_850))))) then (if not-caught-fail(v_852) then (v_852,3-proj-3-tuple(v_850),1-proj-3-tuple(v_850)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {398}let v_854: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_853),2-proj-3-tuple(v_847),3-proj-3-tuple(v_847)))) in
        {399}let v_855: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_845)) && success?(symmetricstatepack(1-proj-3-tuple(v_853),2-proj-3-tuple(v_847),3-proj-3-tuple(v_847)))) then (if (not-caught-fail(v_854) && success?(is-true(success?(1-proj-3-tuple(v_854))))) then symmetricstatepack(1-proj-3-tuple(v_854),2-proj-3-tuple(v_854),hash(3-proj-3-tuple(v_854),3-proj-3-tuple(v_845))) else fail-any) else fail-any)) in
        {400}let v_856: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_845)) && success?(1-proj-7-tuple(v_844))) then (if (not-caught-fail(v_847) && success?(is-true(success?(1-proj-3-tuple(v_847))))) then (if (not-caught-fail(v_853) && success?(is-true(success?(1-proj-3-tuple(v_853))))) then (if not-caught-fail(v_855) then (v_855,2-proj-3-tuple(v_853),3-proj-3-tuple(v_853)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {401}let v_857: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_856),2-proj-7-tuple(v_844),3-proj-7-tuple(v_844),4-proj-7-tuple(v_844),5-proj-7-tuple(v_844),6-proj-7-tuple(v_844),7-proj-7-tuple(v_844))) in
        {402}let (hs_858: handshakestate,re_859: key,plaintext_c: bitstring,valid_860: bool) = (if (not-caught-fail(v_844) && success?(is-true(success?(1-proj-7-tuple(v_844))))) then (if (not-caught-fail(v_845) && success?(is-true(success?(1-proj-3-tuple(v_845))))) then (if not-caught-fail(v_846) then (if (not-caught-fail(v_856) && success?(is-true(success?(1-proj-3-tuple(v_856))))) then (if (v_846 && 3-proj-3-tuple(v_856)) then (if not-caught-fail(v_857) then (v_857,getpublickey(3-proj-7-tuple(v_844)),2-proj-3-tuple(v_856),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {403}event RecvMsg(me_752,them_751,stage_c,plaintext_c,valid_860);
        {404}insert statestore(me_752,them_751,statepack_d(hs_858))
    ) | (
        {431}get statestore(=me_752,=them_751,statepack_d(hs_861: handshakestate)) in
        {406}let v_862: bitstring = catch-fail(handshakestateunpack(hs_861)) in
        {407}let v_863: bitstring = catch-fail((empty,empty,empty)) in
        {408}let v_864: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_862))) in
        {409}let v_865: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_864))) in
        {410}let v_866: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_865),2-proj-2-tuple(v_865),3-proj-3-tuple(v_864),msg_d(me_752,them_751))) in
        {411}let v_867: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_864))) in
        {412}let v_868: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_865))) && success?(1-proj-3-tuple(v_864))) then (if (not-caught-fail(v_867) && success?(is-true(success?(1-proj-2-tuple(v_867))))) then cipherstatepack(1-proj-2-tuple(v_867),increment_nonce(2-proj-2-tuple(v_865))) else fail-any) else fail-any)) in
        {413}let v_869: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_864)) && success?(1-proj-3-tuple(v_864))) then (if (not-caught-fail(v_865) && success?(is-true(success?(1-proj-2-tuple(v_865))))) then (if not-caught-fail(v_866) then (if not-caught-fail(v_868) then (v_868,v_866) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {414}let v_870: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_869),2-proj-3-tuple(v_864),3-proj-3-tuple(v_864)))) in
        {415}let v_871: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_869)) && success?(symmetricstatepack(1-proj-2-tuple(v_869),2-proj-3-tuple(v_864),3-proj-3-tuple(v_864)))) then (if (not-caught-fail(v_870) && success?(is-true(success?(1-proj-3-tuple(v_870))))) then symmetricstatepack(1-proj-3-tuple(v_870),2-proj-3-tuple(v_870),hash(3-proj-3-tuple(v_870),2-proj-2-tuple(v_869))) else fail-any) else fail-any)) in
        {416}let v_872: bitstring = catch-fail((if success?(1-proj-7-tuple(v_862)) then (if (not-caught-fail(v_864) && success?(is-true(success?(1-proj-3-tuple(v_864))))) then (if (not-caught-fail(v_869) && success?(is-true(success?(1-proj-2-tuple(v_869))))) then (if not-caught-fail(v_871) then (v_871,2-proj-2-tuple(v_869)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {417}let v_873: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_872),2-proj-7-tuple(v_862),3-proj-7-tuple(v_862),4-proj-7-tuple(v_862),5-proj-7-tuple(v_862),6-proj-7-tuple(v_862),7-proj-7-tuple(v_862))) in
        {418}let v_874: bitstring = catch-fail(concat3(1-proj-3-tuple(v_863),2-proj-3-tuple(v_863),2-proj-2-tuple(v_872))) in
        {419}let v_875: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_872))) in
        {420}let v_876: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_875),zero)) in
        {421}let v_877: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_875),zero)) in
        {422}let v_878: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_875),zero)) in
        {423}let v_879: bitstring = catch-fail((if success?(2-proj-3-tuple(v_875)) then (if not-caught-fail(v_876) then (if not-caught-fail(v_877) then (if not-caught-fail(v_878) then (v_876,v_877,v_878) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {424}let v_880: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_879)) then cipherstatepack(1-proj-3-tuple(v_879),minnonce) else fail-any)) in
        {425}let v_881: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_879)) then cipherstatepack(2-proj-3-tuple(v_879),minnonce) else fail-any)) in
        {426}let v_882: bitstring = catch-fail((if success?(1-proj-2-tuple(v_872)) then (if (not-caught-fail(v_875) && success?(is-true(success?(1-proj-3-tuple(v_875))))) then (if (not-caught-fail(v_879) && success?(is-true(success?(1-proj-3-tuple(v_879))))) then (if not-caught-fail(v_880) then (if not-caught-fail(v_881) then (1-proj-2-tuple(v_872),v_880,v_881) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {427}let (hs_883: handshakestate,re_884: key,message_d_885: bitstring,cs1_886: cipherstate,cs2_887: cipherstate) = (if (not-caught-fail(v_862) && success?(is-true(success?(1-proj-7-tuple(v_862))))) then (if (not-caught-fail(v_863) && success?(is-true(success?(1-proj-3-tuple(v_863))))) then (if (not-caught-fail(v_872) && success?(is-true(success?(1-proj-2-tuple(v_872))))) then (if not-caught-fail(v_873) then (if not-caught-fail(v_874) then (if (not-caught-fail(v_882) && success?(is-true(success?(1-proj-3-tuple(v_882))))) then (v_873,5-proj-7-tuple(v_862),v_874,2-proj-3-tuple(v_882),3-proj-3-tuple(v_882)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {428}event SendMsg(me_752,them_751,stage_d,msg_d(me_752,them_751),true);
        {429}insert statestore(me_752,them_751,statepack_e(hs_883));
        {430}out(pub, message_d_885)
    ) | (
        {432}event LeakS(phase0,me_752);
        {433}out(pub, key_s(me_752))
    ) | (
        {434}phase 1;
        {435}event LeakS(phase1,me_752);
        {436}out(pub, key_s(me_752))
    )
) | (
    {437}let them_888: principal = charlie in
    {438}let me_889: principal = bob in
    {439}let v_890: key = catch-fail(dhexp(key_s(me_889),g)) in
    {440}let s_891: keypair = (if not-caught-fail(v_890) then keypairpack(v_890,key_s(me_889)) else fail-any) in
    {441}out(pub, getpublickey(s_891));
    (
        {442}let e_892: keypair = keypairpack(empty,empty) in
        {443}let v_893: key = catch-fail(dhexp(key_s(them_888),g)) in
        {444}let rs_894: key = getpublickey((if not-caught-fail(v_893) then keypairpack(v_893,key_s(them_888)) else fail-any)) in
        {445}let re_895: key = empty in
        {446}let v_896: bitstring = catch-fail(hash(somename,empty)) in
        {447}let v_897: key = catch-fail(v_896) in
        {448}let v_898: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {449}let v_899: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_896) then (if not-caught-fail(v_897) then (if not-caught-fail(v_898) then symmetricstatepack(v_898,v_897,v_896) else fail-any) else fail-any) else fail-any))) in
        {450}let v_900: symmetricstate = catch-fail((if success?((if not-caught-fail(v_896) then (if not-caught-fail(v_897) then (if not-caught-fail(v_898) then symmetricstatepack(v_898,v_897,v_896) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_899) && success?(is-true(success?(1-proj-3-tuple(v_899))))) then symmetricstatepack(1-proj-3-tuple(v_899),2-proj-3-tuple(v_899),hash(3-proj-3-tuple(v_899),empty)) else fail-any) else fail-any)) in
        {451}let v_901: bitstring = catch-fail(symmetricstateunpack(v_900)) in
        {452}let v_902: symmetricstate = catch-fail((if (not-caught-fail(v_901) && success?(is-true(success?(1-proj-3-tuple(v_901))))) then symmetricstatepack(1-proj-3-tuple(v_901),2-proj-3-tuple(v_901),hash(3-proj-3-tuple(v_901),rs_894)) else fail-any)) in
        {453}let v_903: bitstring = catch-fail(symmetricstateunpack(v_902)) in
        {454}let v_904: symmetricstate = catch-fail((if success?(getpublickey(s_891)) then (if (not-caught-fail(v_903) && success?(is-true(success?(1-proj-3-tuple(v_903))))) then symmetricstatepack(1-proj-3-tuple(v_903),2-proj-3-tuple(v_903),hash(3-proj-3-tuple(v_903),getpublickey(s_891))) else fail-any) else fail-any)) in
        {455}let hs_905: handshakestate = (if not-caught-fail(v_900) then (if not-caught-fail(v_902) then (if not-caught-fail(v_904) then handshakestatepack(v_904,s_891,e_892,rs_894,re_895,empty,false) else fail-any) else fail-any) else fail-any) in
        {456}insert statestore(me_889,them_888,statepack_a(hs_905))
    ) | (
        {492}get statestore(=me_889,=them_888,statepack_a(hs_906: handshakestate)) in
        {457}in(pub, message_a_907: bitstring);
        {458}let v_908: bitstring = catch-fail(handshakestateunpack(hs_906)) in
        {459}let v_909: bitstring = catch-fail(deconcat3(message_a_907)) in
        {460}let v_910: bool = catch-fail(true) in
        {461}let v_911: key = catch-fail(1-proj-3-tuple(v_909)) in
        {462}let v_912: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_908))) in
        {463}let v_913: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_908)) then (if (not-caught-fail(v_912) && success?(is-true(success?(1-proj-3-tuple(v_912))))) then symmetricstatepack(1-proj-3-tuple(v_912),2-proj-3-tuple(v_912),hash(3-proj-3-tuple(v_912),v_911)) else fail-any) else fail-any)) in
        {464}let v_914: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_908))) in
        {465}let v_915: bitstring = catch-fail(symmetricstateunpack(v_913)) in
        {466}let v_916: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_915),(if success?(2-proj-7-tuple(v_908)) then (if (not-caught-fail(v_914) && success?(is-true(success?(1-proj-2-tuple(v_914))))) then dhexp(2-proj-2-tuple(v_914),v_911) else fail-any) else fail-any))) in
        {467}let v_917: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_915),(if success?(2-proj-7-tuple(v_908)) then (if (not-caught-fail(v_914) && success?(is-true(success?(1-proj-2-tuple(v_914))))) then dhexp(2-proj-2-tuple(v_914),v_911) else fail-any) else fail-any))) in
        {468}let v_918: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_915),(if success?(2-proj-7-tuple(v_908)) then (if (not-caught-fail(v_914) && success?(is-true(success?(1-proj-2-tuple(v_914))))) then dhexp(2-proj-2-tuple(v_914),v_911) else fail-any) else fail-any))) in
        {469}let v_919: bitstring = catch-fail((if (success?((if success?(2-proj-7-tuple(v_908)) then (if (not-caught-fail(v_914) && success?(is-true(success?(1-proj-2-tuple(v_914))))) then dhexp(2-proj-2-tuple(v_914),v_911) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_915))) then (if not-caught-fail(v_916) then (if not-caught-fail(v_917) then (if not-caught-fail(v_918) then (v_916,v_917,v_918) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {470}let v_920: symmetricstate = catch-fail((if success?((if success?(2-proj-7-tuple(v_908)) then (if (not-caught-fail(v_914) && success?(is-true(success?(1-proj-2-tuple(v_914))))) then dhexp(2-proj-2-tuple(v_914),v_911) else fail-any) else fail-any)) then (if (not-caught-fail(v_915) && success?(is-true(success?(1-proj-3-tuple(v_915))))) then (if (not-caught-fail(v_919) && success?(is-true(success?(1-proj-3-tuple(v_919))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_919)) then cipherstatepack(2-proj-3-tuple(v_919),minnonce) else fail-any),1-proj-3-tuple(v_919),3-proj-3-tuple(v_915)) else fail-any) else fail-any) else fail-any)) in
        {471}let v_921: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_908))) in
        {472}let v_922: bitstring = catch-fail(symmetricstateunpack(v_920)) in
        {473}let v_923: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_922),(if (success?(4-proj-7-tuple(v_908)) && success?(2-proj-7-tuple(v_908))) then (if (not-caught-fail(v_921) && success?(is-true(success?(1-proj-2-tuple(v_921))))) then dhexp(2-proj-2-tuple(v_921),4-proj-7-tuple(v_908)) else fail-any) else fail-any))) in
        {474}let v_924: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_922),(if (success?(4-proj-7-tuple(v_908)) && success?(2-proj-7-tuple(v_908))) then (if (not-caught-fail(v_921) && success?(is-true(success?(1-proj-2-tuple(v_921))))) then dhexp(2-proj-2-tuple(v_921),4-proj-7-tuple(v_908)) else fail-any) else fail-any))) in
        {475}let v_925: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_922),(if (success?(4-proj-7-tuple(v_908)) && success?(2-proj-7-tuple(v_908))) then (if (not-caught-fail(v_921) && success?(is-true(success?(1-proj-2-tuple(v_921))))) then dhexp(2-proj-2-tuple(v_921),4-proj-7-tuple(v_908)) else fail-any) else fail-any))) in
        {476}let v_926: bitstring = catch-fail((if (success?((if (success?(4-proj-7-tuple(v_908)) && success?(2-proj-7-tuple(v_908))) then (if (not-caught-fail(v_921) && success?(is-true(success?(1-proj-2-tuple(v_921))))) then dhexp(2-proj-2-tuple(v_921),4-proj-7-tuple(v_908)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_922))) then (if not-caught-fail(v_923) then (if not-caught-fail(v_924) then (if not-caught-fail(v_925) then (v_923,v_924,v_925) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {477}let v_927: symmetricstate = catch-fail((if success?((if (success?(4-proj-7-tuple(v_908)) && success?(2-proj-7-tuple(v_908))) then (if (not-caught-fail(v_921) && success?(is-true(success?(1-proj-2-tuple(v_921))))) then dhexp(2-proj-2-tuple(v_921),4-proj-7-tuple(v_908)) else fail-any) else fail-any)) then (if (not-caught-fail(v_922) && success?(is-true(success?(1-proj-3-tuple(v_922))))) then (if (not-caught-fail(v_926) && success?(is-true(success?(1-proj-3-tuple(v_926))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_926)) then cipherstatepack(2-proj-3-tuple(v_926),minnonce) else fail-any),1-proj-3-tuple(v_926),3-proj-3-tuple(v_922)) else fail-any) else fail-any) else fail-any)) in
        {478}let v_928: bitstring = catch-fail(symmetricstateunpack(v_927)) in
        {479}let v_929: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_928))) in
        {480}let v_930: aead = catch-fail(decrypt(1-proj-2-tuple(v_929),2-proj-2-tuple(v_929),3-proj-3-tuple(v_928),3-proj-3-tuple(v_909))) in
        {481}let v_931: bitstring = catch-fail(aeadunpack(v_930)) in
        {482}let v_932: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_928))) in
        {483}let v_933: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_929))) && success?(1-proj-3-tuple(v_928))) then (if (not-caught-fail(v_932) && success?(is-true(success?(1-proj-2-tuple(v_932))))) then cipherstatepack(1-proj-2-tuple(v_932),increment_nonce(2-proj-2-tuple(v_929))) else fail-any) else fail-any)) in
        {484}let v_934: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_909)) && (success?(3-proj-3-tuple(v_928)) && success?(1-proj-3-tuple(v_928)))) then (if (not-caught-fail(v_929) && success?(is-true(success?(1-proj-2-tuple(v_929))))) then (if not-caught-fail(v_930) then (if (not-caught-fail(v_931) && success?(is-true(success?(1-proj-3-tuple(v_931))))) then (if not-caught-fail(v_933) then (v_933,3-proj-3-tuple(v_931),1-proj-3-tuple(v_931)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {485}let v_935: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_934),2-proj-3-tuple(v_928),3-proj-3-tuple(v_928)))) in
        {486}let v_936: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_909)) && success?(symmetricstatepack(1-proj-3-tuple(v_934),2-proj-3-tuple(v_928),3-proj-3-tuple(v_928)))) then (if (not-caught-fail(v_935) && success?(is-true(success?(1-proj-3-tuple(v_935))))) then symmetricstatepack(1-proj-3-tuple(v_935),2-proj-3-tuple(v_935),hash(3-proj-3-tuple(v_935),3-proj-3-tuple(v_909))) else fail-any) else fail-any)) in
        {487}let v_937: bitstring = catch-fail((if success?(3-proj-3-tuple(v_909)) then (if (not-caught-fail(v_928) && success?(is-true(success?(1-proj-3-tuple(v_928))))) then (if (not-caught-fail(v_934) && success?(is-true(success?(1-proj-3-tuple(v_934))))) then (if not-caught-fail(v_936) then (v_936,2-proj-3-tuple(v_934),3-proj-3-tuple(v_934)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {488}let v_938: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_937),2-proj-7-tuple(v_908),3-proj-7-tuple(v_908),4-proj-7-tuple(v_908),v_911,6-proj-7-tuple(v_908),7-proj-7-tuple(v_908))) in
        {489}let (hs_939: handshakestate,re_940: key,plaintext_a_941: bitstring,valid_942: bool) = (if (not-caught-fail(v_908) && success?(is-true(success?(1-proj-7-tuple(v_908))))) then (if (not-caught-fail(v_909) && success?(is-true(success?(1-proj-3-tuple(v_909))))) then (if not-caught-fail(v_910) then (if not-caught-fail(v_911) then (if not-caught-fail(v_913) then (if not-caught-fail(v_920) then (if not-caught-fail(v_927) then (if (not-caught-fail(v_937) && success?(is-true(success?(1-proj-3-tuple(v_937))))) then (if (v_910 && 3-proj-3-tuple(v_937)) then (if not-caught-fail(v_938) then (v_938,getpublickey(3-proj-7-tuple(v_908)),2-proj-3-tuple(v_937),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {490}event RecvMsg(me_889,them_888,stage_a,plaintext_a_941,valid_942);
        {491}insert statestore(me_889,them_888,statepack_b(hs_939))
    ) | (
        {530}get statestore(=me_889,=them_888,statepack_b(hs_943: handshakestate)) in
        {493}let v_944: bitstring = catch-fail(handshakestateunpack(hs_943)) in
        {494}let v_945: bitstring = catch-fail((empty,empty,empty)) in
        {495}new key_e_946[me_889,them_888]: key;
        {496}let v_947: key = catch-fail(dhexp(key_e_946,g)) in
        {497}let v_948: keypair = catch-fail((if not-caught-fail(v_947) then keypairpack(v_947,key_e_946) else fail-any)) in
        {498}let v_949: bitstring = catch-fail(getpublickey(v_948)) in
        {499}let v_950: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_944))) in
        {500}let v_951: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_944)) then (if (not-caught-fail(v_950) && success?(is-true(success?(1-proj-3-tuple(v_950))))) then symmetricstatepack(1-proj-3-tuple(v_950),2-proj-3-tuple(v_950),hash(3-proj-3-tuple(v_950),v_949)) else fail-any) else fail-any)) in
        {501}let v_952: bitstring = catch-fail(keypairunpack(v_948)) in
        {502}let v_953: bitstring = catch-fail(symmetricstateunpack(v_951)) in
        {503}let v_954: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_953),(if success?(5-proj-7-tuple(v_944)) then (if (not-caught-fail(v_952) && success?(is-true(success?(1-proj-2-tuple(v_952))))) then dhexp(2-proj-2-tuple(v_952),5-proj-7-tuple(v_944)) else fail-any) else fail-any))) in
        {504}let v_955: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_953),(if success?(5-proj-7-tuple(v_944)) then (if (not-caught-fail(v_952) && success?(is-true(success?(1-proj-2-tuple(v_952))))) then dhexp(2-proj-2-tuple(v_952),5-proj-7-tuple(v_944)) else fail-any) else fail-any))) in
        {505}let v_956: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_953),(if success?(5-proj-7-tuple(v_944)) then (if (not-caught-fail(v_952) && success?(is-true(success?(1-proj-2-tuple(v_952))))) then dhexp(2-proj-2-tuple(v_952),5-proj-7-tuple(v_944)) else fail-any) else fail-any))) in
        {506}let v_957: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_944)) then (if (not-caught-fail(v_952) && success?(is-true(success?(1-proj-2-tuple(v_952))))) then dhexp(2-proj-2-tuple(v_952),5-proj-7-tuple(v_944)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_953))) then (if not-caught-fail(v_954) then (if not-caught-fail(v_955) then (if not-caught-fail(v_956) then (v_954,v_955,v_956) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {507}let v_958: symmetricstate = catch-fail((if success?((if success?(5-proj-7-tuple(v_944)) then (if (not-caught-fail(v_952) && success?(is-true(success?(1-proj-2-tuple(v_952))))) then dhexp(2-proj-2-tuple(v_952),5-proj-7-tuple(v_944)) else fail-any) else fail-any)) then (if (not-caught-fail(v_953) && success?(is-true(success?(1-proj-3-tuple(v_953))))) then (if (not-caught-fail(v_957) && success?(is-true(success?(1-proj-3-tuple(v_957))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_957)) then cipherstatepack(2-proj-3-tuple(v_957),minnonce) else fail-any),1-proj-3-tuple(v_957),3-proj-3-tuple(v_953)) else fail-any) else fail-any) else fail-any)) in
        {508}let v_959: bitstring = catch-fail(keypairunpack(v_948)) in
        {509}let v_960: bitstring = catch-fail(symmetricstateunpack(v_958)) in
        {510}let v_961: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_960),(if success?(4-proj-7-tuple(v_944)) then (if (not-caught-fail(v_959) && success?(is-true(success?(1-proj-2-tuple(v_959))))) then dhexp(2-proj-2-tuple(v_959),4-proj-7-tuple(v_944)) else fail-any) else fail-any))) in
        {511}let v_962: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_960),(if success?(4-proj-7-tuple(v_944)) then (if (not-caught-fail(v_959) && success?(is-true(success?(1-proj-2-tuple(v_959))))) then dhexp(2-proj-2-tuple(v_959),4-proj-7-tuple(v_944)) else fail-any) else fail-any))) in
        {512}let v_963: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_960),(if success?(4-proj-7-tuple(v_944)) then (if (not-caught-fail(v_959) && success?(is-true(success?(1-proj-2-tuple(v_959))))) then dhexp(2-proj-2-tuple(v_959),4-proj-7-tuple(v_944)) else fail-any) else fail-any))) in
        {513}let v_964: bitstring = catch-fail((if (success?((if success?(4-proj-7-tuple(v_944)) then (if (not-caught-fail(v_959) && success?(is-true(success?(1-proj-2-tuple(v_959))))) then dhexp(2-proj-2-tuple(v_959),4-proj-7-tuple(v_944)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_960))) then (if not-caught-fail(v_961) then (if not-caught-fail(v_962) then (if not-caught-fail(v_963) then (v_961,v_962,v_963) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {514}let v_965: symmetricstate = catch-fail((if success?((if success?(4-proj-7-tuple(v_944)) then (if (not-caught-fail(v_959) && success?(is-true(success?(1-proj-2-tuple(v_959))))) then dhexp(2-proj-2-tuple(v_959),4-proj-7-tuple(v_944)) else fail-any) else fail-any)) then (if (not-caught-fail(v_960) && success?(is-true(success?(1-proj-3-tuple(v_960))))) then (if (not-caught-fail(v_964) && success?(is-true(success?(1-proj-3-tuple(v_964))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_964)) then cipherstatepack(2-proj-3-tuple(v_964),minnonce) else fail-any),1-proj-3-tuple(v_964),3-proj-3-tuple(v_960)) else fail-any) else fail-any) else fail-any)) in
        {515}let v_966: bitstring = catch-fail(symmetricstateunpack(v_965)) in
        {516}let v_967: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_966))) in
        {517}let v_968: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_967),2-proj-2-tuple(v_967),3-proj-3-tuple(v_966),msg_b(me_889,them_888))) in
        {518}let v_969: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_966))) in
        {519}let v_970: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_967))) && success?(1-proj-3-tuple(v_966))) then (if (not-caught-fail(v_969) && success?(is-true(success?(1-proj-2-tuple(v_969))))) then cipherstatepack(1-proj-2-tuple(v_969),increment_nonce(2-proj-2-tuple(v_967))) else fail-any) else fail-any)) in
        {520}let v_971: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_966)) && success?(1-proj-3-tuple(v_966))) then (if (not-caught-fail(v_967) && success?(is-true(success?(1-proj-2-tuple(v_967))))) then (if not-caught-fail(v_968) then (if not-caught-fail(v_970) then (v_970,v_968) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {521}let v_972: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_971),2-proj-3-tuple(v_966),3-proj-3-tuple(v_966)))) in
        {522}let v_973: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_971)) && success?(symmetricstatepack(1-proj-2-tuple(v_971),2-proj-3-tuple(v_966),3-proj-3-tuple(v_966)))) then (if (not-caught-fail(v_972) && success?(is-true(success?(1-proj-3-tuple(v_972))))) then symmetricstatepack(1-proj-3-tuple(v_972),2-proj-3-tuple(v_972),hash(3-proj-3-tuple(v_972),2-proj-2-tuple(v_971))) else fail-any) else fail-any)) in
        {523}let v_974: bitstring = catch-fail((if (not-caught-fail(v_966) && success?(is-true(success?(1-proj-3-tuple(v_966))))) then (if (not-caught-fail(v_971) && success?(is-true(success?(1-proj-2-tuple(v_971))))) then (if not-caught-fail(v_973) then (v_973,2-proj-2-tuple(v_971)) else fail-any) else fail-any) else fail-any)) in
        {524}let v_975: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_974),2-proj-7-tuple(v_944),v_948,4-proj-7-tuple(v_944),5-proj-7-tuple(v_944),6-proj-7-tuple(v_944),7-proj-7-tuple(v_944))) in
        {525}let v_976: bitstring = catch-fail(concat3(v_949,2-proj-3-tuple(v_945),2-proj-2-tuple(v_974))) in
        {526}let (hs_977: handshakestate,re_978: key,message_b_979: bitstring) = (if (not-caught-fail(v_944) && success?(is-true(success?(1-proj-7-tuple(v_944))))) then (if (not-caught-fail(v_945) && success?(is-true(success?(1-proj-3-tuple(v_945))))) then (if not-caught-fail(v_948) then (if not-caught-fail(v_949) then (if not-caught-fail(v_951) then (if not-caught-fail(v_958) then (if not-caught-fail(v_965) then (if (not-caught-fail(v_974) && success?(is-true(success?(1-proj-2-tuple(v_974))))) then (if not-caught-fail(v_975) then (if not-caught-fail(v_976) then (v_975,5-proj-7-tuple(v_944),v_976) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {527}event SendMsg(me_889,them_888,stage_b,msg_b(me_889,them_888),true);
        {528}insert statestore(me_889,them_888,statepack_c(hs_977));
        {529}out(pub, message_b_979)
    ) | (
        {549}get statestore(=me_889,=them_888,statepack_c(hs_980: handshakestate)) in
        {531}in(pub, message_c_981: bitstring);
        {532}let v_982: bitstring = catch-fail(handshakestateunpack(hs_980)) in
        {533}let v_983: bitstring = catch-fail(deconcat3(message_c_981)) in
        {534}let v_984: bool = catch-fail(true) in
        {535}let v_985: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_982))) in
        {536}let v_986: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_985))) in
        {537}let v_987: aead = catch-fail(decrypt(1-proj-2-tuple(v_986),2-proj-2-tuple(v_986),3-proj-3-tuple(v_985),3-proj-3-tuple(v_983))) in
        {538}let v_988: bitstring = catch-fail(aeadunpack(v_987)) in
        {539}let v_989: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_985))) in
        {540}let v_990: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_986))) && success?(1-proj-3-tuple(v_985))) then (if (not-caught-fail(v_989) && success?(is-true(success?(1-proj-2-tuple(v_989))))) then cipherstatepack(1-proj-2-tuple(v_989),increment_nonce(2-proj-2-tuple(v_986))) else fail-any) else fail-any)) in
        {541}let v_991: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_983)) && (success?(3-proj-3-tuple(v_985)) && success?(1-proj-3-tuple(v_985)))) then (if (not-caught-fail(v_986) && success?(is-true(success?(1-proj-2-tuple(v_986))))) then (if not-caught-fail(v_987) then (if (not-caught-fail(v_988) && success?(is-true(success?(1-proj-3-tuple(v_988))))) then (if not-caught-fail(v_990) then (v_990,3-proj-3-tuple(v_988),1-proj-3-tuple(v_988)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {542}let v_992: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_991),2-proj-3-tuple(v_985),3-proj-3-tuple(v_985)))) in
        {543}let v_993: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_983)) && success?(symmetricstatepack(1-proj-3-tuple(v_991),2-proj-3-tuple(v_985),3-proj-3-tuple(v_985)))) then (if (not-caught-fail(v_992) && success?(is-true(success?(1-proj-3-tuple(v_992))))) then symmetricstatepack(1-proj-3-tuple(v_992),2-proj-3-tuple(v_992),hash(3-proj-3-tuple(v_992),3-proj-3-tuple(v_983))) else fail-any) else fail-any)) in
        {544}let v_994: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_983)) && success?(1-proj-7-tuple(v_982))) then (if (not-caught-fail(v_985) && success?(is-true(success?(1-proj-3-tuple(v_985))))) then (if (not-caught-fail(v_991) && success?(is-true(success?(1-proj-3-tuple(v_991))))) then (if not-caught-fail(v_993) then (v_993,2-proj-3-tuple(v_991),3-proj-3-tuple(v_991)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {545}let v_995: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_994),2-proj-7-tuple(v_982),3-proj-7-tuple(v_982),4-proj-7-tuple(v_982),5-proj-7-tuple(v_982),6-proj-7-tuple(v_982),7-proj-7-tuple(v_982))) in
        {546}let (hs_996: handshakestate,re_997: key,plaintext_c_998: bitstring,valid_999: bool) = (if (not-caught-fail(v_982) && success?(is-true(success?(1-proj-7-tuple(v_982))))) then (if (not-caught-fail(v_983) && success?(is-true(success?(1-proj-3-tuple(v_983))))) then (if not-caught-fail(v_984) then (if (not-caught-fail(v_994) && success?(is-true(success?(1-proj-3-tuple(v_994))))) then (if (v_984 && 3-proj-3-tuple(v_994)) then (if not-caught-fail(v_995) then (v_995,getpublickey(3-proj-7-tuple(v_982)),2-proj-3-tuple(v_994),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {547}event RecvMsg(me_889,them_888,stage_c,plaintext_c_998,valid_999);
        {548}insert statestore(me_889,them_888,statepack_d(hs_996))
    ) | (
        {575}get statestore(=me_889,=them_888,statepack_d(hs_1000: handshakestate)) in
        {550}let v_1001: bitstring = catch-fail(handshakestateunpack(hs_1000)) in
        {551}let v_1002: bitstring = catch-fail((empty,empty,empty)) in
        {552}let v_1003: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1001))) in
        {553}let v_1004: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1003))) in
        {554}let v_1005: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_1004),2-proj-2-tuple(v_1004),3-proj-3-tuple(v_1003),msg_d(me_889,them_888))) in
        {555}let v_1006: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1003))) in
        {556}let v_1007: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1004))) && success?(1-proj-3-tuple(v_1003))) then (if (not-caught-fail(v_1006) && success?(is-true(success?(1-proj-2-tuple(v_1006))))) then cipherstatepack(1-proj-2-tuple(v_1006),increment_nonce(2-proj-2-tuple(v_1004))) else fail-any) else fail-any)) in
        {557}let v_1008: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1003)) && success?(1-proj-3-tuple(v_1003))) then (if (not-caught-fail(v_1004) && success?(is-true(success?(1-proj-2-tuple(v_1004))))) then (if not-caught-fail(v_1005) then (if not-caught-fail(v_1007) then (v_1007,v_1005) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {558}let v_1009: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_1008),2-proj-3-tuple(v_1003),3-proj-3-tuple(v_1003)))) in
        {559}let v_1010: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_1008)) && success?(symmetricstatepack(1-proj-2-tuple(v_1008),2-proj-3-tuple(v_1003),3-proj-3-tuple(v_1003)))) then (if (not-caught-fail(v_1009) && success?(is-true(success?(1-proj-3-tuple(v_1009))))) then symmetricstatepack(1-proj-3-tuple(v_1009),2-proj-3-tuple(v_1009),hash(3-proj-3-tuple(v_1009),2-proj-2-tuple(v_1008))) else fail-any) else fail-any)) in
        {560}let v_1011: bitstring = catch-fail((if success?(1-proj-7-tuple(v_1001)) then (if (not-caught-fail(v_1003) && success?(is-true(success?(1-proj-3-tuple(v_1003))))) then (if (not-caught-fail(v_1008) && success?(is-true(success?(1-proj-2-tuple(v_1008))))) then (if not-caught-fail(v_1010) then (v_1010,2-proj-2-tuple(v_1008)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {561}let v_1012: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_1011),2-proj-7-tuple(v_1001),3-proj-7-tuple(v_1001),4-proj-7-tuple(v_1001),5-proj-7-tuple(v_1001),6-proj-7-tuple(v_1001),7-proj-7-tuple(v_1001))) in
        {562}let v_1013: bitstring = catch-fail(concat3(1-proj-3-tuple(v_1002),2-proj-3-tuple(v_1002),2-proj-2-tuple(v_1011))) in
        {563}let v_1014: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_1011))) in
        {564}let v_1015: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1014),zero)) in
        {565}let v_1016: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1014),zero)) in
        {566}let v_1017: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1014),zero)) in
        {567}let v_1018: bitstring = catch-fail((if success?(2-proj-3-tuple(v_1014)) then (if not-caught-fail(v_1015) then (if not-caught-fail(v_1016) then (if not-caught-fail(v_1017) then (v_1015,v_1016,v_1017) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {568}let v_1019: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_1018)) then cipherstatepack(1-proj-3-tuple(v_1018),minnonce) else fail-any)) in
        {569}let v_1020: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_1018)) then cipherstatepack(2-proj-3-tuple(v_1018),minnonce) else fail-any)) in
        {570}let v_1021: bitstring = catch-fail((if success?(1-proj-2-tuple(v_1011)) then (if (not-caught-fail(v_1014) && success?(is-true(success?(1-proj-3-tuple(v_1014))))) then (if (not-caught-fail(v_1018) && success?(is-true(success?(1-proj-3-tuple(v_1018))))) then (if not-caught-fail(v_1019) then (if not-caught-fail(v_1020) then (1-proj-2-tuple(v_1011),v_1019,v_1020) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {571}let (hs_1022: handshakestate,re_1023: key,message_d_1024: bitstring,cs1_1025: cipherstate,cs2_1026: cipherstate) = (if (not-caught-fail(v_1001) && success?(is-true(success?(1-proj-7-tuple(v_1001))))) then (if (not-caught-fail(v_1002) && success?(is-true(success?(1-proj-3-tuple(v_1002))))) then (if (not-caught-fail(v_1011) && success?(is-true(success?(1-proj-2-tuple(v_1011))))) then (if not-caught-fail(v_1012) then (if not-caught-fail(v_1013) then (if (not-caught-fail(v_1021) && success?(is-true(success?(1-proj-3-tuple(v_1021))))) then (v_1012,5-proj-7-tuple(v_1001),v_1013,2-proj-3-tuple(v_1021),3-proj-3-tuple(v_1021)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {572}event SendMsg(me_889,them_888,stage_d,msg_d(me_889,them_888),true);
        {573}insert statestore(me_889,them_888,statepack_e(hs_1022));
        {574}out(pub, message_d_1024)
    ) | (
        {576}event LeakS(phase0,me_889);
        {577}out(pub, key_s(me_889))
    ) | (
        {578}phase 1;
        {579}event LeakS(phase1,me_889);
        {580}out(pub, key_s(me_889))
    )
)

-- Query event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)); event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,c_1107,stage_a,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,c_1107,stage_a,m,true)) || event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)) || event(LeakS(phase0,alice)); not attacker_p1(msg_a(alice,bob)); attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob)); attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice))); attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true)); event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,c_1107,stage_b,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,c_1107,stage_b,m,true)) || event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true)) || event(LeakS(phase0,bob)); not attacker_p1(msg_b(bob,alice)); attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice)); attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob))); attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true)); event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,c_1107,stage_c,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,c_1107,stage_c,m,true)) || event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true)) || event(LeakS(phase0,alice)); not attacker_p1(msg_c(alice,bob)); attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob)); attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice))); attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true)); event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,c_1107,stage_d,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,c_1107,stage_d,m,true)) || event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true)) || event(LeakS(phase0,bob)); not attacker_p1(msg_d(bob,alice)); attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice)); attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob))); attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice))
Completing...
200 rules inserted. The rule base contains 200 rules. 189 rules in the queue.
400 rules inserted. The rule base contains 398 rules. 94 rules in the queue.
600 rules inserted. The rule base contains 582 rules. 101 rules in the queue.
800 rules inserted. The rule base contains 782 rules. 510 rules in the queue.
1000 rules inserted. The rule base contains 982 rules. 577 rules in the queue.
1200 rules inserted. The rule base contains 1167 rules. 515 rules in the queue.
1400 rules inserted. The rule base contains 1348 rules. 437 rules in the queue.
1600 rules inserted. The rule base contains 1524 rules. 434 rules in the queue.
1800 rules inserted. The rule base contains 1724 rules. 548 rules in the queue.
2000 rules inserted. The rule base contains 1796 rules. 554 rules in the queue.
2200 rules inserted. The rule base contains 1988 rules. 619 rules in the queue.
2400 rules inserted. The rule base contains 2188 rules. 689 rules in the queue.
2600 rules inserted. The rule base contains 2383 rules. 697 rules in the queue.
2800 rules inserted. The rule base contains 2527 rules. 730 rules in the queue.
3000 rules inserted. The rule base contains 2677 rules. 760 rules in the queue.
3200 rules inserted. The rule base contains 2860 rules. 784 rules in the queue.
3400 rules inserted. The rule base contains 3053 rules. 805 rules in the queue.
3600 rules inserted. The rule base contains 3250 rules. 834 rules in the queue.
3800 rules inserted. The rule base contains 3444 rules. 856 rules in the queue.
4000 rules inserted. The rule base contains 3644 rules. 869 rules in the queue.
4200 rules inserted. The rule base contains 3776 rules. 860 rules in the queue.
4400 rules inserted. The rule base contains 3942 rules. 842 rules in the queue.
4600 rules inserted. The rule base contains 4110 rules. 806 rules in the queue.
4800 rules inserted. The rule base contains 4308 rules. 818 rules in the queue.
5000 rules inserted. The rule base contains 4384 rules. 828 rules in the queue.
5200 rules inserted. The rule base contains 4494 rules. 847 rules in the queue.
5400 rules inserted. The rule base contains 4618 rules. 843 rules in the queue.
5600 rules inserted. The rule base contains 4808 rules. 808 rules in the queue.
5800 rules inserted. The rule base contains 4923 rules. 828 rules in the queue.
6000 rules inserted. The rule base contains 5074 rules. 835 rules in the queue.
6200 rules inserted. The rule base contains 5237 rules. 847 rules in the queue.
6400 rules inserted. The rule base contains 5385 rules. 844 rules in the queue.
6600 rules inserted. The rule base contains 5528 rules. 842 rules in the queue.
6800 rules inserted. The rule base contains 5668 rules. 849 rules in the queue.
7000 rules inserted. The rule base contains 5810 rules. 876 rules in the queue.
7200 rules inserted. The rule base contains 5923 rules. 935 rules in the queue.
7400 rules inserted. The rule base contains 6064 rules. 950 rules in the queue.
7600 rules inserted. The rule base contains 6207 rules. 951 rules in the queue.
7800 rules inserted. The rule base contains 6352 rules. 961 rules in the queue.
8000 rules inserted. The rule base contains 6441 rules. 941 rules in the queue.
8200 rules inserted. The rule base contains 6545 rules. 940 rules in the queue.
8400 rules inserted. The rule base contains 6711 rules. 947 rules in the queue.
8600 rules inserted. The rule base contains 6895 rules. 954 rules in the queue.
8800 rules inserted. The rule base contains 7028 rules. 1145 rules in the queue.
9000 rules inserted. The rule base contains 7142 rules. 1437 rules in the queue.
9200 rules inserted. The rule base contains 7279 rules. 1455 rules in the queue.
9400 rules inserted. The rule base contains 7405 rules. 1470 rules in the queue.
9600 rules inserted. The rule base contains 7523 rules. 1540 rules in the queue.
9800 rules inserted. The rule base contains 7597 rules. 1526 rules in the queue.
10000 rules inserted. The rule base contains 7625 rules. 1478 rules in the queue.
10200 rules inserted. The rule base contains 7750 rules. 1519 rules in the queue.
10400 rules inserted. The rule base contains 7864 rules. 1674 rules in the queue.
10600 rules inserted. The rule base contains 8052 rules. 1698 rules in the queue.
10800 rules inserted. The rule base contains 8220 rules. 1699 rules in the queue.
11000 rules inserted. The rule base contains 8398 rules. 1709 rules in the queue.
11200 rules inserted. The rule base contains 8409 rules. 1732 rules in the queue.
11400 rules inserted. The rule base contains 8409 rules. 1732 rules in the queue.
11600 rules inserted. The rule base contains 8415 rules. 1743 rules in the queue.
11800 rules inserted. The rule base contains 8485 rules. 1942 rules in the queue.
12000 rules inserted. The rule base contains 8668 rules. 2691 rules in the queue.
12200 rules inserted. The rule base contains 8860 rules. 2732 rules in the queue.
12400 rules inserted. The rule base contains 9054 rules. 2758 rules in the queue.
12600 rules inserted. The rule base contains 9249 rules. 2798 rules in the queue.
12800 rules inserted. The rule base contains 9337 rules. 2805 rules in the queue.
13000 rules inserted. The rule base contains 9337 rules. 2805 rules in the queue.
13200 rules inserted. The rule base contains 9092 rules. 2803 rules in the queue.
13400 rules inserted. The rule base contains 9092 rules. 2803 rules in the queue.
13600 rules inserted. The rule base contains 9230 rules. 3015 rules in the queue.
13800 rules inserted. The rule base contains 9419 rules. 3218 rules in the queue.
14000 rules inserted. The rule base contains 9612 rules. 3481 rules in the queue.
14200 rules inserted. The rule base contains 9806 rules. 3791 rules in the queue.
14400 rules inserted. The rule base contains 9998 rules. 3928 rules in the queue.
14600 rules inserted. The rule base contains 10189 rules. 4643 rules in the queue.
14800 rules inserted. The rule base contains 10382 rules. 4861 rules in the queue.
15000 rules inserted. The rule base contains 10575 rules. 4902 rules in the queue.
15200 rules inserted. The rule base contains 10763 rules. 4951 rules in the queue.
15400 rules inserted. The rule base contains 10951 rules. 4970 rules in the queue.
15600 rules inserted. The rule base contains 11014 rules. 4977 rules in the queue.
15800 rules inserted. The rule base contains 11014 rules. 4969 rules in the queue.
16000 rules inserted. The rule base contains 11019 rules. 4956 rules in the queue.
16200 rules inserted. The rule base contains 11029 rules. 4944 rules in the queue.
16400 rules inserted. The rule base contains 11193 rules. 4842 rules in the queue.
16600 rules inserted. The rule base contains 11378 rules. 4713 rules in the queue.
16800 rules inserted. The rule base contains 11569 rules. 4600 rules in the queue.
17000 rules inserted. The rule base contains 11757 rules. 4484 rules in the queue.
17200 rules inserted. The rule base contains 11941 rules. 4333 rules in the queue.
17400 rules inserted. The rule base contains 12127 rules. 4204 rules in the queue.
17600 rules inserted. The rule base contains 12311 rules. 4087 rules in the queue.
17800 rules inserted. The rule base contains 12499 rules. 3955 rules in the queue.
18000 rules inserted. The rule base contains 12684 rules. 3834 rules in the queue.
18200 rules inserted. The rule base contains 12868 rules. 3718 rules in the queue.
18400 rules inserted. The rule base contains 13057 rules. 3706 rules in the queue.
18600 rules inserted. The rule base contains 13249 rules. 3642 rules in the queue.
18800 rules inserted. The rule base contains 13439 rules. 3576 rules in the queue.
19000 rules inserted. The rule base contains 13633 rules. 3679 rules in the queue.
19200 rules inserted. The rule base contains 13825 rules. 3706 rules in the queue.
19400 rules inserted. The rule base contains 14014 rules. 3859 rules in the queue.
19600 rules inserted. The rule base contains 14192 rules. 3903 rules in the queue.
19800 rules inserted. The rule base contains 14374 rules. 3961 rules in the queue.
20000 rules inserted. The rule base contains 14550 rules. 3963 rules in the queue.
20200 rules inserted. The rule base contains 14732 rules. 3932 rules in the queue.
20400 rules inserted. The rule base contains 14885 rules. 3891 rules in the queue.
20600 rules inserted. The rule base contains 14888 rules. 3888 rules in the queue.
20800 rules inserted. The rule base contains 14733 rules. 3884 rules in the queue.
21000 rules inserted. The rule base contains 14755 rules. 3868 rules in the queue.
21200 rules inserted. The rule base contains 14687 rules. 4170 rules in the queue.
21400 rules inserted. The rule base contains 14887 rules. 4220 rules in the queue.
21600 rules inserted. The rule base contains 15087 rules. 4266 rules in the queue.
21800 rules inserted. The rule base contains 15287 rules. 4314 rules in the queue.
22000 rules inserted. The rule base contains 15447 rules. 4651 rules in the queue.
22200 rules inserted. The rule base contains 15631 rules. 4553 rules in the queue.
22400 rules inserted. The rule base contains 15820 rules. 4481 rules in the queue.
22600 rules inserted. The rule base contains 16003 rules. 4376 rules in the queue.
22800 rules inserted. The rule base contains 16183 rules. 4254 rules in the queue.
23000 rules inserted. The rule base contains 16367 rules. 4158 rules in the queue.
23200 rules inserted. The rule base contains 16544 rules. 4057 rules in the queue.
23400 rules inserted. The rule base contains 16685 rules. 4060 rules in the queue.
23600 rules inserted. The rule base contains 16829 rules. 4065 rules in the queue.
23800 rules inserted. The rule base contains 16978 rules. 4053 rules in the queue.
24000 rules inserted. The rule base contains 17124 rules. 4012 rules in the queue.
24200 rules inserted. The rule base contains 17222 rules. 3975 rules in the queue.
24400 rules inserted. The rule base contains 17302 rules. 3895 rules in the queue.
24600 rules inserted. The rule base contains 17363 rules. 3838 rules in the queue.
24800 rules inserted. The rule base contains 17399 rules. 3839 rules in the queue.
25000 rules inserted. The rule base contains 17543 rules. 3767 rules in the queue.
25200 rules inserted. The rule base contains 17675 rules. 3678 rules in the queue.
25400 rules inserted. The rule base contains 17846 rules. 3720 rules in the queue.
25600 rules inserted. The rule base contains 18016 rules. 3758 rules in the queue.
25800 rules inserted. The rule base contains 18195 rules. 3796 rules in the queue.
26000 rules inserted. The rule base contains 18379 rules. 3835 rules in the queue.
26200 rules inserted. The rule base contains 18559 rules. 3798 rules in the queue.
26400 rules inserted. The rule base contains 18709 rules. 3700 rules in the queue.
26600 rules inserted. The rule base contains 18859 rules. 3692 rules in the queue.
26800 rules inserted. The rule base contains 19047 rules. 3736 rules in the queue.
27000 rules inserted. The rule base contains 19247 rules. 3784 rules in the queue.
27200 rules inserted. The rule base contains 19403 rules. 3778 rules in the queue.
27400 rules inserted. The rule base contains 19552 rules. 3761 rules in the queue.
27600 rules inserted. The rule base contains 19699 rules. 3753 rules in the queue.
27800 rules inserted. The rule base contains 19841 rules. 3759 rules in the queue.
28000 rules inserted. The rule base contains 19982 rules. 3748 rules in the queue.
28200 rules inserted. The rule base contains 20163 rules. 3644 rules in the queue.
28400 rules inserted. The rule base contains 20315 rules. 3512 rules in the queue.
28600 rules inserted. The rule base contains 20429 rules. 3408 rules in the queue.
28800 rules inserted. The rule base contains 20489 rules. 3430 rules in the queue.
29000 rules inserted. The rule base contains 20623 rules. 3458 rules in the queue.
29200 rules inserted. The rule base contains 20751 rules. 3482 rules in the queue.
29400 rules inserted. The rule base contains 20879 rules. 3506 rules in the queue.
29600 rules inserted. The rule base contains 20991 rules. 3530 rules in the queue.
29800 rules inserted. The rule base contains 21117 rules. 3546 rules in the queue.
30000 rules inserted. The rule base contains 21229 rules. 3576 rules in the queue.
30200 rules inserted. The rule base contains 21354 rules. 3603 rules in the queue.
30400 rules inserted. The rule base contains 21507 rules. 3638 rules in the queue.
30600 rules inserted. The rule base contains 21688 rules. 3677 rules in the queue.
30800 rules inserted. The rule base contains 21869 rules. 3716 rules in the queue.
31000 rules inserted. The rule base contains 21994 rules. 3688 rules in the queue.
31200 rules inserted. The rule base contains 22127 rules. 3667 rules in the queue.
31400 rules inserted. The rule base contains 22268 rules. 3686 rules in the queue.
31600 rules inserted. The rule base contains 22429 rules. 3704 rules in the queue.
31800 rules inserted. The rule base contains 22519 rules. 3729 rules in the queue.
32000 rules inserted. The rule base contains 22608 rules. 3745 rules in the queue.
32200 rules inserted. The rule base contains 22730 rules. 3759 rules in the queue.
32400 rules inserted. The rule base contains 22930 rules. 3773 rules in the queue.
32600 rules inserted. The rule base contains 23130 rules. 3783 rules in the queue.
32800 rules inserted. The rule base contains 23330 rules. 3793 rules in the queue.
33000 rules inserted. The rule base contains 23530 rules. 3804 rules in the queue.
33200 rules inserted. The rule base contains 23730 rules. 3817 rules in the queue.
33400 rules inserted. The rule base contains 23930 rules. 3833 rules in the queue.
33600 rules inserted. The rule base contains 24008 rules. 3848 rules in the queue.
33800 rules inserted. The rule base contains 24163 rules. 3873 rules in the queue.
34000 rules inserted. The rule base contains 24315 rules. 3902 rules in the queue.
34200 rules inserted. The rule base contains 24436 rules. 3935 rules in the queue.
34400 rules inserted. The rule base contains 24542 rules. 3967 rules in the queue.
34600 rules inserted. The rule base contains 24678 rules. 3981 rules in the queue.
34800 rules inserted. The rule base contains 24834 rules. 4002 rules in the queue.
35000 rules inserted. The rule base contains 24974 rules. 4042 rules in the queue.
35200 rules inserted. The rule base contains 25131 rules. 4071 rules in the queue.
35400 rules inserted. The rule base contains 25243 rules. 4085 rules in the queue.
35600 rules inserted. The rule base contains 25303 rules. 4093 rules in the queue.
35800 rules inserted. The rule base contains 25311 rules. 4115 rules in the queue.
36000 rules inserted. The rule base contains 25504 rules. 4128 rules in the queue.
36200 rules inserted. The rule base contains 25704 rules. 4151 rules in the queue.
36400 rules inserted. The rule base contains 25904 rules. 4166 rules in the queue.
36600 rules inserted. The rule base contains 26104 rules. 4177 rules in the queue.
36800 rules inserted. The rule base contains 26304 rules. 4181 rules in the queue.
37000 rules inserted. The rule base contains 26504 rules. 4185 rules in the queue.
37200 rules inserted. The rule base contains 26676 rules. 4199 rules in the queue.
37400 rules inserted. The rule base contains 26752 rules. 4217 rules in the queue.
37600 rules inserted. The rule base contains 26952 rules. 4239 rules in the queue.
37800 rules inserted. The rule base contains 27152 rules. 4260 rules in the queue.
38000 rules inserted. The rule base contains 27352 rules. 4287 rules in the queue.
38200 rules inserted. The rule base contains 27552 rules. 4306 rules in the queue.
38400 rules inserted. The rule base contains 27743 rules. 4336 rules in the queue.
38600 rules inserted. The rule base contains 27874 rules. 4345 rules in the queue.
38800 rules inserted. The rule base contains 28026 rules. 4373 rules in the queue.
39000 rules inserted. The rule base contains 28156 rules. 4383 rules in the queue.
39200 rules inserted. The rule base contains 28316 rules. 4382 rules in the queue.
39400 rules inserted. The rule base contains 28442 rules. 4384 rules in the queue.
39600 rules inserted. The rule base contains 28631 rules. 4603 rules in the queue.
39800 rules inserted. The rule base contains 28744 rules. 4631 rules in the queue.
40000 rules inserted. The rule base contains 28863 rules. 4672 rules in the queue.
40200 rules inserted. The rule base contains 29063 rules. 4732 rules in the queue.
40400 rules inserted. The rule base contains 29263 rules. 4785 rules in the queue.
40600 rules inserted. The rule base contains 29463 rules. 4853 rules in the queue.
40800 rules inserted. The rule base contains 29663 rules. 4909 rules in the queue.
41000 rules inserted. The rule base contains 29863 rules. 4971 rules in the queue.
41200 rules inserted. The rule base contains 30063 rules. 5014 rules in the queue.
41400 rules inserted. The rule base contains 30263 rules. 5063 rules in the queue.
41600 rules inserted. The rule base contains 30363 rules. 5071 rules in the queue.
41800 rules inserted. The rule base contains 30563 rules. 5111 rules in the queue.
42000 rules inserted. The rule base contains 30763 rules. 5136 rules in the queue.
42200 rules inserted. The rule base contains 30963 rules. 5151 rules in the queue.
42400 rules inserted. The rule base contains 31163 rules. 5175 rules in the queue.
42600 rules inserted. The rule base contains 31363 rules. 5175 rules in the queue.
42800 rules inserted. The rule base contains 31497 rules. 5219 rules in the queue.
43000 rules inserted. The rule base contains 31633 rules. 5226 rules in the queue.
43200 rules inserted. The rule base contains 31763 rules. 5242 rules in the queue.
43400 rules inserted. The rule base contains 31907 rules. 5239 rules in the queue.
43600 rules inserted. The rule base contains 32067 rules. 5211 rules in the queue.
43800 rules inserted. The rule base contains 32199 rules. 5243 rules in the queue.
44000 rules inserted. The rule base contains 32399 rules. 5282 rules in the queue.
44200 rules inserted. The rule base contains 32599 rules. 5302 rules in the queue.
44400 rules inserted. The rule base contains 32711 rules. 5297 rules in the queue.
44600 rules inserted. The rule base contains 32879 rules. 5310 rules in the queue.
44800 rules inserted. The rule base contains 33079 rules. 5352 rules in the queue.
45000 rules inserted. The rule base contains 33279 rules. 5389 rules in the queue.
45200 rules inserted. The rule base contains 33479 rules. 5433 rules in the queue.
45400 rules inserted. The rule base contains 33679 rules. 5476 rules in the queue.
45600 rules inserted. The rule base contains 33879 rules. 5509 rules in the queue.
45800 rules inserted. The rule base contains 34079 rules. 5541 rules in the queue.
46000 rules inserted. The rule base contains 34279 rules. 5574 rules in the queue.
46200 rules inserted. The rule base contains 34479 rules. 5608 rules in the queue.
46400 rules inserted. The rule base contains 34679 rules. 5625 rules in the queue.
46600 rules inserted. The rule base contains 34823 rules. 5623 rules in the queue.
46800 rules inserted. The rule base contains 35023 rules. 5679 rules in the queue.
47000 rules inserted. The rule base contains 35223 rules. 5728 rules in the queue.
47200 rules inserted. The rule base contains 35423 rules. 5799 rules in the queue.
47400 rules inserted. The rule base contains 35623 rules. 5872 rules in the queue.
47600 rules inserted. The rule base contains 35823 rules. 5939 rules in the queue.
47800 rules inserted. The rule base contains 36010 rules. 5995 rules in the queue.
48000 rules inserted. The rule base contains 36131 rules. 5990 rules in the queue.
48200 rules inserted. The rule base contains 36269 rules. 5998 rules in the queue.
48400 rules inserted. The rule base contains 36370 rules. 5968 rules in the queue.
48600 rules inserted. The rule base contains 36492 rules. 5941 rules in the queue.
48800 rules inserted. The rule base contains 36580 rules. 5893 rules in the queue.
49000 rules inserted. The rule base contains 36750 rules. 5847 rules in the queue.
49200 rules inserted. The rule base contains 36920 rules. 5801 rules in the queue.
49400 rules inserted. The rule base contains 37101 rules. 5761 rules in the queue.
49600 rules inserted. The rule base contains 37209 rules. 5767 rules in the queue.
49800 rules inserted. The rule base contains 37391 rules. 5766 rules in the queue.
50000 rules inserted. The rule base contains 37587 rules. 5793 rules in the queue.
50200 rules inserted. The rule base contains 37787 rules. 5829 rules in the queue.
50400 rules inserted. The rule base contains 37983 rules. 5855 rules in the queue.
50600 rules inserted. The rule base contains 38171 rules. 5882 rules in the queue.
50800 rules inserted. The rule base contains 38363 rules. 5923 rules in the queue.
51000 rules inserted. The rule base contains 38559 rules. 5958 rules in the queue.
51200 rules inserted. The rule base contains 38759 rules. 5997 rules in the queue.
51400 rules inserted. The rule base contains 38959 rules. 6037 rules in the queue.
51600 rules inserted. The rule base contains 39155 rules. 6076 rules in the queue.
51800 rules inserted. The rule base contains 39351 rules. 6119 rules in the queue.
52000 rules inserted. The rule base contains 39541 rules. 6098 rules in the queue.
52200 rules inserted. The rule base contains 39739 rules. 6143 rules in the queue.
52400 rules inserted. The rule base contains 39939 rules. 6188 rules in the queue.
52600 rules inserted. The rule base contains 40133 rules. 6231 rules in the queue.
52800 rules inserted. The rule base contains 40331 rules. 6279 rules in the queue.
53000 rules inserted. The rule base contains 40531 rules. 6334 rules in the queue.
53200 rules inserted. The rule base contains 40731 rules. 6384 rules in the queue.
53400 rules inserted. The rule base contains 40931 rules. 6437 rules in the queue.
53600 rules inserted. The rule base contains 41131 rules. 6489 rules in the queue.
53800 rules inserted. The rule base contains 41265 rules. 6469 rules in the queue.
54000 rules inserted. The rule base contains 41395 rules. 6435 rules in the queue.
54200 rules inserted. The rule base contains 41521 rules. 6374 rules in the queue.
54400 rules inserted. The rule base contains 41660 rules. 6357 rules in the queue.
54600 rules inserted. The rule base contains 41776 rules. 6295 rules in the queue.
54800 rules inserted. The rule base contains 41963 rules. 6343 rules in the queue.
55000 rules inserted. The rule base contains 42137 rules. 6387 rules in the queue.
55200 rules inserted. The rule base contains 42279 rules. 6424 rules in the queue.
55400 rules inserted. The rule base contains 42343 rules. 6495 rules in the queue.
55600 rules inserted. The rule base contains 42535 rules. 6521 rules in the queue.
55800 rules inserted. The rule base contains 42735 rules. 6555 rules in the queue.
56000 rules inserted. The rule base contains 42935 rules. 6575 rules in the queue.
56200 rules inserted. The rule base contains 43115 rules. 6597 rules in the queue.
56400 rules inserted. The rule base contains 43273 rules. 6621 rules in the queue.
56600 rules inserted. The rule base contains 43450 rules. 6635 rules in the queue.
56800 rules inserted. The rule base contains 43637 rules. 6656 rules in the queue.
57000 rules inserted. The rule base contains 43837 rules. 6692 rules in the queue.
57200 rules inserted. The rule base contains 44037 rules. 6718 rules in the queue.
57400 rules inserted. The rule base contains 44221 rules. 6737 rules in the queue.
57600 rules inserted. The rule base contains 44383 rules. 6761 rules in the queue.
57800 rules inserted. The rule base contains 44561 rules. 6792 rules in the queue.
58000 rules inserted. The rule base contains 44755 rules. 6881 rules in the queue.
58200 rules inserted. The rule base contains 44951 rules. 6914 rules in the queue.
58400 rules inserted. The rule base contains 45151 rules. 6951 rules in the queue.
58600 rules inserted. The rule base contains 45343 rules. 6986 rules in the queue.
58800 rules inserted. The rule base contains 45523 rules. 7019 rules in the queue.
59000 rules inserted. The rule base contains 45715 rules. 7051 rules in the queue.
59200 rules inserted. The rule base contains 45915 rules. 7095 rules in the queue.
59400 rules inserted. The rule base contains 46115 rules. 7135 rules in the queue.
59600 rules inserted. The rule base contains 46315 rules. 7172 rules in the queue.
59800 rules inserted. The rule base contains 46515 rules. 7215 rules in the queue.
60000 rules inserted. The rule base contains 46689 rules. 7247 rules in the queue.
60200 rules inserted. The rule base contains 46801 rules. 7225 rules in the queue.
60400 rules inserted. The rule base contains 46912 rules. 7217 rules in the queue.
60600 rules inserted. The rule base contains 47056 rules. 7227 rules in the queue.
60800 rules inserted. The rule base contains 47208 rules. 7243 rules in the queue.
61000 rules inserted. The rule base contains 47408 rules. 7278 rules in the queue.
61200 rules inserted. The rule base contains 47608 rules. 7307 rules in the queue.
61400 rules inserted. The rule base contains 47770 rules. 7306 rules in the queue.
61600 rules inserted. The rule base contains 47544 rules. 7507 rules in the queue.
61800 rules inserted. The rule base contains 47716 rules. 7509 rules in the queue.
62000 rules inserted. The rule base contains 47899 rules. 7513 rules in the queue.
62200 rules inserted. The rule base contains 48099 rules. 7497 rules in the queue.
62400 rules inserted. The rule base contains 48278 rules. 7486 rules in the queue.
62600 rules inserted. The rule base contains 48427 rules. 7517 rules in the queue.
62800 rules inserted. The rule base contains 48492 rules. 7516 rules in the queue.
63000 rules inserted. The rule base contains 48667 rules. 7526 rules in the queue.
63200 rules inserted. The rule base contains 48843 rules. 7540 rules in the queue.
63400 rules inserted. The rule base contains 49043 rules. 7577 rules in the queue.
63600 rules inserted. The rule base contains 49243 rules. 7599 rules in the queue.
63800 rules inserted. The rule base contains 49437 rules. 7605 rules in the queue.
64000 rules inserted. The rule base contains 49559 rules. 7627 rules in the queue.
64200 rules inserted. The rule base contains 49741 rules. 7661 rules in the queue.
64400 rules inserted. The rule base contains 49941 rules. 7705 rules in the queue.
64600 rules inserted. The rule base contains 50101 rules. 7846 rules in the queue.
64800 rules inserted. The rule base contains 50297 rules. 7875 rules in the queue.
65000 rules inserted. The rule base contains 50497 rules. 7881 rules in the queue.
65200 rules inserted. The rule base contains 50693 rules. 7907 rules in the queue.
65400 rules inserted. The rule base contains 50803 rules. 7921 rules in the queue.
65600 rules inserted. The rule base contains 50987 rules. 7945 rules in the queue.
65800 rules inserted. The rule base contains 51163 rules. 7956 rules in the queue.
66000 rules inserted. The rule base contains 51363 rules. 7997 rules in the queue.
66200 rules inserted. The rule base contains 51563 rules. 8027 rules in the queue.
66400 rules inserted. The rule base contains 51763 rules. 8050 rules in the queue.
66600 rules inserted. The rule base contains 51927 rules. 8073 rules in the queue.
66800 rules inserted. The rule base contains 52089 rules. 8101 rules in the queue.
67000 rules inserted. The rule base contains 52181 rules. 8070 rules in the queue.
67200 rules inserted. The rule base contains 52277 rules. 8058 rules in the queue.
67400 rules inserted. The rule base contains 52418 rules. 8068 rules in the queue.
67600 rules inserted. The rule base contains 52519 rules. 8063 rules in the queue.
67800 rules inserted. The rule base contains 52590 rules. 8099 rules in the queue.
68000 rules inserted. The rule base contains 52666 rules. 8121 rules in the queue.
68200 rules inserted. The rule base contains 52740 rules. 8075 rules in the queue.
68400 rules inserted. The rule base contains 52834 rules. 8099 rules in the queue.
68600 rules inserted. The rule base contains 52784 rules. 8152 rules in the queue.
68800 rules inserted. The rule base contains 52881 rules. 8026 rules in the queue.
69000 rules inserted. The rule base contains 52987 rules. 7961 rules in the queue.
69200 rules inserted. The rule base contains 53187 rules. 7935 rules in the queue.
69400 rules inserted. The rule base contains 53301 rules. 7887 rules in the queue.
69600 rules inserted. The rule base contains 53216 rules. 7861 rules in the queue.
69800 rules inserted. The rule base contains 53221 rules. 7741 rules in the queue.
70000 rules inserted. The rule base contains 53263 rules. 7617 rules in the queue.
70200 rules inserted. The rule base contains 53444 rules. 7636 rules in the queue.
70400 rules inserted. The rule base contains 53640 rules. 7559 rules in the queue.
70600 rules inserted. The rule base contains 53604 rules. 7512 rules in the queue.
70800 rules inserted. The rule base contains 53531 rules. 7492 rules in the queue.
71000 rules inserted. The rule base contains 53624 rules. 7437 rules in the queue.
71200 rules inserted. The rule base contains 53804 rules. 7575 rules in the queue.
71400 rules inserted. The rule base contains 53988 rules. 7512 rules in the queue.
71600 rules inserted. The rule base contains 54144 rules. 7491 rules in the queue.
71800 rules inserted. The rule base contains 54344 rules. 7518 rules in the queue.
72000 rules inserted. The rule base contains 54544 rules. 7517 rules in the queue.
72200 rules inserted. The rule base contains 54604 rules. 7496 rules in the queue.
72400 rules inserted. The rule base contains 54654 rules. 7437 rules in the queue.
72600 rules inserted. The rule base contains 54841 rules. 7467 rules in the queue.
72800 rules inserted. The rule base contains 55034 rules. 7499 rules in the queue.
73000 rules inserted. The rule base contains 55234 rules. 7535 rules in the queue.
73200 rules inserted. The rule base contains 55434 rules. 7525 rules in the queue.
73400 rules inserted. The rule base contains 55634 rules. 7547 rules in the queue.
73600 rules inserted. The rule base contains 55814 rules. 7587 rules in the queue.
73800 rules inserted. The rule base contains 55863 rules. 7594 rules in the queue.
74000 rules inserted. The rule base contains 55986 rules. 7595 rules in the queue.
74200 rules inserted. The rule base contains 56118 rules. 7620 rules in the queue.
74400 rules inserted. The rule base contains 56261 rules. 7592 rules in the queue.
74600 rules inserted. The rule base contains 56402 rules. 7558 rules in the queue.
74800 rules inserted. The rule base contains 56602 rules. 7558 rules in the queue.
75000 rules inserted. The rule base contains 56798 rules. 7562 rules in the queue.
75200 rules inserted. The rule base contains 56998 rules. 7583 rules in the queue.
75400 rules inserted. The rule base contains 57194 rules. 7630 rules in the queue.
75600 rules inserted. The rule base contains 57317 rules. 7630 rules in the queue.
75800 rules inserted. The rule base contains 57378 rules. 7578 rules in the queue.
76000 rules inserted. The rule base contains 57558 rules. 7621 rules in the queue.
76200 rules inserted. The rule base contains 57722 rules. 7652 rules in the queue.
76400 rules inserted. The rule base contains 57894 rules. 7695 rules in the queue.
76600 rules inserted. The rule base contains 58070 rules. 7709 rules in the queue.
76800 rules inserted. The rule base contains 58248 rules. 7771 rules in the queue.
77000 rules inserted. The rule base contains 58430 rules. 7821 rules in the queue.
77200 rules inserted. The rule base contains 58613 rules. 7856 rules in the queue.
77400 rules inserted. The rule base contains 58776 rules. 7889 rules in the queue.
77600 rules inserted. The rule base contains 58937 rules. 7903 rules in the queue.
77800 rules inserted. The rule base contains 59114 rules. 7896 rules in the queue.
78000 rules inserted. The rule base contains 59302 rules. 7953 rules in the queue.
78200 rules inserted. The rule base contains 59496 rules. 7991 rules in the queue.
78400 rules inserted. The rule base contains 59686 rules. 7980 rules in the queue.
78600 rules inserted. The rule base contains 59874 rules. 7881 rules in the queue.
78800 rules inserted. The rule base contains 59931 rules. 7776 rules in the queue.
79000 rules inserted. The rule base contains 60126 rules. 7827 rules in the queue.
79200 rules inserted. The rule base contains 60321 rules. 7784 rules in the queue.
79400 rules inserted. The rule base contains 60285 rules. 7792 rules in the queue.
79600 rules inserted. The rule base contains 60392 rules. 7769 rules in the queue.
79800 rules inserted. The rule base contains 60404 rules. 7602 rules in the queue.
80000 rules inserted. The rule base contains 60556 rules. 7622 rules in the queue.
80200 rules inserted. The rule base contains 60756 rules. 7561 rules in the queue.
80400 rules inserted. The rule base contains 60823 rules. 7495 rules in the queue.
80600 rules inserted. The rule base contains 60667 rules. 7458 rules in the queue.
80800 rules inserted. The rule base contains 60758 rules. 7462 rules in the queue.
81000 rules inserted. The rule base contains 60869 rules. 7454 rules in the queue.
81200 rules inserted. The rule base contains 60944 rules. 7384 rules in the queue.
81400 rules inserted. The rule base contains 61019 rules. 7335 rules in the queue.
81600 rules inserted. The rule base contains 61137 rules. 7365 rules in the queue.
81800 rules inserted. The rule base contains 61245 rules. 7373 rules in the queue.
82000 rules inserted. The rule base contains 61369 rules. 7402 rules in the queue.
82200 rules inserted. The rule base contains 61523 rules. 7391 rules in the queue.
82400 rules inserted. The rule base contains 61415 rules. 7345 rules in the queue.
82600 rules inserted. The rule base contains 61520 rules. 7387 rules in the queue.
82800 rules inserted. The rule base contains 61703 rules. 7390 rules in the queue.
83000 rules inserted. The rule base contains 61856 rules. 7415 rules in the queue.
83200 rules inserted. The rule base contains 62009 rules. 7447 rules in the queue.
83400 rules inserted. The rule base contains 62194 rules. 7438 rules in the queue.
83600 rules inserted. The rule base contains 62368 rules. 7458 rules in the queue.
83800 rules inserted. The rule base contains 62551 rules. 7500 rules in the queue.
84000 rules inserted. The rule base contains 62730 rules. 7498 rules in the queue.
84200 rules inserted. The rule base contains 62904 rules. 7515 rules in the queue.
84400 rules inserted. The rule base contains 63040 rules. 7513 rules in the queue.
84600 rules inserted. The rule base contains 63189 rules. 7510 rules in the queue.
84800 rules inserted. The rule base contains 63371 rules. 7498 rules in the queue.
85000 rules inserted. The rule base contains 63552 rules. 7508 rules in the queue.
85200 rules inserted. The rule base contains 63701 rules. 7502 rules in the queue.
85400 rules inserted. The rule base contains 63762 rules. 7442 rules in the queue.
85600 rules inserted. The rule base contains 63925 rules. 7483 rules in the queue.
85800 rules inserted. The rule base contains 64101 rules. 7529 rules in the queue.
86000 rules inserted. The rule base contains 64233 rules. 7543 rules in the queue.
86200 rules inserted. The rule base contains 64390 rules. 7552 rules in the queue.
86400 rules inserted. The rule base contains 64568 rules. 7586 rules in the queue.
86600 rules inserted. The rule base contains 64738 rules. 7621 rules in the queue.
86800 rules inserted. The rule base contains 64911 rules. 7673 rules in the queue.
87000 rules inserted. The rule base contains 65080 rules. 7721 rules in the queue.
87200 rules inserted. The rule base contains 65187 rules. 7721 rules in the queue.
87400 rules inserted. The rule base contains 65324 rules. 7724 rules in the queue.
87600 rules inserted. The rule base contains 65497 rules. 7761 rules in the queue.
87800 rules inserted. The rule base contains 65673 rules. 7791 rules in the queue.
88000 rules inserted. The rule base contains 65798 rules. 7735 rules in the queue.
88200 rules inserted. The rule base contains 65933 rules. 7633 rules in the queue.
88400 rules inserted. The rule base contains 66062 rules. 7547 rules in the queue.
88600 rules inserted. The rule base contains 66246 rules. 7559 rules in the queue.
88800 rules inserted. The rule base contains 66420 rules. 7571 rules in the queue.
89000 rules inserted. The rule base contains 66608 rules. 7583 rules in the queue.
89200 rules inserted. The rule base contains 66773 rules. 7602 rules in the queue.
89400 rules inserted. The rule base contains 66871 rules. 7630 rules in the queue.
89600 rules inserted. The rule base contains 66854 rules. 7662 rules in the queue.
89800 rules inserted. The rule base contains 66980 rules. 7669 rules in the queue.
90000 rules inserted. The rule base contains 67167 rules. 7672 rules in the queue.
90200 rules inserted. The rule base contains 67303 rules. 7672 rules in the queue.
90400 rules inserted. The rule base contains 67464 rules. 7664 rules in the queue.
90600 rules inserted. The rule base contains 67657 rules. 7620 rules in the queue.
90800 rules inserted. The rule base contains 67827 rules. 7604 rules in the queue.
91000 rules inserted. The rule base contains 67999 rules. 7617 rules in the queue.
91200 rules inserted. The rule base contains 68193 rules. 7627 rules in the queue.
91400 rules inserted. The rule base contains 68371 rules. 7613 rules in the queue.
91600 rules inserted. The rule base contains 68509 rules. 7626 rules in the queue.
91800 rules inserted. The rule base contains 68671 rules. 7602 rules in the queue.
92000 rules inserted. The rule base contains 68866 rules. 7556 rules in the queue.
92200 rules inserted. The rule base contains 69028 rules. 7496 rules in the queue.
92400 rules inserted. The rule base contains 69192 rules. 7511 rules in the queue.
92600 rules inserted. The rule base contains 69355 rules. 7539 rules in the queue.
92800 rules inserted. The rule base contains 69519 rules. 7568 rules in the queue.
93000 rules inserted. The rule base contains 69660 rules. 7590 rules in the queue.
93200 rules inserted. The rule base contains 69848 rules. 7613 rules in the queue.
93400 rules inserted. The rule base contains 69968 rules. 7611 rules in the queue.
93600 rules inserted. The rule base contains 70128 rules. 7625 rules in the queue.
93800 rules inserted. The rule base contains 70308 rules. 7630 rules in the queue.
94000 rules inserted. The rule base contains 70474 rules. 7651 rules in the queue.
94200 rules inserted. The rule base contains 70648 rules. 7662 rules in the queue.
94400 rules inserted. The rule base contains 70827 rules. 7670 rules in the queue.
94600 rules inserted. The rule base contains 70993 rules. 7674 rules in the queue.
94800 rules inserted. The rule base contains 71103 rules. 7674 rules in the queue.
95000 rules inserted. The rule base contains 71257 rules. 7678 rules in the queue.
95200 rules inserted. The rule base contains 71436 rules. 7686 rules in the queue.
95400 rules inserted. The rule base contains 71614 rules. 7695 rules in the queue.
95600 rules inserted. The rule base contains 71718 rules. 7634 rules in the queue.
95800 rules inserted. The rule base contains 71816 rules. 7578 rules in the queue.
96000 rules inserted. The rule base contains 71902 rules. 7483 rules in the queue.
96200 rules inserted. The rule base contains 72018 rules. 7425 rules in the queue.
96400 rules inserted. The rule base contains 72196 rules. 7428 rules in the queue.
96600 rules inserted. The rule base contains 72349 rules. 7417 rules in the queue.
96800 rules inserted. The rule base contains 72323 rules. 7422 rules in the queue.
97000 rules inserted. The rule base contains 72290 rules. 7441 rules in the queue.
97200 rules inserted. The rule base contains 72456 rules. 7411 rules in the queue.
97400 rules inserted. The rule base contains 72644 rules. 7402 rules in the queue.
97600 rules inserted. The rule base contains 72826 rules. 7424 rules in the queue.
97800 rules inserted. The rule base contains 73013 rules. 7402 rules in the queue.
98000 rules inserted. The rule base contains 73205 rules. 7400 rules in the queue.
98200 rules inserted. The rule base contains 73393 rules. 7385 rules in the queue.
98400 rules inserted. The rule base contains 73587 rules. 7362 rules in the queue.
98600 rules inserted. The rule base contains 73772 rules. 7360 rules in the queue.
98800 rules inserted. The rule base contains 73959 rules. 7375 rules in the queue.
99000 rules inserted. The rule base contains 74147 rules. 7386 rules in the queue.
99200 rules inserted. The rule base contains 74318 rules. 7360 rules in the queue.
99400 rules inserted. The rule base contains 74518 rules. 7355 rules in the queue.
99600 rules inserted. The rule base contains 74702 rules. 7365 rules in the queue.
99800 rules inserted. The rule base contains 74866 rules. 7363 rules in the queue.
100000 rules inserted. The rule base contains 75009 rules. 7385 rules in the queue.
100200 rules inserted. The rule base contains 75181 rules. 7388 rules in the queue.
100400 rules inserted. The rule base contains 75379 rules. 7481 rules in the queue.
100600 rules inserted. The rule base contains 75556 rules. 7505 rules in the queue.
100800 rules inserted. The rule base contains 75743 rules. 7525 rules in the queue.
101000 rules inserted. The rule base contains 75931 rules. 7541 rules in the queue.
101200 rules inserted. The rule base contains 76116 rules. 7582 rules in the queue.
101400 rules inserted. The rule base contains 76306 rules. 7620 rules in the queue.
101600 rules inserted. The rule base contains 76506 rules. 7688 rules in the queue.
101800 rules inserted. The rule base contains 76706 rules. 7763 rules in the queue.
102000 rules inserted. The rule base contains 76906 rules. 7827 rules in the queue.
102200 rules inserted. The rule base contains 77106 rules. 7893 rules in the queue.
102400 rules inserted. The rule base contains 77306 rules. 7966 rules in the queue.
102600 rules inserted. The rule base contains 77506 rules. 8042 rules in the queue.
102800 rules inserted. The rule base contains 77693 rules. 8045 rules in the queue.
103000 rules inserted. The rule base contains 77758 rules. 7985 rules in the queue.
103200 rules inserted. The rule base contains 77861 rules. 8022 rules in the queue.
103400 rules inserted. The rule base contains 77968 rules. 8048 rules in the queue.
103600 rules inserted. The rule base contains 78108 rules. 8083 rules in the queue.
103800 rules inserted. The rule base contains 78240 rules. 8091 rules in the queue.
104000 rules inserted. The rule base contains 78316 rules. 8115 rules in the queue.
104200 rules inserted. The rule base contains 78300 rules. 8131 rules in the queue.
104400 rules inserted. The rule base contains 78394 rules. 8110 rules in the queue.
104600 rules inserted. The rule base contains 78539 rules. 8097 rules in the queue.
104800 rules inserted. The rule base contains 78684 rules. 8081 rules in the queue.
105000 rules inserted. The rule base contains 78805 rules. 8100 rules in the queue.
105200 rules inserted. The rule base contains 78975 rules. 8088 rules in the queue.
105400 rules inserted. The rule base contains 79140 rules. 8087 rules in the queue.
105600 rules inserted. The rule base contains 79317 rules. 8087 rules in the queue.
105800 rules inserted. The rule base contains 79473 rules. 8072 rules in the queue.
106000 rules inserted. The rule base contains 79619 rules. 8056 rules in the queue.
106200 rules inserted. The rule base contains 79764 rules. 8067 rules in the queue.
106400 rules inserted. The rule base contains 79902 rules. 8046 rules in the queue.
106600 rules inserted. The rule base contains 80078 rules. 8019 rules in the queue.
106800 rules inserted. The rule base contains 80255 rules. 8056 rules in the queue.
107000 rules inserted. The rule base contains 80455 rules. 8088 rules in the queue.
107200 rules inserted. The rule base contains 80655 rules. 8103 rules in the queue.
107400 rules inserted. The rule base contains 80809 rules. 8127 rules in the queue.
107600 rules inserted. The rule base contains 81003 rules. 8206 rules in the queue.
107800 rules inserted. The rule base contains 81176 rules. 8207 rules in the queue.
108000 rules inserted. The rule base contains 81362 rules. 8222 rules in the queue.
108200 rules inserted. The rule base contains 81549 rules. 8202 rules in the queue.
108400 rules inserted. The rule base contains 81745 rules. 8282 rules in the queue.
108600 rules inserted. The rule base contains 81909 rules. 8279 rules in the queue.
108800 rules inserted. The rule base contains 82098 rules. 8315 rules in the queue.
109000 rules inserted. The rule base contains 82296 rules. 8364 rules in the queue.
109200 rules inserted. The rule base contains 82494 rules. 8428 rules in the queue.
109400 rules inserted. The rule base contains 82692 rules. 8464 rules in the queue.
109600 rules inserted. The rule base contains 82874 rules. 8452 rules in the queue.
109800 rules inserted. The rule base contains 83074 rules. 8491 rules in the queue.
110000 rules inserted. The rule base contains 83272 rules. 8549 rules in the queue.
110200 rules inserted. The rule base contains 83468 rules. 8604 rules in the queue.
110400 rules inserted. The rule base contains 83666 rules. 8650 rules in the queue.
110600 rules inserted. The rule base contains 83805 rules. 8576 rules in the queue.
110800 rules inserted. The rule base contains 83973 rules. 8599 rules in the queue.
111000 rules inserted. The rule base contains 84173 rules. 8659 rules in the queue.
111200 rules inserted. The rule base contains 84369 rules. 8699 rules in the queue.
111400 rules inserted. The rule base contains 84509 rules. 8737 rules in the queue.
111600 rules inserted. The rule base contains 84603 rules. 8728 rules in the queue.
111800 rules inserted. The rule base contains 84757 rules. 8776 rules in the queue.
112000 rules inserted. The rule base contains 84779 rules. 8762 rules in the queue.
112200 rules inserted. The rule base contains 84750 rules. 8796 rules in the queue.
112400 rules inserted. The rule base contains 84885 rules. 8764 rules in the queue.
112600 rules inserted. The rule base contains 84968 rules. 8751 rules in the queue.
112800 rules inserted. The rule base contains 85051 rules. 8745 rules in the queue.
113000 rules inserted. The rule base contains 85175 rules. 8707 rules in the queue.
113200 rules inserted. The rule base contains 85244 rules. 8662 rules in the queue.
113400 rules inserted. The rule base contains 85361 rules. 8635 rules in the queue.
113600 rules inserted. The rule base contains 85459 rules. 8630 rules in the queue.
113800 rules inserted. The rule base contains 85549 rules. 8612 rules in the queue.
114000 rules inserted. The rule base contains 85670 rules. 8576 rules in the queue.
114200 rules inserted. The rule base contains 85748 rules. 8542 rules in the queue.
114400 rules inserted. The rule base contains 85944 rules. 8600 rules in the queue.
114600 rules inserted. The rule base contains 86143 rules. 8603 rules in the queue.
114800 rules inserted. The rule base contains 86322 rules. 8640 rules in the queue.
115000 rules inserted. The rule base contains 86506 rules. 8673 rules in the queue.
115200 rules inserted. The rule base contains 86690 rules. 8676 rules in the queue.
115400 rules inserted. The rule base contains 86822 rules. 8618 rules in the queue.
115600 rules inserted. The rule base contains 86986 rules. 8618 rules in the queue.
115800 rules inserted. The rule base contains 87154 rules. 8605 rules in the queue.
116000 rules inserted. The rule base contains 87342 rules. 8638 rules in the queue.
116200 rules inserted. The rule base contains 87513 rules. 8589 rules in the queue.
116400 rules inserted. The rule base contains 87613 rules. 8544 rules in the queue.
116600 rules inserted. The rule base contains 87802 rules. 8522 rules in the queue.
116800 rules inserted. The rule base contains 87991 rules. 8502 rules in the queue.
117000 rules inserted. The rule base contains 88180 rules. 8479 rules in the queue.
117200 rules inserted. The rule base contains 88365 rules. 8431 rules in the queue.
117400 rules inserted. The rule base contains 88527 rules. 8393 rules in the queue.
117600 rules inserted. The rule base contains 88701 rules. 8370 rules in the queue.
117800 rules inserted. The rule base contains 88886 rules. 8354 rules in the queue.
118000 rules inserted. The rule base contains 89075 rules. 8339 rules in the queue.
118200 rules inserted. The rule base contains 89264 rules. 8319 rules in the queue.
118400 rules inserted. The rule base contains 89453 rules. 8306 rules in the queue.
118600 rules inserted. The rule base contains 89583 rules. 8205 rules in the queue.
118800 rules inserted. The rule base contains 89773 rules. 8205 rules in the queue.
119000 rules inserted. The rule base contains 89962 rules. 8203 rules in the queue.
119200 rules inserted. The rule base contains 90154 rules. 8207 rules in the queue.
119400 rules inserted. The rule base contains 90321 rules. 8196 rules in the queue.
119600 rules inserted. The rule base contains 90329 rules. 8073 rules in the queue.
119800 rules inserted. The rule base contains 90507 rules. 8081 rules in the queue.
120000 rules inserted. The rule base contains 90615 rules. 8084 rules in the queue.
120200 rules inserted. The rule base contains 90547 rules. 8152 rules in the queue.
120400 rules inserted. The rule base contains 90517 rules. 8101 rules in the queue.
120600 rules inserted. The rule base contains 90590 rules. 8039 rules in the queue.
120800 rules inserted. The rule base contains 90652 rules. 8022 rules in the queue.
121000 rules inserted. The rule base contains 90736 rules. 7920 rules in the queue.
121200 rules inserted. The rule base contains 90741 rules. 7894 rules in the queue.
121400 rules inserted. The rule base contains 90803 rules. 7791 rules in the queue.
121600 rules inserted. The rule base contains 90862 rules. 7757 rules in the queue.
121800 rules inserted. The rule base contains 90936 rules. 7685 rules in the queue.
122000 rules inserted. The rule base contains 90967 rules. 7445 rules in the queue.
122200 rules inserted. The rule base contains 90994 rules. 7244 rules in the queue.
122400 rules inserted. The rule base contains 91098 rules. 7130 rules in the queue.
122600 rules inserted. The rule base contains 91286 rules. 7164 rules in the queue.
122800 rules inserted. The rule base contains 91477 rules. 7214 rules in the queue.
123000 rules inserted. The rule base contains 91620 rules. 7068 rules in the queue.
123200 rules inserted. The rule base contains 91742 rules. 6977 rules in the queue.
123400 rules inserted. The rule base contains 91846 rules. 6942 rules in the queue.
123600 rules inserted. The rule base contains 92003 rules. 6918 rules in the queue.
123800 rules inserted. The rule base contains 92143 rules. 6851 rules in the queue.
124000 rules inserted. The rule base contains 92240 rules. 6795 rules in the queue.
124200 rules inserted. The rule base contains 92403 rules. 6704 rules in the queue.
124400 rules inserted. The rule base contains 92574 rules. 6611 rules in the queue.
124600 rules inserted. The rule base contains 92732 rules. 6552 rules in the queue.
124800 rules inserted. The rule base contains 92864 rules. 6504 rules in the queue.
125000 rules inserted. The rule base contains 93039 rules. 6451 rules in the queue.
125200 rules inserted. The rule base contains 93210 rules. 6378 rules in the queue.
125400 rules inserted. The rule base contains 93373 rules. 6293 rules in the queue.
125600 rules inserted. The rule base contains 93520 rules. 6252 rules in the queue.
125800 rules inserted. The rule base contains 93700 rules. 6279 rules in the queue.
126000 rules inserted. The rule base contains 93878 rules. 6307 rules in the queue.
126200 rules inserted. The rule base contains 94062 rules. 6343 rules in the queue.
126400 rules inserted. The rule base contains 94146 rules. 6292 rules in the queue.
126600 rules inserted. The rule base contains 93783 rules. 6021 rules in the queue.
126800 rules inserted. The rule base contains 93870 rules. 5963 rules in the queue.
127000 rules inserted. The rule base contains 93821 rules. 6016 rules in the queue.
127200 rules inserted. The rule base contains 93805 rules. 6061 rules in the queue.
127400 rules inserted. The rule base contains 93711 rules. 5732 rules in the queue.
127600 rules inserted. The rule base contains 93732 rules. 5689 rules in the queue.
127800 rules inserted. The rule base contains 93718 rules. 5685 rules in the queue.
128000 rules inserted. The rule base contains 93720 rules. 5691 rules in the queue.
128200 rules inserted. The rule base contains 93686 rules. 5522 rules in the queue.
128400 rules inserted. The rule base contains 93704 rules. 5335 rules in the queue.
128600 rules inserted. The rule base contains 93876 rules. 5337 rules in the queue.
128800 rules inserted. The rule base contains 94076 rules. 5385 rules in the queue.
129000 rules inserted. The rule base contains 92595 rules. 4935 rules in the queue.
129200 rules inserted. The rule base contains 92735 rules. 4866 rules in the queue.
129400 rules inserted. The rule base contains 92879 rules. 4730 rules in the queue.
129600 rules inserted. The rule base contains 92997 rules. 4624 rules in the queue.
129800 rules inserted. The rule base contains 93149 rules. 4495 rules in the queue.
130000 rules inserted. The rule base contains 93263 rules. 4369 rules in the queue.
130200 rules inserted. The rule base contains 93431 rules. 4243 rules in the queue.
130400 rules inserted. The rule base contains 93560 rules. 4164 rules in the queue.
130600 rules inserted. The rule base contains 93759 rules. 4174 rules in the queue.
130800 rules inserted. The rule base contains 93959 rules. 4181 rules in the queue.
131000 rules inserted. The rule base contains 94158 rules. 4192 rules in the queue.
131200 rules inserted. The rule base contains 94357 rules. 4211 rules in the queue.
131400 rules inserted. The rule base contains 94405 rules. 4148 rules in the queue.
131600 rules inserted. The rule base contains 94473 rules. 4032 rules in the queue.
131800 rules inserted. The rule base contains 94408 rules. 4050 rules in the queue.
132000 rules inserted. The rule base contains 94408 rules. 4079 rules in the queue.
132200 rules inserted. The rule base contains 94227 rules. 4026 rules in the queue.
132400 rules inserted. The rule base contains 94234 rules. 4015 rules in the queue.
132600 rules inserted. The rule base contains 94238 rules. 4011 rules in the queue.
132800 rules inserted. The rule base contains 94240 rules. 4009 rules in the queue.
133000 rules inserted. The rule base contains 94219 rules. 3924 rules in the queue.
133200 rules inserted. The rule base contains 94287 rules. 3794 rules in the queue.
133400 rules inserted. The rule base contains 94487 rules. 3841 rules in the queue.
133600 rules inserted. The rule base contains 94677 rules. 3865 rules in the queue.
133800 rules inserted. The rule base contains 94406 rules. 3712 rules in the queue.
134000 rules inserted. The rule base contains 94450 rules. 3658 rules in the queue.
134200 rules inserted. The rule base contains 94503 rules. 3638 rules in the queue.
134400 rules inserted. The rule base contains 94698 rules. 3666 rules in the queue.
134600 rules inserted. The rule base contains 94898 rules. 3695 rules in the queue.
134800 rules inserted. The rule base contains 95097 rules. 3716 rules in the queue.
135000 rules inserted. The rule base contains 95293 rules. 3759 rules in the queue.
135200 rules inserted. The rule base contains 95493 rules. 3798 rules in the queue.
135400 rules inserted. The rule base contains 89963 rules. 3742 rules in the queue.
135600 rules inserted. The rule base contains 89985 rules. 3776 rules in the queue.
135800 rules inserted. The rule base contains 90121 rules. 3805 rules in the queue.
136000 rules inserted. The rule base contains 90179 rules. 3794 rules in the queue.
136200 rules inserted. The rule base contains 90189 rules. 3769 rules in the queue.
136400 rules inserted. The rule base contains 90197 rules. 3761 rules in the queue.
136600 rules inserted. The rule base contains 90205 rules. 3753 rules in the queue.
136800 rules inserted. The rule base contains 90130 rules. 3610 rules in the queue.
137000 rules inserted. The rule base contains 90321 rules. 3643 rules in the queue.
137200 rules inserted. The rule base contains 90518 rules. 3673 rules in the queue.
137400 rules inserted. The rule base contains 64973 rules. 3090 rules in the queue.
137600 rules inserted. The rule base contains 64974 rules. 3087 rules in the queue.
137800 rules inserted. The rule base contains 65153 rules. 3103 rules in the queue.
138000 rules inserted. The rule base contains 65343 rules. 3078 rules in the queue.
138200 rules inserted. The rule base contains 65532 rules. 3046 rules in the queue.
138400 rules inserted. The rule base contains 65714 rules. 3049 rules in the queue.
138600 rules inserted. The rule base contains 65901 rules. 3041 rules in the queue.
138800 rules inserted. The rule base contains 65591 rules. 3020 rules in the queue.
139000 rules inserted. The rule base contains 65577 rules. 2949 rules in the queue.
139200 rules inserted. The rule base contains 65478 rules. 2911 rules in the queue.
139400 rules inserted. The rule base contains 65446 rules. 2871 rules in the queue.
139600 rules inserted. The rule base contains 65454 rules. 2863 rules in the queue.
139800 rules inserted. The rule base contains 63693 rules. 2817 rules in the queue.
140000 rules inserted. The rule base contains 63812 rules. 2739 rules in the queue.
140200 rules inserted. The rule base contains 63714 rules. 2702 rules in the queue.
140400 rules inserted. The rule base contains 63718 rules. 2698 rules in the queue.
140600 rules inserted. The rule base contains 63885 rules. 2683 rules in the queue.
140800 rules inserted. The rule base contains 64085 rules. 2661 rules in the queue.
141000 rules inserted. The rule base contains 64285 rules. 2642 rules in the queue.
141200 rules inserted. The rule base contains 64448 rules. 2615 rules in the queue.
141400 rules inserted. The rule base contains 64648 rules. 2590 rules in the queue.
141600 rules inserted. The rule base contains 64759 rules. 2562 rules in the queue.
141800 rules inserted. The rule base contains 64736 rules. 2579 rules in the queue.
142000 rules inserted. The rule base contains 64625 rules. 2552 rules in the queue.
142200 rules inserted. The rule base contains 64685 rules. 2496 rules in the queue.
142400 rules inserted. The rule base contains 64703 rules. 2490 rules in the queue.
142600 rules inserted. The rule base contains 64815 rules. 2480 rules in the queue.
142800 rules inserted. The rule base contains 64893 rules. 2486 rules in the queue.
143000 rules inserted. The rule base contains 64861 rules. 2470 rules in the queue.
143200 rules inserted. The rule base contains 64972 rules. 2478 rules in the queue.
143400 rules inserted. The rule base contains 65147 rules. 2555 rules in the queue.
143600 rules inserted. The rule base contains 65328 rules. 2621 rules in the queue.
143800 rules inserted. The rule base contains 65462 rules. 2635 rules in the queue.
144000 rules inserted. The rule base contains 65636 rules. 2685 rules in the queue.
144200 rules inserted. The rule base contains 65667 rules. 2697 rules in the queue.
144400 rules inserted. The rule base contains 65635 rules. 2690 rules in the queue.
144600 rules inserted. The rule base contains 65727 rules. 2628 rules in the queue.
144800 rules inserted. The rule base contains 65810 rules. 2557 rules in the queue.
145000 rules inserted. The rule base contains 65934 rules. 2531 rules in the queue.
145200 rules inserted. The rule base contains 66095 rules. 2529 rules in the queue.
145400 rules inserted. The rule base contains 66126 rules. 2537 rules in the queue.
145600 rules inserted. The rule base contains 66185 rules. 2542 rules in the queue.
145800 rules inserted. The rule base contains 66312 rules. 2561 rules in the queue.
146000 rules inserted. The rule base contains 66452 rules. 2580 rules in the queue.
146200 rules inserted. The rule base contains 66579 rules. 2593 rules in the queue.
146400 rules inserted. The rule base contains 66694 rules. 2581 rules in the queue.
146600 rules inserted. The rule base contains 66839 rules. 2579 rules in the queue.
146800 rules inserted. The rule base contains 66838 rules. 2554 rules in the queue.
147000 rules inserted. The rule base contains 66854 rules. 2542 rules in the queue.
147200 rules inserted. The rule base contains 66844 rules. 2499 rules in the queue.
147400 rules inserted. The rule base contains 66798 rules. 2464 rules in the queue.
147600 rules inserted. The rule base contains 66998 rules. 2441 rules in the queue.
147800 rules inserted. The rule base contains 66966 rules. 2428 rules in the queue.
148000 rules inserted. The rule base contains 66945 rules. 2374 rules in the queue.
148200 rules inserted. The rule base contains 67033 rules. 2316 rules in the queue.
148400 rules inserted. The rule base contains 67116 rules. 2289 rules in the queue.
148600 rules inserted. The rule base contains 67202 rules. 2294 rules in the queue.
148800 rules inserted. The rule base contains 67269 rules. 2228 rules in the queue.
149000 rules inserted. The rule base contains 67369 rules. 2193 rules in the queue.
149200 rules inserted. The rule base contains 67353 rules. 2148 rules in the queue.
149400 rules inserted. The rule base contains 67324 rules. 2103 rules in the queue.
149600 rules inserted. The rule base contains 67036 rules. 2051 rules in the queue.
149800 rules inserted. The rule base contains 67227 rules. 2030 rules in the queue.
150000 rules inserted. The rule base contains 67106 rules. 1981 rules in the queue.
150200 rules inserted. The rule base contains 66860 rules. 1759 rules in the queue.
150400 rules inserted. The rule base contains 66877 rules. 1767 rules in the queue.
150600 rules inserted. The rule base contains 66880 rules. 1728 rules in the queue.
150800 rules inserted. The rule base contains 66866 rules. 1661 rules in the queue.
151000 rules inserted. The rule base contains 66957 rules. 1587 rules in the queue.
151200 rules inserted. The rule base contains 66925 rules. 1519 rules in the queue.
151400 rules inserted. The rule base contains 66942 rules. 1466 rules in the queue.
151600 rules inserted. The rule base contains 66985 rules. 1395 rules in the queue.
151800 rules inserted. The rule base contains 66442 rules. 1183 rules in the queue.
152000 rules inserted. The rule base contains 66442 rules. 1183 rules in the queue.
152200 rules inserted. The rule base contains 66138 rules. 1034 rules in the queue.
152400 rules inserted. The rule base contains 66182 rules. 1075 rules in the queue.
152600 rules inserted. The rule base contains 66340 rules. 1077 rules in the queue.
152800 rules inserted. The rule base contains 66430 rules. 1067 rules in the queue.
153000 rules inserted. The rule base contains 66430 rules. 1067 rules in the queue.
153200 rules inserted. The rule base contains 66457 rules. 1050 rules in the queue.
153400 rules inserted. The rule base contains 66602 rules. 1025 rules in the queue.
153600 rules inserted. The rule base contains 66791 rules. 1012 rules in the queue.
153800 rules inserted. The rule base contains 62769 rules. 961 rules in the queue.
154000 rules inserted. The rule base contains 62774 rules. 946 rules in the queue.
154200 rules inserted. The rule base contains 59574 rules. 906 rules in the queue.
154400 rules inserted. The rule base contains 59699 rules. 871 rules in the queue.
154600 rules inserted. The rule base contains 59835 rules. 844 rules in the queue.
154800 rules inserted. The rule base contains 59410 rules. 795 rules in the queue.
155000 rules inserted. The rule base contains 59084 rules. 788 rules in the queue.
155200 rules inserted. The rule base contains 59095 rules. 768 rules in the queue.
155400 rules inserted. The rule base contains 59230 rules. 777 rules in the queue.
155600 rules inserted. The rule base contains 59375 rules. 753 rules in the queue.
155800 rules inserted. The rule base contains 59544 rules. 743 rules in the queue.
156000 rules inserted. The rule base contains 59663 rules. 774 rules in the queue.
156200 rules inserted. The rule base contains 59759 rules. 814 rules in the queue.
156400 rules inserted. The rule base contains 59809 rules. 770 rules in the queue.
156600 rules inserted. The rule base contains 59821 rules. 721 rules in the queue.
156800 rules inserted. The rule base contains 59914 rules. 751 rules in the queue.
157000 rules inserted. The rule base contains 60005 rules. 780 rules in the queue.
157200 rules inserted. The rule base contains 59757 rules. 793 rules in the queue.
157400 rules inserted. The rule base contains 59713 rules. 789 rules in the queue.
157600 rules inserted. The rule base contains 59869 rules. 814 rules in the queue.
157800 rules inserted. The rule base contains 60002 rules. 826 rules in the queue.
158000 rules inserted. The rule base contains 59138 rules. 804 rules in the queue.
158200 rules inserted. The rule base contains 58641 rules. 799 rules in the queue.
158400 rules inserted. The rule base contains 58810 rules. 819 rules in the queue.
158600 rules inserted. The rule base contains 58954 rules. 822 rules in the queue.
158800 rules inserted. The rule base contains 58714 rules. 829 rules in the queue.
159000 rules inserted. The rule base contains 58620 rules. 811 rules in the queue.
159200 rules inserted. The rule base contains 58753 rules. 841 rules in the queue.
159400 rules inserted. The rule base contains 58888 rules. 836 rules in the queue.
159600 rules inserted. The rule base contains 58946 rules. 832 rules in the queue.
159800 rules inserted. The rule base contains 59043 rules. 834 rules in the queue.
160000 rules inserted. The rule base contains 59186 rules. 865 rules in the queue.
160200 rules inserted. The rule base contains 59334 rules. 881 rules in the queue.
160400 rules inserted. The rule base contains 59502 rules. 881 rules in the queue.
160600 rules inserted. The rule base contains 59688 rules. 915 rules in the queue.
160800 rules inserted. The rule base contains 59862 rules. 977 rules in the queue.
161000 rules inserted. The rule base contains 60058 rules. 1019 rules in the queue.
161200 rules inserted. The rule base contains 60258 rules. 1048 rules in the queue.
161400 rules inserted. The rule base contains 60450 rules. 948 rules in the queue.
161600 rules inserted. The rule base contains 60632 rules. 993 rules in the queue.
161800 rules inserted. The rule base contains 60802 rules. 1058 rules in the queue.
162000 rules inserted. The rule base contains 60992 rules. 1090 rules in the queue.
162200 rules inserted. The rule base contains 61180 rules. 1122 rules in the queue.
162400 rules inserted. The rule base contains 61351 rules. 1160 rules in the queue.
162600 rules inserted. The rule base contains 61521 rules. 1197 rules in the queue.
162800 rules inserted. The rule base contains 61645 rules. 1240 rules in the queue.
163000 rules inserted. The rule base contains 61823 rules. 1233 rules in the queue.
163200 rules inserted. The rule base contains 61988 rules. 1273 rules in the queue.
163400 rules inserted. The rule base contains 62155 rules. 1315 rules in the queue.
163600 rules inserted. The rule base contains 62302 rules. 1357 rules in the queue.
163800 rules inserted. The rule base contains 62472 rules. 1364 rules in the queue.
164000 rules inserted. The rule base contains 62602 rules. 1412 rules in the queue.
164200 rules inserted. The rule base contains 62750 rules. 1406 rules in the queue.
164400 rules inserted. The rule base contains 62914 rules. 1453 rules in the queue.
164600 rules inserted. The rule base contains 63074 rules. 1480 rules in the queue.
164800 rules inserted. The rule base contains 63248 rules. 1515 rules in the queue.
165000 rules inserted. The rule base contains 63399 rules. 1557 rules in the queue.
165200 rules inserted. The rule base contains 63578 rules. 1586 rules in the queue.
165400 rules inserted. The rule base contains 63695 rules. 1588 rules in the queue.
165600 rules inserted. The rule base contains 63850 rules. 1615 rules in the queue.
165800 rules inserted. The rule base contains 64031 rules. 1645 rules in the queue.
166000 rules inserted. The rule base contains 64200 rules. 1661 rules in the queue.
166200 rules inserted. The rule base contains 64392 rules. 1717 rules in the queue.
166400 rules inserted. The rule base contains 64553 rules. 1739 rules in the queue.
166600 rules inserted. The rule base contains 64702 rules. 1767 rules in the queue.
166800 rules inserted. The rule base contains 64815 rules. 1789 rules in the queue.
167000 rules inserted. The rule base contains 64967 rules. 1793 rules in the queue.
167200 rules inserted. The rule base contains 65139 rules. 1826 rules in the queue.
167400 rules inserted. The rule base contains 65311 rules. 1861 rules in the queue.
167600 rules inserted. The rule base contains 65485 rules. 1890 rules in the queue.
167800 rules inserted. The rule base contains 65667 rules. 1930 rules in the queue.
168000 rules inserted. The rule base contains 65819 rules. 1962 rules in the queue.
168200 rules inserted. The rule base contains 65958 rules. 1997 rules in the queue.
168400 rules inserted. The rule base contains 66083 rules. 2015 rules in the queue.
168600 rules inserted. The rule base contains 66204 rules. 2047 rules in the queue.
168800 rules inserted. The rule base contains 66353 rules. 2052 rules in the queue.
169000 rules inserted. The rule base contains 66516 rules. 2068 rules in the queue.
169200 rules inserted. The rule base contains 66668 rules. 2098 rules in the queue.
169400 rules inserted. The rule base contains 66828 rules. 2133 rules in the queue.
169600 rules inserted. The rule base contains 66986 rules. 2175 rules in the queue.
169800 rules inserted. The rule base contains 67116 rules. 2198 rules in the queue.
170000 rules inserted. The rule base contains 67251 rules. 2223 rules in the queue.
170200 rules inserted. The rule base contains 67379 rules. 2216 rules in the queue.
170400 rules inserted. The rule base contains 67488 rules. 2210 rules in the queue.
170600 rules inserted. The rule base contains 67574 rules. 2229 rules in the queue.
170800 rules inserted. The rule base contains 67699 rules. 2220 rules in the queue.
171000 rules inserted. The rule base contains 67838 rules. 2211 rules in the queue.
171200 rules inserted. The rule base contains 67949 rules. 2226 rules in the queue.
171400 rules inserted. The rule base contains 68093 rules. 2234 rules in the queue.
171600 rules inserted. The rule base contains 68216 rules. 2252 rules in the queue.
171800 rules inserted. The rule base contains 68350 rules. 2248 rules in the queue.
172000 rules inserted. The rule base contains 68449 rules. 2237 rules in the queue.
172200 rules inserted. The rule base contains 68571 rules. 2230 rules in the queue.
172400 rules inserted. The rule base contains 68704 rules. 2212 rules in the queue.
172600 rules inserted. The rule base contains 68792 rules. 2192 rules in the queue.
172800 rules inserted. The rule base contains 68848 rules. 2177 rules in the queue.
173000 rules inserted. The rule base contains 68977 rules. 2160 rules in the queue.
173200 rules inserted. The rule base contains 69073 rules. 2122 rules in the queue.
173400 rules inserted. The rule base contains 69186 rules. 2108 rules in the queue.
173600 rules inserted. The rule base contains 69308 rules. 2081 rules in the queue.
173800 rules inserted. The rule base contains 69443 rules. 2051 rules in the queue.
174000 rules inserted. The rule base contains 69558 rules. 2033 rules in the queue.
174200 rules inserted. The rule base contains 69671 rules. 2022 rules in the queue.
174400 rules inserted. The rule base contains 69815 rules. 2012 rules in the queue.
174600 rules inserted. The rule base contains 69957 rules. 2007 rules in the queue.
174800 rules inserted. The rule base contains 70015 rules. 1987 rules in the queue.
175000 rules inserted. The rule base contains 70158 rules. 2006 rules in the queue.
175200 rules inserted. The rule base contains 70298 rules. 2005 rules in the queue.
175400 rules inserted. The rule base contains 70412 rules. 2007 rules in the queue.
175600 rules inserted. The rule base contains 70568 rules. 1998 rules in the queue.
175800 rules inserted. The rule base contains 70717 rules. 2007 rules in the queue.
176000 rules inserted. The rule base contains 70852 rules. 2033 rules in the queue.
176200 rules inserted. The rule base contains 70967 rules. 2000 rules in the queue.
176400 rules inserted. The rule base contains 71118 rules. 1963 rules in the queue.
176600 rules inserted. The rule base contains 71221 rules. 1975 rules in the queue.
176800 rules inserted. The rule base contains 71327 rules. 1988 rules in the queue.
177000 rules inserted. The rule base contains 71455 rules. 2015 rules in the queue.
177200 rules inserted. The rule base contains 71599 rules. 2051 rules in the queue.
177400 rules inserted. The rule base contains 71714 rules. 2039 rules in the queue.
177600 rules inserted. The rule base contains 71868 rules. 2056 rules in the queue.
177800 rules inserted. The rule base contains 72011 rules. 2084 rules in the queue.
178000 rules inserted. The rule base contains 72128 rules. 2081 rules in the queue.
178200 rules inserted. The rule base contains 72242 rules. 2065 rules in the queue.
178400 rules inserted. The rule base contains 72378 rules. 2049 rules in the queue.
178600 rules inserted. The rule base contains 72444 rules. 2045 rules in the queue.
178800 rules inserted. The rule base contains 72578 rules. 2045 rules in the queue.
179000 rules inserted. The rule base contains 72700 rules. 2044 rules in the queue.
179200 rules inserted. The rule base contains 72840 rules. 2042 rules in the queue.
179400 rules inserted. The rule base contains 72973 rules. 2027 rules in the queue.
179600 rules inserted. The rule base contains 73120 rules. 2027 rules in the queue.
179800 rules inserted. The rule base contains 73259 rules. 2016 rules in the queue.
180000 rules inserted. The rule base contains 73374 rules. 1996 rules in the queue.
180200 rules inserted. The rule base contains 73478 rules. 1920 rules in the queue.
180400 rules inserted. The rule base contains 73602 rules. 1896 rules in the queue.
180600 rules inserted. The rule base contains 73707 rules. 1879 rules in the queue.
180800 rules inserted. The rule base contains 73839 rules. 1882 rules in the queue.
181000 rules inserted. The rule base contains 73995 rules. 1871 rules in the queue.
181200 rules inserted. The rule base contains 74113 rules. 1829 rules in the queue.
181400 rules inserted. The rule base contains 74285 rules. 1814 rules in the queue.
181600 rules inserted. The rule base contains 74438 rules. 1798 rules in the queue.
181800 rules inserted. The rule base contains 74589 rules. 1738 rules in the queue.
182000 rules inserted. The rule base contains 74719 rules. 1670 rules in the queue.
182200 rules inserted. The rule base contains 74879 rules. 1597 rules in the queue.
182400 rules inserted. The rule base contains 75008 rules. 1499 rules in the queue.
182600 rules inserted. The rule base contains 75190 rules. 1428 rules in the queue.
182800 rules inserted. The rule base contains 75336 rules. 1345 rules in the queue.
183000 rules inserted. The rule base contains 75517 rules. 1244 rules in the queue.
183200 rules inserted. The rule base contains 75697 rules. 1169 rules in the queue.
183400 rules inserted. The rule base contains 75863 rules. 1076 rules in the queue.
183600 rules inserted. The rule base contains 75020 rules. 792 rules in the queue.
183800 rules inserted. The rule base contains 75204 rules. 655 rules in the queue.
184000 rules inserted. The rule base contains 74791 rules. 453 rules in the queue.
184200 rules inserted. The rule base contains 74973 rules. 318 rules in the queue.
184400 rules inserted. The rule base contains 75002 rules. 86 rules in the queue.
Starting query event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true))
goal reachable: begin(LeakS(phase0,bob)) && attacker(m_764787291) -> end(RecvMsg(bob,alice,stage_a,m_764787291,true))

1. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) may be inserted in a table at insert {312}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false)))).

2. We assume as hypothesis that
attacker(m_764787351).

3. Using the function g the attacker may obtain g.
attacker(g).

4. Using the function pub the attacker may obtain pub.
attacker(pub).

5. The message dhexp(key_s(bob),g) may be sent on channel pub at output {297}.
mess(pub,dhexp(key_s(bob),g)).

6. By 4, the attacker may have the channel pub.
By 5, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

7. The message dhexp(key_s(alice),g) may be sent on channel pub at output {7}.
mess(pub,dhexp(key_s(alice),g)).

8. By 4, the attacker may have the channel pub.
By 7, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

9. Using the function empty the attacker may obtain empty.
attacker(empty).

10. Using the function somename the attacker may obtain somename.
attacker(somename).

11. By 10, the attacker may know somename.
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

12. By 11, the attacker may know hash(somename,empty).
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

13. By 12, the attacker may know hash(hash(somename,empty),empty).
By 8, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

14. By 13, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

15. By 14, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 3, the attacker may know g.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g)).

16. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

17. The event LeakS(phase0,bob) may be executed at {432}.
So the message key_s(bob) may be sent on channel pub at output {433}.
mess(pub,key_s(bob)).

18. By 4, the attacker may have the channel pub.
By 17, the message key_s(bob) may be sent on this channel.
So the attacker may obtain the message key_s(bob) by listening on this channel.
attacker(key_s(bob)).

19. By 18, the attacker may know key_s(bob).
By 8, the attacker may know dhexp(key_s(alice),g).
Using the function dhexp the attacker may obtain dhexp(key_s(bob),dhexp(key_s(alice),g)).
attacker(dhexp(key_s(bob),dhexp(key_s(alice),g))).

20. By 11, the attacker may know hash(somename,empty).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)).
attacker(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g))).

21. By 20, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)).
By 19, the attacker may know dhexp(key_s(bob),dhexp(key_s(alice),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
attacker(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g)))).

22. By 21, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
By 16, the attacker may know minnonce.
By 15, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
By 2, the attacker may know m_764787351.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_764787351).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_764787351)).

23. The attacker has some term b_764787337.
attacker(b_764787337).

24. By 3, the attacker may know g.
By 23, the attacker may know b_764787337.
By 22, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_764787351).
Using the function concat3 the attacker may obtain concat3(g,b_764787337,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_764787351)).
attacker(concat3(g,b_764787337,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_764787351))).

25. By 4, the attacker may have the channel pub.
By 24, the attacker may have the message concat3(g,b_764787337,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_764787351)).
So the attacker may send this message on this channel.
mess(pub,concat3(g,b_764787337,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_764787351))).

26. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 1 may be read at get {348}.
The message concat3(g,b_764787337,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_764787351)) that may be sent on channel pub by 25 may be received at input {313}.
We have g <> caught-fail.
So event RecvMsg(bob,alice,stage_a,m_764787351,true) may be executed at {346}.
end(RecvMsg(bob,alice,stage_a,m_764787351,true)).


RESULT event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)) cannot be proved.
Starting query event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,c_1107,stage_a,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(LeakS(phase0,bob)) && attacker(m_764787353) -> end(RecvMsg(bob,alice,stage_a,m_764787353,true))
goal reachable: begin(LeakS(phase0,alice)) && attacker(m_764787355) -> end(RecvMsg(bob,alice,stage_a,m_764787355,true))
goal reachable: begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(bob,alice,stage_a,msg_a(alice,bob),true))
RESULT event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,c_1107,stage_a,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,c_1107,stage_a,m,true)) || event(LeakS(phase0,alice))
goal reachable: begin(LeakS(phase0,bob)) && attacker(m_764787362) -> end(RecvMsg(bob,alice,stage_a,m_764787362,true))

1. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) may be inserted in a table at insert {312}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false)))).

2. We assume as hypothesis that
attacker(m_764787423).

3. Using the function g the attacker may obtain g.
attacker(g).

4. Using the function pub the attacker may obtain pub.
attacker(pub).

5. The message dhexp(key_s(bob),g) may be sent on channel pub at output {297}.
mess(pub,dhexp(key_s(bob),g)).

6. By 4, the attacker may have the channel pub.
By 5, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

7. The message dhexp(key_s(alice),g) may be sent on channel pub at output {7}.
mess(pub,dhexp(key_s(alice),g)).

8. By 4, the attacker may have the channel pub.
By 7, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

9. Using the function empty the attacker may obtain empty.
attacker(empty).

10. Using the function somename the attacker may obtain somename.
attacker(somename).

11. By 10, the attacker may know somename.
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

12. By 11, the attacker may know hash(somename,empty).
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

13. By 12, the attacker may know hash(hash(somename,empty),empty).
By 8, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

14. By 13, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

15. By 14, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 3, the attacker may know g.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g)).

16. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

17. The event LeakS(phase0,bob) may be executed at {432}.
So the message key_s(bob) may be sent on channel pub at output {433}.
mess(pub,key_s(bob)).

18. By 4, the attacker may have the channel pub.
By 17, the message key_s(bob) may be sent on this channel.
So the attacker may obtain the message key_s(bob) by listening on this channel.
attacker(key_s(bob)).

19. By 18, the attacker may know key_s(bob).
By 8, the attacker may know dhexp(key_s(alice),g).
Using the function dhexp the attacker may obtain dhexp(key_s(bob),dhexp(key_s(alice),g)).
attacker(dhexp(key_s(bob),dhexp(key_s(alice),g))).

20. By 11, the attacker may know hash(somename,empty).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)).
attacker(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g))).

21. By 20, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)).
By 19, the attacker may know dhexp(key_s(bob),dhexp(key_s(alice),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
attacker(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g)))).

22. By 21, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
By 16, the attacker may know minnonce.
By 15, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
By 2, the attacker may know m_764787423.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_764787423).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_764787423)).

23. The attacker has some term b_764787409.
attacker(b_764787409).

24. By 3, the attacker may know g.
By 23, the attacker may know b_764787409.
By 22, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_764787423).
Using the function concat3 the attacker may obtain concat3(g,b_764787409,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_764787423)).
attacker(concat3(g,b_764787409,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_764787423))).

25. By 4, the attacker may have the channel pub.
By 24, the attacker may have the message concat3(g,b_764787409,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_764787423)).
So the attacker may send this message on this channel.
mess(pub,concat3(g,b_764787409,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_764787423))).

26. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 1 may be read at get {348}.
The message concat3(g,b_764787409,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_764787423)) that may be sent on channel pub by 25 may be received at input {313}.
We have g <> caught-fail.
So event RecvMsg(bob,alice,stage_a,m_764787423,true) may be executed at {346}.
end(RecvMsg(bob,alice,stage_a,m_764787423,true)).


RESULT event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,c_1107,stage_a,m,true)) || event(LeakS(phase0,alice)) cannot be proved.
Starting query event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(LeakS(phase0,bob)) && attacker(m_764787425) -> end(RecvMsg(bob,alice,stage_a,m_764787425,true))
goal reachable: begin(LeakS(phase0,alice)) && attacker(m_764787427) -> end(RecvMsg(bob,alice,stage_a,m_764787427,true))
goal reachable: begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(bob,alice,stage_a,msg_a(alice,bob),true))
RESULT event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)) || event(LeakS(phase0,alice))
goal reachable: begin(LeakS(phase0,bob)) && attacker(m_764787433) -> end(RecvMsg(bob,alice,stage_a,m_764787433,true))

1. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) may be inserted in a table at insert {312}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false)))).

2. We assume as hypothesis that
attacker(m_764787493).

3. Using the function g the attacker may obtain g.
attacker(g).

4. Using the function pub the attacker may obtain pub.
attacker(pub).

5. The message dhexp(key_s(bob),g) may be sent on channel pub at output {297}.
mess(pub,dhexp(key_s(bob),g)).

6. By 4, the attacker may have the channel pub.
By 5, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

7. The message dhexp(key_s(alice),g) may be sent on channel pub at output {7}.
mess(pub,dhexp(key_s(alice),g)).

8. By 4, the attacker may have the channel pub.
By 7, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

9. Using the function empty the attacker may obtain empty.
attacker(empty).

10. Using the function somename the attacker may obtain somename.
attacker(somename).

11. By 10, the attacker may know somename.
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

12. By 11, the attacker may know hash(somename,empty).
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

13. By 12, the attacker may know hash(hash(somename,empty),empty).
By 8, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

14. By 13, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

15. By 14, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 3, the attacker may know g.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g)).

16. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

17. The event LeakS(phase0,bob) may be executed at {432}.
So the message key_s(bob) may be sent on channel pub at output {433}.
mess(pub,key_s(bob)).

18. By 4, the attacker may have the channel pub.
By 17, the message key_s(bob) may be sent on this channel.
So the attacker may obtain the message key_s(bob) by listening on this channel.
attacker(key_s(bob)).

19. By 18, the attacker may know key_s(bob).
By 8, the attacker may know dhexp(key_s(alice),g).
Using the function dhexp the attacker may obtain dhexp(key_s(bob),dhexp(key_s(alice),g)).
attacker(dhexp(key_s(bob),dhexp(key_s(alice),g))).

20. By 11, the attacker may know hash(somename,empty).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)).
attacker(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g))).

21. By 20, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)).
By 19, the attacker may know dhexp(key_s(bob),dhexp(key_s(alice),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
attacker(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g)))).

22. By 21, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
By 16, the attacker may know minnonce.
By 15, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
By 2, the attacker may know m_764787493.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_764787493).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_764787493)).

23. The attacker has some term b_764787479.
attacker(b_764787479).

24. By 3, the attacker may know g.
By 23, the attacker may know b_764787479.
By 22, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_764787493).
Using the function concat3 the attacker may obtain concat3(g,b_764787479,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_764787493)).
attacker(concat3(g,b_764787479,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_764787493))).

25. By 4, the attacker may have the channel pub.
By 24, the attacker may have the message concat3(g,b_764787479,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_764787493)).
So the attacker may send this message on this channel.
mess(pub,concat3(g,b_764787479,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_764787493))).

26. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 1 may be read at get {348}.
The message concat3(g,b_764787479,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),m_764787493)) that may be sent on channel pub by 25 may be received at input {313}.
We have g <> caught-fail.
So event RecvMsg(bob,alice,stage_a,m_764787493,true) may be executed at {346}.
end(RecvMsg(bob,alice,stage_a,m_764787493,true)).


RESULT event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)) || event(LeakS(phase0,alice)) cannot be proved.
Starting query not attacker_p1(msg_a(alice,bob))
goal reachable: begin(LeakS(phase1,bob)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> attacker_p1(msg_a(alice,bob))
Abbreviations:
key_764787587 = key_e[me = alice,them = bob,!1 = @sid_764787573]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {22}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

3. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 2 may be read at get {60}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {57}.
So the message concat3(dhexp(key_764787587,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787587,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787587,g)),msg_a(alice,bob))) may be sent on channel pub at output {59}.
mess(pub,concat3(dhexp(key_764787587,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787587,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787587,g)),msg_a(alice,bob)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(dhexp(key_764787587,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787587,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787587,g)),msg_a(alice,bob))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_764787587,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787587,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787587,g)),msg_a(alice,bob))) by listening on this channel.
attacker(concat3(dhexp(key_764787587,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787587,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787587,g)),msg_a(alice,bob)))).

5. By 4, the attacker may know concat3(dhexp(key_764787587,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787587,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787587,g)),msg_a(alice,bob))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787587,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787587,g)),msg_a(alice,bob)).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787587,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787587,g)),msg_a(alice,bob))).

6. By 5, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787587,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787587,g)),msg_a(alice,bob)).
So the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787587,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787587,g)),msg_a(alice,bob)) in phase 1.
attacker_p1(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787587,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787587,g)),msg_a(alice,bob))).

7. By 4, the attacker may know concat3(dhexp(key_764787587,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787587,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787587,g)),msg_a(alice,bob))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_764787587,g).
attacker(dhexp(key_764787587,g)).

8. The message dhexp(key_s(bob),g) may be sent on channel pub at output {297}.
mess(pub,dhexp(key_s(bob),g)).

9. By 1, the attacker may have the channel pub.
By 8, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

10. The message dhexp(key_s(alice),g) may be sent on channel pub at output {7}.
mess(pub,dhexp(key_s(alice),g)).

11. By 1, the attacker may have the channel pub.
By 10, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

12. Using the function empty the attacker may obtain empty.
attacker(empty).

13. Using the function somename the attacker may obtain somename.
attacker(somename).

14. By 13, the attacker may know somename.
By 12, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

15. By 14, the attacker may know hash(somename,empty).
By 12, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

16. By 15, the attacker may know hash(hash(somename,empty),empty).
By 11, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

17. By 16, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 9, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

18. By 17, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 7, the attacker may know dhexp(key_764787587,g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787587,g)).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787587,g))).

19. By 18, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787587,g)).
So the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787587,g)) in phase 1.
attacker_p1(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787587,g))).

20. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

21. By 11, the attacker may know dhexp(key_s(alice),g).
So the attacker may know dhexp(key_s(alice),g) in phase 1.
attacker_p1(dhexp(key_s(alice),g)).

22. Using the function pub the attacker may obtain pub in phase 1.
attacker_p1(pub).

23. The event LeakS(phase1,bob) may be executed at {435}.
So the message key_s(bob) may be sent on channel pub in phase 1 at output {436}.
mess_p1(pub,key_s(bob)).

24. By 22, the attacker may have the channel pub in phase 1.
By 23, the message key_s(bob) in phase 1 may be sent on this channel.
So the attacker may obtain the message key_s(bob) in phase 1 by listening on this channel.
attacker_p1(key_s(bob)).

25. By 24, the attacker may know key_s(bob) in phase 1.
By 21, the attacker may know dhexp(key_s(alice),g) in phase 1.
Using the function dhexp the attacker may obtain dhexp(key_s(alice),dhexp(key_s(bob),g)) in phase 1.
attacker_p1(dhexp(key_s(alice),dhexp(key_s(bob),g))).

26. By 7, the attacker may know dhexp(key_764787587,g).
So the attacker may know dhexp(key_764787587,g) in phase 1.
attacker_p1(dhexp(key_764787587,g)).

27. By 24, the attacker may know key_s(bob) in phase 1.
By 26, the attacker may know dhexp(key_764787587,g) in phase 1.
Using the function dhexp the attacker may obtain dhexp(key_764787587,dhexp(key_s(bob),g)) in phase 1.
attacker_p1(dhexp(key_764787587,dhexp(key_s(bob),g))).

28. By 14, the attacker may know hash(somename,empty).
So the attacker may know hash(somename,empty) in phase 1.
attacker_p1(hash(somename,empty)).

29. By 28, the attacker may know hash(somename,empty) in phase 1.
By 27, the attacker may know dhexp(key_764787587,dhexp(key_s(bob),g)) in phase 1.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),dhexp(key_764787587,dhexp(key_s(bob),g))) in phase 1.
attacker_p1(hmac_hash1(hash(somename,empty),dhexp(key_764787587,dhexp(key_s(bob),g)))).

30. By 29, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_764787587,dhexp(key_s(bob),g))) in phase 1.
By 25, the attacker may know dhexp(key_s(alice),dhexp(key_s(bob),g)) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787587,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787587,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g)))).

31. By 30, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787587,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))) in phase 1.
By 20, the attacker may know minnonce in phase 1.
By 19, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787587,g)) in phase 1.
By 6, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787587,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787587,g)),msg_a(alice,bob)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787587,g)),msg_a(alice,bob)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787587,g)),msg_a(alice,bob))).

32. By 31, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787587,g)),msg_a(alice,bob)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob) in phase 1.
attacker_p1(msg_a(alice,bob)).


RESULT not attacker_p1(msg_a(alice,bob)) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob))
goal reachable: begin(LeakS(phase1,bob)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> attacker_p1(msg_a(alice,bob))
goal reachable: begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> attacker_p1(msg_a(alice,bob))
RESULT attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob)) is true.
Starting query attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice)))
goal reachable: begin(LeakS(phase1,bob)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> attacker_p1(msg_a(alice,bob))
Abbreviations:
key_764787682 = key_e[me = alice,them = bob,!1 = @sid_764787668]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {22}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

3. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 2 may be read at get {60}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {57}.
So the message concat3(dhexp(key_764787682,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787682,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787682,g)),msg_a(alice,bob))) may be sent on channel pub at output {59}.
mess(pub,concat3(dhexp(key_764787682,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787682,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787682,g)),msg_a(alice,bob)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(dhexp(key_764787682,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787682,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787682,g)),msg_a(alice,bob))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_764787682,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787682,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787682,g)),msg_a(alice,bob))) by listening on this channel.
attacker(concat3(dhexp(key_764787682,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787682,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787682,g)),msg_a(alice,bob)))).

5. By 4, the attacker may know concat3(dhexp(key_764787682,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787682,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787682,g)),msg_a(alice,bob))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787682,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787682,g)),msg_a(alice,bob)).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787682,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787682,g)),msg_a(alice,bob))).

6. By 5, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787682,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787682,g)),msg_a(alice,bob)).
So the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787682,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787682,g)),msg_a(alice,bob)) in phase 1.
attacker_p1(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787682,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787682,g)),msg_a(alice,bob))).

7. By 4, the attacker may know concat3(dhexp(key_764787682,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787682,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787682,g)),msg_a(alice,bob))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_764787682,g).
attacker(dhexp(key_764787682,g)).

8. The message dhexp(key_s(bob),g) may be sent on channel pub at output {297}.
mess(pub,dhexp(key_s(bob),g)).

9. By 1, the attacker may have the channel pub.
By 8, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

10. The message dhexp(key_s(alice),g) may be sent on channel pub at output {7}.
mess(pub,dhexp(key_s(alice),g)).

11. By 1, the attacker may have the channel pub.
By 10, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

12. Using the function empty the attacker may obtain empty.
attacker(empty).

13. Using the function somename the attacker may obtain somename.
attacker(somename).

14. By 13, the attacker may know somename.
By 12, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

15. By 14, the attacker may know hash(somename,empty).
By 12, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

16. By 15, the attacker may know hash(hash(somename,empty),empty).
By 11, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

17. By 16, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 9, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

18. By 17, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 7, the attacker may know dhexp(key_764787682,g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787682,g)).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787682,g))).

19. By 18, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787682,g)).
So the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787682,g)) in phase 1.
attacker_p1(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787682,g))).

20. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

21. By 11, the attacker may know dhexp(key_s(alice),g).
So the attacker may know dhexp(key_s(alice),g) in phase 1.
attacker_p1(dhexp(key_s(alice),g)).

22. Using the function pub the attacker may obtain pub in phase 1.
attacker_p1(pub).

23. The event LeakS(phase1,bob) may be executed at {435}.
So the message key_s(bob) may be sent on channel pub in phase 1 at output {436}.
mess_p1(pub,key_s(bob)).

24. By 22, the attacker may have the channel pub in phase 1.
By 23, the message key_s(bob) in phase 1 may be sent on this channel.
So the attacker may obtain the message key_s(bob) in phase 1 by listening on this channel.
attacker_p1(key_s(bob)).

25. By 24, the attacker may know key_s(bob) in phase 1.
By 21, the attacker may know dhexp(key_s(alice),g) in phase 1.
Using the function dhexp the attacker may obtain dhexp(key_s(alice),dhexp(key_s(bob),g)) in phase 1.
attacker_p1(dhexp(key_s(alice),dhexp(key_s(bob),g))).

26. By 7, the attacker may know dhexp(key_764787682,g).
So the attacker may know dhexp(key_764787682,g) in phase 1.
attacker_p1(dhexp(key_764787682,g)).

27. By 24, the attacker may know key_s(bob) in phase 1.
By 26, the attacker may know dhexp(key_764787682,g) in phase 1.
Using the function dhexp the attacker may obtain dhexp(key_764787682,dhexp(key_s(bob),g)) in phase 1.
attacker_p1(dhexp(key_764787682,dhexp(key_s(bob),g))).

28. By 14, the attacker may know hash(somename,empty).
So the attacker may know hash(somename,empty) in phase 1.
attacker_p1(hash(somename,empty)).

29. By 28, the attacker may know hash(somename,empty) in phase 1.
By 27, the attacker may know dhexp(key_764787682,dhexp(key_s(bob),g)) in phase 1.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),dhexp(key_764787682,dhexp(key_s(bob),g))) in phase 1.
attacker_p1(hmac_hash1(hash(somename,empty),dhexp(key_764787682,dhexp(key_s(bob),g)))).

30. By 29, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_764787682,dhexp(key_s(bob),g))) in phase 1.
By 25, the attacker may know dhexp(key_s(alice),dhexp(key_s(bob),g)) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787682,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787682,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g)))).

31. By 30, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787682,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))) in phase 1.
By 20, the attacker may know minnonce in phase 1.
By 19, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787682,g)) in phase 1.
By 6, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787682,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787682,g)),msg_a(alice,bob)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787682,g)),msg_a(alice,bob)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787682,g)),msg_a(alice,bob))).

32. By 31, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787682,g)),msg_a(alice,bob)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob) in phase 1.
attacker_p1(msg_a(alice,bob)).


RESULT attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice))) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob))
goal reachable: begin(LeakS(phase1,bob)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> attacker_p1(msg_a(alice,bob))
Abbreviations:
key_764787776 = key_e[me = alice,them = bob,!1 = @sid_764787762]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {22}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

3. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 2 may be read at get {60}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {57}.
So the message concat3(dhexp(key_764787776,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787776,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787776,g)),msg_a(alice,bob))) may be sent on channel pub at output {59}.
mess(pub,concat3(dhexp(key_764787776,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787776,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787776,g)),msg_a(alice,bob)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(dhexp(key_764787776,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787776,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787776,g)),msg_a(alice,bob))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_764787776,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787776,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787776,g)),msg_a(alice,bob))) by listening on this channel.
attacker(concat3(dhexp(key_764787776,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787776,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787776,g)),msg_a(alice,bob)))).

5. By 4, the attacker may know concat3(dhexp(key_764787776,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787776,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787776,g)),msg_a(alice,bob))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787776,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787776,g)),msg_a(alice,bob)).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787776,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787776,g)),msg_a(alice,bob))).

6. By 5, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787776,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787776,g)),msg_a(alice,bob)).
So the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787776,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787776,g)),msg_a(alice,bob)) in phase 1.
attacker_p1(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787776,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787776,g)),msg_a(alice,bob))).

7. By 4, the attacker may know concat3(dhexp(key_764787776,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787776,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787776,g)),msg_a(alice,bob))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_764787776,g).
attacker(dhexp(key_764787776,g)).

8. The message dhexp(key_s(bob),g) may be sent on channel pub at output {297}.
mess(pub,dhexp(key_s(bob),g)).

9. By 1, the attacker may have the channel pub.
By 8, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

10. The message dhexp(key_s(alice),g) may be sent on channel pub at output {7}.
mess(pub,dhexp(key_s(alice),g)).

11. By 1, the attacker may have the channel pub.
By 10, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

12. Using the function empty the attacker may obtain empty.
attacker(empty).

13. Using the function somename the attacker may obtain somename.
attacker(somename).

14. By 13, the attacker may know somename.
By 12, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

15. By 14, the attacker may know hash(somename,empty).
By 12, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

16. By 15, the attacker may know hash(hash(somename,empty),empty).
By 11, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

17. By 16, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 9, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

18. By 17, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 7, the attacker may know dhexp(key_764787776,g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787776,g)).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787776,g))).

19. By 18, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787776,g)).
So the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787776,g)) in phase 1.
attacker_p1(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787776,g))).

20. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

21. By 11, the attacker may know dhexp(key_s(alice),g).
So the attacker may know dhexp(key_s(alice),g) in phase 1.
attacker_p1(dhexp(key_s(alice),g)).

22. Using the function pub the attacker may obtain pub in phase 1.
attacker_p1(pub).

23. The event LeakS(phase1,bob) may be executed at {435}.
So the message key_s(bob) may be sent on channel pub in phase 1 at output {436}.
mess_p1(pub,key_s(bob)).

24. By 22, the attacker may have the channel pub in phase 1.
By 23, the message key_s(bob) in phase 1 may be sent on this channel.
So the attacker may obtain the message key_s(bob) in phase 1 by listening on this channel.
attacker_p1(key_s(bob)).

25. By 24, the attacker may know key_s(bob) in phase 1.
By 21, the attacker may know dhexp(key_s(alice),g) in phase 1.
Using the function dhexp the attacker may obtain dhexp(key_s(alice),dhexp(key_s(bob),g)) in phase 1.
attacker_p1(dhexp(key_s(alice),dhexp(key_s(bob),g))).

26. By 7, the attacker may know dhexp(key_764787776,g).
So the attacker may know dhexp(key_764787776,g) in phase 1.
attacker_p1(dhexp(key_764787776,g)).

27. By 24, the attacker may know key_s(bob) in phase 1.
By 26, the attacker may know dhexp(key_764787776,g) in phase 1.
Using the function dhexp the attacker may obtain dhexp(key_764787776,dhexp(key_s(bob),g)) in phase 1.
attacker_p1(dhexp(key_764787776,dhexp(key_s(bob),g))).

28. By 14, the attacker may know hash(somename,empty).
So the attacker may know hash(somename,empty) in phase 1.
attacker_p1(hash(somename,empty)).

29. By 28, the attacker may know hash(somename,empty) in phase 1.
By 27, the attacker may know dhexp(key_764787776,dhexp(key_s(bob),g)) in phase 1.
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),dhexp(key_764787776,dhexp(key_s(bob),g))) in phase 1.
attacker_p1(hmac_hash1(hash(somename,empty),dhexp(key_764787776,dhexp(key_s(bob),g)))).

30. By 29, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_764787776,dhexp(key_s(bob),g))) in phase 1.
By 25, the attacker may know dhexp(key_s(alice),dhexp(key_s(bob),g)) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787776,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787776,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g)))).

31. By 30, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787776,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))) in phase 1.
By 20, the attacker may know minnonce in phase 1.
By 19, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787776,g)) in phase 1.
By 6, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787776,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787776,g)),msg_a(alice,bob)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787776,g)),msg_a(alice,bob)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787776,g)),msg_a(alice,bob))).

32. By 31, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787776,g)),msg_a(alice,bob)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob) in phase 1.
attacker_p1(msg_a(alice,bob)).


RESULT attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true))
goal reachable: begin(LeakS(phase0,bob)) && attacker(m_764787778) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_b,m_764787778,true))
Abbreviations:
key_764787907 = key_e[me = alice,them = bob,!1 = @sid_764787885]

1. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {22}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 1 may be read at get {60}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {57}.
So the entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_764787907,g),key_764787907),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {58}.
table(statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_764787907,g),key_764787907),dhexp(key_s(bob),g),empty,empty,true)))).

3. We assume as hypothesis that
attacker(m_764787906).

4. Using the function pub the attacker may obtain pub.
attacker(pub).

5. The message dhexp(key_s(bob),g) may be sent on channel pub at output {297}.
mess(pub,dhexp(key_s(bob),g)).

6. By 4, the attacker may have the channel pub.
By 5, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

7. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {22}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

8. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 7 may be read at get {60}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {57}.
So the message concat3(dhexp(key_764787907,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),msg_a(alice,bob))) may be sent on channel pub at output {59}.
mess(pub,concat3(dhexp(key_764787907,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),msg_a(alice,bob)))).

9. By 4, the attacker may have the channel pub.
By 8, the message concat3(dhexp(key_764787907,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),msg_a(alice,bob))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_764787907,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),msg_a(alice,bob))) by listening on this channel.
attacker(concat3(dhexp(key_764787907,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),msg_a(alice,bob)))).

10. By 9, the attacker may know concat3(dhexp(key_764787907,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),msg_a(alice,bob))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),msg_a(alice,bob)).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),msg_a(alice,bob))).

11. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {22}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

12. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 11 may be read at get {60}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {57}.
So the message concat3(dhexp(key_764787907,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),msg_a(alice,bob))) may be sent on channel pub at output {59}.
mess(pub,concat3(dhexp(key_764787907,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),msg_a(alice,bob)))).

13. By 4, the attacker may have the channel pub.
By 12, the message concat3(dhexp(key_764787907,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),msg_a(alice,bob))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_764787907,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),msg_a(alice,bob))) by listening on this channel.
attacker(concat3(dhexp(key_764787907,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),msg_a(alice,bob)))).

14. By 13, the attacker may know concat3(dhexp(key_764787907,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),msg_a(alice,bob))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_764787907,g).
attacker(dhexp(key_764787907,g)).

15. The message dhexp(key_s(alice),g) may be sent on channel pub at output {7}.
mess(pub,dhexp(key_s(alice),g)).

16. By 4, the attacker may have the channel pub.
By 15, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

17. Using the function empty the attacker may obtain empty.
attacker(empty).

18. Using the function somename the attacker may obtain somename.
attacker(somename).

19. By 18, the attacker may know somename.
By 17, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

20. By 19, the attacker may know hash(somename,empty).
By 17, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

21. By 20, the attacker may know hash(hash(somename,empty),empty).
By 16, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

22. By 21, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

23. By 22, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 14, the attacker may know dhexp(key_764787907,g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g))).

24. By 23, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)).
By 10, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),msg_a(alice,bob)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),msg_a(alice,bob))).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),msg_a(alice,bob)))).

25. By 24, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),msg_a(alice,bob))).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),msg_a(alice,bob))),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),msg_a(alice,bob))),dhexp(key_s(bob),g))).

26. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

27. The event LeakS(phase0,bob) may be executed at {432}.
So the message key_s(bob) may be sent on channel pub at output {433}.
mess(pub,key_s(bob)).

28. By 4, the attacker may have the channel pub.
By 27, the message key_s(bob) may be sent on this channel.
So the attacker may obtain the message key_s(bob) by listening on this channel.
attacker(key_s(bob)).

29. By 28, the attacker may know key_s(bob).
By 16, the attacker may know dhexp(key_s(alice),g).
Using the function dhexp the attacker may obtain dhexp(key_s(alice),dhexp(key_s(bob),g)).
attacker(dhexp(key_s(alice),dhexp(key_s(bob),g))).

30. By 28, the attacker may know key_s(bob).
By 14, the attacker may know dhexp(key_764787907,g).
Using the function dhexp the attacker may obtain dhexp(key_764787907,dhexp(key_s(bob),g)).
attacker(dhexp(key_764787907,dhexp(key_s(bob),g))).

31. By 19, the attacker may know hash(somename,empty).
By 30, the attacker may know dhexp(key_764787907,dhexp(key_s(bob),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))).
attacker(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g)))).

32. By 31, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))).
By 29, the attacker may know dhexp(key_s(alice),dhexp(key_s(bob),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g)))).

33. By 32, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))).
By 30, the attacker may know dhexp(key_764787907,dhexp(key_s(bob),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),dhexp(key_764787907,dhexp(key_s(bob),g))).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),dhexp(key_764787907,dhexp(key_s(bob),g)))).

34. By 33, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),dhexp(key_764787907,dhexp(key_s(bob),g))).
By 29, the attacker may know dhexp(key_s(alice),dhexp(key_s(bob),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))).
attacker(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g)))).

35. By 34, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))).
By 26, the attacker may know minnonce.
By 25, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),msg_a(alice,bob))),dhexp(key_s(bob),g)).
By 3, the attacker may know m_764787906.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),msg_a(alice,bob))),dhexp(key_s(bob),g)),m_764787906).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),msg_a(alice,bob))),dhexp(key_s(bob),g)),m_764787906)).

36. The attacker has some term b_764787892.
attacker(b_764787892).

37. By 6, the attacker may know dhexp(key_s(bob),g).
By 36, the attacker may know b_764787892.
By 35, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),msg_a(alice,bob))),dhexp(key_s(bob),g)),m_764787906).
Using the function concat3 the attacker may obtain concat3(dhexp(key_s(bob),g),b_764787892,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),msg_a(alice,bob))),dhexp(key_s(bob),g)),m_764787906)).
attacker(concat3(dhexp(key_s(bob),g),b_764787892,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),msg_a(alice,bob))),dhexp(key_s(bob),g)),m_764787906))).

38. By 4, the attacker may have the channel pub.
By 37, the attacker may have the message concat3(dhexp(key_s(bob),g),b_764787892,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),msg_a(alice,bob))),dhexp(key_s(bob),g)),m_764787906)).
So the attacker may send this message on this channel.
mess(pub,concat3(dhexp(key_s(bob),g),b_764787892,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),msg_a(alice,bob))),dhexp(key_s(bob),g)),m_764787906))).

39. The entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_764787907,g),key_764787907),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 2 may be read at get {96}.
The message concat3(dhexp(key_s(bob),g),b_764787892,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764787907,dhexp(key_s(bob),g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764787907,g)),msg_a(alice,bob))),dhexp(key_s(bob),g)),m_764787906)) that may be sent on channel pub by 38 may be received at input {61}.
We have dhexp(key_s(bob),g) <> caught-fail.
So event RecvMsg(alice,bob,stage_b,m_764787906,true) may be executed at {94}.
end(RecvMsg(alice,bob,stage_b,m_764787906,true)).


RESULT event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,c_1107,stage_b,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: begin(LeakS(phase0,bob)) && attacker(m_764787909) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_b,m_764787909,true))
goal reachable: begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_b,msg_b(bob,alice),true))
RESULT event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,c_1107,stage_b,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,c_1107,stage_b,m,true)) || event(LeakS(phase0,bob))
goal reachable: begin(LeakS(phase0,bob)) && attacker(m_764787914) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_b,m_764787914,true))
goal reachable: begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_b,msg_b(bob,alice),true))
RESULT event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,c_1107,stage_b,m,true)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: begin(LeakS(phase0,bob)) && attacker(m_764787919) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_b,m_764787919,true))
goal reachable: begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_b,msg_b(bob,alice),true))
RESULT event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true)) || event(LeakS(phase0,bob))
goal reachable: begin(LeakS(phase0,bob)) && attacker(m_764787923) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_b,m_764787923,true))
goal reachable: begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_b,msg_b(bob,alice),true))
RESULT event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true)) || event(LeakS(phase0,bob)) is true.
Starting query not attacker_p1(msg_b(bob,alice))
goal reachable: begin(LeakS(phase1,alice)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(LeakS(phase0,bob)) -> attacker_p1(msg_b(bob,alice))
Abbreviations:
key_e_764788185 = key_e_808[me_752 = bob,them_751 = alice,!1 = @sid_764788171]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) may be inserted in a table at insert {312}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false)))).

3. The attacker has some term plaintext_a_764788153.
attacker(plaintext_a_764788153).

4. Using the function g the attacker may obtain g.
attacker(g).

5. The message dhexp(key_s(bob),g) may be sent on channel pub at output {297}.
mess(pub,dhexp(key_s(bob),g)).

6. By 1, the attacker may have the channel pub.
By 5, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

7. The message dhexp(key_s(alice),g) may be sent on channel pub at output {7}.
mess(pub,dhexp(key_s(alice),g)).

8. By 1, the attacker may have the channel pub.
By 7, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

9. Using the function empty the attacker may obtain empty.
attacker(empty).

10. Using the function somename the attacker may obtain somename.
attacker(somename).

11. By 10, the attacker may know somename.
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

12. By 11, the attacker may know hash(somename,empty).
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

13. By 12, the attacker may know hash(hash(somename,empty),empty).
By 8, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

14. By 13, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

15. By 14, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 4, the attacker may know g.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g)).

16. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

17. The event LeakS(phase0,bob) may be executed at {432}.
So the message key_s(bob) may be sent on channel pub at output {433}.
mess(pub,key_s(bob)).

18. By 1, the attacker may have the channel pub.
By 17, the message key_s(bob) may be sent on this channel.
So the attacker may obtain the message key_s(bob) by listening on this channel.
attacker(key_s(bob)).

19. By 18, the attacker may know key_s(bob).
By 8, the attacker may know dhexp(key_s(alice),g).
Using the function dhexp the attacker may obtain dhexp(key_s(bob),dhexp(key_s(alice),g)).
attacker(dhexp(key_s(bob),dhexp(key_s(alice),g))).

20. By 11, the attacker may know hash(somename,empty).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)).
attacker(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g))).

21. By 20, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)).
By 19, the attacker may know dhexp(key_s(bob),dhexp(key_s(alice),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
attacker(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g)))).

22. By 21, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
By 16, the attacker may know minnonce.
By 15, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
By 3, the attacker may know plaintext_a_764788153.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788153).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788153)).

23. The attacker has some term b_764788148.
attacker(b_764788148).

24. By 4, the attacker may know g.
By 23, the attacker may know b_764788148.
By 22, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788153).
Using the function concat3 the attacker may obtain concat3(g,b_764788148,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788153)).
attacker(concat3(g,b_764788148,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788153))).

25. By 1, the attacker may have the channel pub.
By 24, the attacker may have the message concat3(g,b_764788148,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788153)).
So the attacker may send this message on this channel.
mess(pub,concat3(g,b_764788148,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788153))).

26. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 2 may be read at get {348}.
The message concat3(g,b_764788148,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788153)) that may be sent on channel pub by 25 may be received at input {313}.
We have g <> caught-fail.
So the entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788153))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) may be inserted in a table at insert {347}.
table(statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788153))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false)))).

27. The entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788153))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) that may be in a table by 26 may be read at get {386}.
The event SendMsg(bob,alice,stage_b,msg_b(bob,alice),true) may be executed at {383}.
So the message concat3(dhexp(key_e_764788185,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788185,g)),dhexp(key_e_764788185,dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788153)),dhexp(key_e_764788185,g)),msg_b(bob,alice))) may be sent on channel pub at output {385}.
mess(pub,concat3(dhexp(key_e_764788185,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788185,g)),dhexp(key_e_764788185,dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788153)),dhexp(key_e_764788185,g)),msg_b(bob,alice)))).

28. By 1, the attacker may have the channel pub.
By 27, the message concat3(dhexp(key_e_764788185,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788185,g)),dhexp(key_e_764788185,dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788153)),dhexp(key_e_764788185,g)),msg_b(bob,alice))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e_764788185,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788185,g)),dhexp(key_e_764788185,dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788153)),dhexp(key_e_764788185,g)),msg_b(bob,alice))) by listening on this channel.
attacker(concat3(dhexp(key_e_764788185,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788185,g)),dhexp(key_e_764788185,dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788153)),dhexp(key_e_764788185,g)),msg_b(bob,alice)))).

29. By 28, the attacker may know concat3(dhexp(key_e_764788185,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788185,g)),dhexp(key_e_764788185,dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788153)),dhexp(key_e_764788185,g)),msg_b(bob,alice))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788185,g)),dhexp(key_e_764788185,dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788153)),dhexp(key_e_764788185,g)),msg_b(bob,alice)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788185,g)),dhexp(key_e_764788185,dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788153)),dhexp(key_e_764788185,g)),msg_b(bob,alice))).

30. By 29, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788185,g)),dhexp(key_e_764788185,dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788153)),dhexp(key_e_764788185,g)),msg_b(bob,alice)).
So the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788185,g)),dhexp(key_e_764788185,dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788153)),dhexp(key_e_764788185,g)),msg_b(bob,alice)) in phase 1.
attacker_p1(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788185,g)),dhexp(key_e_764788185,dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788153)),dhexp(key_e_764788185,g)),msg_b(bob,alice))).

31. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) may be inserted in a table at insert {312}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false)))).

32. The attacker has some term plaintext_a_764787984.
attacker(plaintext_a_764787984).

33. By 21, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
By 16, the attacker may know minnonce.
By 15, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
By 32, the attacker may know plaintext_a_764787984.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764787984).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764787984)).

34. The attacker has some term b_764787979.
attacker(b_764787979).

35. By 4, the attacker may know g.
By 34, the attacker may know b_764787979.
By 33, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764787984).
Using the function concat3 the attacker may obtain concat3(g,b_764787979,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764787984)).
attacker(concat3(g,b_764787979,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764787984))).

36. By 1, the attacker may have the channel pub.
By 35, the attacker may have the message concat3(g,b_764787979,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764787984)).
So the attacker may send this message on this channel.
mess(pub,concat3(g,b_764787979,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764787984))).

37. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 31 may be read at get {348}.
The message concat3(g,b_764787979,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764787984)) that may be sent on channel pub by 36 may be received at input {313}.
We have g <> caught-fail.
So the entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764787984))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) may be inserted in a table at insert {347}.
table(statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764787984))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false)))).

38. The entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764787984))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) that may be in a table by 37 may be read at get {386}.
The event SendMsg(bob,alice,stage_b,msg_b(bob,alice),true) may be executed at {383}.
So the message concat3(dhexp(key_e_764788185,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788185,g)),dhexp(key_s(alice),dhexp(key_e_764788185,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764787984)),dhexp(key_e_764788185,g)),msg_b(bob,alice))) may be sent on channel pub at output {385}.
mess(pub,concat3(dhexp(key_e_764788185,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788185,g)),dhexp(key_s(alice),dhexp(key_e_764788185,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764787984)),dhexp(key_e_764788185,g)),msg_b(bob,alice)))).

39. By 1, the attacker may have the channel pub.
By 38, the message concat3(dhexp(key_e_764788185,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788185,g)),dhexp(key_s(alice),dhexp(key_e_764788185,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764787984)),dhexp(key_e_764788185,g)),msg_b(bob,alice))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e_764788185,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788185,g)),dhexp(key_s(alice),dhexp(key_e_764788185,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764787984)),dhexp(key_e_764788185,g)),msg_b(bob,alice))) by listening on this channel.
attacker(concat3(dhexp(key_e_764788185,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788185,g)),dhexp(key_s(alice),dhexp(key_e_764788185,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764787984)),dhexp(key_e_764788185,g)),msg_b(bob,alice)))).

40. By 39, the attacker may know concat3(dhexp(key_e_764788185,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788185,g)),dhexp(key_s(alice),dhexp(key_e_764788185,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764787984)),dhexp(key_e_764788185,g)),msg_b(bob,alice))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_e_764788185,g).
attacker(dhexp(key_e_764788185,g)).

41. By 15, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
By 22, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788153).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788153)).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788153))).

42. By 41, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788153)).
By 40, the attacker may know dhexp(key_e_764788185,g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788153)),dhexp(key_e_764788185,g)).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788153)),dhexp(key_e_764788185,g))).

43. By 42, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788153)),dhexp(key_e_764788185,g)).
So the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788153)),dhexp(key_e_764788185,g)) in phase 1.
attacker_p1(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788153)),dhexp(key_e_764788185,g))).

44. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

45. By 40, the attacker may know dhexp(key_e_764788185,g).
So the attacker may know dhexp(key_e_764788185,g) in phase 1.
attacker_p1(dhexp(key_e_764788185,g)).

46. Using the function pub the attacker may obtain pub in phase 1.
attacker_p1(pub).

47. The event LeakS(phase1,alice) may be executed at {146}.
So the message key_s(alice) may be sent on channel pub in phase 1 at output {147}.
mess_p1(pub,key_s(alice)).

48. By 46, the attacker may have the channel pub in phase 1.
By 47, the message key_s(alice) in phase 1 may be sent on this channel.
So the attacker may obtain the message key_s(alice) in phase 1 by listening on this channel.
attacker_p1(key_s(alice)).

49. By 48, the attacker may know key_s(alice) in phase 1.
By 45, the attacker may know dhexp(key_e_764788185,g) in phase 1.
Using the function dhexp the attacker may obtain dhexp(key_e_764788185,dhexp(key_s(alice),g)) in phase 1.
attacker_p1(dhexp(key_e_764788185,dhexp(key_s(alice),g))).

50. By 20, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)).
By 19, the attacker may know dhexp(key_s(bob),dhexp(key_s(alice),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g)))).

51. By 50, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
By 40, the attacker may know dhexp(key_e_764788185,g).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788185,g)).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788185,g))).

52. By 51, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788185,g)).
So the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788185,g)) in phase 1.
attacker_p1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788185,g))).

53. By 52, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788185,g)) in phase 1.
By 49, the attacker may know dhexp(key_e_764788185,dhexp(key_s(alice),g)) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788185,g)),dhexp(key_e_764788185,dhexp(key_s(alice),g))) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788185,g)),dhexp(key_e_764788185,dhexp(key_s(alice),g)))).

54. By 53, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788185,g)),dhexp(key_e_764788185,dhexp(key_s(alice),g))) in phase 1.
By 44, the attacker may know minnonce in phase 1.
By 43, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788153)),dhexp(key_e_764788185,g)) in phase 1.
By 30, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788185,g)),dhexp(key_e_764788185,dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788153)),dhexp(key_e_764788185,g)),msg_b(bob,alice)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788153)),dhexp(key_e_764788185,g)),msg_b(bob,alice)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788153)),dhexp(key_e_764788185,g)),msg_b(bob,alice))).

55. By 54, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788153)),dhexp(key_e_764788185,g)),msg_b(bob,alice)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_b(bob,alice) in phase 1.
attacker_p1(msg_b(bob,alice)).


RESULT not attacker_p1(msg_b(bob,alice)) cannot be proved.
Starting query attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice))
goal reachable: begin(LeakS(phase1,alice)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(LeakS(phase0,bob)) -> attacker_p1(msg_b(bob,alice))
goal reachable: begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(LeakS(phase0,alice)) -> attacker_p1(msg_b(bob,alice))
RESULT attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice)) is true.
Starting query attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob)))
goal reachable: begin(LeakS(phase1,alice)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(LeakS(phase0,bob)) -> attacker_p1(msg_b(bob,alice))
goal reachable: begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(LeakS(phase0,alice)) -> attacker_p1(msg_b(bob,alice))
RESULT attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob))) is true.
Starting query attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice))
goal reachable: begin(LeakS(phase1,alice)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(LeakS(phase0,bob)) -> attacker_p1(msg_b(bob,alice))
Abbreviations:
key_e_764788446 = key_e_808[me_752 = bob,them_751 = alice,!1 = @sid_764788432]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) may be inserted in a table at insert {312}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false)))).

3. The attacker has some term plaintext_a_764788414.
attacker(plaintext_a_764788414).

4. Using the function g the attacker may obtain g.
attacker(g).

5. The message dhexp(key_s(bob),g) may be sent on channel pub at output {297}.
mess(pub,dhexp(key_s(bob),g)).

6. By 1, the attacker may have the channel pub.
By 5, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

7. The message dhexp(key_s(alice),g) may be sent on channel pub at output {7}.
mess(pub,dhexp(key_s(alice),g)).

8. By 1, the attacker may have the channel pub.
By 7, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

9. Using the function empty the attacker may obtain empty.
attacker(empty).

10. Using the function somename the attacker may obtain somename.
attacker(somename).

11. By 10, the attacker may know somename.
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

12. By 11, the attacker may know hash(somename,empty).
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

13. By 12, the attacker may know hash(hash(somename,empty),empty).
By 8, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

14. By 13, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

15. By 14, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 4, the attacker may know g.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g)).

16. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

17. The event LeakS(phase0,bob) may be executed at {432}.
So the message key_s(bob) may be sent on channel pub at output {433}.
mess(pub,key_s(bob)).

18. By 1, the attacker may have the channel pub.
By 17, the message key_s(bob) may be sent on this channel.
So the attacker may obtain the message key_s(bob) by listening on this channel.
attacker(key_s(bob)).

19. By 18, the attacker may know key_s(bob).
By 8, the attacker may know dhexp(key_s(alice),g).
Using the function dhexp the attacker may obtain dhexp(key_s(bob),dhexp(key_s(alice),g)).
attacker(dhexp(key_s(bob),dhexp(key_s(alice),g))).

20. By 11, the attacker may know hash(somename,empty).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)).
attacker(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g))).

21. By 20, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)).
By 19, the attacker may know dhexp(key_s(bob),dhexp(key_s(alice),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
attacker(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g)))).

22. By 21, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
By 16, the attacker may know minnonce.
By 15, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
By 3, the attacker may know plaintext_a_764788414.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788414).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788414)).

23. The attacker has some term b_764788409.
attacker(b_764788409).

24. By 4, the attacker may know g.
By 23, the attacker may know b_764788409.
By 22, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788414).
Using the function concat3 the attacker may obtain concat3(g,b_764788409,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788414)).
attacker(concat3(g,b_764788409,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788414))).

25. By 1, the attacker may have the channel pub.
By 24, the attacker may have the message concat3(g,b_764788409,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788414)).
So the attacker may send this message on this channel.
mess(pub,concat3(g,b_764788409,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788414))).

26. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 2 may be read at get {348}.
The message concat3(g,b_764788409,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788414)) that may be sent on channel pub by 25 may be received at input {313}.
We have g <> caught-fail.
So the entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788414))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) may be inserted in a table at insert {347}.
table(statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788414))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false)))).

27. The entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788414))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) that may be in a table by 26 may be read at get {386}.
The event SendMsg(bob,alice,stage_b,msg_b(bob,alice),true) may be executed at {383}.
So the message concat3(dhexp(key_e_764788446,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788446,g)),dhexp(key_e_764788446,dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788414)),dhexp(key_e_764788446,g)),msg_b(bob,alice))) may be sent on channel pub at output {385}.
mess(pub,concat3(dhexp(key_e_764788446,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788446,g)),dhexp(key_e_764788446,dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788414)),dhexp(key_e_764788446,g)),msg_b(bob,alice)))).

28. By 1, the attacker may have the channel pub.
By 27, the message concat3(dhexp(key_e_764788446,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788446,g)),dhexp(key_e_764788446,dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788414)),dhexp(key_e_764788446,g)),msg_b(bob,alice))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e_764788446,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788446,g)),dhexp(key_e_764788446,dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788414)),dhexp(key_e_764788446,g)),msg_b(bob,alice))) by listening on this channel.
attacker(concat3(dhexp(key_e_764788446,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788446,g)),dhexp(key_e_764788446,dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788414)),dhexp(key_e_764788446,g)),msg_b(bob,alice)))).

29. By 28, the attacker may know concat3(dhexp(key_e_764788446,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788446,g)),dhexp(key_e_764788446,dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788414)),dhexp(key_e_764788446,g)),msg_b(bob,alice))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788446,g)),dhexp(key_e_764788446,dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788414)),dhexp(key_e_764788446,g)),msg_b(bob,alice)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788446,g)),dhexp(key_e_764788446,dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788414)),dhexp(key_e_764788446,g)),msg_b(bob,alice))).

30. By 29, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788446,g)),dhexp(key_e_764788446,dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788414)),dhexp(key_e_764788446,g)),msg_b(bob,alice)).
So the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788446,g)),dhexp(key_e_764788446,dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788414)),dhexp(key_e_764788446,g)),msg_b(bob,alice)) in phase 1.
attacker_p1(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788446,g)),dhexp(key_e_764788446,dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788414)),dhexp(key_e_764788446,g)),msg_b(bob,alice))).

31. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) may be inserted in a table at insert {312}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false)))).

32. The attacker has some term plaintext_a_764788245.
attacker(plaintext_a_764788245).

33. By 21, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
By 16, the attacker may know minnonce.
By 15, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
By 32, the attacker may know plaintext_a_764788245.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788245).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788245)).

34. The attacker has some term b_764788240.
attacker(b_764788240).

35. By 4, the attacker may know g.
By 34, the attacker may know b_764788240.
By 33, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788245).
Using the function concat3 the attacker may obtain concat3(g,b_764788240,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788245)).
attacker(concat3(g,b_764788240,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788245))).

36. By 1, the attacker may have the channel pub.
By 35, the attacker may have the message concat3(g,b_764788240,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788245)).
So the attacker may send this message on this channel.
mess(pub,concat3(g,b_764788240,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788245))).

37. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 31 may be read at get {348}.
The message concat3(g,b_764788240,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788245)) that may be sent on channel pub by 36 may be received at input {313}.
We have g <> caught-fail.
So the entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788245))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) may be inserted in a table at insert {347}.
table(statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788245))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false)))).

38. The entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788245))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) that may be in a table by 37 may be read at get {386}.
The event SendMsg(bob,alice,stage_b,msg_b(bob,alice),true) may be executed at {383}.
So the message concat3(dhexp(key_e_764788446,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788446,g)),dhexp(key_s(alice),dhexp(key_e_764788446,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788245)),dhexp(key_e_764788446,g)),msg_b(bob,alice))) may be sent on channel pub at output {385}.
mess(pub,concat3(dhexp(key_e_764788446,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788446,g)),dhexp(key_s(alice),dhexp(key_e_764788446,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788245)),dhexp(key_e_764788446,g)),msg_b(bob,alice)))).

39. By 1, the attacker may have the channel pub.
By 38, the message concat3(dhexp(key_e_764788446,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788446,g)),dhexp(key_s(alice),dhexp(key_e_764788446,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788245)),dhexp(key_e_764788446,g)),msg_b(bob,alice))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e_764788446,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788446,g)),dhexp(key_s(alice),dhexp(key_e_764788446,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788245)),dhexp(key_e_764788446,g)),msg_b(bob,alice))) by listening on this channel.
attacker(concat3(dhexp(key_e_764788446,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788446,g)),dhexp(key_s(alice),dhexp(key_e_764788446,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788245)),dhexp(key_e_764788446,g)),msg_b(bob,alice)))).

40. By 39, the attacker may know concat3(dhexp(key_e_764788446,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788446,g)),dhexp(key_s(alice),dhexp(key_e_764788446,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788245)),dhexp(key_e_764788446,g)),msg_b(bob,alice))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_e_764788446,g).
attacker(dhexp(key_e_764788446,g)).

41. By 15, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
By 22, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788414).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788414)).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788414))).

42. By 41, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788414)).
By 40, the attacker may know dhexp(key_e_764788446,g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788414)),dhexp(key_e_764788446,g)).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788414)),dhexp(key_e_764788446,g))).

43. By 42, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788414)),dhexp(key_e_764788446,g)).
So the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788414)),dhexp(key_e_764788446,g)) in phase 1.
attacker_p1(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788414)),dhexp(key_e_764788446,g))).

44. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

45. By 40, the attacker may know dhexp(key_e_764788446,g).
So the attacker may know dhexp(key_e_764788446,g) in phase 1.
attacker_p1(dhexp(key_e_764788446,g)).

46. Using the function pub the attacker may obtain pub in phase 1.
attacker_p1(pub).

47. The event LeakS(phase1,alice) may be executed at {146}.
So the message key_s(alice) may be sent on channel pub in phase 1 at output {147}.
mess_p1(pub,key_s(alice)).

48. By 46, the attacker may have the channel pub in phase 1.
By 47, the message key_s(alice) in phase 1 may be sent on this channel.
So the attacker may obtain the message key_s(alice) in phase 1 by listening on this channel.
attacker_p1(key_s(alice)).

49. By 48, the attacker may know key_s(alice) in phase 1.
By 45, the attacker may know dhexp(key_e_764788446,g) in phase 1.
Using the function dhexp the attacker may obtain dhexp(key_e_764788446,dhexp(key_s(alice),g)) in phase 1.
attacker_p1(dhexp(key_e_764788446,dhexp(key_s(alice),g))).

50. By 20, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)).
By 19, the attacker may know dhexp(key_s(bob),dhexp(key_s(alice),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g)))).

51. By 50, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
By 40, the attacker may know dhexp(key_e_764788446,g).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788446,g)).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788446,g))).

52. By 51, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788446,g)).
So the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788446,g)) in phase 1.
attacker_p1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788446,g))).

53. By 52, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788446,g)) in phase 1.
By 49, the attacker may know dhexp(key_e_764788446,dhexp(key_s(alice),g)) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788446,g)),dhexp(key_e_764788446,dhexp(key_s(alice),g))) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788446,g)),dhexp(key_e_764788446,dhexp(key_s(alice),g)))).

54. By 53, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788446,g)),dhexp(key_e_764788446,dhexp(key_s(alice),g))) in phase 1.
By 44, the attacker may know minnonce in phase 1.
By 43, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788414)),dhexp(key_e_764788446,g)) in phase 1.
By 30, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788446,g)),dhexp(key_e_764788446,dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788414)),dhexp(key_e_764788446,g)),msg_b(bob,alice)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788414)),dhexp(key_e_764788446,g)),msg_b(bob,alice)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788414)),dhexp(key_e_764788446,g)),msg_b(bob,alice))).

55. By 54, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788414)),dhexp(key_e_764788446,g)),msg_b(bob,alice)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_b(bob,alice) in phase 1.
attacker_p1(msg_b(bob,alice)).


RESULT attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)) cannot be proved.
Starting query event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true))
goal reachable: attacker(m_764788448) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(LeakS(phase0,alice)) -> end(RecvMsg(bob,alice,stage_c,m_764788448,true))
Abbreviations:
key_e_764788731 = key_e_808[me_752 = bob,them_751 = alice,!1 = @sid_764788714]

1. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) may be inserted in a table at insert {312}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false)))).

2. The attacker has some term plaintext_a_764788696.
attacker(plaintext_a_764788696).

3. Using the function g the attacker may obtain g.
attacker(g).

4. Using the function pub the attacker may obtain pub.
attacker(pub).

5. The message dhexp(key_s(bob),g) may be sent on channel pub at output {297}.
mess(pub,dhexp(key_s(bob),g)).

6. By 4, the attacker may have the channel pub.
By 5, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

7. The message dhexp(key_s(alice),g) may be sent on channel pub at output {7}.
mess(pub,dhexp(key_s(alice),g)).

8. By 4, the attacker may have the channel pub.
By 7, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

9. Using the function empty the attacker may obtain empty.
attacker(empty).

10. Using the function somename the attacker may obtain somename.
attacker(somename).

11. By 10, the attacker may know somename.
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

12. By 11, the attacker may know hash(somename,empty).
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

13. By 12, the attacker may know hash(hash(somename,empty),empty).
By 8, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

14. By 13, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

15. By 14, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 3, the attacker may know g.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g)).

16. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

17. The event LeakS(phase0,alice) may be executed at {143}.
So the message key_s(alice) may be sent on channel pub at output {144}.
mess(pub,key_s(alice)).

18. By 4, the attacker may have the channel pub.
By 17, the message key_s(alice) may be sent on this channel.
So the attacker may obtain the message key_s(alice) by listening on this channel.
attacker(key_s(alice)).

19. By 18, the attacker may know key_s(alice).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function dhexp the attacker may obtain dhexp(key_s(bob),dhexp(key_s(alice),g)).
attacker(dhexp(key_s(bob),dhexp(key_s(alice),g))).

20. By 11, the attacker may know hash(somename,empty).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)).
attacker(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g))).

21. By 20, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)).
By 19, the attacker may know dhexp(key_s(bob),dhexp(key_s(alice),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
attacker(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g)))).

22. By 21, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
By 16, the attacker may know minnonce.
By 15, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
By 2, the attacker may know plaintext_a_764788696.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)).

23. The attacker has some term b_764788691.
attacker(b_764788691).

24. By 3, the attacker may know g.
By 23, the attacker may know b_764788691.
By 22, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696).
Using the function concat3 the attacker may obtain concat3(g,b_764788691,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)).
attacker(concat3(g,b_764788691,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696))).

25. By 4, the attacker may have the channel pub.
By 24, the attacker may have the message concat3(g,b_764788691,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)).
So the attacker may send this message on this channel.
mess(pub,concat3(g,b_764788691,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696))).

26. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 1 may be read at get {348}.
The message concat3(g,b_764788691,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)) that may be sent on channel pub by 25 may be received at input {313}.
We have g <> caught-fail.
So the entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) may be inserted in a table at insert {347}.
table(statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false)))).

27. The entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) that may be in a table by 26 may be read at get {386}.
The event SendMsg(bob,alice,stage_b,msg_b(bob,alice),true) may be executed at {383}.
So the entry statestore(bob,alice,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)),dhexp(key_e_764788731,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)),dhexp(key_e_764788731,g)),msg_b(bob,alice)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_764788731,g),key_e_764788731),dhexp(key_s(alice),g),g,empty,false))) may be inserted in a table at insert {384}.
table(statestore(bob,alice,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)),dhexp(key_e_764788731,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)),dhexp(key_e_764788731,g)),msg_b(bob,alice)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_764788731,g),key_e_764788731),dhexp(key_s(alice),g),g,empty,false)))).

28. We assume as hypothesis that
attacker(m_764788730).

29. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) may be inserted in a table at insert {312}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false)))).

30. The attacker has some term b_764788609.
attacker(b_764788609).

31. By 3, the attacker may know g.
By 30, the attacker may know b_764788609.
By 22, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696).
Using the function concat3 the attacker may obtain concat3(g,b_764788609,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)).
attacker(concat3(g,b_764788609,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696))).

32. By 4, the attacker may have the channel pub.
By 31, the attacker may have the message concat3(g,b_764788609,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)).
So the attacker may send this message on this channel.
mess(pub,concat3(g,b_764788609,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696))).

33. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 29 may be read at get {348}.
The message concat3(g,b_764788609,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)) that may be sent on channel pub by 32 may be received at input {313}.
We have g <> caught-fail.
So the entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) may be inserted in a table at insert {347}.
table(statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false)))).

34. The entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) that may be in a table by 33 may be read at get {386}.
The event SendMsg(bob,alice,stage_b,msg_b(bob,alice),true) may be executed at {383}.
So the message concat3(dhexp(key_e_764788731,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)),dhexp(key_e_764788731,g)),msg_b(bob,alice))) may be sent on channel pub at output {385}.
mess(pub,concat3(dhexp(key_e_764788731,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)),dhexp(key_e_764788731,g)),msg_b(bob,alice)))).

35. By 4, the attacker may have the channel pub.
By 34, the message concat3(dhexp(key_e_764788731,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)),dhexp(key_e_764788731,g)),msg_b(bob,alice))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e_764788731,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)),dhexp(key_e_764788731,g)),msg_b(bob,alice))) by listening on this channel.
attacker(concat3(dhexp(key_e_764788731,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)),dhexp(key_e_764788731,g)),msg_b(bob,alice)))).

36. By 35, the attacker may know concat3(dhexp(key_e_764788731,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)),dhexp(key_e_764788731,g)),msg_b(bob,alice))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)),dhexp(key_e_764788731,g)),msg_b(bob,alice)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)),dhexp(key_e_764788731,g)),msg_b(bob,alice))).

37. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) may be inserted in a table at insert {312}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false)))).

38. The attacker has some term plaintext_a_764788510.
attacker(plaintext_a_764788510).

39. By 21, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
By 16, the attacker may know minnonce.
By 15, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
By 38, the attacker may know plaintext_a_764788510.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788510).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788510)).

40. The attacker has some term b_764788505.
attacker(b_764788505).

41. By 3, the attacker may know g.
By 40, the attacker may know b_764788505.
By 39, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788510).
Using the function concat3 the attacker may obtain concat3(g,b_764788505,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788510)).
attacker(concat3(g,b_764788505,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788510))).

42. By 4, the attacker may have the channel pub.
By 41, the attacker may have the message concat3(g,b_764788505,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788510)).
So the attacker may send this message on this channel.
mess(pub,concat3(g,b_764788505,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788510))).

43. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 37 may be read at get {348}.
The message concat3(g,b_764788505,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788510)) that may be sent on channel pub by 42 may be received at input {313}.
We have g <> caught-fail.
So the entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788510))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) may be inserted in a table at insert {347}.
table(statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788510))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false)))).

44. The entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788510))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) that may be in a table by 43 may be read at get {386}.
The event SendMsg(bob,alice,stage_b,msg_b(bob,alice),true) may be executed at {383}.
So the message concat3(dhexp(key_e_764788731,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788510)),dhexp(key_e_764788731,g)),msg_b(bob,alice))) may be sent on channel pub at output {385}.
mess(pub,concat3(dhexp(key_e_764788731,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788510)),dhexp(key_e_764788731,g)),msg_b(bob,alice)))).

45. By 4, the attacker may have the channel pub.
By 44, the message concat3(dhexp(key_e_764788731,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788510)),dhexp(key_e_764788731,g)),msg_b(bob,alice))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e_764788731,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788510)),dhexp(key_e_764788731,g)),msg_b(bob,alice))) by listening on this channel.
attacker(concat3(dhexp(key_e_764788731,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788510)),dhexp(key_e_764788731,g)),msg_b(bob,alice)))).

46. By 45, the attacker may know concat3(dhexp(key_e_764788731,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788510)),dhexp(key_e_764788731,g)),msg_b(bob,alice))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_e_764788731,g).
attacker(dhexp(key_e_764788731,g)).

47. By 15, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
By 22, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696))).

48. By 47, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)).
By 46, the attacker may know dhexp(key_e_764788731,g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)),dhexp(key_e_764788731,g)).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)),dhexp(key_e_764788731,g))).

49. By 48, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)),dhexp(key_e_764788731,g)).
By 36, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)),dhexp(key_e_764788731,g)),msg_b(bob,alice)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)),dhexp(key_e_764788731,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)),dhexp(key_e_764788731,g)),msg_b(bob,alice))).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)),dhexp(key_e_764788731,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)),dhexp(key_e_764788731,g)),msg_b(bob,alice)))).

50. By 16, the attacker may know minnonce.
Using the function increment_nonce the attacker may obtain increment_nonce(minnonce).
attacker(increment_nonce(minnonce)).

51. By 18, the attacker may know key_s(alice).
By 46, the attacker may know dhexp(key_e_764788731,g).
Using the function dhexp the attacker may obtain dhexp(key_s(alice),dhexp(key_e_764788731,g)).
attacker(dhexp(key_s(alice),dhexp(key_e_764788731,g))).

52. By 20, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)).
By 19, the attacker may know dhexp(key_s(bob),dhexp(key_s(alice),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g)))).

53. By 52, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
By 46, the attacker may know dhexp(key_e_764788731,g).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g))).

54. By 53, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)).
By 51, the attacker may know dhexp(key_s(alice),dhexp(key_e_764788731,g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))).
attacker(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g)))).

55. By 54, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))).
By 50, the attacker may know increment_nonce(minnonce).
By 49, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)),dhexp(key_e_764788731,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)),dhexp(key_e_764788731,g)),msg_b(bob,alice))).
By 28, the attacker may know m_764788730.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)),dhexp(key_e_764788731,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)),dhexp(key_e_764788731,g)),msg_b(bob,alice))),m_764788730).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)),dhexp(key_e_764788731,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)),dhexp(key_e_764788731,g)),msg_b(bob,alice))),m_764788730)).

56. The attacker has some term b_764788716.
attacker(b_764788716).

57. The attacker has some term a_764788715.
attacker(a_764788715).

58. By 57, the attacker may know a_764788715.
By 56, the attacker may know b_764788716.
By 55, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)),dhexp(key_e_764788731,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)),dhexp(key_e_764788731,g)),msg_b(bob,alice))),m_764788730).
Using the function concat3 the attacker may obtain concat3(a_764788715,b_764788716,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)),dhexp(key_e_764788731,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)),dhexp(key_e_764788731,g)),msg_b(bob,alice))),m_764788730)).
attacker(concat3(a_764788715,b_764788716,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)),dhexp(key_e_764788731,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)),dhexp(key_e_764788731,g)),msg_b(bob,alice))),m_764788730))).

59. By 4, the attacker may have the channel pub.
By 58, the attacker may have the message concat3(a_764788715,b_764788716,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)),dhexp(key_e_764788731,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)),dhexp(key_e_764788731,g)),msg_b(bob,alice))),m_764788730)).
So the attacker may send this message on this channel.
mess(pub,concat3(a_764788715,b_764788716,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)),dhexp(key_e_764788731,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)),dhexp(key_e_764788731,g)),msg_b(bob,alice))),m_764788730))).

60. The entry statestore(bob,alice,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)),dhexp(key_e_764788731,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)),dhexp(key_e_764788731,g)),msg_b(bob,alice)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_764788731,g),key_e_764788731),dhexp(key_s(alice),g),g,empty,false))) that may be in a table by 27 may be read at get {405}.
The message concat3(a_764788715,b_764788716,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)),dhexp(key_e_764788731,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764788731,g)),dhexp(key_s(alice),dhexp(key_e_764788731,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764788696)),dhexp(key_e_764788731,g)),msg_b(bob,alice))),m_764788730)) that may be sent on channel pub by 59 may be received at input {387}.
So event RecvMsg(bob,alice,stage_c,m_764788730,true) may be executed at {403}.
end(RecvMsg(bob,alice,stage_c,m_764788730,true)).


RESULT event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true)) cannot be proved.
Starting query event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,c_1107,stage_c,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: attacker(m_764788733) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(LeakS(phase0,alice)) -> end(RecvMsg(bob,alice,stage_c,m_764788733,true))
goal reachable: begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(bob,alice,stage_c,msg_c(alice,bob),true))
RESULT event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,c_1107,stage_c,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,c_1107,stage_c,m,true)) || event(LeakS(phase0,alice))
goal reachable: attacker(m_764788738) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(LeakS(phase0,alice)) -> end(RecvMsg(bob,alice,stage_c,m_764788738,true))
goal reachable: begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(bob,alice,stage_c,msg_c(alice,bob),true))
RESULT event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,c_1107,stage_c,m,true)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: attacker(m_764788743) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(LeakS(phase0,alice)) -> end(RecvMsg(bob,alice,stage_c,m_764788743,true))
goal reachable: begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(bob,alice,stage_c,msg_c(alice,bob),true))
RESULT event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true)) || event(LeakS(phase0,alice))
goal reachable: attacker(m_764788747) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(LeakS(phase0,alice)) -> end(RecvMsg(bob,alice,stage_c,m_764788747,true))
goal reachable: begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(bob,alice,stage_c,msg_c(alice,bob),true))
RESULT event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true)) || event(LeakS(phase0,alice)) is true.
Starting query not attacker_p1(msg_c(alice,bob))
goal reachable: begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> attacker_p1(msg_c(alice,bob))
Abbreviations:
key_764788974 = key_e[me = alice,them = bob,!1 = @sid_764788929]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {22}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

3. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 2 may be read at get {60}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {57}.
So the entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_764788974,g),key_764788974),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {58}.
table(statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_764788974,g),key_764788974),dhexp(key_s(bob),g),empty,empty,true)))).

4. The attacker has some term plaintext_b_764788941.
attacker(plaintext_b_764788941).

5. Using the function g the attacker may obtain g.
attacker(g).

6. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {22}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

7. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 6 may be read at get {60}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {57}.
So the message concat3(dhexp(key_764788974,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))) may be sent on channel pub at output {59}.
mess(pub,concat3(dhexp(key_764788974,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob)))).

8. By 1, the attacker may have the channel pub.
By 7, the message concat3(dhexp(key_764788974,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_764788974,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))) by listening on this channel.
attacker(concat3(dhexp(key_764788974,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob)))).

9. By 8, the attacker may know concat3(dhexp(key_764788974,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob)).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))).

10. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {22}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

11. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 10 may be read at get {60}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {57}.
So the message concat3(dhexp(key_764788974,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764788974,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))) may be sent on channel pub at output {59}.
mess(pub,concat3(dhexp(key_764788974,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764788974,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob)))).

12. By 1, the attacker may have the channel pub.
By 11, the message concat3(dhexp(key_764788974,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764788974,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_764788974,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764788974,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))) by listening on this channel.
attacker(concat3(dhexp(key_764788974,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764788974,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob)))).

13. By 12, the attacker may know concat3(dhexp(key_764788974,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764788974,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_764788974,g).
attacker(dhexp(key_764788974,g)).

14. The message dhexp(key_s(bob),g) may be sent on channel pub at output {297}.
mess(pub,dhexp(key_s(bob),g)).

15. By 1, the attacker may have the channel pub.
By 14, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

16. The message dhexp(key_s(alice),g) may be sent on channel pub at output {7}.
mess(pub,dhexp(key_s(alice),g)).

17. By 1, the attacker may have the channel pub.
By 16, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

18. Using the function empty the attacker may obtain empty.
attacker(empty).

19. Using the function somename the attacker may obtain somename.
attacker(somename).

20. By 19, the attacker may know somename.
By 18, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

21. By 20, the attacker may know hash(somename,empty).
By 18, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

22. By 21, the attacker may know hash(hash(somename,empty),empty).
By 17, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

23. By 22, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 15, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

24. By 23, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 13, the attacker may know dhexp(key_764788974,g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g))).

25. By 24, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)).
By 9, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob)))).

26. By 25, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))).
By 5, the attacker may know g.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g)).

27. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

28. The event LeakS(phase0,bob) may be executed at {432}.
So the message key_s(bob) may be sent on channel pub at output {433}.
mess(pub,key_s(bob)).

29. By 1, the attacker may have the channel pub.
By 28, the message key_s(bob) may be sent on this channel.
So the attacker may obtain the message key_s(bob) by listening on this channel.
attacker(key_s(bob)).

30. By 29, the attacker may know key_s(bob).
By 17, the attacker may know dhexp(key_s(alice),g).
Using the function dhexp the attacker may obtain dhexp(key_s(bob),dhexp(key_s(alice),g)).
attacker(dhexp(key_s(bob),dhexp(key_s(alice),g))).

31. By 29, the attacker may know key_s(bob).
By 13, the attacker may know dhexp(key_764788974,g).
Using the function dhexp the attacker may obtain dhexp(key_s(bob),dhexp(key_764788974,g)).
attacker(dhexp(key_s(bob),dhexp(key_764788974,g))).

32. By 20, the attacker may know hash(somename,empty).
By 31, the attacker may know dhexp(key_s(bob),dhexp(key_764788974,g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))).
attacker(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g)))).

33. By 32, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))).
By 30, the attacker may know dhexp(key_s(bob),dhexp(key_s(alice),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g)))).

34. By 33, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))).
By 13, the attacker may know dhexp(key_764788974,g).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g))).

35. By 34, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)).
By 17, the attacker may know dhexp(key_s(alice),g).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)).
attacker(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g))).

36. By 35, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)).
By 27, the attacker may know minnonce.
By 26, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g).
By 4, the attacker may know plaintext_b_764788941.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),plaintext_b_764788941).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),plaintext_b_764788941)).

37. The attacker has some term b_764788936.
attacker(b_764788936).

38. By 5, the attacker may know g.
By 37, the attacker may know b_764788936.
By 36, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),plaintext_b_764788941).
Using the function concat3 the attacker may obtain concat3(g,b_764788936,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),plaintext_b_764788941)).
attacker(concat3(g,b_764788936,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),plaintext_b_764788941))).

39. By 1, the attacker may have the channel pub.
By 38, the attacker may have the message concat3(g,b_764788936,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),plaintext_b_764788941)).
So the attacker may send this message on this channel.
mess(pub,concat3(g,b_764788936,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),plaintext_b_764788941))).

40. The entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_764788974,g),key_764788974),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 3 may be read at get {96}.
The message concat3(g,b_764788936,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),plaintext_b_764788941)) that may be sent on channel pub by 39 may be received at input {61}.
We have g <> caught-fail.
So the entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),plaintext_b_764788941))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_764788974,g),key_764788974),dhexp(key_s(bob),g),g,empty,true))) may be inserted in a table at insert {95}.
table(statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),plaintext_b_764788941))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_764788974,g),key_764788974),dhexp(key_s(bob),g),g,empty,true)))).

41. The entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),plaintext_b_764788941))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_764788974,g),key_764788974),dhexp(key_s(bob),g),g,empty,true))) that may be in a table by 40 may be read at get {114}.
The event SendMsg(alice,bob,stage_c,msg_c(alice,bob),true) may be executed at {111}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),plaintext_b_764788941)),msg_c(alice,bob))) may be sent on channel pub at output {113}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),plaintext_b_764788941)),msg_c(alice,bob)))).

42. By 1, the attacker may have the channel pub.
By 41, the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),plaintext_b_764788941)),msg_c(alice,bob))) may be sent on this channel.
So the attacker may obtain the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),plaintext_b_764788941)),msg_c(alice,bob))) by listening on this channel.
attacker(concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),plaintext_b_764788941)),msg_c(alice,bob)))).

43. By 42, the attacker may know concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),plaintext_b_764788941)),msg_c(alice,bob))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),plaintext_b_764788941)),msg_c(alice,bob)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),plaintext_b_764788941)),msg_c(alice,bob))).

44. By 43, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),plaintext_b_764788941)),msg_c(alice,bob)).
So the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),plaintext_b_764788941)),msg_c(alice,bob)) in phase 1.
attacker_p1(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),plaintext_b_764788941)),msg_c(alice,bob))).

45. By 26, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g).
By 36, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),plaintext_b_764788941).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),plaintext_b_764788941)).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),plaintext_b_764788941))).

46. By 45, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),plaintext_b_764788941)).
So the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),plaintext_b_764788941)) in phase 1.
attacker_p1(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),plaintext_b_764788941))).

47. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

48. By 47, the attacker may know minnonce in phase 1.
Using the function increment_nonce the attacker may obtain increment_nonce(minnonce) in phase 1.
attacker_p1(increment_nonce(minnonce)).

49. By 35, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)).
So the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g))).

50. By 49, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)) in phase 1.
By 48, the attacker may know increment_nonce(minnonce) in phase 1.
By 46, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),plaintext_b_764788941)) in phase 1.
By 44, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),plaintext_b_764788941)),msg_c(alice,bob)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),plaintext_b_764788941)),msg_c(alice,bob)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),plaintext_b_764788941)),msg_c(alice,bob))).

51. By 50, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764788974,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764788974,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764788974,g)),msg_a(alice,bob))),g),plaintext_b_764788941)),msg_c(alice,bob)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_c(alice,bob) in phase 1.
attacker_p1(msg_c(alice,bob)).


RESULT not attacker_p1(msg_c(alice,bob)) cannot be proved.
Starting query attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob))
goal reachable: begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> attacker_p1(msg_c(alice,bob))
RESULT attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob)) is true.
Starting query attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice)))
goal reachable: begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> attacker_p1(msg_c(alice,bob))
RESULT attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice))) is true.
Starting query attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> attacker_p1(msg_c(alice,bob))
RESULT attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true))
goal reachable: attacker(m_764788977) && begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_d,m_764788977,true))
Abbreviations:
key_764789355 = key_e[me = alice,them = bob,!1 = @sid_764789307]

1. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {22}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 1 may be read at get {60}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {57}.
So the entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_764789355,g),key_764789355),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {58}.
table(statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_764789355,g),key_764789355),dhexp(key_s(bob),g),empty,empty,true)))).

3. The attacker has some term plaintext_b_764789319.
attacker(plaintext_b_764789319).

4. Using the function g the attacker may obtain g.
attacker(g).

5. Using the function pub the attacker may obtain pub.
attacker(pub).

6. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {22}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

7. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 6 may be read at get {60}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {57}.
So the message concat3(dhexp(key_764789355,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))) may be sent on channel pub at output {59}.
mess(pub,concat3(dhexp(key_764789355,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob)))).

8. By 5, the attacker may have the channel pub.
By 7, the message concat3(dhexp(key_764789355,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_764789355,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))) by listening on this channel.
attacker(concat3(dhexp(key_764789355,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob)))).

9. By 8, the attacker may know concat3(dhexp(key_764789355,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob)).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))).

10. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {22}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

11. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 10 may be read at get {60}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {57}.
So the message concat3(dhexp(key_764789355,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764789355,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))) may be sent on channel pub at output {59}.
mess(pub,concat3(dhexp(key_764789355,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764789355,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob)))).

12. By 5, the attacker may have the channel pub.
By 11, the message concat3(dhexp(key_764789355,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764789355,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_764789355,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764789355,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))) by listening on this channel.
attacker(concat3(dhexp(key_764789355,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764789355,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob)))).

13. By 12, the attacker may know concat3(dhexp(key_764789355,g),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_764789355,dhexp(key_s(bob),g))),dhexp(key_s(alice),dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_764789355,g).
attacker(dhexp(key_764789355,g)).

14. The message dhexp(key_s(bob),g) may be sent on channel pub at output {297}.
mess(pub,dhexp(key_s(bob),g)).

15. By 5, the attacker may have the channel pub.
By 14, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

16. The message dhexp(key_s(alice),g) may be sent on channel pub at output {7}.
mess(pub,dhexp(key_s(alice),g)).

17. By 5, the attacker may have the channel pub.
By 16, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

18. Using the function empty the attacker may obtain empty.
attacker(empty).

19. Using the function somename the attacker may obtain somename.
attacker(somename).

20. By 19, the attacker may know somename.
By 18, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

21. By 20, the attacker may know hash(somename,empty).
By 18, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

22. By 21, the attacker may know hash(hash(somename,empty),empty).
By 17, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

23. By 22, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 15, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

24. By 23, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 13, the attacker may know dhexp(key_764789355,g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g))).

25. By 24, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)).
By 9, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob)))).

26. By 25, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))).
By 4, the attacker may know g.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g)).

27. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

28. The event LeakS(phase0,bob) may be executed at {432}.
So the message key_s(bob) may be sent on channel pub at output {433}.
mess(pub,key_s(bob)).

29. By 5, the attacker may have the channel pub.
By 28, the message key_s(bob) may be sent on this channel.
So the attacker may obtain the message key_s(bob) by listening on this channel.
attacker(key_s(bob)).

30. By 29, the attacker may know key_s(bob).
By 17, the attacker may know dhexp(key_s(alice),g).
Using the function dhexp the attacker may obtain dhexp(key_s(bob),dhexp(key_s(alice),g)).
attacker(dhexp(key_s(bob),dhexp(key_s(alice),g))).

31. By 29, the attacker may know key_s(bob).
By 13, the attacker may know dhexp(key_764789355,g).
Using the function dhexp the attacker may obtain dhexp(key_s(bob),dhexp(key_764789355,g)).
attacker(dhexp(key_s(bob),dhexp(key_764789355,g))).

32. By 20, the attacker may know hash(somename,empty).
By 31, the attacker may know dhexp(key_s(bob),dhexp(key_764789355,g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))).
attacker(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g)))).

33. By 32, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))).
By 30, the attacker may know dhexp(key_s(bob),dhexp(key_s(alice),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g)))).

34. By 33, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))).
By 13, the attacker may know dhexp(key_764789355,g).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g))).

35. By 34, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)).
By 17, the attacker may know dhexp(key_s(alice),g).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)).
attacker(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g))).

36. By 35, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)).
By 27, the attacker may know minnonce.
By 26, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g).
By 3, the attacker may know plaintext_b_764789319.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)).

37. The attacker has some term b_764789314.
attacker(b_764789314).

38. By 4, the attacker may know g.
By 37, the attacker may know b_764789314.
By 36, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319).
Using the function concat3 the attacker may obtain concat3(g,b_764789314,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)).
attacker(concat3(g,b_764789314,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319))).

39. By 5, the attacker may have the channel pub.
By 38, the attacker may have the message concat3(g,b_764789314,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)).
So the attacker may send this message on this channel.
mess(pub,concat3(g,b_764789314,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319))).

40. The entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_764789355,g),key_764789355),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 2 may be read at get {96}.
The message concat3(g,b_764789314,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)) that may be sent on channel pub by 39 may be received at input {61}.
We have g <> caught-fail.
So the entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_764789355,g),key_764789355),dhexp(key_s(bob),g),g,empty,true))) may be inserted in a table at insert {95}.
table(statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_764789355,g),key_764789355),dhexp(key_s(bob),g),g,empty,true)))).

41. The entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_764789355,g),key_764789355),dhexp(key_s(bob),g),g,empty,true))) that may be in a table by 40 may be read at get {114}.
The event SendMsg(alice,bob,stage_c,msg_c(alice,bob),true) may be executed at {111}.
So the entry statestore(alice,bob,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)),msg_c(alice,bob)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_764789355,g),key_764789355),dhexp(key_s(bob),g),g,empty,true))) may be inserted in a table at insert {112}.
table(statestore(alice,bob,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)),msg_c(alice,bob)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_764789355,g),key_764789355),dhexp(key_s(bob),g),g,empty,true)))).

42. We assume as hypothesis that
attacker(m_764789354).

43. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {22}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true)))).

44. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(empty,empty),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 43 may be read at get {60}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {57}.
So the entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_764789355,g),key_764789355),dhexp(key_s(bob),g),empty,empty,true))) may be inserted in a table at insert {58}.
table(statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_764789355,g),key_764789355),dhexp(key_s(bob),g),empty,empty,true)))).

45. The attacker has some term b_764789165.
attacker(b_764789165).

46. By 4, the attacker may know g.
By 45, the attacker may know b_764789165.
By 36, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319).
Using the function concat3 the attacker may obtain concat3(g,b_764789165,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)).
attacker(concat3(g,b_764789165,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319))).

47. By 5, the attacker may have the channel pub.
By 46, the attacker may have the message concat3(g,b_764789165,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)).
So the attacker may send this message on this channel.
mess(pub,concat3(g,b_764789165,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319))).

48. The entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_764789355,g),key_764789355),dhexp(key_s(bob),g),empty,empty,true))) that may be in a table by 44 may be read at get {96}.
The message concat3(g,b_764789165,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)) that may be sent on channel pub by 47 may be received at input {61}.
We have g <> caught-fail.
So the entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_764789355,g),key_764789355),dhexp(key_s(bob),g),g,empty,true))) may be inserted in a table at insert {95}.
table(statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_764789355,g),key_764789355),dhexp(key_s(bob),g),g,empty,true)))).

49. The entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_764789355,g),key_764789355),dhexp(key_s(bob),g),g,empty,true))) that may be in a table by 48 may be read at get {114}.
The event SendMsg(alice,bob,stage_c,msg_c(alice,bob),true) may be executed at {111}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)),msg_c(alice,bob))) may be sent on channel pub at output {113}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)),msg_c(alice,bob)))).

50. By 5, the attacker may have the channel pub.
By 49, the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)),msg_c(alice,bob))) may be sent on this channel.
So the attacker may obtain the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)),msg_c(alice,bob))) by listening on this channel.
attacker(concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)),msg_c(alice,bob)))).

51. By 50, the attacker may know concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)),msg_c(alice,bob))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)),msg_c(alice,bob)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)),msg_c(alice,bob))).

52. By 26, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g).
By 36, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319))).

53. By 52, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)).
By 51, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)),msg_c(alice,bob)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)),msg_c(alice,bob))).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)),msg_c(alice,bob)))).

54. By 27, the attacker may know minnonce.
Using the function increment_nonce the attacker may obtain increment_nonce(minnonce).
attacker(increment_nonce(minnonce)).

55. By 54, the attacker may know increment_nonce(minnonce).
Using the function increment_nonce the attacker may obtain increment_nonce(increment_nonce(minnonce)).
attacker(increment_nonce(increment_nonce(minnonce))).

56. By 35, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)).
By 55, the attacker may know increment_nonce(increment_nonce(minnonce)).
By 53, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)),msg_c(alice,bob))).
By 42, the attacker may know m_764789354.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)),msg_c(alice,bob))),m_764789354).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)),msg_c(alice,bob))),m_764789354)).

57. The attacker has some term b_764789340.
attacker(b_764789340).

58. The attacker has some term a_764789339.
attacker(a_764789339).

59. By 58, the attacker may know a_764789339.
By 57, the attacker may know b_764789340.
By 56, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)),msg_c(alice,bob))),m_764789354).
Using the function concat3 the attacker may obtain concat3(a_764789339,b_764789340,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)),msg_c(alice,bob))),m_764789354)).
attacker(concat3(a_764789339,b_764789340,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)),msg_c(alice,bob))),m_764789354))).

60. By 5, the attacker may have the channel pub.
By 59, the attacker may have the message concat3(a_764789339,b_764789340,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)),msg_c(alice,bob))),m_764789354)).
So the attacker may send this message on this channel.
mess(pub,concat3(a_764789339,b_764789340,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)),msg_c(alice,bob))),m_764789354))).

61. The entry statestore(alice,bob,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)),msg_c(alice,bob)))),keypairpack(dhexp(key_s(alice),g),key_s(alice)),keypairpack(dhexp(key_764789355,g),key_764789355),dhexp(key_s(bob),g),g,empty,true))) that may be in a table by 41 may be read at get {142}.
The message concat3(a_764789339,b_764789340,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_764789355,g)),dhexp(key_s(alice),g)),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),dhexp(key_764789355,g))),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),dhexp(key_764789355,g)),msg_a(alice,bob))),g),plaintext_b_764789319)),msg_c(alice,bob))),m_764789354)) that may be sent on channel pub by 60 may be received at input {115}.
So event RecvMsg(alice,bob,stage_d,m_764789354,true) may be executed at {139}.
end(RecvMsg(alice,bob,stage_d,m_764789354,true)).


RESULT event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,c_1107,stage_d,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: attacker(m_764789357) && begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_d,m_764789357,true))
goal reachable: begin(SendMsg(bob,alice,stage_d,msg_d(bob,alice),true)) && begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_d,msg_d(bob,alice),true))
RESULT event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,c_1107,stage_d,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,c_1107,stage_d,m,true)) || event(LeakS(phase0,bob))
goal reachable: attacker(m_764789362) && begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_d,m_764789362,true))
goal reachable: begin(SendMsg(bob,alice,stage_d,msg_d(bob,alice),true)) && begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_d,msg_d(bob,alice),true))
RESULT event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,c_1107,stage_d,m,true)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: attacker(m_764789367) && begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_d,m_764789367,true))
goal reachable: begin(SendMsg(bob,alice,stage_d,msg_d(bob,alice),true)) && begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_d,msg_d(bob,alice),true))
RESULT event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true)) || event(LeakS(phase0,bob))
goal reachable: attacker(m_764789371) && begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(LeakS(phase0,bob)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_d,m_764789371,true))
goal reachable: begin(SendMsg(bob,alice,stage_d,msg_d(bob,alice),true)) && begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_d,msg_d(bob,alice),true))
RESULT event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true)) || event(LeakS(phase0,bob)) is true.
Starting query not attacker_p1(msg_d(bob,alice))
goal reachable: begin(SendMsg(bob,alice,stage_d,msg_d(bob,alice),true)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(LeakS(phase0,alice)) -> attacker_p1(msg_d(bob,alice))
Abbreviations:
key_e_764789876 = key_e_808[me_752 = bob,them_751 = alice,!1 = @sid_764789836]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) may be inserted in a table at insert {312}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false)))).

3. The attacker has some term plaintext_a_764789818.
attacker(plaintext_a_764789818).

4. Using the function g the attacker may obtain g.
attacker(g).

5. The message dhexp(key_s(bob),g) may be sent on channel pub at output {297}.
mess(pub,dhexp(key_s(bob),g)).

6. By 1, the attacker may have the channel pub.
By 5, the message dhexp(key_s(bob),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(bob),g) by listening on this channel.
attacker(dhexp(key_s(bob),g)).

7. The message dhexp(key_s(alice),g) may be sent on channel pub at output {7}.
mess(pub,dhexp(key_s(alice),g)).

8. By 1, the attacker may have the channel pub.
By 7, the message dhexp(key_s(alice),g) may be sent on this channel.
So the attacker may obtain the message dhexp(key_s(alice),g) by listening on this channel.
attacker(dhexp(key_s(alice),g)).

9. Using the function empty the attacker may obtain empty.
attacker(empty).

10. Using the function somename the attacker may obtain somename.
attacker(somename).

11. By 10, the attacker may know somename.
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

12. By 11, the attacker may know hash(somename,empty).
By 9, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

13. By 12, the attacker may know hash(hash(somename,empty),empty).
By 8, the attacker may know dhexp(key_s(alice),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g))).

14. By 13, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
attacker(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))).

15. By 14, the attacker may know hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)).
By 4, the attacker may know g.
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
attacker(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g)).

16. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

17. The event LeakS(phase0,alice) may be executed at {143}.
So the message key_s(alice) may be sent on channel pub at output {144}.
mess(pub,key_s(alice)).

18. By 1, the attacker may have the channel pub.
By 17, the message key_s(alice) may be sent on this channel.
So the attacker may obtain the message key_s(alice) by listening on this channel.
attacker(key_s(alice)).

19. By 18, the attacker may know key_s(alice).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function dhexp the attacker may obtain dhexp(key_s(bob),dhexp(key_s(alice),g)).
attacker(dhexp(key_s(bob),dhexp(key_s(alice),g))).

20. By 11, the attacker may know hash(somename,empty).
By 6, the attacker may know dhexp(key_s(bob),g).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)).
attacker(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g))).

21. By 20, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)).
By 19, the attacker may know dhexp(key_s(bob),dhexp(key_s(alice),g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
attacker(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g)))).

22. By 21, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
By 16, the attacker may know minnonce.
By 15, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
By 3, the attacker may know plaintext_a_764789818.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)).

23. The attacker has some term b_764789813.
attacker(b_764789813).

24. By 4, the attacker may know g.
By 23, the attacker may know b_764789813.
By 22, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818).
Using the function concat3 the attacker may obtain concat3(g,b_764789813,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)).
attacker(concat3(g,b_764789813,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818))).

25. By 1, the attacker may have the channel pub.
By 24, the attacker may have the message concat3(g,b_764789813,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)).
So the attacker may send this message on this channel.
mess(pub,concat3(g,b_764789813,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818))).

26. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 2 may be read at get {348}.
The message concat3(g,b_764789813,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)) that may be sent on channel pub by 25 may be received at input {313}.
We have g <> caught-fail.
So the entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) may be inserted in a table at insert {347}.
table(statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false)))).

27. The entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) that may be in a table by 26 may be read at get {386}.
The event SendMsg(bob,alice,stage_b,msg_b(bob,alice),true) may be executed at {383}.
So the entry statestore(bob,alice,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_764789876,g),key_e_764789876),dhexp(key_s(alice),g),g,empty,false))) may be inserted in a table at insert {384}.
table(statestore(bob,alice,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_764789876,g),key_e_764789876),dhexp(key_s(alice),g),g,empty,false)))).

28. The attacker has some term plaintext_c_764789842.
attacker(plaintext_c_764789842).

29. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) may be inserted in a table at insert {312}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false)))).

30. The attacker has some term b_764789731.
attacker(b_764789731).

31. By 4, the attacker may know g.
By 30, the attacker may know b_764789731.
By 22, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818).
Using the function concat3 the attacker may obtain concat3(g,b_764789731,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)).
attacker(concat3(g,b_764789731,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818))).

32. By 1, the attacker may have the channel pub.
By 31, the attacker may have the message concat3(g,b_764789731,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)).
So the attacker may send this message on this channel.
mess(pub,concat3(g,b_764789731,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818))).

33. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 29 may be read at get {348}.
The message concat3(g,b_764789731,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)) that may be sent on channel pub by 32 may be received at input {313}.
We have g <> caught-fail.
So the entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) may be inserted in a table at insert {347}.
table(statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false)))).

34. The entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) that may be in a table by 33 may be read at get {386}.
The event SendMsg(bob,alice,stage_b,msg_b(bob,alice),true) may be executed at {383}.
So the message concat3(dhexp(key_e_764789876,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))) may be sent on channel pub at output {385}.
mess(pub,concat3(dhexp(key_e_764789876,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice)))).

35. By 1, the attacker may have the channel pub.
By 34, the message concat3(dhexp(key_e_764789876,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e_764789876,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))) by listening on this channel.
attacker(concat3(dhexp(key_e_764789876,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice)))).

36. By 35, the attacker may know concat3(dhexp(key_e_764789876,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))).

37. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) may be inserted in a table at insert {312}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false)))).

38. The attacker has some term plaintext_a_764789632.
attacker(plaintext_a_764789632).

39. By 21, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
By 16, the attacker may know minnonce.
By 15, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
By 38, the attacker may know plaintext_a_764789632.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789632).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789632)).

40. The attacker has some term b_764789627.
attacker(b_764789627).

41. By 4, the attacker may know g.
By 40, the attacker may know b_764789627.
By 39, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789632).
Using the function concat3 the attacker may obtain concat3(g,b_764789627,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789632)).
attacker(concat3(g,b_764789627,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789632))).

42. By 1, the attacker may have the channel pub.
By 41, the attacker may have the message concat3(g,b_764789627,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789632)).
So the attacker may send this message on this channel.
mess(pub,concat3(g,b_764789627,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789632))).

43. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),empty,empty,false))) that may be in a table by 37 may be read at get {348}.
The message concat3(g,b_764789627,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789632)) that may be sent on channel pub by 42 may be received at input {313}.
We have g <> caught-fail.
So the entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789632))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) may be inserted in a table at insert {347}.
table(statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789632))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false)))).

44. The entry statestore(bob,alice,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789632))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(empty,empty),dhexp(key_s(alice),g),g,empty,false))) that may be in a table by 43 may be read at get {386}.
The event SendMsg(bob,alice,stage_b,msg_b(bob,alice),true) may be executed at {383}.
So the message concat3(dhexp(key_e_764789876,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789632)),dhexp(key_e_764789876,g)),msg_b(bob,alice))) may be sent on channel pub at output {385}.
mess(pub,concat3(dhexp(key_e_764789876,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789632)),dhexp(key_e_764789876,g)),msg_b(bob,alice)))).

45. By 1, the attacker may have the channel pub.
By 44, the message concat3(dhexp(key_e_764789876,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789632)),dhexp(key_e_764789876,g)),msg_b(bob,alice))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e_764789876,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789632)),dhexp(key_e_764789876,g)),msg_b(bob,alice))) by listening on this channel.
attacker(concat3(dhexp(key_e_764789876,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789632)),dhexp(key_e_764789876,g)),msg_b(bob,alice)))).

46. By 45, the attacker may know concat3(dhexp(key_e_764789876,g),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789632)),dhexp(key_e_764789876,g)),msg_b(bob,alice))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_e_764789876,g).
attacker(dhexp(key_e_764789876,g)).

47. By 15, the attacker may know hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g).
By 22, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)).
attacker(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818))).

48. By 47, the attacker may know hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)).
By 46, the attacker may know dhexp(key_e_764789876,g).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)).
attacker(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g))).

49. By 48, the attacker may know hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)).
By 36, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice)).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice)))).

50. By 16, the attacker may know minnonce.
Using the function increment_nonce the attacker may obtain increment_nonce(minnonce).
attacker(increment_nonce(minnonce)).

51. By 18, the attacker may know key_s(alice).
By 46, the attacker may know dhexp(key_e_764789876,g).
Using the function dhexp the attacker may obtain dhexp(key_s(alice),dhexp(key_e_764789876,g)).
attacker(dhexp(key_s(alice),dhexp(key_e_764789876,g))).

52. By 20, the attacker may know hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)).
By 19, the attacker may know dhexp(key_s(bob),dhexp(key_s(alice),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
attacker(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g)))).

53. By 52, the attacker may know hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))).
By 46, the attacker may know dhexp(key_e_764789876,g).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)).
attacker(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g))).

54. By 53, the attacker may know hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)).
By 51, the attacker may know dhexp(key_s(alice),dhexp(key_e_764789876,g)).
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))).
attacker(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g)))).

55. By 54, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))).
By 50, the attacker may know increment_nonce(minnonce).
By 49, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))).
By 28, the attacker may know plaintext_c_764789842.
Using the function encrypt the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),plaintext_c_764789842).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),plaintext_c_764789842)).

56. The attacker has some term b_764789838.
attacker(b_764789838).

57. The attacker has some term a_764789837.
attacker(a_764789837).

58. By 57, the attacker may know a_764789837.
By 56, the attacker may know b_764789838.
By 55, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),plaintext_c_764789842).
Using the function concat3 the attacker may obtain concat3(a_764789837,b_764789838,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),plaintext_c_764789842)).
attacker(concat3(a_764789837,b_764789838,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),plaintext_c_764789842))).

59. By 1, the attacker may have the channel pub.
By 58, the attacker may have the message concat3(a_764789837,b_764789838,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),plaintext_c_764789842)).
So the attacker may send this message on this channel.
mess(pub,concat3(a_764789837,b_764789838,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),plaintext_c_764789842))).

60. The entry statestore(bob,alice,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_764789876,g),key_e_764789876),dhexp(key_s(alice),g),g,empty,false))) that may be in a table by 27 may be read at get {405}.
The message concat3(a_764789837,b_764789838,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),plaintext_c_764789842)) that may be sent on channel pub by 59 may be received at input {387}.
So the entry statestore(bob,alice,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),plaintext_c_764789842))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_764789876,g),key_e_764789876),dhexp(key_s(alice),g),g,empty,false))) may be inserted in a table at insert {404}.
table(statestore(bob,alice,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),plaintext_c_764789842))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_764789876,g),key_e_764789876),dhexp(key_s(alice),g),g,empty,false)))).

61. The entry statestore(bob,alice,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),plaintext_c_764789842))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_764789876,g),key_e_764789876),dhexp(key_s(alice),g),g,empty,false))) that may be in a table by 60 may be read at get {431}.
The event SendMsg(bob,alice,stage_d,msg_d(bob,alice),true) may be executed at {428}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),plaintext_c_764789842)),msg_d(bob,alice))) may be sent on channel pub at output {430}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),plaintext_c_764789842)),msg_d(bob,alice)))).

62. By 1, the attacker may have the channel pub.
By 61, the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),plaintext_c_764789842)),msg_d(bob,alice))) may be sent on this channel.
So the attacker may obtain the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),plaintext_c_764789842)),msg_d(bob,alice))) by listening on this channel.
attacker(concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),plaintext_c_764789842)),msg_d(bob,alice)))).

63. By 62, the attacker may know concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),plaintext_c_764789842)),msg_d(bob,alice))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),plaintext_c_764789842)),msg_d(bob,alice)).
attacker(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),plaintext_c_764789842)),msg_d(bob,alice))).

64. By 63, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),plaintext_c_764789842)),msg_d(bob,alice)).
So the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),plaintext_c_764789842)),msg_d(bob,alice)) in phase 1.
attacker_p1(encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),plaintext_c_764789842)),msg_d(bob,alice))).

65. By 49, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))).
By 55, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),plaintext_c_764789842).
Using the function hash the attacker may obtain hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),plaintext_c_764789842)).
attacker(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),plaintext_c_764789842))).

66. By 65, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),plaintext_c_764789842)).
So the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),plaintext_c_764789842)) in phase 1.
attacker_p1(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),plaintext_c_764789842))).

67. By 50, the attacker may know increment_nonce(minnonce).
Using the function increment_nonce the attacker may obtain increment_nonce(increment_nonce(minnonce)).
attacker(increment_nonce(increment_nonce(minnonce))).

68. By 67, the attacker may know increment_nonce(increment_nonce(minnonce)).
So the attacker may know increment_nonce(increment_nonce(minnonce)) in phase 1.
attacker_p1(increment_nonce(increment_nonce(minnonce))).

69. By 54, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))).
So the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g)))).

70. By 69, the attacker may know hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))) in phase 1.
By 68, the attacker may know increment_nonce(increment_nonce(minnonce)) in phase 1.
By 66, the attacker may know hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),plaintext_c_764789842)) in phase 1.
By 64, the attacker may know encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),plaintext_c_764789842)),msg_d(bob,alice)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),plaintext_c_764789842)),msg_d(bob,alice)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),plaintext_c_764789842)),msg_d(bob,alice))).

71. By 70, the attacker may know aeadpack(true,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),dhexp(key_e_764789876,g)),dhexp(key_s(alice),dhexp(key_e_764789876,g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_s(bob),g)),dhexp(key_s(bob),dhexp(key_s(alice),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_s(alice),g)),dhexp(key_s(bob),g)),g),plaintext_a_764789818)),dhexp(key_e_764789876,g)),msg_b(bob,alice))),plaintext_c_764789842)),msg_d(bob,alice)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_d(bob,alice) in phase 1.
attacker_p1(msg_d(bob,alice)).


RESULT not attacker_p1(msg_d(bob,alice)) cannot be proved.
Starting query attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice))
goal reachable: begin(SendMsg(bob,alice,stage_d,msg_d(bob,alice),true)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(LeakS(phase0,alice)) -> attacker_p1(msg_d(bob,alice))
RESULT attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice)) is true.
Starting query attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob)))
goal reachable: begin(SendMsg(bob,alice,stage_d,msg_d(bob,alice),true)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(LeakS(phase0,alice)) -> attacker_p1(msg_d(bob,alice))
RESULT attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob))) is true.
Starting query attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(bob,alice,stage_d,msg_d(bob,alice),true)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(LeakS(phase0,alice)) -> attacker_p1(msg_d(bob,alice))
RESULT attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice)) is true.
