File "XKpsk3.noise.passive.pv", line 229, characters 7-8:
Warning: identifier ck rebound.
File "XKpsk3.noise.passive.pv", line 238, characters 7-8:
Warning: identifier ck rebound.
File "XKpsk3.noise.passive.pv", line 239, characters 7-8:
Warning: identifier cs rebound.
File "XKpsk3.noise.passive.pv", line 239, character 36:
Warning: identifier h rebound.
File "XKpsk3.noise.passive.pv", line 248, characters 7-8:
Warning: identifier cs rebound.
File "XKpsk3.noise.passive.pv", line 249, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 254, characters 7-8:
Warning: identifier cs rebound.
File "XKpsk3.noise.passive.pv", line 255, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 269, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 274, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 280, character 6:
Warning: identifier e rebound.
File "XKpsk3.noise.passive.pv", line 281, characters 6-7:
Warning: identifier ne rebound.
File "XKpsk3.noise.passive.pv", line 282, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 283, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 284, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 285, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 285, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "XKpsk3.noise.passive.pv", line 286, characters 6-7:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 293, character 6:
Warning: identifier e rebound.
File "XKpsk3.noise.passive.pv", line 294, characters 6-7:
Warning: identifier ne rebound.
File "XKpsk3.noise.passive.pv", line 295, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 296, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 297, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 298, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 298, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "XKpsk3.noise.passive.pv", line 299, characters 6-7:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 306, character 6:
Warning: identifier s rebound.
File "XKpsk3.noise.passive.pv", line 307, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 307, characters 26-36:
Warning: identifier ciphertext1 rebound.
File "XKpsk3.noise.passive.pv", line 308, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 309, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 310, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 310, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "XKpsk3.noise.passive.pv", line 311, characters 6-7:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 319, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 319, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "XKpsk3.noise.passive.pv", line 320, characters 6-7:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 327, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 327, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "XKpsk3.noise.passive.pv", line 328, characters 6-7:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 336, characters 6-7:
Warning: identifier re rebound.
File "XKpsk3.noise.passive.pv", line 337, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 338, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 339, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 340, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 342, characters 7-8:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 350, characters 6-7:
Warning: identifier re rebound.
File "XKpsk3.noise.passive.pv", line 351, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 352, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 353, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 354, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 356, characters 7-8:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 364, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 364, characters 48-53:
Warning: identifier valid1 rebound.
File "XKpsk3.noise.passive.pv", line 365, characters 6-7:
Warning: identifier rs rebound.
File "XKpsk3.noise.passive.pv", line 366, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 367, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 368, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 370, characters 7-8:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 379, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 381, characters 7-8:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 389, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 391, characters 7-8:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 576, characters 7-8:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 577, characters 8-9:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 327, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 327, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "XKpsk3.noise.passive.pv", line 328, characters 6-7:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 248, characters 7-8:
Warning: identifier cs rebound.
File "XKpsk3.noise.passive.pv", line 249, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 568, characters 7-8:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 570, characters 8-9:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 379, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 381, characters 7-8:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 254, characters 7-8:
Warning: identifier cs rebound.
File "XKpsk3.noise.passive.pv", line 255, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 562, characters 8-9:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 306, character 6:
Warning: identifier s rebound.
File "XKpsk3.noise.passive.pv", line 307, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 307, characters 26-36:
Warning: identifier ciphertext1 rebound.
File "XKpsk3.noise.passive.pv", line 308, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 309, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 310, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 310, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "XKpsk3.noise.passive.pv", line 311, characters 6-7:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 248, characters 7-8:
Warning: identifier cs rebound.
File "XKpsk3.noise.passive.pv", line 249, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 229, characters 7-8:
Warning: identifier ck rebound.
File "XKpsk3.noise.passive.pv", line 238, characters 7-8:
Warning: identifier ck rebound.
File "XKpsk3.noise.passive.pv", line 239, characters 7-8:
Warning: identifier cs rebound.
File "XKpsk3.noise.passive.pv", line 239, character 36:
Warning: identifier h rebound.
File "XKpsk3.noise.passive.pv", line 248, characters 7-8:
Warning: identifier cs rebound.
File "XKpsk3.noise.passive.pv", line 249, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 556, characters 8-9:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 350, characters 6-7:
Warning: identifier re rebound.
File "XKpsk3.noise.passive.pv", line 351, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 352, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 353, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 354, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 356, characters 7-8:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 229, characters 7-8:
Warning: identifier ck rebound.
File "XKpsk3.noise.passive.pv", line 229, characters 7-8:
Warning: identifier ck rebound.
File "XKpsk3.noise.passive.pv", line 254, characters 7-8:
Warning: identifier cs rebound.
File "XKpsk3.noise.passive.pv", line 255, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 549, characters 8-9:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 280, character 6:
Warning: identifier e rebound.
File "XKpsk3.noise.passive.pv", line 281, characters 6-7:
Warning: identifier ne rebound.
File "XKpsk3.noise.passive.pv", line 282, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 283, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 284, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 285, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 285, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "XKpsk3.noise.passive.pv", line 286, characters 6-7:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 229, characters 7-8:
Warning: identifier ck rebound.
File "XKpsk3.noise.passive.pv", line 229, characters 7-8:
Warning: identifier ck rebound.
File "XKpsk3.noise.passive.pv", line 248, characters 7-8:
Warning: identifier cs rebound.
File "XKpsk3.noise.passive.pv", line 249, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 269, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 635, characters 7-8:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 637, characters 8-9:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 389, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 391, characters 7-8:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 254, characters 7-8:
Warning: identifier cs rebound.
File "XKpsk3.noise.passive.pv", line 255, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 628, characters 7-8:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 629, characters 8-9:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 319, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 319, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "XKpsk3.noise.passive.pv", line 320, characters 6-7:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 248, characters 7-8:
Warning: identifier cs rebound.
File "XKpsk3.noise.passive.pv", line 249, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 622, characters 8-9:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 364, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 364, characters 48-53:
Warning: identifier valid1 rebound.
File "XKpsk3.noise.passive.pv", line 365, characters 6-7:
Warning: identifier rs rebound.
File "XKpsk3.noise.passive.pv", line 366, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 367, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 368, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 370, characters 7-8:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 254, characters 7-8:
Warning: identifier cs rebound.
File "XKpsk3.noise.passive.pv", line 255, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 229, characters 7-8:
Warning: identifier ck rebound.
File "XKpsk3.noise.passive.pv", line 238, characters 7-8:
Warning: identifier ck rebound.
File "XKpsk3.noise.passive.pv", line 239, characters 7-8:
Warning: identifier cs rebound.
File "XKpsk3.noise.passive.pv", line 239, character 36:
Warning: identifier h rebound.
File "XKpsk3.noise.passive.pv", line 254, characters 7-8:
Warning: identifier cs rebound.
File "XKpsk3.noise.passive.pv", line 255, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 615, characters 8-9:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 293, character 6:
Warning: identifier e rebound.
File "XKpsk3.noise.passive.pv", line 294, characters 6-7:
Warning: identifier ne rebound.
File "XKpsk3.noise.passive.pv", line 295, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 296, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 297, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 298, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 298, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "XKpsk3.noise.passive.pv", line 299, characters 6-7:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 229, characters 7-8:
Warning: identifier ck rebound.
File "XKpsk3.noise.passive.pv", line 229, characters 7-8:
Warning: identifier ck rebound.
File "XKpsk3.noise.passive.pv", line 248, characters 7-8:
Warning: identifier cs rebound.
File "XKpsk3.noise.passive.pv", line 249, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 609, characters 8-9:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 336, characters 6-7:
Warning: identifier re rebound.
File "XKpsk3.noise.passive.pv", line 337, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 338, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 339, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 340, characters 7-8:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 342, characters 7-8:
Warning: identifier hs rebound.
File "XKpsk3.noise.passive.pv", line 229, characters 7-8:
Warning: identifier ck rebound.
File "XKpsk3.noise.passive.pv", line 229, characters 7-8:
Warning: identifier ck rebound.
File "XKpsk3.noise.passive.pv", line 254, characters 7-8:
Warning: identifier cs rebound.
File "XKpsk3.noise.passive.pv", line 255, characters 6-7:
Warning: identifier ss rebound.
File "XKpsk3.noise.passive.pv", line 274, characters 6-7:
Warning: identifier ss rebound.
Linear part:
dhexp_real(b_76,dhexp_real(a_75,g)) = dhexp_real(a_75,dhexp_real(b_76,g))
Completing equations...
Completed equations:
dhexp_real(b_76,dhexp_real(a_75,g)) = dhexp_real(a_75,dhexp_real(b_76,g))
Convergent part:
Completing equations...
Completed equations:
Process:
{1}out(pub, key_s(charlie));
{2}!
{3}new sid: sessionid;
(
    {4}let s_611: keypair = keypairpack(empty,empty) in
    {5}out(pub, getpublickey(s_611));
    (
        {6}let e_612: keypair = keypairpack(empty,empty) in
        {7}let v_613: key = catch-fail(dhexp(key_s(bob),validkey(g))) in
        {8}let rs_614: key = getpublickey((if not-caught-fail(v_613) then keypairpack(validkey(v_613),key_s(bob)) else fail-any)) in
        {9}let re_615: key = empty in
        {10}let v_616: bitstring = catch-fail(hash(somename,empty)) in
        {11}let v_617: key = catch-fail(v_616) in
        {12}let v_618: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {13}let v_619: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_616) then (if not-caught-fail(v_617) then (if not-caught-fail(v_618) then symmetricstatepack(v_618,v_617,v_616) else fail-any) else fail-any) else fail-any))) in
        {14}let v_620: symmetricstate = catch-fail((if success?((if not-caught-fail(v_616) then (if not-caught-fail(v_617) then (if not-caught-fail(v_618) then symmetricstatepack(v_618,v_617,v_616) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_619) && success?(is-true(success?(1-proj-3-tuple(v_619))))) then symmetricstatepack(1-proj-3-tuple(v_619),2-proj-3-tuple(v_619),hash(3-proj-3-tuple(v_619),empty)) else fail-any) else fail-any)) in
        {15}let v_621: bitstring = catch-fail(symmetricstateunpack(v_620)) in
        {16}let v_622: symmetricstate = catch-fail((if (not-caught-fail(v_621) && success?(is-true(success?(1-proj-3-tuple(v_621))))) then symmetricstatepack(1-proj-3-tuple(v_621),2-proj-3-tuple(v_621),hash(3-proj-3-tuple(v_621),rs_614)) else fail-any)) in
        {17}let hs: handshakestate = (if not-caught-fail(v_620) then (if not-caught-fail(v_622) then handshakestatepack(v_622,s_611,e_612,rs_614,re_615,key_psk(alice,bob),true) else fail-any) else fail-any) in
        {18}insert statestore(alice,bob,sid,statepack_a(hs))
    ) | (
        {54}get statestore(=alice,=bob,=sid,statepack_a(hs_623: handshakestate)) in
        {19}let v_624: bitstring = catch-fail(handshakestateunpack(hs_623)) in
        {20}let v_625: bitstring = catch-fail((empty,empty,empty)) in
        {21}let v_626: key = catch-fail(dhexp(key_e(alice,bob,sid),validkey(g))) in
        {22}let v_627: keypair = catch-fail((if not-caught-fail(v_626) then keypairpack(validkey(v_626),key_e(alice,bob,sid)) else fail-any)) in
        {23}let v_628: bitstring = catch-fail(getpublickey(v_627)) in
        {24}let v_629: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_624))) in
        {25}let v_630: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_624)) then (if (not-caught-fail(v_629) && success?(is-true(success?(1-proj-3-tuple(v_629))))) then symmetricstatepack(1-proj-3-tuple(v_629),2-proj-3-tuple(v_629),hash(3-proj-3-tuple(v_629),v_628)) else fail-any) else fail-any)) in
        {26}let v_631: bitstring = catch-fail(symmetricstateunpack(v_630)) in
        {27}let v_632: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_631),getpublickey(v_627))) in
        {28}let v_633: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_631),getpublickey(v_627))) in
        {29}let v_634: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_631),getpublickey(v_627))) in
        {30}let v_635: bitstring = catch-fail((if (success?(getpublickey(v_627)) && success?(2-proj-3-tuple(v_631))) then (if not-caught-fail(v_632) then (if not-caught-fail(v_633) then (if not-caught-fail(v_634) then (v_632,v_633,v_634) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {31}let v_636: symmetricstate = catch-fail((if success?(getpublickey(v_627)) then (if (not-caught-fail(v_631) && success?(is-true(success?(1-proj-3-tuple(v_631))))) then (if (not-caught-fail(v_635) && success?(is-true(success?(1-proj-3-tuple(v_635))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_635)) then cipherstatepack(2-proj-3-tuple(v_635),minnonce) else fail-any),1-proj-3-tuple(v_635),3-proj-3-tuple(v_631)) else fail-any) else fail-any) else fail-any)) in
        {32}let v_637: bitstring = catch-fail(keypairunpack(v_627)) in
        {33}let v_638: bitstring = catch-fail(symmetricstateunpack(v_636)) in
        {34}let v_639: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_638),(if success?(4-proj-7-tuple(v_624)) then (if (not-caught-fail(v_637) && success?(is-true(success?(1-proj-2-tuple(v_637))))) then dhexp(2-proj-2-tuple(v_637),4-proj-7-tuple(v_624)) else fail-any) else fail-any))) in
        {35}let v_640: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_638),(if success?(4-proj-7-tuple(v_624)) then (if (not-caught-fail(v_637) && success?(is-true(success?(1-proj-2-tuple(v_637))))) then dhexp(2-proj-2-tuple(v_637),4-proj-7-tuple(v_624)) else fail-any) else fail-any))) in
        {36}let v_641: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_638),(if success?(4-proj-7-tuple(v_624)) then (if (not-caught-fail(v_637) && success?(is-true(success?(1-proj-2-tuple(v_637))))) then dhexp(2-proj-2-tuple(v_637),4-proj-7-tuple(v_624)) else fail-any) else fail-any))) in
        {37}let v_642: bitstring = catch-fail((if (success?((if success?(4-proj-7-tuple(v_624)) then (if (not-caught-fail(v_637) && success?(is-true(success?(1-proj-2-tuple(v_637))))) then dhexp(2-proj-2-tuple(v_637),4-proj-7-tuple(v_624)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_638))) then (if not-caught-fail(v_639) then (if not-caught-fail(v_640) then (if not-caught-fail(v_641) then (v_639,v_640,v_641) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {38}let v_643: symmetricstate = catch-fail((if success?((if success?(4-proj-7-tuple(v_624)) then (if (not-caught-fail(v_637) && success?(is-true(success?(1-proj-2-tuple(v_637))))) then dhexp(2-proj-2-tuple(v_637),4-proj-7-tuple(v_624)) else fail-any) else fail-any)) then (if (not-caught-fail(v_638) && success?(is-true(success?(1-proj-3-tuple(v_638))))) then (if (not-caught-fail(v_642) && success?(is-true(success?(1-proj-3-tuple(v_642))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_642)) then cipherstatepack(2-proj-3-tuple(v_642),minnonce) else fail-any),1-proj-3-tuple(v_642),3-proj-3-tuple(v_638)) else fail-any) else fail-any) else fail-any)) in
        {39}let v_644: bitstring = catch-fail(symmetricstateunpack(v_643)) in
        {40}let v_645: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_644))) in
        {41}let v_646: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_645),2-proj-2-tuple(v_645),3-proj-3-tuple(v_644),msg_a(alice,bob,sid))) in
        {42}let v_647: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_644))) in
        {43}let v_648: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_645))) && success?(1-proj-3-tuple(v_644))) then (if (not-caught-fail(v_647) && success?(is-true(success?(1-proj-2-tuple(v_647))))) then cipherstatepack(1-proj-2-tuple(v_647),increment_nonce(2-proj-2-tuple(v_645))) else fail-any) else fail-any)) in
        {44}let v_649: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_644)) && success?(1-proj-3-tuple(v_644))) then (if (not-caught-fail(v_645) && success?(is-true(success?(1-proj-2-tuple(v_645))))) then (if not-caught-fail(v_646) then (if not-caught-fail(v_648) then (v_648,v_646) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {45}let v_650: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_649),2-proj-3-tuple(v_644),3-proj-3-tuple(v_644)))) in
        {46}let v_651: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_649)) && success?(symmetricstatepack(1-proj-2-tuple(v_649),2-proj-3-tuple(v_644),3-proj-3-tuple(v_644)))) then (if (not-caught-fail(v_650) && success?(is-true(success?(1-proj-3-tuple(v_650))))) then symmetricstatepack(1-proj-3-tuple(v_650),2-proj-3-tuple(v_650),hash(3-proj-3-tuple(v_650),2-proj-2-tuple(v_649))) else fail-any) else fail-any)) in
        {47}let v_652: bitstring = catch-fail((if (not-caught-fail(v_644) && success?(is-true(success?(1-proj-3-tuple(v_644))))) then (if (not-caught-fail(v_649) && success?(is-true(success?(1-proj-2-tuple(v_649))))) then (if not-caught-fail(v_651) then (v_651,2-proj-2-tuple(v_649)) else fail-any) else fail-any) else fail-any)) in
        {48}let v_653: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_652),2-proj-7-tuple(v_624),v_627,4-proj-7-tuple(v_624),5-proj-7-tuple(v_624),6-proj-7-tuple(v_624),7-proj-7-tuple(v_624))) in
        {49}let v_654: bitstring = catch-fail(concat3(v_628,2-proj-3-tuple(v_625),2-proj-2-tuple(v_652))) in
        {50}let (hs_655: handshakestate,message_a: bitstring) = (if (not-caught-fail(v_624) && success?(is-true(success?(1-proj-7-tuple(v_624))))) then (if (not-caught-fail(v_625) && success?(is-true(success?(1-proj-3-tuple(v_625))))) then (if not-caught-fail(v_627) then (if not-caught-fail(v_628) then (if not-caught-fail(v_630) then (if not-caught-fail(v_636) then (if not-caught-fail(v_643) then (if (not-caught-fail(v_652) && success?(is-true(success?(1-proj-2-tuple(v_652))))) then (if not-caught-fail(v_653) then (if not-caught-fail(v_654) then (v_653,v_654) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {51}event SendMsg(alice,bob,stagepack_a(sid),msg_a(alice,bob,sid));
        {52}insert statestore(alice,bob,sid,statepack_b(hs_655));
        {53}out(pub, message_a)
    ) | (
        {89}get statestore(=alice,=bob,=sid,statepack_b(hs_656: handshakestate)) in
        {55}in(pub, message_b: bitstring);
        {56}let v_657: bitstring = catch-fail(handshakestateunpack(hs_656)) in
        {57}let v_658: bitstring = catch-fail(deconcat3(message_b)) in
        {58}let v_659: bool = catch-fail(true) in
        {59}let v_660: key = catch-fail(1-proj-3-tuple(v_658)) in
        {60}let v_661: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_657))) in
        {61}let v_662: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_657)) then (if (not-caught-fail(v_661) && success?(is-true(success?(1-proj-3-tuple(v_661))))) then symmetricstatepack(1-proj-3-tuple(v_661),2-proj-3-tuple(v_661),hash(3-proj-3-tuple(v_661),v_660)) else fail-any) else fail-any)) in
        {62}let v_663: bitstring = catch-fail(symmetricstateunpack(v_662)) in
        {63}let v_664: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_663),v_660)) in
        {64}let v_665: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_663),v_660)) in
        {65}let v_666: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_663),v_660)) in
        {66}let v_667: bitstring = catch-fail((if success?(2-proj-3-tuple(v_663)) then (if not-caught-fail(v_664) then (if not-caught-fail(v_665) then (if not-caught-fail(v_666) then (v_664,v_665,v_666) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {67}let v_668: symmetricstate = catch-fail((if (not-caught-fail(v_663) && success?(is-true(success?(1-proj-3-tuple(v_663))))) then (if (not-caught-fail(v_667) && success?(is-true(success?(1-proj-3-tuple(v_667))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_667)) then cipherstatepack(2-proj-3-tuple(v_667),minnonce) else fail-any),1-proj-3-tuple(v_667),3-proj-3-tuple(v_663)) else fail-any) else fail-any)) in
        {68}let v_669: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_657))) in
        {69}let v_670: bitstring = catch-fail(symmetricstateunpack(v_668)) in
        {70}let v_671: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_670),(if success?(3-proj-7-tuple(v_657)) then (if (not-caught-fail(v_669) && success?(is-true(success?(1-proj-2-tuple(v_669))))) then dhexp(2-proj-2-tuple(v_669),v_660) else fail-any) else fail-any))) in
        {71}let v_672: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_670),(if success?(3-proj-7-tuple(v_657)) then (if (not-caught-fail(v_669) && success?(is-true(success?(1-proj-2-tuple(v_669))))) then dhexp(2-proj-2-tuple(v_669),v_660) else fail-any) else fail-any))) in
        {72}let v_673: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_670),(if success?(3-proj-7-tuple(v_657)) then (if (not-caught-fail(v_669) && success?(is-true(success?(1-proj-2-tuple(v_669))))) then dhexp(2-proj-2-tuple(v_669),v_660) else fail-any) else fail-any))) in
        {73}let v_674: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_657)) then (if (not-caught-fail(v_669) && success?(is-true(success?(1-proj-2-tuple(v_669))))) then dhexp(2-proj-2-tuple(v_669),v_660) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_670))) then (if not-caught-fail(v_671) then (if not-caught-fail(v_672) then (if not-caught-fail(v_673) then (v_671,v_672,v_673) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {74}let v_675: symmetricstate = catch-fail((if success?((if success?(3-proj-7-tuple(v_657)) then (if (not-caught-fail(v_669) && success?(is-true(success?(1-proj-2-tuple(v_669))))) then dhexp(2-proj-2-tuple(v_669),v_660) else fail-any) else fail-any)) then (if (not-caught-fail(v_670) && success?(is-true(success?(1-proj-3-tuple(v_670))))) then (if (not-caught-fail(v_674) && success?(is-true(success?(1-proj-3-tuple(v_674))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_674)) then cipherstatepack(2-proj-3-tuple(v_674),minnonce) else fail-any),1-proj-3-tuple(v_674),3-proj-3-tuple(v_670)) else fail-any) else fail-any) else fail-any)) in
        {75}let v_676: bitstring = catch-fail(symmetricstateunpack(v_675)) in
        {76}let v_677: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_676))) in
        {77}let v_678: aead = catch-fail(decrypt(1-proj-2-tuple(v_677),2-proj-2-tuple(v_677),3-proj-3-tuple(v_676),3-proj-3-tuple(v_658))) in
        {78}let v_679: bitstring = catch-fail(aeadunpack(v_678)) in
        {79}let v_680: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_676))) in
        {80}let v_681: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_677))) && success?(1-proj-3-tuple(v_676))) then (if (not-caught-fail(v_680) && success?(is-true(success?(1-proj-2-tuple(v_680))))) then cipherstatepack(1-proj-2-tuple(v_680),increment_nonce(2-proj-2-tuple(v_677))) else fail-any) else fail-any)) in
        {81}let v_682: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_658)) && (success?(3-proj-3-tuple(v_676)) && success?(1-proj-3-tuple(v_676)))) then (if (not-caught-fail(v_677) && success?(is-true(success?(1-proj-2-tuple(v_677))))) then (if not-caught-fail(v_678) then (if (not-caught-fail(v_679) && success?(is-true(success?(1-proj-3-tuple(v_679))))) then (if not-caught-fail(v_681) then (v_681,3-proj-3-tuple(v_679),1-proj-3-tuple(v_679)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {82}let v_683: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_682),2-proj-3-tuple(v_676),3-proj-3-tuple(v_676)))) in
        {83}let v_684: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_658)) && success?(symmetricstatepack(1-proj-3-tuple(v_682),2-proj-3-tuple(v_676),3-proj-3-tuple(v_676)))) then (if (not-caught-fail(v_683) && success?(is-true(success?(1-proj-3-tuple(v_683))))) then symmetricstatepack(1-proj-3-tuple(v_683),2-proj-3-tuple(v_683),hash(3-proj-3-tuple(v_683),3-proj-3-tuple(v_658))) else fail-any) else fail-any)) in
        {84}let v_685: bitstring = catch-fail((if success?(3-proj-3-tuple(v_658)) then (if (not-caught-fail(v_676) && success?(is-true(success?(1-proj-3-tuple(v_676))))) then (if (not-caught-fail(v_682) && success?(is-true(success?(1-proj-3-tuple(v_682))))) then (if not-caught-fail(v_684) then (v_684,2-proj-3-tuple(v_682),3-proj-3-tuple(v_682)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {85}let v_686: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_685),2-proj-7-tuple(v_657),3-proj-7-tuple(v_657),4-proj-7-tuple(v_657),v_660,6-proj-7-tuple(v_657),7-proj-7-tuple(v_657))) in
        {86}let (hs_687: handshakestate,plaintext_b: bitstring,valid: bool) = (if (not-caught-fail(v_657) && success?(is-true(success?(1-proj-7-tuple(v_657))))) then (if (not-caught-fail(v_658) && success?(is-true(success?(1-proj-3-tuple(v_658))))) then (if not-caught-fail(v_659) then (if not-caught-fail(v_660) then (if not-caught-fail(v_662) then (if not-caught-fail(v_668) then (if not-caught-fail(v_675) then (if (not-caught-fail(v_685) && success?(is-true(success?(1-proj-3-tuple(v_685))))) then (if (v_659 && 3-proj-3-tuple(v_685)) then (if not-caught-fail(v_686) then (v_686,2-proj-3-tuple(v_685),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {87}event RecvMsg(alice,bob,stagepack_b(sid),plaintext_b);
        {88}insert statestore(alice,bob,sid,statepack_c(hs_687))
    ) | (
        {141}get statestore(=alice,=bob,=sid,statepack_c(hs_688: handshakestate)) in
        {90}let v_689: bitstring = catch-fail(handshakestateunpack(hs_688)) in
        {91}let v_690: bitstring = catch-fail((empty,empty,empty)) in
        {92}let v_691: key = catch-fail(dhexp(key_s(alice),validkey(g))) in
        {93}let v_692: keypair = catch-fail((if not-caught-fail(v_691) then keypairpack(validkey(v_691),key_s(alice)) else fail-any)) in
        {94}let v_693: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_689))) in
        {95}let v_694: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_693))) in
        {96}let v_695: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_694),2-proj-2-tuple(v_694),3-proj-3-tuple(v_693),getpublickey(v_692))) in
        {97}let v_696: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_693))) in
        {98}let v_697: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_694))) && success?(1-proj-3-tuple(v_693))) then (if (not-caught-fail(v_696) && success?(is-true(success?(1-proj-2-tuple(v_696))))) then cipherstatepack(1-proj-2-tuple(v_696),increment_nonce(2-proj-2-tuple(v_694))) else fail-any) else fail-any)) in
        {99}let v_698: bitstring = catch-fail((if (success?(getpublickey(v_692)) && (success?(3-proj-3-tuple(v_693)) && success?(1-proj-3-tuple(v_693)))) then (if (not-caught-fail(v_694) && success?(is-true(success?(1-proj-2-tuple(v_694))))) then (if not-caught-fail(v_695) then (if not-caught-fail(v_697) then (v_697,v_695) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {100}let v_699: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_698),2-proj-3-tuple(v_693),3-proj-3-tuple(v_693)))) in
        {101}let v_700: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_698)) && success?(symmetricstatepack(1-proj-2-tuple(v_698),2-proj-3-tuple(v_693),3-proj-3-tuple(v_693)))) then (if (not-caught-fail(v_699) && success?(is-true(success?(1-proj-3-tuple(v_699))))) then symmetricstatepack(1-proj-3-tuple(v_699),2-proj-3-tuple(v_699),hash(3-proj-3-tuple(v_699),2-proj-2-tuple(v_698))) else fail-any) else fail-any)) in
        {102}let v_701: bitstring = catch-fail((if (success?(getpublickey(v_692)) && success?(1-proj-7-tuple(v_689))) then (if (not-caught-fail(v_693) && success?(is-true(success?(1-proj-3-tuple(v_693))))) then (if (not-caught-fail(v_698) && success?(is-true(success?(1-proj-2-tuple(v_698))))) then (if not-caught-fail(v_700) then (v_700,2-proj-2-tuple(v_698)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {103}let v_702: bitstring = catch-fail(keypairunpack(v_692)) in
        {104}let v_703: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_701))) in
        {105}let v_704: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_703),(if success?(5-proj-7-tuple(v_689)) then (if (not-caught-fail(v_702) && success?(is-true(success?(1-proj-2-tuple(v_702))))) then dhexp(2-proj-2-tuple(v_702),5-proj-7-tuple(v_689)) else fail-any) else fail-any))) in
        {106}let v_705: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_703),(if success?(5-proj-7-tuple(v_689)) then (if (not-caught-fail(v_702) && success?(is-true(success?(1-proj-2-tuple(v_702))))) then dhexp(2-proj-2-tuple(v_702),5-proj-7-tuple(v_689)) else fail-any) else fail-any))) in
        {107}let v_706: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_703),(if success?(5-proj-7-tuple(v_689)) then (if (not-caught-fail(v_702) && success?(is-true(success?(1-proj-2-tuple(v_702))))) then dhexp(2-proj-2-tuple(v_702),5-proj-7-tuple(v_689)) else fail-any) else fail-any))) in
        {108}let v_707: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_689)) then (if (not-caught-fail(v_702) && success?(is-true(success?(1-proj-2-tuple(v_702))))) then dhexp(2-proj-2-tuple(v_702),5-proj-7-tuple(v_689)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_703))) then (if not-caught-fail(v_704) then (if not-caught-fail(v_705) then (if not-caught-fail(v_706) then (v_704,v_705,v_706) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {109}let v_708: symmetricstate = catch-fail((if (success?((if success?(5-proj-7-tuple(v_689)) then (if (not-caught-fail(v_702) && success?(is-true(success?(1-proj-2-tuple(v_702))))) then dhexp(2-proj-2-tuple(v_702),5-proj-7-tuple(v_689)) else fail-any) else fail-any)) && success?(1-proj-2-tuple(v_701))) then (if (not-caught-fail(v_703) && success?(is-true(success?(1-proj-3-tuple(v_703))))) then (if (not-caught-fail(v_707) && success?(is-true(success?(1-proj-3-tuple(v_707))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_707)) then cipherstatepack(2-proj-3-tuple(v_707),minnonce) else fail-any),1-proj-3-tuple(v_707),3-proj-3-tuple(v_703)) else fail-any) else fail-any) else fail-any)) in
        {110}let v_709: bitstring = catch-fail(symmetricstateunpack(v_708)) in
        {111}let v_710: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_709),6-proj-7-tuple(v_689))) in
        {112}let v_711: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_709),6-proj-7-tuple(v_689))) in
        {113}let v_712: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_709),6-proj-7-tuple(v_689))) in
        {114}let v_713: bitstring = catch-fail((if (success?(6-proj-7-tuple(v_689)) && success?(2-proj-3-tuple(v_709))) then (if not-caught-fail(v_710) then (if not-caught-fail(v_711) then (if not-caught-fail(v_712) then (v_710,v_711,v_712) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {115}let v_714: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_709),1-proj-3-tuple(v_713),3-proj-3-tuple(v_709)))) in
        {116}let v_715: bitstring = catch-fail(symmetricstateunpack((if (success?(2-proj-3-tuple(v_713)) && success?(symmetricstatepack(1-proj-3-tuple(v_709),1-proj-3-tuple(v_713),3-proj-3-tuple(v_709)))) then (if (not-caught-fail(v_714) && success?(is-true(success?(1-proj-3-tuple(v_714))))) then symmetricstatepack(1-proj-3-tuple(v_714),2-proj-3-tuple(v_714),hash(3-proj-3-tuple(v_714),2-proj-3-tuple(v_713))) else fail-any) else fail-any))) in
        {117}let v_716: symmetricstate = catch-fail((if success?(6-proj-7-tuple(v_689)) then (if (not-caught-fail(v_709) && success?(is-true(success?(1-proj-3-tuple(v_709))))) then (if (not-caught-fail(v_713) && success?(is-true(success?(1-proj-3-tuple(v_713))))) then (if (not-caught-fail(v_715) && success?(is-true(success?(1-proj-3-tuple(v_715))))) then symmetricstatepack((if success?(3-proj-3-tuple(v_713)) then cipherstatepack(3-proj-3-tuple(v_713),minnonce) else fail-any),1-proj-3-tuple(v_713),3-proj-3-tuple(v_715)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {118}let v_717: bitstring = catch-fail(symmetricstateunpack(v_716)) in
        {119}let v_718: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_717))) in
        {120}let v_719: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_718),2-proj-2-tuple(v_718),3-proj-3-tuple(v_717),msg_c(alice,bob,sid))) in
        {121}let v_720: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_717))) in
        {122}let v_721: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_718))) && success?(1-proj-3-tuple(v_717))) then (if (not-caught-fail(v_720) && success?(is-true(success?(1-proj-2-tuple(v_720))))) then cipherstatepack(1-proj-2-tuple(v_720),increment_nonce(2-proj-2-tuple(v_718))) else fail-any) else fail-any)) in
        {123}let v_722: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_717)) && success?(1-proj-3-tuple(v_717))) then (if (not-caught-fail(v_718) && success?(is-true(success?(1-proj-2-tuple(v_718))))) then (if not-caught-fail(v_719) then (if not-caught-fail(v_721) then (v_721,v_719) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {124}let v_723: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_722),2-proj-3-tuple(v_717),3-proj-3-tuple(v_717)))) in
        {125}let v_724: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_722)) && success?(symmetricstatepack(1-proj-2-tuple(v_722),2-proj-3-tuple(v_717),3-proj-3-tuple(v_717)))) then (if (not-caught-fail(v_723) && success?(is-true(success?(1-proj-3-tuple(v_723))))) then symmetricstatepack(1-proj-3-tuple(v_723),2-proj-3-tuple(v_723),hash(3-proj-3-tuple(v_723),2-proj-2-tuple(v_722))) else fail-any) else fail-any)) in
        {126}let v_725: bitstring = catch-fail((if (not-caught-fail(v_717) && success?(is-true(success?(1-proj-3-tuple(v_717))))) then (if (not-caught-fail(v_722) && success?(is-true(success?(1-proj-2-tuple(v_722))))) then (if not-caught-fail(v_724) then (v_724,2-proj-2-tuple(v_722)) else fail-any) else fail-any) else fail-any)) in
        {127}let v_726: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_725),v_692,3-proj-7-tuple(v_689),4-proj-7-tuple(v_689),5-proj-7-tuple(v_689),6-proj-7-tuple(v_689),7-proj-7-tuple(v_689))) in
        {128}let v_727: bitstring = catch-fail(concat3(1-proj-3-tuple(v_690),2-proj-2-tuple(v_701),2-proj-2-tuple(v_725))) in
        {129}let v_728: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_725))) in
        {130}let v_729: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_728),zero)) in
        {131}let v_730: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_728),zero)) in
        {132}let v_731: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_728),zero)) in
        {133}let v_732: bitstring = catch-fail((if success?(2-proj-3-tuple(v_728)) then (if not-caught-fail(v_729) then (if not-caught-fail(v_730) then (if not-caught-fail(v_731) then (v_729,v_730,v_731) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {134}let v_733: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_732)) then cipherstatepack(1-proj-3-tuple(v_732),minnonce) else fail-any)) in
        {135}let v_734: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_732)) then cipherstatepack(2-proj-3-tuple(v_732),minnonce) else fail-any)) in
        {136}let v_735: bitstring = catch-fail((if success?(1-proj-2-tuple(v_725)) then (if (not-caught-fail(v_728) && success?(is-true(success?(1-proj-3-tuple(v_728))))) then (if (not-caught-fail(v_732) && success?(is-true(success?(1-proj-3-tuple(v_732))))) then (if not-caught-fail(v_733) then (if not-caught-fail(v_734) then (1-proj-2-tuple(v_725),v_733,v_734) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {137}let (hs_736: handshakestate,message_c: bitstring,cs1: cipherstate,cs2: cipherstate) = (if (not-caught-fail(v_689) && success?(is-true(success?(1-proj-7-tuple(v_689))))) then (if (not-caught-fail(v_690) && success?(is-true(success?(1-proj-3-tuple(v_690))))) then (if not-caught-fail(v_692) then (if (not-caught-fail(v_701) && success?(is-true(success?(1-proj-2-tuple(v_701))))) then (if not-caught-fail(v_708) then (if not-caught-fail(v_716) then (if (not-caught-fail(v_725) && success?(is-true(success?(1-proj-2-tuple(v_725))))) then (if not-caught-fail(v_726) then (if not-caught-fail(v_727) then (if (not-caught-fail(v_735) && success?(is-true(success?(1-proj-3-tuple(v_735))))) then (v_726,v_727,2-proj-3-tuple(v_735),3-proj-3-tuple(v_735)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {138}event SendMsg(alice,bob,stagepack_c(sid),msg_c(alice,bob,sid));
        {139}insert statestore(alice,bob,sid,statepack_d(hs_736,cs1,cs2));
        {140}out(pub, message_c)
    ) | (
        {142}!
        {162}get statestore(=alice,=bob,=sid,statepack_d(hs_737: handshakestate,cs1_738: cipherstate,cs2_739: cipherstate)) in
        {143}let hs_740: handshakestate = handshakestatesetcs(hs_737,cs2_739) in
        {144}in(pub, message_d: bitstring);
        {145}let v_741: bitstring = catch-fail(handshakestateunpack(hs_740)) in
        {146}let v_742: bitstring = catch-fail(deconcat3(message_d)) in
        {147}let v_743: bool = catch-fail(true) in
        {148}let v_744: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_741))) in
        {149}let v_745: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_744))) in
        {150}let v_746: aead = catch-fail(decrypt(1-proj-2-tuple(v_745),2-proj-2-tuple(v_745),3-proj-3-tuple(v_744),3-proj-3-tuple(v_742))) in
        {151}let v_747: bitstring = catch-fail(aeadunpack(v_746)) in
        {152}let v_748: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_744))) in
        {153}let v_749: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_745))) && success?(1-proj-3-tuple(v_744))) then (if (not-caught-fail(v_748) && success?(is-true(success?(1-proj-2-tuple(v_748))))) then cipherstatepack(1-proj-2-tuple(v_748),increment_nonce(2-proj-2-tuple(v_745))) else fail-any) else fail-any)) in
        {154}let v_750: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_742)) && (success?(3-proj-3-tuple(v_744)) && success?(1-proj-3-tuple(v_744)))) then (if (not-caught-fail(v_745) && success?(is-true(success?(1-proj-2-tuple(v_745))))) then (if not-caught-fail(v_746) then (if (not-caught-fail(v_747) && success?(is-true(success?(1-proj-3-tuple(v_747))))) then (if not-caught-fail(v_749) then (v_749,3-proj-3-tuple(v_747),1-proj-3-tuple(v_747)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {155}let v_751: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_750),2-proj-3-tuple(v_744),3-proj-3-tuple(v_744)))) in
        {156}let v_752: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_742)) && success?(symmetricstatepack(1-proj-3-tuple(v_750),2-proj-3-tuple(v_744),3-proj-3-tuple(v_744)))) then (if (not-caught-fail(v_751) && success?(is-true(success?(1-proj-3-tuple(v_751))))) then symmetricstatepack(1-proj-3-tuple(v_751),2-proj-3-tuple(v_751),hash(3-proj-3-tuple(v_751),3-proj-3-tuple(v_742))) else fail-any) else fail-any)) in
        {157}let v_753: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_742)) && success?(1-proj-7-tuple(v_741))) then (if (not-caught-fail(v_744) && success?(is-true(success?(1-proj-3-tuple(v_744))))) then (if (not-caught-fail(v_750) && success?(is-true(success?(1-proj-3-tuple(v_750))))) then (if not-caught-fail(v_752) then (v_752,2-proj-3-tuple(v_750),3-proj-3-tuple(v_750)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {158}let v_754: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_753),2-proj-7-tuple(v_741),3-proj-7-tuple(v_741),4-proj-7-tuple(v_741),5-proj-7-tuple(v_741),6-proj-7-tuple(v_741),7-proj-7-tuple(v_741))) in
        {159}let (hs_755: handshakestate,plaintext_d: bitstring,valid_756: bool) = (if (not-caught-fail(v_741) && success?(is-true(success?(1-proj-7-tuple(v_741))))) then (if (not-caught-fail(v_742) && success?(is-true(success?(1-proj-3-tuple(v_742))))) then (if not-caught-fail(v_743) then (if (not-caught-fail(v_753) && success?(is-true(success?(1-proj-3-tuple(v_753))))) then (if (v_743 && 3-proj-3-tuple(v_753)) then (if not-caught-fail(v_754) then (v_754,2-proj-3-tuple(v_753),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {160}event RecvMsg(alice,bob,stagepack_d(sid),plaintext_d);
        {161}insert statestore(alice,bob,sid,statepack_e(hs_755,cs1_738,handshakestategetcs(hs_755)))
    ) | (
        {163}!
        {181}get statestore(=alice,=bob,=sid,statepack_e(hs_757: handshakestate,cs1_758: cipherstate,cs2_759: cipherstate)) in
        {164}let hs_760: handshakestate = handshakestatesetcs(hs_757,cs1_758) in
        {165}let v_761: bitstring = catch-fail(handshakestateunpack(hs_760)) in
        {166}let v_762: bitstring = catch-fail((empty,empty,empty)) in
        {167}let v_763: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_761))) in
        {168}let v_764: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_763))) in
        {169}let v_765: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_764),2-proj-2-tuple(v_764),3-proj-3-tuple(v_763),msg_e(alice,bob,sid))) in
        {170}let v_766: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_763))) in
        {171}let v_767: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_764))) && success?(1-proj-3-tuple(v_763))) then (if (not-caught-fail(v_766) && success?(is-true(success?(1-proj-2-tuple(v_766))))) then cipherstatepack(1-proj-2-tuple(v_766),increment_nonce(2-proj-2-tuple(v_764))) else fail-any) else fail-any)) in
        {172}let v_768: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_763)) && success?(1-proj-3-tuple(v_763))) then (if (not-caught-fail(v_764) && success?(is-true(success?(1-proj-2-tuple(v_764))))) then (if not-caught-fail(v_765) then (if not-caught-fail(v_767) then (v_767,v_765) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {173}let v_769: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_768),2-proj-3-tuple(v_763),3-proj-3-tuple(v_763)))) in
        {174}let v_770: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_768)) && success?(symmetricstatepack(1-proj-2-tuple(v_768),2-proj-3-tuple(v_763),3-proj-3-tuple(v_763)))) then (if (not-caught-fail(v_769) && success?(is-true(success?(1-proj-3-tuple(v_769))))) then symmetricstatepack(1-proj-3-tuple(v_769),2-proj-3-tuple(v_769),hash(3-proj-3-tuple(v_769),2-proj-2-tuple(v_768))) else fail-any) else fail-any)) in
        {175}let v_771: bitstring = catch-fail((if success?(1-proj-7-tuple(v_761)) then (if (not-caught-fail(v_763) && success?(is-true(success?(1-proj-3-tuple(v_763))))) then (if (not-caught-fail(v_768) && success?(is-true(success?(1-proj-2-tuple(v_768))))) then (if not-caught-fail(v_770) then (v_770,2-proj-2-tuple(v_768)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {176}let v_772: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_771),2-proj-7-tuple(v_761),3-proj-7-tuple(v_761),4-proj-7-tuple(v_761),5-proj-7-tuple(v_761),6-proj-7-tuple(v_761),7-proj-7-tuple(v_761))) in
        {177}let v_773: bitstring = catch-fail(concat3(1-proj-3-tuple(v_762),2-proj-3-tuple(v_762),2-proj-2-tuple(v_771))) in
        {178}let (hs_774: handshakestate,message_e: bitstring) = (if (not-caught-fail(v_761) && success?(is-true(success?(1-proj-7-tuple(v_761))))) then (if (not-caught-fail(v_762) && success?(is-true(success?(1-proj-3-tuple(v_762))))) then (if (not-caught-fail(v_771) && success?(is-true(success?(1-proj-2-tuple(v_771))))) then (if not-caught-fail(v_772) then (if not-caught-fail(v_773) then (v_772,v_773) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {179}event SendMsg(alice,bob,stagepack_e(sid),msg_e(alice,bob,sid));
        {180}out(pub, message_e)
    ) | (
        {182}event LeakPsk(phase0,alice,bob);
        {183}out(pub, key_psk(alice,bob))
    ) | (
        {184}phase 1;
        {185}event LeakPsk(phase1,alice,bob);
        {186}out(pub, key_psk(alice,bob))
    ) | (
        {187}event LeakS(phase0,alice);
        {188}out(pub, key_s(alice))
    ) | (
        {189}phase 1;
        {190}event LeakS(phase1,alice);
        {191}out(pub, key_s(alice))
    )
) | (
    {192}let s_775: keypair = keypairpack(empty,empty) in
    {193}out(pub, getpublickey(s_775));
    (
        {194}let e_776: keypair = keypairpack(empty,empty) in
        {195}let v_777: key = catch-fail(dhexp(key_s(charlie),validkey(g))) in
        {196}let rs_778: key = getpublickey((if not-caught-fail(v_777) then keypairpack(validkey(v_777),key_s(charlie)) else fail-any)) in
        {197}let re_779: key = empty in
        {198}let v_780: bitstring = catch-fail(hash(somename,empty)) in
        {199}let v_781: key = catch-fail(v_780) in
        {200}let v_782: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {201}let v_783: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_780) then (if not-caught-fail(v_781) then (if not-caught-fail(v_782) then symmetricstatepack(v_782,v_781,v_780) else fail-any) else fail-any) else fail-any))) in
        {202}let v_784: symmetricstate = catch-fail((if success?((if not-caught-fail(v_780) then (if not-caught-fail(v_781) then (if not-caught-fail(v_782) then symmetricstatepack(v_782,v_781,v_780) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_783) && success?(is-true(success?(1-proj-3-tuple(v_783))))) then symmetricstatepack(1-proj-3-tuple(v_783),2-proj-3-tuple(v_783),hash(3-proj-3-tuple(v_783),empty)) else fail-any) else fail-any)) in
        {203}let v_785: bitstring = catch-fail(symmetricstateunpack(v_784)) in
        {204}let v_786: symmetricstate = catch-fail((if (not-caught-fail(v_785) && success?(is-true(success?(1-proj-3-tuple(v_785))))) then symmetricstatepack(1-proj-3-tuple(v_785),2-proj-3-tuple(v_785),hash(3-proj-3-tuple(v_785),rs_778)) else fail-any)) in
        {205}let hs_787: handshakestate = (if not-caught-fail(v_784) then (if not-caught-fail(v_786) then handshakestatepack(v_786,s_775,e_776,rs_778,re_779,key_psk(alice,charlie),true) else fail-any) else fail-any) in
        {206}insert statestore(alice,charlie,sid,statepack_a(hs_787))
    ) | (
        {242}get statestore(=alice,=charlie,=sid,statepack_a(hs_788: handshakestate)) in
        {207}let v_789: bitstring = catch-fail(handshakestateunpack(hs_788)) in
        {208}let v_790: bitstring = catch-fail((empty,empty,empty)) in
        {209}let v_791: key = catch-fail(dhexp(key_e(alice,charlie,sid),validkey(g))) in
        {210}let v_792: keypair = catch-fail((if not-caught-fail(v_791) then keypairpack(validkey(v_791),key_e(alice,charlie,sid)) else fail-any)) in
        {211}let v_793: bitstring = catch-fail(getpublickey(v_792)) in
        {212}let v_794: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_789))) in
        {213}let v_795: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_789)) then (if (not-caught-fail(v_794) && success?(is-true(success?(1-proj-3-tuple(v_794))))) then symmetricstatepack(1-proj-3-tuple(v_794),2-proj-3-tuple(v_794),hash(3-proj-3-tuple(v_794),v_793)) else fail-any) else fail-any)) in
        {214}let v_796: bitstring = catch-fail(symmetricstateunpack(v_795)) in
        {215}let v_797: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_796),getpublickey(v_792))) in
        {216}let v_798: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_796),getpublickey(v_792))) in
        {217}let v_799: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_796),getpublickey(v_792))) in
        {218}let v_800: bitstring = catch-fail((if (success?(getpublickey(v_792)) && success?(2-proj-3-tuple(v_796))) then (if not-caught-fail(v_797) then (if not-caught-fail(v_798) then (if not-caught-fail(v_799) then (v_797,v_798,v_799) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {219}let v_801: symmetricstate = catch-fail((if success?(getpublickey(v_792)) then (if (not-caught-fail(v_796) && success?(is-true(success?(1-proj-3-tuple(v_796))))) then (if (not-caught-fail(v_800) && success?(is-true(success?(1-proj-3-tuple(v_800))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_800)) then cipherstatepack(2-proj-3-tuple(v_800),minnonce) else fail-any),1-proj-3-tuple(v_800),3-proj-3-tuple(v_796)) else fail-any) else fail-any) else fail-any)) in
        {220}let v_802: bitstring = catch-fail(keypairunpack(v_792)) in
        {221}let v_803: bitstring = catch-fail(symmetricstateunpack(v_801)) in
        {222}let v_804: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_803),(if success?(4-proj-7-tuple(v_789)) then (if (not-caught-fail(v_802) && success?(is-true(success?(1-proj-2-tuple(v_802))))) then dhexp(2-proj-2-tuple(v_802),4-proj-7-tuple(v_789)) else fail-any) else fail-any))) in
        {223}let v_805: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_803),(if success?(4-proj-7-tuple(v_789)) then (if (not-caught-fail(v_802) && success?(is-true(success?(1-proj-2-tuple(v_802))))) then dhexp(2-proj-2-tuple(v_802),4-proj-7-tuple(v_789)) else fail-any) else fail-any))) in
        {224}let v_806: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_803),(if success?(4-proj-7-tuple(v_789)) then (if (not-caught-fail(v_802) && success?(is-true(success?(1-proj-2-tuple(v_802))))) then dhexp(2-proj-2-tuple(v_802),4-proj-7-tuple(v_789)) else fail-any) else fail-any))) in
        {225}let v_807: bitstring = catch-fail((if (success?((if success?(4-proj-7-tuple(v_789)) then (if (not-caught-fail(v_802) && success?(is-true(success?(1-proj-2-tuple(v_802))))) then dhexp(2-proj-2-tuple(v_802),4-proj-7-tuple(v_789)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_803))) then (if not-caught-fail(v_804) then (if not-caught-fail(v_805) then (if not-caught-fail(v_806) then (v_804,v_805,v_806) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {226}let v_808: symmetricstate = catch-fail((if success?((if success?(4-proj-7-tuple(v_789)) then (if (not-caught-fail(v_802) && success?(is-true(success?(1-proj-2-tuple(v_802))))) then dhexp(2-proj-2-tuple(v_802),4-proj-7-tuple(v_789)) else fail-any) else fail-any)) then (if (not-caught-fail(v_803) && success?(is-true(success?(1-proj-3-tuple(v_803))))) then (if (not-caught-fail(v_807) && success?(is-true(success?(1-proj-3-tuple(v_807))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_807)) then cipherstatepack(2-proj-3-tuple(v_807),minnonce) else fail-any),1-proj-3-tuple(v_807),3-proj-3-tuple(v_803)) else fail-any) else fail-any) else fail-any)) in
        {227}let v_809: bitstring = catch-fail(symmetricstateunpack(v_808)) in
        {228}let v_810: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_809))) in
        {229}let v_811: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_810),2-proj-2-tuple(v_810),3-proj-3-tuple(v_809),msg_a(alice,charlie,sid))) in
        {230}let v_812: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_809))) in
        {231}let v_813: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_810))) && success?(1-proj-3-tuple(v_809))) then (if (not-caught-fail(v_812) && success?(is-true(success?(1-proj-2-tuple(v_812))))) then cipherstatepack(1-proj-2-tuple(v_812),increment_nonce(2-proj-2-tuple(v_810))) else fail-any) else fail-any)) in
        {232}let v_814: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_809)) && success?(1-proj-3-tuple(v_809))) then (if (not-caught-fail(v_810) && success?(is-true(success?(1-proj-2-tuple(v_810))))) then (if not-caught-fail(v_811) then (if not-caught-fail(v_813) then (v_813,v_811) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {233}let v_815: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_814),2-proj-3-tuple(v_809),3-proj-3-tuple(v_809)))) in
        {234}let v_816: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_814)) && success?(symmetricstatepack(1-proj-2-tuple(v_814),2-proj-3-tuple(v_809),3-proj-3-tuple(v_809)))) then (if (not-caught-fail(v_815) && success?(is-true(success?(1-proj-3-tuple(v_815))))) then symmetricstatepack(1-proj-3-tuple(v_815),2-proj-3-tuple(v_815),hash(3-proj-3-tuple(v_815),2-proj-2-tuple(v_814))) else fail-any) else fail-any)) in
        {235}let v_817: bitstring = catch-fail((if (not-caught-fail(v_809) && success?(is-true(success?(1-proj-3-tuple(v_809))))) then (if (not-caught-fail(v_814) && success?(is-true(success?(1-proj-2-tuple(v_814))))) then (if not-caught-fail(v_816) then (v_816,2-proj-2-tuple(v_814)) else fail-any) else fail-any) else fail-any)) in
        {236}let v_818: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_817),2-proj-7-tuple(v_789),v_792,4-proj-7-tuple(v_789),5-proj-7-tuple(v_789),6-proj-7-tuple(v_789),7-proj-7-tuple(v_789))) in
        {237}let v_819: bitstring = catch-fail(concat3(v_793,2-proj-3-tuple(v_790),2-proj-2-tuple(v_817))) in
        {238}let (hs_820: handshakestate,message_a_821: bitstring) = (if (not-caught-fail(v_789) && success?(is-true(success?(1-proj-7-tuple(v_789))))) then (if (not-caught-fail(v_790) && success?(is-true(success?(1-proj-3-tuple(v_790))))) then (if not-caught-fail(v_792) then (if not-caught-fail(v_793) then (if not-caught-fail(v_795) then (if not-caught-fail(v_801) then (if not-caught-fail(v_808) then (if (not-caught-fail(v_817) && success?(is-true(success?(1-proj-2-tuple(v_817))))) then (if not-caught-fail(v_818) then (if not-caught-fail(v_819) then (v_818,v_819) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {239}event SendMsg(alice,charlie,stagepack_a(sid),msg_a(alice,charlie,sid));
        {240}insert statestore(alice,charlie,sid,statepack_b(hs_820));
        {241}out(pub, message_a_821)
    ) | (
        {277}get statestore(=alice,=charlie,=sid,statepack_b(hs_822: handshakestate)) in
        {243}in(pub, message_b_823: bitstring);
        {244}let v_824: bitstring = catch-fail(handshakestateunpack(hs_822)) in
        {245}let v_825: bitstring = catch-fail(deconcat3(message_b_823)) in
        {246}let v_826: bool = catch-fail(true) in
        {247}let v_827: key = catch-fail(1-proj-3-tuple(v_825)) in
        {248}let v_828: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_824))) in
        {249}let v_829: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_824)) then (if (not-caught-fail(v_828) && success?(is-true(success?(1-proj-3-tuple(v_828))))) then symmetricstatepack(1-proj-3-tuple(v_828),2-proj-3-tuple(v_828),hash(3-proj-3-tuple(v_828),v_827)) else fail-any) else fail-any)) in
        {250}let v_830: bitstring = catch-fail(symmetricstateunpack(v_829)) in
        {251}let v_831: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_830),v_827)) in
        {252}let v_832: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_830),v_827)) in
        {253}let v_833: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_830),v_827)) in
        {254}let v_834: bitstring = catch-fail((if success?(2-proj-3-tuple(v_830)) then (if not-caught-fail(v_831) then (if not-caught-fail(v_832) then (if not-caught-fail(v_833) then (v_831,v_832,v_833) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {255}let v_835: symmetricstate = catch-fail((if (not-caught-fail(v_830) && success?(is-true(success?(1-proj-3-tuple(v_830))))) then (if (not-caught-fail(v_834) && success?(is-true(success?(1-proj-3-tuple(v_834))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_834)) then cipherstatepack(2-proj-3-tuple(v_834),minnonce) else fail-any),1-proj-3-tuple(v_834),3-proj-3-tuple(v_830)) else fail-any) else fail-any)) in
        {256}let v_836: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_824))) in
        {257}let v_837: bitstring = catch-fail(symmetricstateunpack(v_835)) in
        {258}let v_838: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_837),(if success?(3-proj-7-tuple(v_824)) then (if (not-caught-fail(v_836) && success?(is-true(success?(1-proj-2-tuple(v_836))))) then dhexp(2-proj-2-tuple(v_836),v_827) else fail-any) else fail-any))) in
        {259}let v_839: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_837),(if success?(3-proj-7-tuple(v_824)) then (if (not-caught-fail(v_836) && success?(is-true(success?(1-proj-2-tuple(v_836))))) then dhexp(2-proj-2-tuple(v_836),v_827) else fail-any) else fail-any))) in
        {260}let v_840: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_837),(if success?(3-proj-7-tuple(v_824)) then (if (not-caught-fail(v_836) && success?(is-true(success?(1-proj-2-tuple(v_836))))) then dhexp(2-proj-2-tuple(v_836),v_827) else fail-any) else fail-any))) in
        {261}let v_841: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_824)) then (if (not-caught-fail(v_836) && success?(is-true(success?(1-proj-2-tuple(v_836))))) then dhexp(2-proj-2-tuple(v_836),v_827) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_837))) then (if not-caught-fail(v_838) then (if not-caught-fail(v_839) then (if not-caught-fail(v_840) then (v_838,v_839,v_840) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {262}let v_842: symmetricstate = catch-fail((if success?((if success?(3-proj-7-tuple(v_824)) then (if (not-caught-fail(v_836) && success?(is-true(success?(1-proj-2-tuple(v_836))))) then dhexp(2-proj-2-tuple(v_836),v_827) else fail-any) else fail-any)) then (if (not-caught-fail(v_837) && success?(is-true(success?(1-proj-3-tuple(v_837))))) then (if (not-caught-fail(v_841) && success?(is-true(success?(1-proj-3-tuple(v_841))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_841)) then cipherstatepack(2-proj-3-tuple(v_841),minnonce) else fail-any),1-proj-3-tuple(v_841),3-proj-3-tuple(v_837)) else fail-any) else fail-any) else fail-any)) in
        {263}let v_843: bitstring = catch-fail(symmetricstateunpack(v_842)) in
        {264}let v_844: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_843))) in
        {265}let v_845: aead = catch-fail(decrypt(1-proj-2-tuple(v_844),2-proj-2-tuple(v_844),3-proj-3-tuple(v_843),3-proj-3-tuple(v_825))) in
        {266}let v_846: bitstring = catch-fail(aeadunpack(v_845)) in
        {267}let v_847: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_843))) in
        {268}let v_848: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_844))) && success?(1-proj-3-tuple(v_843))) then (if (not-caught-fail(v_847) && success?(is-true(success?(1-proj-2-tuple(v_847))))) then cipherstatepack(1-proj-2-tuple(v_847),increment_nonce(2-proj-2-tuple(v_844))) else fail-any) else fail-any)) in
        {269}let v_849: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_825)) && (success?(3-proj-3-tuple(v_843)) && success?(1-proj-3-tuple(v_843)))) then (if (not-caught-fail(v_844) && success?(is-true(success?(1-proj-2-tuple(v_844))))) then (if not-caught-fail(v_845) then (if (not-caught-fail(v_846) && success?(is-true(success?(1-proj-3-tuple(v_846))))) then (if not-caught-fail(v_848) then (v_848,3-proj-3-tuple(v_846),1-proj-3-tuple(v_846)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {270}let v_850: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_849),2-proj-3-tuple(v_843),3-proj-3-tuple(v_843)))) in
        {271}let v_851: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_825)) && success?(symmetricstatepack(1-proj-3-tuple(v_849),2-proj-3-tuple(v_843),3-proj-3-tuple(v_843)))) then (if (not-caught-fail(v_850) && success?(is-true(success?(1-proj-3-tuple(v_850))))) then symmetricstatepack(1-proj-3-tuple(v_850),2-proj-3-tuple(v_850),hash(3-proj-3-tuple(v_850),3-proj-3-tuple(v_825))) else fail-any) else fail-any)) in
        {272}let v_852: bitstring = catch-fail((if success?(3-proj-3-tuple(v_825)) then (if (not-caught-fail(v_843) && success?(is-true(success?(1-proj-3-tuple(v_843))))) then (if (not-caught-fail(v_849) && success?(is-true(success?(1-proj-3-tuple(v_849))))) then (if not-caught-fail(v_851) then (v_851,2-proj-3-tuple(v_849),3-proj-3-tuple(v_849)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {273}let v_853: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_852),2-proj-7-tuple(v_824),3-proj-7-tuple(v_824),4-proj-7-tuple(v_824),v_827,6-proj-7-tuple(v_824),7-proj-7-tuple(v_824))) in
        {274}let (hs_854: handshakestate,plaintext_b_855: bitstring,valid_856: bool) = (if (not-caught-fail(v_824) && success?(is-true(success?(1-proj-7-tuple(v_824))))) then (if (not-caught-fail(v_825) && success?(is-true(success?(1-proj-3-tuple(v_825))))) then (if not-caught-fail(v_826) then (if not-caught-fail(v_827) then (if not-caught-fail(v_829) then (if not-caught-fail(v_835) then (if not-caught-fail(v_842) then (if (not-caught-fail(v_852) && success?(is-true(success?(1-proj-3-tuple(v_852))))) then (if (v_826 && 3-proj-3-tuple(v_852)) then (if not-caught-fail(v_853) then (v_853,2-proj-3-tuple(v_852),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {275}event RecvMsg(alice,charlie,stagepack_b(sid),plaintext_b_855);
        {276}insert statestore(alice,charlie,sid,statepack_c(hs_854))
    ) | (
        {329}get statestore(=alice,=charlie,=sid,statepack_c(hs_857: handshakestate)) in
        {278}let v_858: bitstring = catch-fail(handshakestateunpack(hs_857)) in
        {279}let v_859: bitstring = catch-fail((empty,empty,empty)) in
        {280}let v_860: key = catch-fail(dhexp(key_s(alice),validkey(g))) in
        {281}let v_861: keypair = catch-fail((if not-caught-fail(v_860) then keypairpack(validkey(v_860),key_s(alice)) else fail-any)) in
        {282}let v_862: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_858))) in
        {283}let v_863: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_862))) in
        {284}let v_864: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_863),2-proj-2-tuple(v_863),3-proj-3-tuple(v_862),getpublickey(v_861))) in
        {285}let v_865: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_862))) in
        {286}let v_866: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_863))) && success?(1-proj-3-tuple(v_862))) then (if (not-caught-fail(v_865) && success?(is-true(success?(1-proj-2-tuple(v_865))))) then cipherstatepack(1-proj-2-tuple(v_865),increment_nonce(2-proj-2-tuple(v_863))) else fail-any) else fail-any)) in
        {287}let v_867: bitstring = catch-fail((if (success?(getpublickey(v_861)) && (success?(3-proj-3-tuple(v_862)) && success?(1-proj-3-tuple(v_862)))) then (if (not-caught-fail(v_863) && success?(is-true(success?(1-proj-2-tuple(v_863))))) then (if not-caught-fail(v_864) then (if not-caught-fail(v_866) then (v_866,v_864) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {288}let v_868: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_867),2-proj-3-tuple(v_862),3-proj-3-tuple(v_862)))) in
        {289}let v_869: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_867)) && success?(symmetricstatepack(1-proj-2-tuple(v_867),2-proj-3-tuple(v_862),3-proj-3-tuple(v_862)))) then (if (not-caught-fail(v_868) && success?(is-true(success?(1-proj-3-tuple(v_868))))) then symmetricstatepack(1-proj-3-tuple(v_868),2-proj-3-tuple(v_868),hash(3-proj-3-tuple(v_868),2-proj-2-tuple(v_867))) else fail-any) else fail-any)) in
        {290}let v_870: bitstring = catch-fail((if (success?(getpublickey(v_861)) && success?(1-proj-7-tuple(v_858))) then (if (not-caught-fail(v_862) && success?(is-true(success?(1-proj-3-tuple(v_862))))) then (if (not-caught-fail(v_867) && success?(is-true(success?(1-proj-2-tuple(v_867))))) then (if not-caught-fail(v_869) then (v_869,2-proj-2-tuple(v_867)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {291}let v_871: bitstring = catch-fail(keypairunpack(v_861)) in
        {292}let v_872: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_870))) in
        {293}let v_873: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_872),(if success?(5-proj-7-tuple(v_858)) then (if (not-caught-fail(v_871) && success?(is-true(success?(1-proj-2-tuple(v_871))))) then dhexp(2-proj-2-tuple(v_871),5-proj-7-tuple(v_858)) else fail-any) else fail-any))) in
        {294}let v_874: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_872),(if success?(5-proj-7-tuple(v_858)) then (if (not-caught-fail(v_871) && success?(is-true(success?(1-proj-2-tuple(v_871))))) then dhexp(2-proj-2-tuple(v_871),5-proj-7-tuple(v_858)) else fail-any) else fail-any))) in
        {295}let v_875: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_872),(if success?(5-proj-7-tuple(v_858)) then (if (not-caught-fail(v_871) && success?(is-true(success?(1-proj-2-tuple(v_871))))) then dhexp(2-proj-2-tuple(v_871),5-proj-7-tuple(v_858)) else fail-any) else fail-any))) in
        {296}let v_876: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_858)) then (if (not-caught-fail(v_871) && success?(is-true(success?(1-proj-2-tuple(v_871))))) then dhexp(2-proj-2-tuple(v_871),5-proj-7-tuple(v_858)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_872))) then (if not-caught-fail(v_873) then (if not-caught-fail(v_874) then (if not-caught-fail(v_875) then (v_873,v_874,v_875) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {297}let v_877: symmetricstate = catch-fail((if (success?((if success?(5-proj-7-tuple(v_858)) then (if (not-caught-fail(v_871) && success?(is-true(success?(1-proj-2-tuple(v_871))))) then dhexp(2-proj-2-tuple(v_871),5-proj-7-tuple(v_858)) else fail-any) else fail-any)) && success?(1-proj-2-tuple(v_870))) then (if (not-caught-fail(v_872) && success?(is-true(success?(1-proj-3-tuple(v_872))))) then (if (not-caught-fail(v_876) && success?(is-true(success?(1-proj-3-tuple(v_876))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_876)) then cipherstatepack(2-proj-3-tuple(v_876),minnonce) else fail-any),1-proj-3-tuple(v_876),3-proj-3-tuple(v_872)) else fail-any) else fail-any) else fail-any)) in
        {298}let v_878: bitstring = catch-fail(symmetricstateunpack(v_877)) in
        {299}let v_879: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_878),6-proj-7-tuple(v_858))) in
        {300}let v_880: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_878),6-proj-7-tuple(v_858))) in
        {301}let v_881: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_878),6-proj-7-tuple(v_858))) in
        {302}let v_882: bitstring = catch-fail((if (success?(6-proj-7-tuple(v_858)) && success?(2-proj-3-tuple(v_878))) then (if not-caught-fail(v_879) then (if not-caught-fail(v_880) then (if not-caught-fail(v_881) then (v_879,v_880,v_881) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {303}let v_883: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_878),1-proj-3-tuple(v_882),3-proj-3-tuple(v_878)))) in
        {304}let v_884: bitstring = catch-fail(symmetricstateunpack((if (success?(2-proj-3-tuple(v_882)) && success?(symmetricstatepack(1-proj-3-tuple(v_878),1-proj-3-tuple(v_882),3-proj-3-tuple(v_878)))) then (if (not-caught-fail(v_883) && success?(is-true(success?(1-proj-3-tuple(v_883))))) then symmetricstatepack(1-proj-3-tuple(v_883),2-proj-3-tuple(v_883),hash(3-proj-3-tuple(v_883),2-proj-3-tuple(v_882))) else fail-any) else fail-any))) in
        {305}let v_885: symmetricstate = catch-fail((if success?(6-proj-7-tuple(v_858)) then (if (not-caught-fail(v_878) && success?(is-true(success?(1-proj-3-tuple(v_878))))) then (if (not-caught-fail(v_882) && success?(is-true(success?(1-proj-3-tuple(v_882))))) then (if (not-caught-fail(v_884) && success?(is-true(success?(1-proj-3-tuple(v_884))))) then symmetricstatepack((if success?(3-proj-3-tuple(v_882)) then cipherstatepack(3-proj-3-tuple(v_882),minnonce) else fail-any),1-proj-3-tuple(v_882),3-proj-3-tuple(v_884)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {306}let v_886: bitstring = catch-fail(symmetricstateunpack(v_885)) in
        {307}let v_887: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_886))) in
        {308}let v_888: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_887),2-proj-2-tuple(v_887),3-proj-3-tuple(v_886),msg_c(alice,charlie,sid))) in
        {309}let v_889: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_886))) in
        {310}let v_890: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_887))) && success?(1-proj-3-tuple(v_886))) then (if (not-caught-fail(v_889) && success?(is-true(success?(1-proj-2-tuple(v_889))))) then cipherstatepack(1-proj-2-tuple(v_889),increment_nonce(2-proj-2-tuple(v_887))) else fail-any) else fail-any)) in
        {311}let v_891: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_886)) && success?(1-proj-3-tuple(v_886))) then (if (not-caught-fail(v_887) && success?(is-true(success?(1-proj-2-tuple(v_887))))) then (if not-caught-fail(v_888) then (if not-caught-fail(v_890) then (v_890,v_888) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {312}let v_892: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_891),2-proj-3-tuple(v_886),3-proj-3-tuple(v_886)))) in
        {313}let v_893: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_891)) && success?(symmetricstatepack(1-proj-2-tuple(v_891),2-proj-3-tuple(v_886),3-proj-3-tuple(v_886)))) then (if (not-caught-fail(v_892) && success?(is-true(success?(1-proj-3-tuple(v_892))))) then symmetricstatepack(1-proj-3-tuple(v_892),2-proj-3-tuple(v_892),hash(3-proj-3-tuple(v_892),2-proj-2-tuple(v_891))) else fail-any) else fail-any)) in
        {314}let v_894: bitstring = catch-fail((if (not-caught-fail(v_886) && success?(is-true(success?(1-proj-3-tuple(v_886))))) then (if (not-caught-fail(v_891) && success?(is-true(success?(1-proj-2-tuple(v_891))))) then (if not-caught-fail(v_893) then (v_893,2-proj-2-tuple(v_891)) else fail-any) else fail-any) else fail-any)) in
        {315}let v_895: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_894),v_861,3-proj-7-tuple(v_858),4-proj-7-tuple(v_858),5-proj-7-tuple(v_858),6-proj-7-tuple(v_858),7-proj-7-tuple(v_858))) in
        {316}let v_896: bitstring = catch-fail(concat3(1-proj-3-tuple(v_859),2-proj-2-tuple(v_870),2-proj-2-tuple(v_894))) in
        {317}let v_897: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_894))) in
        {318}let v_898: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_897),zero)) in
        {319}let v_899: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_897),zero)) in
        {320}let v_900: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_897),zero)) in
        {321}let v_901: bitstring = catch-fail((if success?(2-proj-3-tuple(v_897)) then (if not-caught-fail(v_898) then (if not-caught-fail(v_899) then (if not-caught-fail(v_900) then (v_898,v_899,v_900) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {322}let v_902: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_901)) then cipherstatepack(1-proj-3-tuple(v_901),minnonce) else fail-any)) in
        {323}let v_903: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_901)) then cipherstatepack(2-proj-3-tuple(v_901),minnonce) else fail-any)) in
        {324}let v_904: bitstring = catch-fail((if success?(1-proj-2-tuple(v_894)) then (if (not-caught-fail(v_897) && success?(is-true(success?(1-proj-3-tuple(v_897))))) then (if (not-caught-fail(v_901) && success?(is-true(success?(1-proj-3-tuple(v_901))))) then (if not-caught-fail(v_902) then (if not-caught-fail(v_903) then (1-proj-2-tuple(v_894),v_902,v_903) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {325}let (hs_905: handshakestate,message_c_906: bitstring,cs1_907: cipherstate,cs2_908: cipherstate) = (if (not-caught-fail(v_858) && success?(is-true(success?(1-proj-7-tuple(v_858))))) then (if (not-caught-fail(v_859) && success?(is-true(success?(1-proj-3-tuple(v_859))))) then (if not-caught-fail(v_861) then (if (not-caught-fail(v_870) && success?(is-true(success?(1-proj-2-tuple(v_870))))) then (if not-caught-fail(v_877) then (if not-caught-fail(v_885) then (if (not-caught-fail(v_894) && success?(is-true(success?(1-proj-2-tuple(v_894))))) then (if not-caught-fail(v_895) then (if not-caught-fail(v_896) then (if (not-caught-fail(v_904) && success?(is-true(success?(1-proj-3-tuple(v_904))))) then (v_895,v_896,2-proj-3-tuple(v_904),3-proj-3-tuple(v_904)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {326}event SendMsg(alice,charlie,stagepack_c(sid),msg_c(alice,charlie,sid));
        {327}insert statestore(alice,charlie,sid,statepack_d(hs_905,cs1_907,cs2_908));
        {328}out(pub, message_c_906)
    ) | (
        {330}!
        {350}get statestore(=alice,=charlie,=sid,statepack_d(hs_909: handshakestate,cs1_910: cipherstate,cs2_911: cipherstate)) in
        {331}let hs_912: handshakestate = handshakestatesetcs(hs_909,cs2_911) in
        {332}in(pub, message_d_913: bitstring);
        {333}let v_914: bitstring = catch-fail(handshakestateunpack(hs_912)) in
        {334}let v_915: bitstring = catch-fail(deconcat3(message_d_913)) in
        {335}let v_916: bool = catch-fail(true) in
        {336}let v_917: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_914))) in
        {337}let v_918: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_917))) in
        {338}let v_919: aead = catch-fail(decrypt(1-proj-2-tuple(v_918),2-proj-2-tuple(v_918),3-proj-3-tuple(v_917),3-proj-3-tuple(v_915))) in
        {339}let v_920: bitstring = catch-fail(aeadunpack(v_919)) in
        {340}let v_921: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_917))) in
        {341}let v_922: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_918))) && success?(1-proj-3-tuple(v_917))) then (if (not-caught-fail(v_921) && success?(is-true(success?(1-proj-2-tuple(v_921))))) then cipherstatepack(1-proj-2-tuple(v_921),increment_nonce(2-proj-2-tuple(v_918))) else fail-any) else fail-any)) in
        {342}let v_923: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_915)) && (success?(3-proj-3-tuple(v_917)) && success?(1-proj-3-tuple(v_917)))) then (if (not-caught-fail(v_918) && success?(is-true(success?(1-proj-2-tuple(v_918))))) then (if not-caught-fail(v_919) then (if (not-caught-fail(v_920) && success?(is-true(success?(1-proj-3-tuple(v_920))))) then (if not-caught-fail(v_922) then (v_922,3-proj-3-tuple(v_920),1-proj-3-tuple(v_920)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {343}let v_924: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_923),2-proj-3-tuple(v_917),3-proj-3-tuple(v_917)))) in
        {344}let v_925: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_915)) && success?(symmetricstatepack(1-proj-3-tuple(v_923),2-proj-3-tuple(v_917),3-proj-3-tuple(v_917)))) then (if (not-caught-fail(v_924) && success?(is-true(success?(1-proj-3-tuple(v_924))))) then symmetricstatepack(1-proj-3-tuple(v_924),2-proj-3-tuple(v_924),hash(3-proj-3-tuple(v_924),3-proj-3-tuple(v_915))) else fail-any) else fail-any)) in
        {345}let v_926: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_915)) && success?(1-proj-7-tuple(v_914))) then (if (not-caught-fail(v_917) && success?(is-true(success?(1-proj-3-tuple(v_917))))) then (if (not-caught-fail(v_923) && success?(is-true(success?(1-proj-3-tuple(v_923))))) then (if not-caught-fail(v_925) then (v_925,2-proj-3-tuple(v_923),3-proj-3-tuple(v_923)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {346}let v_927: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_926),2-proj-7-tuple(v_914),3-proj-7-tuple(v_914),4-proj-7-tuple(v_914),5-proj-7-tuple(v_914),6-proj-7-tuple(v_914),7-proj-7-tuple(v_914))) in
        {347}let (hs_928: handshakestate,plaintext_d_929: bitstring,valid_930: bool) = (if (not-caught-fail(v_914) && success?(is-true(success?(1-proj-7-tuple(v_914))))) then (if (not-caught-fail(v_915) && success?(is-true(success?(1-proj-3-tuple(v_915))))) then (if not-caught-fail(v_916) then (if (not-caught-fail(v_926) && success?(is-true(success?(1-proj-3-tuple(v_926))))) then (if (v_916 && 3-proj-3-tuple(v_926)) then (if not-caught-fail(v_927) then (v_927,2-proj-3-tuple(v_926),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {348}event RecvMsg(alice,charlie,stagepack_d(sid),plaintext_d_929);
        {349}insert statestore(alice,charlie,sid,statepack_e(hs_928,cs1_910,handshakestategetcs(hs_928)))
    ) | (
        {351}!
        {369}get statestore(=alice,=charlie,=sid,statepack_e(hs_931: handshakestate,cs1_932: cipherstate,cs2_933: cipherstate)) in
        {352}let hs_934: handshakestate = handshakestatesetcs(hs_931,cs1_932) in
        {353}let v_935: bitstring = catch-fail(handshakestateunpack(hs_934)) in
        {354}let v_936: bitstring = catch-fail((empty,empty,empty)) in
        {355}let v_937: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_935))) in
        {356}let v_938: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_937))) in
        {357}let v_939: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_938),2-proj-2-tuple(v_938),3-proj-3-tuple(v_937),msg_e(alice,charlie,sid))) in
        {358}let v_940: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_937))) in
        {359}let v_941: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_938))) && success?(1-proj-3-tuple(v_937))) then (if (not-caught-fail(v_940) && success?(is-true(success?(1-proj-2-tuple(v_940))))) then cipherstatepack(1-proj-2-tuple(v_940),increment_nonce(2-proj-2-tuple(v_938))) else fail-any) else fail-any)) in
        {360}let v_942: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_937)) && success?(1-proj-3-tuple(v_937))) then (if (not-caught-fail(v_938) && success?(is-true(success?(1-proj-2-tuple(v_938))))) then (if not-caught-fail(v_939) then (if not-caught-fail(v_941) then (v_941,v_939) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {361}let v_943: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_942),2-proj-3-tuple(v_937),3-proj-3-tuple(v_937)))) in
        {362}let v_944: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_942)) && success?(symmetricstatepack(1-proj-2-tuple(v_942),2-proj-3-tuple(v_937),3-proj-3-tuple(v_937)))) then (if (not-caught-fail(v_943) && success?(is-true(success?(1-proj-3-tuple(v_943))))) then symmetricstatepack(1-proj-3-tuple(v_943),2-proj-3-tuple(v_943),hash(3-proj-3-tuple(v_943),2-proj-2-tuple(v_942))) else fail-any) else fail-any)) in
        {363}let v_945: bitstring = catch-fail((if success?(1-proj-7-tuple(v_935)) then (if (not-caught-fail(v_937) && success?(is-true(success?(1-proj-3-tuple(v_937))))) then (if (not-caught-fail(v_942) && success?(is-true(success?(1-proj-2-tuple(v_942))))) then (if not-caught-fail(v_944) then (v_944,2-proj-2-tuple(v_942)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {364}let v_946: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_945),2-proj-7-tuple(v_935),3-proj-7-tuple(v_935),4-proj-7-tuple(v_935),5-proj-7-tuple(v_935),6-proj-7-tuple(v_935),7-proj-7-tuple(v_935))) in
        {365}let v_947: bitstring = catch-fail(concat3(1-proj-3-tuple(v_936),2-proj-3-tuple(v_936),2-proj-2-tuple(v_945))) in
        {366}let (hs_948: handshakestate,message_e_949: bitstring) = (if (not-caught-fail(v_935) && success?(is-true(success?(1-proj-7-tuple(v_935))))) then (if (not-caught-fail(v_936) && success?(is-true(success?(1-proj-3-tuple(v_936))))) then (if (not-caught-fail(v_945) && success?(is-true(success?(1-proj-2-tuple(v_945))))) then (if not-caught-fail(v_946) then (if not-caught-fail(v_947) then (v_946,v_947) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {367}event SendMsg(alice,charlie,stagepack_e(sid),msg_e(alice,charlie,sid));
        {368}out(pub, message_e_949)
    ) | (
        {370}event LeakPsk(phase0,alice,charlie);
        {371}out(pub, key_psk(alice,charlie))
    ) | (
        {372}phase 1;
        {373}event LeakPsk(phase1,alice,charlie);
        {374}out(pub, key_psk(alice,charlie))
    ) | (
        {375}event LeakS(phase0,alice);
        {376}out(pub, key_s(alice))
    ) | (
        {377}phase 1;
        {378}event LeakS(phase1,alice);
        {379}out(pub, key_s(alice))
    )
) | (
    {380}let v_950: key = catch-fail(dhexp(key_s(bob),validkey(g))) in
    {381}let s_951: keypair = (if not-caught-fail(v_950) then keypairpack(validkey(v_950),key_s(bob)) else fail-any) in
    {382}out(pub, getpublickey(s_951));
    (
        {383}let e_952: keypair = keypairpack(empty,empty) in
        {384}let rs_953: key = empty in
        {385}let re_954: key = empty in
        {386}let v_955: bitstring = catch-fail(hash(somename,empty)) in
        {387}let v_956: key = catch-fail(v_955) in
        {388}let v_957: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {389}let v_958: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_955) then (if not-caught-fail(v_956) then (if not-caught-fail(v_957) then symmetricstatepack(v_957,v_956,v_955) else fail-any) else fail-any) else fail-any))) in
        {390}let v_959: symmetricstate = catch-fail((if success?((if not-caught-fail(v_955) then (if not-caught-fail(v_956) then (if not-caught-fail(v_957) then symmetricstatepack(v_957,v_956,v_955) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_958) && success?(is-true(success?(1-proj-3-tuple(v_958))))) then symmetricstatepack(1-proj-3-tuple(v_958),2-proj-3-tuple(v_958),hash(3-proj-3-tuple(v_958),empty)) else fail-any) else fail-any)) in
        {391}let v_960: bitstring = catch-fail(symmetricstateunpack(v_959)) in
        {392}let v_961: symmetricstate = catch-fail((if success?(getpublickey(s_951)) then (if (not-caught-fail(v_960) && success?(is-true(success?(1-proj-3-tuple(v_960))))) then symmetricstatepack(1-proj-3-tuple(v_960),2-proj-3-tuple(v_960),hash(3-proj-3-tuple(v_960),getpublickey(s_951))) else fail-any) else fail-any)) in
        {393}let hs_962: handshakestate = (if not-caught-fail(v_959) then (if not-caught-fail(v_961) then handshakestatepack(v_961,s_951,e_952,rs_953,re_954,key_psk(alice,bob),false) else fail-any) else fail-any) in
        {394}insert statestore(bob,alice,sid,statepack_a(hs_962))
    ) | (
        {429}get statestore(=bob,=alice,=sid,statepack_a(hs_963: handshakestate)) in
        {395}in(pub, message_a_964: bitstring);
        {396}let v_965: bitstring = catch-fail(handshakestateunpack(hs_963)) in
        {397}let v_966: bitstring = catch-fail(deconcat3(message_a_964)) in
        {398}let v_967: bool = catch-fail(true) in
        {399}let v_968: key = catch-fail(1-proj-3-tuple(v_966)) in
        {400}let v_969: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_965))) in
        {401}let v_970: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_965)) then (if (not-caught-fail(v_969) && success?(is-true(success?(1-proj-3-tuple(v_969))))) then symmetricstatepack(1-proj-3-tuple(v_969),2-proj-3-tuple(v_969),hash(3-proj-3-tuple(v_969),v_968)) else fail-any) else fail-any)) in
        {402}let v_971: bitstring = catch-fail(symmetricstateunpack(v_970)) in
        {403}let v_972: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_971),v_968)) in
        {404}let v_973: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_971),v_968)) in
        {405}let v_974: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_971),v_968)) in
        {406}let v_975: bitstring = catch-fail((if success?(2-proj-3-tuple(v_971)) then (if not-caught-fail(v_972) then (if not-caught-fail(v_973) then (if not-caught-fail(v_974) then (v_972,v_973,v_974) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {407}let v_976: symmetricstate = catch-fail((if (not-caught-fail(v_971) && success?(is-true(success?(1-proj-3-tuple(v_971))))) then (if (not-caught-fail(v_975) && success?(is-true(success?(1-proj-3-tuple(v_975))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_975)) then cipherstatepack(2-proj-3-tuple(v_975),minnonce) else fail-any),1-proj-3-tuple(v_975),3-proj-3-tuple(v_971)) else fail-any) else fail-any)) in
        {408}let v_977: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_965))) in
        {409}let v_978: bitstring = catch-fail(symmetricstateunpack(v_976)) in
        {410}let v_979: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_978),(if success?(2-proj-7-tuple(v_965)) then (if (not-caught-fail(v_977) && success?(is-true(success?(1-proj-2-tuple(v_977))))) then dhexp(2-proj-2-tuple(v_977),v_968) else fail-any) else fail-any))) in
        {411}let v_980: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_978),(if success?(2-proj-7-tuple(v_965)) then (if (not-caught-fail(v_977) && success?(is-true(success?(1-proj-2-tuple(v_977))))) then dhexp(2-proj-2-tuple(v_977),v_968) else fail-any) else fail-any))) in
        {412}let v_981: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_978),(if success?(2-proj-7-tuple(v_965)) then (if (not-caught-fail(v_977) && success?(is-true(success?(1-proj-2-tuple(v_977))))) then dhexp(2-proj-2-tuple(v_977),v_968) else fail-any) else fail-any))) in
        {413}let v_982: bitstring = catch-fail((if (success?((if success?(2-proj-7-tuple(v_965)) then (if (not-caught-fail(v_977) && success?(is-true(success?(1-proj-2-tuple(v_977))))) then dhexp(2-proj-2-tuple(v_977),v_968) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_978))) then (if not-caught-fail(v_979) then (if not-caught-fail(v_980) then (if not-caught-fail(v_981) then (v_979,v_980,v_981) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {414}let v_983: symmetricstate = catch-fail((if success?((if success?(2-proj-7-tuple(v_965)) then (if (not-caught-fail(v_977) && success?(is-true(success?(1-proj-2-tuple(v_977))))) then dhexp(2-proj-2-tuple(v_977),v_968) else fail-any) else fail-any)) then (if (not-caught-fail(v_978) && success?(is-true(success?(1-proj-3-tuple(v_978))))) then (if (not-caught-fail(v_982) && success?(is-true(success?(1-proj-3-tuple(v_982))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_982)) then cipherstatepack(2-proj-3-tuple(v_982),minnonce) else fail-any),1-proj-3-tuple(v_982),3-proj-3-tuple(v_978)) else fail-any) else fail-any) else fail-any)) in
        {415}let v_984: bitstring = catch-fail(symmetricstateunpack(v_983)) in
        {416}let v_985: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_984))) in
        {417}let v_986: aead = catch-fail(decrypt(1-proj-2-tuple(v_985),2-proj-2-tuple(v_985),3-proj-3-tuple(v_984),3-proj-3-tuple(v_966))) in
        {418}let v_987: bitstring = catch-fail(aeadunpack(v_986)) in
        {419}let v_988: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_984))) in
        {420}let v_989: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_985))) && success?(1-proj-3-tuple(v_984))) then (if (not-caught-fail(v_988) && success?(is-true(success?(1-proj-2-tuple(v_988))))) then cipherstatepack(1-proj-2-tuple(v_988),increment_nonce(2-proj-2-tuple(v_985))) else fail-any) else fail-any)) in
        {421}let v_990: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_966)) && (success?(3-proj-3-tuple(v_984)) && success?(1-proj-3-tuple(v_984)))) then (if (not-caught-fail(v_985) && success?(is-true(success?(1-proj-2-tuple(v_985))))) then (if not-caught-fail(v_986) then (if (not-caught-fail(v_987) && success?(is-true(success?(1-proj-3-tuple(v_987))))) then (if not-caught-fail(v_989) then (v_989,3-proj-3-tuple(v_987),1-proj-3-tuple(v_987)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {422}let v_991: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_990),2-proj-3-tuple(v_984),3-proj-3-tuple(v_984)))) in
        {423}let v_992: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_966)) && success?(symmetricstatepack(1-proj-3-tuple(v_990),2-proj-3-tuple(v_984),3-proj-3-tuple(v_984)))) then (if (not-caught-fail(v_991) && success?(is-true(success?(1-proj-3-tuple(v_991))))) then symmetricstatepack(1-proj-3-tuple(v_991),2-proj-3-tuple(v_991),hash(3-proj-3-tuple(v_991),3-proj-3-tuple(v_966))) else fail-any) else fail-any)) in
        {424}let v_993: bitstring = catch-fail((if success?(3-proj-3-tuple(v_966)) then (if (not-caught-fail(v_984) && success?(is-true(success?(1-proj-3-tuple(v_984))))) then (if (not-caught-fail(v_990) && success?(is-true(success?(1-proj-3-tuple(v_990))))) then (if not-caught-fail(v_992) then (v_992,2-proj-3-tuple(v_990),3-proj-3-tuple(v_990)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {425}let v_994: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_993),2-proj-7-tuple(v_965),3-proj-7-tuple(v_965),4-proj-7-tuple(v_965),v_968,6-proj-7-tuple(v_965),7-proj-7-tuple(v_965))) in
        {426}let (hs_995: handshakestate,plaintext_a: bitstring,valid_996: bool) = (if (not-caught-fail(v_965) && success?(is-true(success?(1-proj-7-tuple(v_965))))) then (if (not-caught-fail(v_966) && success?(is-true(success?(1-proj-3-tuple(v_966))))) then (if not-caught-fail(v_967) then (if not-caught-fail(v_968) then (if not-caught-fail(v_970) then (if not-caught-fail(v_976) then (if not-caught-fail(v_983) then (if (not-caught-fail(v_993) && success?(is-true(success?(1-proj-3-tuple(v_993))))) then (if (v_967 && 3-proj-3-tuple(v_993)) then (if not-caught-fail(v_994) then (v_994,2-proj-3-tuple(v_993),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {427}event RecvMsg(bob,alice,stagepack_a(sid),plaintext_a);
        {428}insert statestore(bob,alice,sid,statepack_b(hs_995))
    ) | (
        {465}get statestore(=bob,=alice,=sid,statepack_b(hs_997: handshakestate)) in
        {430}let v_998: bitstring = catch-fail(handshakestateunpack(hs_997)) in
        {431}let v_999: bitstring = catch-fail((empty,empty,empty)) in
        {432}let v_1000: key = catch-fail(dhexp(key_e(bob,alice,sid),validkey(g))) in
        {433}let v_1001: keypair = catch-fail((if not-caught-fail(v_1000) then keypairpack(validkey(v_1000),key_e(bob,alice,sid)) else fail-any)) in
        {434}let v_1002: bitstring = catch-fail(getpublickey(v_1001)) in
        {435}let v_1003: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_998))) in
        {436}let v_1004: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_998)) then (if (not-caught-fail(v_1003) && success?(is-true(success?(1-proj-3-tuple(v_1003))))) then symmetricstatepack(1-proj-3-tuple(v_1003),2-proj-3-tuple(v_1003),hash(3-proj-3-tuple(v_1003),v_1002)) else fail-any) else fail-any)) in
        {437}let v_1005: bitstring = catch-fail(symmetricstateunpack(v_1004)) in
        {438}let v_1006: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1005),getpublickey(v_1001))) in
        {439}let v_1007: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1005),getpublickey(v_1001))) in
        {440}let v_1008: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1005),getpublickey(v_1001))) in
        {441}let v_1009: bitstring = catch-fail((if (success?(getpublickey(v_1001)) && success?(2-proj-3-tuple(v_1005))) then (if not-caught-fail(v_1006) then (if not-caught-fail(v_1007) then (if not-caught-fail(v_1008) then (v_1006,v_1007,v_1008) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {442}let v_1010: symmetricstate = catch-fail((if success?(getpublickey(v_1001)) then (if (not-caught-fail(v_1005) && success?(is-true(success?(1-proj-3-tuple(v_1005))))) then (if (not-caught-fail(v_1009) && success?(is-true(success?(1-proj-3-tuple(v_1009))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1009)) then cipherstatepack(2-proj-3-tuple(v_1009),minnonce) else fail-any),1-proj-3-tuple(v_1009),3-proj-3-tuple(v_1005)) else fail-any) else fail-any) else fail-any)) in
        {443}let v_1011: bitstring = catch-fail(keypairunpack(v_1001)) in
        {444}let v_1012: bitstring = catch-fail(symmetricstateunpack(v_1010)) in
        {445}let v_1013: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1012),(if success?(5-proj-7-tuple(v_998)) then (if (not-caught-fail(v_1011) && success?(is-true(success?(1-proj-2-tuple(v_1011))))) then dhexp(2-proj-2-tuple(v_1011),5-proj-7-tuple(v_998)) else fail-any) else fail-any))) in
        {446}let v_1014: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1012),(if success?(5-proj-7-tuple(v_998)) then (if (not-caught-fail(v_1011) && success?(is-true(success?(1-proj-2-tuple(v_1011))))) then dhexp(2-proj-2-tuple(v_1011),5-proj-7-tuple(v_998)) else fail-any) else fail-any))) in
        {447}let v_1015: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1012),(if success?(5-proj-7-tuple(v_998)) then (if (not-caught-fail(v_1011) && success?(is-true(success?(1-proj-2-tuple(v_1011))))) then dhexp(2-proj-2-tuple(v_1011),5-proj-7-tuple(v_998)) else fail-any) else fail-any))) in
        {448}let v_1016: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_998)) then (if (not-caught-fail(v_1011) && success?(is-true(success?(1-proj-2-tuple(v_1011))))) then dhexp(2-proj-2-tuple(v_1011),5-proj-7-tuple(v_998)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_1012))) then (if not-caught-fail(v_1013) then (if not-caught-fail(v_1014) then (if not-caught-fail(v_1015) then (v_1013,v_1014,v_1015) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {449}let v_1017: symmetricstate = catch-fail((if success?((if success?(5-proj-7-tuple(v_998)) then (if (not-caught-fail(v_1011) && success?(is-true(success?(1-proj-2-tuple(v_1011))))) then dhexp(2-proj-2-tuple(v_1011),5-proj-7-tuple(v_998)) else fail-any) else fail-any)) then (if (not-caught-fail(v_1012) && success?(is-true(success?(1-proj-3-tuple(v_1012))))) then (if (not-caught-fail(v_1016) && success?(is-true(success?(1-proj-3-tuple(v_1016))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1016)) then cipherstatepack(2-proj-3-tuple(v_1016),minnonce) else fail-any),1-proj-3-tuple(v_1016),3-proj-3-tuple(v_1012)) else fail-any) else fail-any) else fail-any)) in
        {450}let v_1018: bitstring = catch-fail(symmetricstateunpack(v_1017)) in
        {451}let v_1019: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1018))) in
        {452}let v_1020: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_1019),2-proj-2-tuple(v_1019),3-proj-3-tuple(v_1018),msg_b(bob,alice,sid))) in
        {453}let v_1021: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1018))) in
        {454}let v_1022: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1019))) && success?(1-proj-3-tuple(v_1018))) then (if (not-caught-fail(v_1021) && success?(is-true(success?(1-proj-2-tuple(v_1021))))) then cipherstatepack(1-proj-2-tuple(v_1021),increment_nonce(2-proj-2-tuple(v_1019))) else fail-any) else fail-any)) in
        {455}let v_1023: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1018)) && success?(1-proj-3-tuple(v_1018))) then (if (not-caught-fail(v_1019) && success?(is-true(success?(1-proj-2-tuple(v_1019))))) then (if not-caught-fail(v_1020) then (if not-caught-fail(v_1022) then (v_1022,v_1020) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {456}let v_1024: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_1023),2-proj-3-tuple(v_1018),3-proj-3-tuple(v_1018)))) in
        {457}let v_1025: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_1023)) && success?(symmetricstatepack(1-proj-2-tuple(v_1023),2-proj-3-tuple(v_1018),3-proj-3-tuple(v_1018)))) then (if (not-caught-fail(v_1024) && success?(is-true(success?(1-proj-3-tuple(v_1024))))) then symmetricstatepack(1-proj-3-tuple(v_1024),2-proj-3-tuple(v_1024),hash(3-proj-3-tuple(v_1024),2-proj-2-tuple(v_1023))) else fail-any) else fail-any)) in
        {458}let v_1026: bitstring = catch-fail((if (not-caught-fail(v_1018) && success?(is-true(success?(1-proj-3-tuple(v_1018))))) then (if (not-caught-fail(v_1023) && success?(is-true(success?(1-proj-2-tuple(v_1023))))) then (if not-caught-fail(v_1025) then (v_1025,2-proj-2-tuple(v_1023)) else fail-any) else fail-any) else fail-any)) in
        {459}let v_1027: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_1026),2-proj-7-tuple(v_998),v_1001,4-proj-7-tuple(v_998),5-proj-7-tuple(v_998),6-proj-7-tuple(v_998),7-proj-7-tuple(v_998))) in
        {460}let v_1028: bitstring = catch-fail(concat3(v_1002,2-proj-3-tuple(v_999),2-proj-2-tuple(v_1026))) in
        {461}let (hs_1029: handshakestate,message_b_1030: bitstring) = (if (not-caught-fail(v_998) && success?(is-true(success?(1-proj-7-tuple(v_998))))) then (if (not-caught-fail(v_999) && success?(is-true(success?(1-proj-3-tuple(v_999))))) then (if not-caught-fail(v_1001) then (if not-caught-fail(v_1002) then (if not-caught-fail(v_1004) then (if not-caught-fail(v_1010) then (if not-caught-fail(v_1017) then (if (not-caught-fail(v_1026) && success?(is-true(success?(1-proj-2-tuple(v_1026))))) then (if not-caught-fail(v_1027) then (if not-caught-fail(v_1028) then (v_1027,v_1028) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {462}event SendMsg(bob,alice,stagepack_b(sid),msg_b(bob,alice,sid));
        {463}insert statestore(bob,alice,sid,statepack_c(hs_1029));
        {464}out(pub, message_b_1030)
    ) | (
        {519}get statestore(=bob,=alice,=sid,statepack_c(hs_1031: handshakestate)) in
        {466}in(pub, message_c_1032: bitstring);
        {467}let v_1033: bitstring = catch-fail(handshakestateunpack(hs_1031)) in
        {468}let v_1034: bitstring = catch-fail(deconcat3(message_c_1032)) in
        {469}let v_1035: bool = catch-fail(true) in
        {470}let v_1036: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1033))) in
        {471}let v_1037: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1036))) in
        {472}let v_1038: aead = catch-fail(decrypt(1-proj-2-tuple(v_1037),2-proj-2-tuple(v_1037),3-proj-3-tuple(v_1036),2-proj-3-tuple(v_1034))) in
        {473}let v_1039: bitstring = catch-fail(aeadunpack(v_1038)) in
        {474}let v_1040: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1036))) in
        {475}let v_1041: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1037))) && success?(1-proj-3-tuple(v_1036))) then (if (not-caught-fail(v_1040) && success?(is-true(success?(1-proj-2-tuple(v_1040))))) then cipherstatepack(1-proj-2-tuple(v_1040),increment_nonce(2-proj-2-tuple(v_1037))) else fail-any) else fail-any)) in
        {476}let v_1042: bitstring = catch-fail((if (success?(2-proj-3-tuple(v_1034)) && (success?(3-proj-3-tuple(v_1036)) && success?(1-proj-3-tuple(v_1036)))) then (if (not-caught-fail(v_1037) && success?(is-true(success?(1-proj-2-tuple(v_1037))))) then (if not-caught-fail(v_1038) then (if (not-caught-fail(v_1039) && success?(is-true(success?(1-proj-3-tuple(v_1039))))) then (if not-caught-fail(v_1041) then (v_1041,3-proj-3-tuple(v_1039),1-proj-3-tuple(v_1039)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {477}let v_1043: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1042),2-proj-3-tuple(v_1036),3-proj-3-tuple(v_1036)))) in
        {478}let v_1044: symmetricstate = catch-fail((if (success?(2-proj-3-tuple(v_1034)) && success?(symmetricstatepack(1-proj-3-tuple(v_1042),2-proj-3-tuple(v_1036),3-proj-3-tuple(v_1036)))) then (if (not-caught-fail(v_1043) && success?(is-true(success?(1-proj-3-tuple(v_1043))))) then symmetricstatepack(1-proj-3-tuple(v_1043),2-proj-3-tuple(v_1043),hash(3-proj-3-tuple(v_1043),2-proj-3-tuple(v_1034))) else fail-any) else fail-any)) in
        {479}let v_1045: bitstring = catch-fail((if (success?(2-proj-3-tuple(v_1034)) && success?(1-proj-7-tuple(v_1033))) then (if (not-caught-fail(v_1036) && success?(is-true(success?(1-proj-3-tuple(v_1036))))) then (if (not-caught-fail(v_1042) && success?(is-true(success?(1-proj-3-tuple(v_1042))))) then (if not-caught-fail(v_1044) then (v_1044,2-proj-3-tuple(v_1042),3-proj-3-tuple(v_1042)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {480}let v_1046: key = catch-fail(2-proj-3-tuple(v_1045)) in
        {481}let v_1047: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_1033))) in
        {482}let v_1048: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_1045))) in
        {483}let v_1049: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1048),(if success?(3-proj-7-tuple(v_1033)) then (if (not-caught-fail(v_1047) && success?(is-true(success?(1-proj-2-tuple(v_1047))))) then dhexp(2-proj-2-tuple(v_1047),v_1046) else fail-any) else fail-any))) in
        {484}let v_1050: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1048),(if success?(3-proj-7-tuple(v_1033)) then (if (not-caught-fail(v_1047) && success?(is-true(success?(1-proj-2-tuple(v_1047))))) then dhexp(2-proj-2-tuple(v_1047),v_1046) else fail-any) else fail-any))) in
        {485}let v_1051: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1048),(if success?(3-proj-7-tuple(v_1033)) then (if (not-caught-fail(v_1047) && success?(is-true(success?(1-proj-2-tuple(v_1047))))) then dhexp(2-proj-2-tuple(v_1047),v_1046) else fail-any) else fail-any))) in
        {486}let v_1052: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_1033)) then (if (not-caught-fail(v_1047) && success?(is-true(success?(1-proj-2-tuple(v_1047))))) then dhexp(2-proj-2-tuple(v_1047),v_1046) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_1048))) then (if not-caught-fail(v_1049) then (if not-caught-fail(v_1050) then (if not-caught-fail(v_1051) then (v_1049,v_1050,v_1051) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {487}let v_1053: symmetricstate = catch-fail((if (success?((if success?(3-proj-7-tuple(v_1033)) then (if (not-caught-fail(v_1047) && success?(is-true(success?(1-proj-2-tuple(v_1047))))) then dhexp(2-proj-2-tuple(v_1047),v_1046) else fail-any) else fail-any)) && success?(1-proj-3-tuple(v_1045))) then (if (not-caught-fail(v_1048) && success?(is-true(success?(1-proj-3-tuple(v_1048))))) then (if (not-caught-fail(v_1052) && success?(is-true(success?(1-proj-3-tuple(v_1052))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1052)) then cipherstatepack(2-proj-3-tuple(v_1052),minnonce) else fail-any),1-proj-3-tuple(v_1052),3-proj-3-tuple(v_1048)) else fail-any) else fail-any) else fail-any)) in
        {488}let v_1054: bitstring = catch-fail(symmetricstateunpack(v_1053)) in
        {489}let v_1055: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1054),6-proj-7-tuple(v_1033))) in
        {490}let v_1056: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1054),6-proj-7-tuple(v_1033))) in
        {491}let v_1057: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1054),6-proj-7-tuple(v_1033))) in
        {492}let v_1058: bitstring = catch-fail((if (success?(6-proj-7-tuple(v_1033)) && success?(2-proj-3-tuple(v_1054))) then (if not-caught-fail(v_1055) then (if not-caught-fail(v_1056) then (if not-caught-fail(v_1057) then (v_1055,v_1056,v_1057) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {493}let v_1059: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1054),1-proj-3-tuple(v_1058),3-proj-3-tuple(v_1054)))) in
        {494}let v_1060: bitstring = catch-fail(symmetricstateunpack((if (success?(2-proj-3-tuple(v_1058)) && success?(symmetricstatepack(1-proj-3-tuple(v_1054),1-proj-3-tuple(v_1058),3-proj-3-tuple(v_1054)))) then (if (not-caught-fail(v_1059) && success?(is-true(success?(1-proj-3-tuple(v_1059))))) then symmetricstatepack(1-proj-3-tuple(v_1059),2-proj-3-tuple(v_1059),hash(3-proj-3-tuple(v_1059),2-proj-3-tuple(v_1058))) else fail-any) else fail-any))) in
        {495}let v_1061: symmetricstate = catch-fail((if success?(6-proj-7-tuple(v_1033)) then (if (not-caught-fail(v_1054) && success?(is-true(success?(1-proj-3-tuple(v_1054))))) then (if (not-caught-fail(v_1058) && success?(is-true(success?(1-proj-3-tuple(v_1058))))) then (if (not-caught-fail(v_1060) && success?(is-true(success?(1-proj-3-tuple(v_1060))))) then symmetricstatepack((if success?(3-proj-3-tuple(v_1058)) then cipherstatepack(3-proj-3-tuple(v_1058),minnonce) else fail-any),1-proj-3-tuple(v_1058),3-proj-3-tuple(v_1060)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {496}let v_1062: bitstring = catch-fail(symmetricstateunpack(v_1061)) in
        {497}let v_1063: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1062))) in
        {498}let v_1064: aead = catch-fail(decrypt(1-proj-2-tuple(v_1063),2-proj-2-tuple(v_1063),3-proj-3-tuple(v_1062),3-proj-3-tuple(v_1034))) in
        {499}let v_1065: bitstring = catch-fail(aeadunpack(v_1064)) in
        {500}let v_1066: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1062))) in
        {501}let v_1067: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1063))) && success?(1-proj-3-tuple(v_1062))) then (if (not-caught-fail(v_1066) && success?(is-true(success?(1-proj-2-tuple(v_1066))))) then cipherstatepack(1-proj-2-tuple(v_1066),increment_nonce(2-proj-2-tuple(v_1063))) else fail-any) else fail-any)) in
        {502}let v_1068: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1034)) && (success?(3-proj-3-tuple(v_1062)) && success?(1-proj-3-tuple(v_1062)))) then (if (not-caught-fail(v_1063) && success?(is-true(success?(1-proj-2-tuple(v_1063))))) then (if not-caught-fail(v_1064) then (if (not-caught-fail(v_1065) && success?(is-true(success?(1-proj-3-tuple(v_1065))))) then (if not-caught-fail(v_1067) then (v_1067,3-proj-3-tuple(v_1065),1-proj-3-tuple(v_1065)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {503}let v_1069: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1068),2-proj-3-tuple(v_1062),3-proj-3-tuple(v_1062)))) in
        {504}let v_1070: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_1034)) && success?(symmetricstatepack(1-proj-3-tuple(v_1068),2-proj-3-tuple(v_1062),3-proj-3-tuple(v_1062)))) then (if (not-caught-fail(v_1069) && success?(is-true(success?(1-proj-3-tuple(v_1069))))) then symmetricstatepack(1-proj-3-tuple(v_1069),2-proj-3-tuple(v_1069),hash(3-proj-3-tuple(v_1069),3-proj-3-tuple(v_1034))) else fail-any) else fail-any)) in
        {505}let v_1071: bitstring = catch-fail((if success?(3-proj-3-tuple(v_1034)) then (if (not-caught-fail(v_1062) && success?(is-true(success?(1-proj-3-tuple(v_1062))))) then (if (not-caught-fail(v_1068) && success?(is-true(success?(1-proj-3-tuple(v_1068))))) then (if not-caught-fail(v_1070) then (v_1070,2-proj-3-tuple(v_1068),3-proj-3-tuple(v_1068)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {506}let v_1072: key = catch-fail(dhexp(key_s(alice),validkey(g))) in
        {507}let v_1073: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_1071),2-proj-7-tuple(v_1033),3-proj-7-tuple(v_1033),v_1046,5-proj-7-tuple(v_1033),6-proj-7-tuple(v_1033),7-proj-7-tuple(v_1033))) in
        {508}let v_1074: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_1071))) in
        {509}let v_1075: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1074),zero)) in
        {510}let v_1076: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1074),zero)) in
        {511}let v_1077: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1074),zero)) in
        {512}let v_1078: bitstring = catch-fail((if success?(2-proj-3-tuple(v_1074)) then (if not-caught-fail(v_1075) then (if not-caught-fail(v_1076) then (if not-caught-fail(v_1077) then (v_1075,v_1076,v_1077) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {513}let v_1079: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_1078)) then cipherstatepack(1-proj-3-tuple(v_1078),minnonce) else fail-any)) in
        {514}let v_1080: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_1078)) then cipherstatepack(2-proj-3-tuple(v_1078),minnonce) else fail-any)) in
        {515}let v_1081: bitstring = catch-fail((if success?(1-proj-3-tuple(v_1071)) then (if (not-caught-fail(v_1074) && success?(is-true(success?(1-proj-3-tuple(v_1074))))) then (if (not-caught-fail(v_1078) && success?(is-true(success?(1-proj-3-tuple(v_1078))))) then (if not-caught-fail(v_1079) then (if not-caught-fail(v_1080) then (1-proj-3-tuple(v_1071),v_1079,v_1080) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {516}let (hs_1082: handshakestate,plaintext_c: bitstring,valid_1083: bool,cs1_1084: cipherstate,cs2_1085: cipherstate) = (if (not-caught-fail(v_1033) && success?(is-true(success?(1-proj-7-tuple(v_1033))))) then (if (not-caught-fail(v_1034) && success?(is-true(success?(1-proj-3-tuple(v_1034))))) then (if not-caught-fail(v_1035) then (if (not-caught-fail(v_1045) && success?(is-true(success?(1-proj-3-tuple(v_1045))))) then (if not-caught-fail(v_1046) then (if not-caught-fail(v_1053) then (if not-caught-fail(v_1061) then (if (not-caught-fail(v_1071) && success?(is-true(success?(1-proj-3-tuple(v_1071))))) then (if ((3-proj-3-tuple(v_1045) && 3-proj-3-tuple(v_1071)) && (v_1046 = getpublickey((if not-caught-fail(v_1072) then keypairpack(validkey(v_1072),key_s(alice)) else fail-any)))) then (if not-caught-fail(v_1073) then (if (not-caught-fail(v_1081) && success?(is-true(success?(1-proj-3-tuple(v_1081))))) then (v_1073,2-proj-3-tuple(v_1071),true,2-proj-3-tuple(v_1081),3-proj-3-tuple(v_1081)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {517}event RecvMsg(bob,alice,stagepack_c(sid),plaintext_c);
        {518}insert statestore(bob,alice,sid,statepack_d(hs_1082,cs1_1084,cs2_1085))
    ) | (
        {520}!
        {539}get statestore(=bob,=alice,=sid,statepack_d(hs_1086: handshakestate,cs1_1087: cipherstate,cs2_1088: cipherstate)) in
        {521}let hs_1089: handshakestate = handshakestatesetcs(hs_1086,cs2_1088) in
        {522}let v_1090: bitstring = catch-fail(handshakestateunpack(hs_1089)) in
        {523}let v_1091: bitstring = catch-fail((empty,empty,empty)) in
        {524}let v_1092: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1090))) in
        {525}let v_1093: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1092))) in
        {526}let v_1094: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_1093),2-proj-2-tuple(v_1093),3-proj-3-tuple(v_1092),msg_d(bob,alice,sid))) in
        {527}let v_1095: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1092))) in
        {528}let v_1096: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1093))) && success?(1-proj-3-tuple(v_1092))) then (if (not-caught-fail(v_1095) && success?(is-true(success?(1-proj-2-tuple(v_1095))))) then cipherstatepack(1-proj-2-tuple(v_1095),increment_nonce(2-proj-2-tuple(v_1093))) else fail-any) else fail-any)) in
        {529}let v_1097: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1092)) && success?(1-proj-3-tuple(v_1092))) then (if (not-caught-fail(v_1093) && success?(is-true(success?(1-proj-2-tuple(v_1093))))) then (if not-caught-fail(v_1094) then (if not-caught-fail(v_1096) then (v_1096,v_1094) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {530}let v_1098: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_1097),2-proj-3-tuple(v_1092),3-proj-3-tuple(v_1092)))) in
        {531}let v_1099: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_1097)) && success?(symmetricstatepack(1-proj-2-tuple(v_1097),2-proj-3-tuple(v_1092),3-proj-3-tuple(v_1092)))) then (if (not-caught-fail(v_1098) && success?(is-true(success?(1-proj-3-tuple(v_1098))))) then symmetricstatepack(1-proj-3-tuple(v_1098),2-proj-3-tuple(v_1098),hash(3-proj-3-tuple(v_1098),2-proj-2-tuple(v_1097))) else fail-any) else fail-any)) in
        {532}let v_1100: bitstring = catch-fail((if success?(1-proj-7-tuple(v_1090)) then (if (not-caught-fail(v_1092) && success?(is-true(success?(1-proj-3-tuple(v_1092))))) then (if (not-caught-fail(v_1097) && success?(is-true(success?(1-proj-2-tuple(v_1097))))) then (if not-caught-fail(v_1099) then (v_1099,2-proj-2-tuple(v_1097)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {533}let v_1101: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_1100),2-proj-7-tuple(v_1090),3-proj-7-tuple(v_1090),4-proj-7-tuple(v_1090),5-proj-7-tuple(v_1090),6-proj-7-tuple(v_1090),7-proj-7-tuple(v_1090))) in
        {534}let v_1102: bitstring = catch-fail(concat3(1-proj-3-tuple(v_1091),2-proj-3-tuple(v_1091),2-proj-2-tuple(v_1100))) in
        {535}let (hs_1103: handshakestate,message_d_1104: bitstring) = (if (not-caught-fail(v_1090) && success?(is-true(success?(1-proj-7-tuple(v_1090))))) then (if (not-caught-fail(v_1091) && success?(is-true(success?(1-proj-3-tuple(v_1091))))) then (if (not-caught-fail(v_1100) && success?(is-true(success?(1-proj-2-tuple(v_1100))))) then (if not-caught-fail(v_1101) then (if not-caught-fail(v_1102) then (v_1101,v_1102) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {536}event SendMsg(bob,alice,stagepack_d(sid),msg_d(bob,alice,sid));
        {537}insert statestore(bob,alice,sid,statepack_e(hs_1103,cs1_1087,handshakestategetcs(hs_1103)));
        {538}out(pub, message_d_1104)
    ) | (
        {540}!
        {560}get statestore(=bob,=alice,=sid,statepack_e(hs_1105: handshakestate,cs1_1106: cipherstate,cs2_1107: cipherstate)) in
        {541}let hs_1108: handshakestate = handshakestatesetcs(hs_1105,cs1_1106) in
        {542}in(pub, message_e_1109: bitstring);
        {543}let v_1110: bitstring = catch-fail(handshakestateunpack(hs_1108)) in
        {544}let v_1111: bitstring = catch-fail(deconcat3(message_e_1109)) in
        {545}let v_1112: bool = catch-fail(true) in
        {546}let v_1113: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1110))) in
        {547}let v_1114: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1113))) in
        {548}let v_1115: aead = catch-fail(decrypt(1-proj-2-tuple(v_1114),2-proj-2-tuple(v_1114),3-proj-3-tuple(v_1113),3-proj-3-tuple(v_1111))) in
        {549}let v_1116: bitstring = catch-fail(aeadunpack(v_1115)) in
        {550}let v_1117: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1113))) in
        {551}let v_1118: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1114))) && success?(1-proj-3-tuple(v_1113))) then (if (not-caught-fail(v_1117) && success?(is-true(success?(1-proj-2-tuple(v_1117))))) then cipherstatepack(1-proj-2-tuple(v_1117),increment_nonce(2-proj-2-tuple(v_1114))) else fail-any) else fail-any)) in
        {552}let v_1119: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1111)) && (success?(3-proj-3-tuple(v_1113)) && success?(1-proj-3-tuple(v_1113)))) then (if (not-caught-fail(v_1114) && success?(is-true(success?(1-proj-2-tuple(v_1114))))) then (if not-caught-fail(v_1115) then (if (not-caught-fail(v_1116) && success?(is-true(success?(1-proj-3-tuple(v_1116))))) then (if not-caught-fail(v_1118) then (v_1118,3-proj-3-tuple(v_1116),1-proj-3-tuple(v_1116)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {553}let v_1120: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1119),2-proj-3-tuple(v_1113),3-proj-3-tuple(v_1113)))) in
        {554}let v_1121: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_1111)) && success?(symmetricstatepack(1-proj-3-tuple(v_1119),2-proj-3-tuple(v_1113),3-proj-3-tuple(v_1113)))) then (if (not-caught-fail(v_1120) && success?(is-true(success?(1-proj-3-tuple(v_1120))))) then symmetricstatepack(1-proj-3-tuple(v_1120),2-proj-3-tuple(v_1120),hash(3-proj-3-tuple(v_1120),3-proj-3-tuple(v_1111))) else fail-any) else fail-any)) in
        {555}let v_1122: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1111)) && success?(1-proj-7-tuple(v_1110))) then (if (not-caught-fail(v_1113) && success?(is-true(success?(1-proj-3-tuple(v_1113))))) then (if (not-caught-fail(v_1119) && success?(is-true(success?(1-proj-3-tuple(v_1119))))) then (if not-caught-fail(v_1121) then (v_1121,2-proj-3-tuple(v_1119),3-proj-3-tuple(v_1119)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {556}let v_1123: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_1122),2-proj-7-tuple(v_1110),3-proj-7-tuple(v_1110),4-proj-7-tuple(v_1110),5-proj-7-tuple(v_1110),6-proj-7-tuple(v_1110),7-proj-7-tuple(v_1110))) in
        {557}let (hs_1124: handshakestate,plaintext_e: bitstring,valid_1125: bool) = (if (not-caught-fail(v_1110) && success?(is-true(success?(1-proj-7-tuple(v_1110))))) then (if (not-caught-fail(v_1111) && success?(is-true(success?(1-proj-3-tuple(v_1111))))) then (if not-caught-fail(v_1112) then (if (not-caught-fail(v_1122) && success?(is-true(success?(1-proj-3-tuple(v_1122))))) then (if (v_1112 && 3-proj-3-tuple(v_1122)) then (if not-caught-fail(v_1123) then (v_1123,2-proj-3-tuple(v_1122),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {558}event RecvMsg(bob,alice,stagepack_e(sid),plaintext_e);
        {559}event RecvEnd(valid_1125)
    ) | (
        {561}event LeakPsk(phase0,alice,bob);
        {562}out(pub, key_psk(alice,bob))
    ) | (
        {563}phase 1;
        {564}event LeakPsk(phase1,alice,bob);
        {565}out(pub, key_psk(alice,bob))
    ) | (
        {566}event LeakS(phase0,bob);
        {567}out(pub, key_s(bob))
    ) | (
        {568}phase 1;
        {569}event LeakS(phase1,bob);
        {570}out(pub, key_s(bob))
    )
) | (
    {571}let v_1126: key = catch-fail(dhexp(key_s(bob),validkey(g))) in
    {572}let s_1127: keypair = (if not-caught-fail(v_1126) then keypairpack(validkey(v_1126),key_s(bob)) else fail-any) in
    {573}out(pub, getpublickey(s_1127));
    (
        {574}let e_1128: keypair = keypairpack(empty,empty) in
        {575}let rs_1129: key = empty in
        {576}let re_1130: key = empty in
        {577}let v_1131: bitstring = catch-fail(hash(somename,empty)) in
        {578}let v_1132: key = catch-fail(v_1131) in
        {579}let v_1133: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {580}let v_1134: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_1131) then (if not-caught-fail(v_1132) then (if not-caught-fail(v_1133) then symmetricstatepack(v_1133,v_1132,v_1131) else fail-any) else fail-any) else fail-any))) in
        {581}let v_1135: symmetricstate = catch-fail((if success?((if not-caught-fail(v_1131) then (if not-caught-fail(v_1132) then (if not-caught-fail(v_1133) then symmetricstatepack(v_1133,v_1132,v_1131) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_1134) && success?(is-true(success?(1-proj-3-tuple(v_1134))))) then symmetricstatepack(1-proj-3-tuple(v_1134),2-proj-3-tuple(v_1134),hash(3-proj-3-tuple(v_1134),empty)) else fail-any) else fail-any)) in
        {582}let v_1136: bitstring = catch-fail(symmetricstateunpack(v_1135)) in
        {583}let v_1137: symmetricstate = catch-fail((if success?(getpublickey(s_1127)) then (if (not-caught-fail(v_1136) && success?(is-true(success?(1-proj-3-tuple(v_1136))))) then symmetricstatepack(1-proj-3-tuple(v_1136),2-proj-3-tuple(v_1136),hash(3-proj-3-tuple(v_1136),getpublickey(s_1127))) else fail-any) else fail-any)) in
        {584}let hs_1138: handshakestate = (if not-caught-fail(v_1135) then (if not-caught-fail(v_1137) then handshakestatepack(v_1137,s_1127,e_1128,rs_1129,re_1130,key_psk(charlie,bob),false) else fail-any) else fail-any) in
        {585}insert statestore(bob,charlie,sid,statepack_a(hs_1138))
    ) | (
        {620}get statestore(=bob,=charlie,=sid,statepack_a(hs_1139: handshakestate)) in
        {586}in(pub, message_a_1140: bitstring);
        {587}let v_1141: bitstring = catch-fail(handshakestateunpack(hs_1139)) in
        {588}let v_1142: bitstring = catch-fail(deconcat3(message_a_1140)) in
        {589}let v_1143: bool = catch-fail(true) in
        {590}let v_1144: key = catch-fail(1-proj-3-tuple(v_1142)) in
        {591}let v_1145: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1141))) in
        {592}let v_1146: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_1141)) then (if (not-caught-fail(v_1145) && success?(is-true(success?(1-proj-3-tuple(v_1145))))) then symmetricstatepack(1-proj-3-tuple(v_1145),2-proj-3-tuple(v_1145),hash(3-proj-3-tuple(v_1145),v_1144)) else fail-any) else fail-any)) in
        {593}let v_1147: bitstring = catch-fail(symmetricstateunpack(v_1146)) in
        {594}let v_1148: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1147),v_1144)) in
        {595}let v_1149: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1147),v_1144)) in
        {596}let v_1150: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1147),v_1144)) in
        {597}let v_1151: bitstring = catch-fail((if success?(2-proj-3-tuple(v_1147)) then (if not-caught-fail(v_1148) then (if not-caught-fail(v_1149) then (if not-caught-fail(v_1150) then (v_1148,v_1149,v_1150) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {598}let v_1152: symmetricstate = catch-fail((if (not-caught-fail(v_1147) && success?(is-true(success?(1-proj-3-tuple(v_1147))))) then (if (not-caught-fail(v_1151) && success?(is-true(success?(1-proj-3-tuple(v_1151))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1151)) then cipherstatepack(2-proj-3-tuple(v_1151),minnonce) else fail-any),1-proj-3-tuple(v_1151),3-proj-3-tuple(v_1147)) else fail-any) else fail-any)) in
        {599}let v_1153: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_1141))) in
        {600}let v_1154: bitstring = catch-fail(symmetricstateunpack(v_1152)) in
        {601}let v_1155: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1154),(if success?(2-proj-7-tuple(v_1141)) then (if (not-caught-fail(v_1153) && success?(is-true(success?(1-proj-2-tuple(v_1153))))) then dhexp(2-proj-2-tuple(v_1153),v_1144) else fail-any) else fail-any))) in
        {602}let v_1156: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1154),(if success?(2-proj-7-tuple(v_1141)) then (if (not-caught-fail(v_1153) && success?(is-true(success?(1-proj-2-tuple(v_1153))))) then dhexp(2-proj-2-tuple(v_1153),v_1144) else fail-any) else fail-any))) in
        {603}let v_1157: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1154),(if success?(2-proj-7-tuple(v_1141)) then (if (not-caught-fail(v_1153) && success?(is-true(success?(1-proj-2-tuple(v_1153))))) then dhexp(2-proj-2-tuple(v_1153),v_1144) else fail-any) else fail-any))) in
        {604}let v_1158: bitstring = catch-fail((if (success?((if success?(2-proj-7-tuple(v_1141)) then (if (not-caught-fail(v_1153) && success?(is-true(success?(1-proj-2-tuple(v_1153))))) then dhexp(2-proj-2-tuple(v_1153),v_1144) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_1154))) then (if not-caught-fail(v_1155) then (if not-caught-fail(v_1156) then (if not-caught-fail(v_1157) then (v_1155,v_1156,v_1157) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {605}let v_1159: symmetricstate = catch-fail((if success?((if success?(2-proj-7-tuple(v_1141)) then (if (not-caught-fail(v_1153) && success?(is-true(success?(1-proj-2-tuple(v_1153))))) then dhexp(2-proj-2-tuple(v_1153),v_1144) else fail-any) else fail-any)) then (if (not-caught-fail(v_1154) && success?(is-true(success?(1-proj-3-tuple(v_1154))))) then (if (not-caught-fail(v_1158) && success?(is-true(success?(1-proj-3-tuple(v_1158))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1158)) then cipherstatepack(2-proj-3-tuple(v_1158),minnonce) else fail-any),1-proj-3-tuple(v_1158),3-proj-3-tuple(v_1154)) else fail-any) else fail-any) else fail-any)) in
        {606}let v_1160: bitstring = catch-fail(symmetricstateunpack(v_1159)) in
        {607}let v_1161: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1160))) in
        {608}let v_1162: aead = catch-fail(decrypt(1-proj-2-tuple(v_1161),2-proj-2-tuple(v_1161),3-proj-3-tuple(v_1160),3-proj-3-tuple(v_1142))) in
        {609}let v_1163: bitstring = catch-fail(aeadunpack(v_1162)) in
        {610}let v_1164: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1160))) in
        {611}let v_1165: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1161))) && success?(1-proj-3-tuple(v_1160))) then (if (not-caught-fail(v_1164) && success?(is-true(success?(1-proj-2-tuple(v_1164))))) then cipherstatepack(1-proj-2-tuple(v_1164),increment_nonce(2-proj-2-tuple(v_1161))) else fail-any) else fail-any)) in
        {612}let v_1166: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1142)) && (success?(3-proj-3-tuple(v_1160)) && success?(1-proj-3-tuple(v_1160)))) then (if (not-caught-fail(v_1161) && success?(is-true(success?(1-proj-2-tuple(v_1161))))) then (if not-caught-fail(v_1162) then (if (not-caught-fail(v_1163) && success?(is-true(success?(1-proj-3-tuple(v_1163))))) then (if not-caught-fail(v_1165) then (v_1165,3-proj-3-tuple(v_1163),1-proj-3-tuple(v_1163)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {613}let v_1167: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1166),2-proj-3-tuple(v_1160),3-proj-3-tuple(v_1160)))) in
        {614}let v_1168: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_1142)) && success?(symmetricstatepack(1-proj-3-tuple(v_1166),2-proj-3-tuple(v_1160),3-proj-3-tuple(v_1160)))) then (if (not-caught-fail(v_1167) && success?(is-true(success?(1-proj-3-tuple(v_1167))))) then symmetricstatepack(1-proj-3-tuple(v_1167),2-proj-3-tuple(v_1167),hash(3-proj-3-tuple(v_1167),3-proj-3-tuple(v_1142))) else fail-any) else fail-any)) in
        {615}let v_1169: bitstring = catch-fail((if success?(3-proj-3-tuple(v_1142)) then (if (not-caught-fail(v_1160) && success?(is-true(success?(1-proj-3-tuple(v_1160))))) then (if (not-caught-fail(v_1166) && success?(is-true(success?(1-proj-3-tuple(v_1166))))) then (if not-caught-fail(v_1168) then (v_1168,2-proj-3-tuple(v_1166),3-proj-3-tuple(v_1166)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {616}let v_1170: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_1169),2-proj-7-tuple(v_1141),3-proj-7-tuple(v_1141),4-proj-7-tuple(v_1141),v_1144,6-proj-7-tuple(v_1141),7-proj-7-tuple(v_1141))) in
        {617}let (hs_1171: handshakestate,plaintext_a_1172: bitstring,valid_1173: bool) = (if (not-caught-fail(v_1141) && success?(is-true(success?(1-proj-7-tuple(v_1141))))) then (if (not-caught-fail(v_1142) && success?(is-true(success?(1-proj-3-tuple(v_1142))))) then (if not-caught-fail(v_1143) then (if not-caught-fail(v_1144) then (if not-caught-fail(v_1146) then (if not-caught-fail(v_1152) then (if not-caught-fail(v_1159) then (if (not-caught-fail(v_1169) && success?(is-true(success?(1-proj-3-tuple(v_1169))))) then (if (v_1143 && 3-proj-3-tuple(v_1169)) then (if not-caught-fail(v_1170) then (v_1170,2-proj-3-tuple(v_1169),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {618}event RecvMsg(bob,charlie,stagepack_a(sid),plaintext_a_1172);
        {619}insert statestore(bob,charlie,sid,statepack_b(hs_1171))
    ) | (
        {656}get statestore(=bob,=charlie,=sid,statepack_b(hs_1174: handshakestate)) in
        {621}let v_1175: bitstring = catch-fail(handshakestateunpack(hs_1174)) in
        {622}let v_1176: bitstring = catch-fail((empty,empty,empty)) in
        {623}let v_1177: key = catch-fail(dhexp(key_e(bob,charlie,sid),validkey(g))) in
        {624}let v_1178: keypair = catch-fail((if not-caught-fail(v_1177) then keypairpack(validkey(v_1177),key_e(bob,charlie,sid)) else fail-any)) in
        {625}let v_1179: bitstring = catch-fail(getpublickey(v_1178)) in
        {626}let v_1180: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1175))) in
        {627}let v_1181: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_1175)) then (if (not-caught-fail(v_1180) && success?(is-true(success?(1-proj-3-tuple(v_1180))))) then symmetricstatepack(1-proj-3-tuple(v_1180),2-proj-3-tuple(v_1180),hash(3-proj-3-tuple(v_1180),v_1179)) else fail-any) else fail-any)) in
        {628}let v_1182: bitstring = catch-fail(symmetricstateunpack(v_1181)) in
        {629}let v_1183: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1182),getpublickey(v_1178))) in
        {630}let v_1184: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1182),getpublickey(v_1178))) in
        {631}let v_1185: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1182),getpublickey(v_1178))) in
        {632}let v_1186: bitstring = catch-fail((if (success?(getpublickey(v_1178)) && success?(2-proj-3-tuple(v_1182))) then (if not-caught-fail(v_1183) then (if not-caught-fail(v_1184) then (if not-caught-fail(v_1185) then (v_1183,v_1184,v_1185) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {633}let v_1187: symmetricstate = catch-fail((if success?(getpublickey(v_1178)) then (if (not-caught-fail(v_1182) && success?(is-true(success?(1-proj-3-tuple(v_1182))))) then (if (not-caught-fail(v_1186) && success?(is-true(success?(1-proj-3-tuple(v_1186))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1186)) then cipherstatepack(2-proj-3-tuple(v_1186),minnonce) else fail-any),1-proj-3-tuple(v_1186),3-proj-3-tuple(v_1182)) else fail-any) else fail-any) else fail-any)) in
        {634}let v_1188: bitstring = catch-fail(keypairunpack(v_1178)) in
        {635}let v_1189: bitstring = catch-fail(symmetricstateunpack(v_1187)) in
        {636}let v_1190: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1189),(if success?(5-proj-7-tuple(v_1175)) then (if (not-caught-fail(v_1188) && success?(is-true(success?(1-proj-2-tuple(v_1188))))) then dhexp(2-proj-2-tuple(v_1188),5-proj-7-tuple(v_1175)) else fail-any) else fail-any))) in
        {637}let v_1191: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1189),(if success?(5-proj-7-tuple(v_1175)) then (if (not-caught-fail(v_1188) && success?(is-true(success?(1-proj-2-tuple(v_1188))))) then dhexp(2-proj-2-tuple(v_1188),5-proj-7-tuple(v_1175)) else fail-any) else fail-any))) in
        {638}let v_1192: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1189),(if success?(5-proj-7-tuple(v_1175)) then (if (not-caught-fail(v_1188) && success?(is-true(success?(1-proj-2-tuple(v_1188))))) then dhexp(2-proj-2-tuple(v_1188),5-proj-7-tuple(v_1175)) else fail-any) else fail-any))) in
        {639}let v_1193: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_1175)) then (if (not-caught-fail(v_1188) && success?(is-true(success?(1-proj-2-tuple(v_1188))))) then dhexp(2-proj-2-tuple(v_1188),5-proj-7-tuple(v_1175)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_1189))) then (if not-caught-fail(v_1190) then (if not-caught-fail(v_1191) then (if not-caught-fail(v_1192) then (v_1190,v_1191,v_1192) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {640}let v_1194: symmetricstate = catch-fail((if success?((if success?(5-proj-7-tuple(v_1175)) then (if (not-caught-fail(v_1188) && success?(is-true(success?(1-proj-2-tuple(v_1188))))) then dhexp(2-proj-2-tuple(v_1188),5-proj-7-tuple(v_1175)) else fail-any) else fail-any)) then (if (not-caught-fail(v_1189) && success?(is-true(success?(1-proj-3-tuple(v_1189))))) then (if (not-caught-fail(v_1193) && success?(is-true(success?(1-proj-3-tuple(v_1193))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1193)) then cipherstatepack(2-proj-3-tuple(v_1193),minnonce) else fail-any),1-proj-3-tuple(v_1193),3-proj-3-tuple(v_1189)) else fail-any) else fail-any) else fail-any)) in
        {641}let v_1195: bitstring = catch-fail(symmetricstateunpack(v_1194)) in
        {642}let v_1196: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1195))) in
        {643}let v_1197: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_1196),2-proj-2-tuple(v_1196),3-proj-3-tuple(v_1195),msg_b(bob,charlie,sid))) in
        {644}let v_1198: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1195))) in
        {645}let v_1199: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1196))) && success?(1-proj-3-tuple(v_1195))) then (if (not-caught-fail(v_1198) && success?(is-true(success?(1-proj-2-tuple(v_1198))))) then cipherstatepack(1-proj-2-tuple(v_1198),increment_nonce(2-proj-2-tuple(v_1196))) else fail-any) else fail-any)) in
        {646}let v_1200: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1195)) && success?(1-proj-3-tuple(v_1195))) then (if (not-caught-fail(v_1196) && success?(is-true(success?(1-proj-2-tuple(v_1196))))) then (if not-caught-fail(v_1197) then (if not-caught-fail(v_1199) then (v_1199,v_1197) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {647}let v_1201: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_1200),2-proj-3-tuple(v_1195),3-proj-3-tuple(v_1195)))) in
        {648}let v_1202: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_1200)) && success?(symmetricstatepack(1-proj-2-tuple(v_1200),2-proj-3-tuple(v_1195),3-proj-3-tuple(v_1195)))) then (if (not-caught-fail(v_1201) && success?(is-true(success?(1-proj-3-tuple(v_1201))))) then symmetricstatepack(1-proj-3-tuple(v_1201),2-proj-3-tuple(v_1201),hash(3-proj-3-tuple(v_1201),2-proj-2-tuple(v_1200))) else fail-any) else fail-any)) in
        {649}let v_1203: bitstring = catch-fail((if (not-caught-fail(v_1195) && success?(is-true(success?(1-proj-3-tuple(v_1195))))) then (if (not-caught-fail(v_1200) && success?(is-true(success?(1-proj-2-tuple(v_1200))))) then (if not-caught-fail(v_1202) then (v_1202,2-proj-2-tuple(v_1200)) else fail-any) else fail-any) else fail-any)) in
        {650}let v_1204: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_1203),2-proj-7-tuple(v_1175),v_1178,4-proj-7-tuple(v_1175),5-proj-7-tuple(v_1175),6-proj-7-tuple(v_1175),7-proj-7-tuple(v_1175))) in
        {651}let v_1205: bitstring = catch-fail(concat3(v_1179,2-proj-3-tuple(v_1176),2-proj-2-tuple(v_1203))) in
        {652}let (hs_1206: handshakestate,message_b_1207: bitstring) = (if (not-caught-fail(v_1175) && success?(is-true(success?(1-proj-7-tuple(v_1175))))) then (if (not-caught-fail(v_1176) && success?(is-true(success?(1-proj-3-tuple(v_1176))))) then (if not-caught-fail(v_1178) then (if not-caught-fail(v_1179) then (if not-caught-fail(v_1181) then (if not-caught-fail(v_1187) then (if not-caught-fail(v_1194) then (if (not-caught-fail(v_1203) && success?(is-true(success?(1-proj-2-tuple(v_1203))))) then (if not-caught-fail(v_1204) then (if not-caught-fail(v_1205) then (v_1204,v_1205) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {653}event SendMsg(bob,charlie,stagepack_b(sid),msg_b(bob,charlie,sid));
        {654}insert statestore(bob,charlie,sid,statepack_c(hs_1206));
        {655}out(pub, message_b_1207)
    ) | (
        {710}get statestore(=bob,=charlie,=sid,statepack_c(hs_1208: handshakestate)) in
        {657}in(pub, message_c_1209: bitstring);
        {658}let v_1210: bitstring = catch-fail(handshakestateunpack(hs_1208)) in
        {659}let v_1211: bitstring = catch-fail(deconcat3(message_c_1209)) in
        {660}let v_1212: bool = catch-fail(true) in
        {661}let v_1213: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1210))) in
        {662}let v_1214: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1213))) in
        {663}let v_1215: aead = catch-fail(decrypt(1-proj-2-tuple(v_1214),2-proj-2-tuple(v_1214),3-proj-3-tuple(v_1213),2-proj-3-tuple(v_1211))) in
        {664}let v_1216: bitstring = catch-fail(aeadunpack(v_1215)) in
        {665}let v_1217: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1213))) in
        {666}let v_1218: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1214))) && success?(1-proj-3-tuple(v_1213))) then (if (not-caught-fail(v_1217) && success?(is-true(success?(1-proj-2-tuple(v_1217))))) then cipherstatepack(1-proj-2-tuple(v_1217),increment_nonce(2-proj-2-tuple(v_1214))) else fail-any) else fail-any)) in
        {667}let v_1219: bitstring = catch-fail((if (success?(2-proj-3-tuple(v_1211)) && (success?(3-proj-3-tuple(v_1213)) && success?(1-proj-3-tuple(v_1213)))) then (if (not-caught-fail(v_1214) && success?(is-true(success?(1-proj-2-tuple(v_1214))))) then (if not-caught-fail(v_1215) then (if (not-caught-fail(v_1216) && success?(is-true(success?(1-proj-3-tuple(v_1216))))) then (if not-caught-fail(v_1218) then (v_1218,3-proj-3-tuple(v_1216),1-proj-3-tuple(v_1216)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {668}let v_1220: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1219),2-proj-3-tuple(v_1213),3-proj-3-tuple(v_1213)))) in
        {669}let v_1221: symmetricstate = catch-fail((if (success?(2-proj-3-tuple(v_1211)) && success?(symmetricstatepack(1-proj-3-tuple(v_1219),2-proj-3-tuple(v_1213),3-proj-3-tuple(v_1213)))) then (if (not-caught-fail(v_1220) && success?(is-true(success?(1-proj-3-tuple(v_1220))))) then symmetricstatepack(1-proj-3-tuple(v_1220),2-proj-3-tuple(v_1220),hash(3-proj-3-tuple(v_1220),2-proj-3-tuple(v_1211))) else fail-any) else fail-any)) in
        {670}let v_1222: bitstring = catch-fail((if (success?(2-proj-3-tuple(v_1211)) && success?(1-proj-7-tuple(v_1210))) then (if (not-caught-fail(v_1213) && success?(is-true(success?(1-proj-3-tuple(v_1213))))) then (if (not-caught-fail(v_1219) && success?(is-true(success?(1-proj-3-tuple(v_1219))))) then (if not-caught-fail(v_1221) then (v_1221,2-proj-3-tuple(v_1219),3-proj-3-tuple(v_1219)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {671}let v_1223: key = catch-fail(2-proj-3-tuple(v_1222)) in
        {672}let v_1224: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_1210))) in
        {673}let v_1225: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_1222))) in
        {674}let v_1226: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1225),(if success?(3-proj-7-tuple(v_1210)) then (if (not-caught-fail(v_1224) && success?(is-true(success?(1-proj-2-tuple(v_1224))))) then dhexp(2-proj-2-tuple(v_1224),v_1223) else fail-any) else fail-any))) in
        {675}let v_1227: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1225),(if success?(3-proj-7-tuple(v_1210)) then (if (not-caught-fail(v_1224) && success?(is-true(success?(1-proj-2-tuple(v_1224))))) then dhexp(2-proj-2-tuple(v_1224),v_1223) else fail-any) else fail-any))) in
        {676}let v_1228: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1225),(if success?(3-proj-7-tuple(v_1210)) then (if (not-caught-fail(v_1224) && success?(is-true(success?(1-proj-2-tuple(v_1224))))) then dhexp(2-proj-2-tuple(v_1224),v_1223) else fail-any) else fail-any))) in
        {677}let v_1229: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_1210)) then (if (not-caught-fail(v_1224) && success?(is-true(success?(1-proj-2-tuple(v_1224))))) then dhexp(2-proj-2-tuple(v_1224),v_1223) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_1225))) then (if not-caught-fail(v_1226) then (if not-caught-fail(v_1227) then (if not-caught-fail(v_1228) then (v_1226,v_1227,v_1228) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {678}let v_1230: symmetricstate = catch-fail((if (success?((if success?(3-proj-7-tuple(v_1210)) then (if (not-caught-fail(v_1224) && success?(is-true(success?(1-proj-2-tuple(v_1224))))) then dhexp(2-proj-2-tuple(v_1224),v_1223) else fail-any) else fail-any)) && success?(1-proj-3-tuple(v_1222))) then (if (not-caught-fail(v_1225) && success?(is-true(success?(1-proj-3-tuple(v_1225))))) then (if (not-caught-fail(v_1229) && success?(is-true(success?(1-proj-3-tuple(v_1229))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1229)) then cipherstatepack(2-proj-3-tuple(v_1229),minnonce) else fail-any),1-proj-3-tuple(v_1229),3-proj-3-tuple(v_1225)) else fail-any) else fail-any) else fail-any)) in
        {679}let v_1231: bitstring = catch-fail(symmetricstateunpack(v_1230)) in
        {680}let v_1232: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1231),6-proj-7-tuple(v_1210))) in
        {681}let v_1233: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1231),6-proj-7-tuple(v_1210))) in
        {682}let v_1234: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1231),6-proj-7-tuple(v_1210))) in
        {683}let v_1235: bitstring = catch-fail((if (success?(6-proj-7-tuple(v_1210)) && success?(2-proj-3-tuple(v_1231))) then (if not-caught-fail(v_1232) then (if not-caught-fail(v_1233) then (if not-caught-fail(v_1234) then (v_1232,v_1233,v_1234) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {684}let v_1236: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1231),1-proj-3-tuple(v_1235),3-proj-3-tuple(v_1231)))) in
        {685}let v_1237: bitstring = catch-fail(symmetricstateunpack((if (success?(2-proj-3-tuple(v_1235)) && success?(symmetricstatepack(1-proj-3-tuple(v_1231),1-proj-3-tuple(v_1235),3-proj-3-tuple(v_1231)))) then (if (not-caught-fail(v_1236) && success?(is-true(success?(1-proj-3-tuple(v_1236))))) then symmetricstatepack(1-proj-3-tuple(v_1236),2-proj-3-tuple(v_1236),hash(3-proj-3-tuple(v_1236),2-proj-3-tuple(v_1235))) else fail-any) else fail-any))) in
        {686}let v_1238: symmetricstate = catch-fail((if success?(6-proj-7-tuple(v_1210)) then (if (not-caught-fail(v_1231) && success?(is-true(success?(1-proj-3-tuple(v_1231))))) then (if (not-caught-fail(v_1235) && success?(is-true(success?(1-proj-3-tuple(v_1235))))) then (if (not-caught-fail(v_1237) && success?(is-true(success?(1-proj-3-tuple(v_1237))))) then symmetricstatepack((if success?(3-proj-3-tuple(v_1235)) then cipherstatepack(3-proj-3-tuple(v_1235),minnonce) else fail-any),1-proj-3-tuple(v_1235),3-proj-3-tuple(v_1237)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {687}let v_1239: bitstring = catch-fail(symmetricstateunpack(v_1238)) in
        {688}let v_1240: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1239))) in
        {689}let v_1241: aead = catch-fail(decrypt(1-proj-2-tuple(v_1240),2-proj-2-tuple(v_1240),3-proj-3-tuple(v_1239),3-proj-3-tuple(v_1211))) in
        {690}let v_1242: bitstring = catch-fail(aeadunpack(v_1241)) in
        {691}let v_1243: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1239))) in
        {692}let v_1244: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1240))) && success?(1-proj-3-tuple(v_1239))) then (if (not-caught-fail(v_1243) && success?(is-true(success?(1-proj-2-tuple(v_1243))))) then cipherstatepack(1-proj-2-tuple(v_1243),increment_nonce(2-proj-2-tuple(v_1240))) else fail-any) else fail-any)) in
        {693}let v_1245: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1211)) && (success?(3-proj-3-tuple(v_1239)) && success?(1-proj-3-tuple(v_1239)))) then (if (not-caught-fail(v_1240) && success?(is-true(success?(1-proj-2-tuple(v_1240))))) then (if not-caught-fail(v_1241) then (if (not-caught-fail(v_1242) && success?(is-true(success?(1-proj-3-tuple(v_1242))))) then (if not-caught-fail(v_1244) then (v_1244,3-proj-3-tuple(v_1242),1-proj-3-tuple(v_1242)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {694}let v_1246: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1245),2-proj-3-tuple(v_1239),3-proj-3-tuple(v_1239)))) in
        {695}let v_1247: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_1211)) && success?(symmetricstatepack(1-proj-3-tuple(v_1245),2-proj-3-tuple(v_1239),3-proj-3-tuple(v_1239)))) then (if (not-caught-fail(v_1246) && success?(is-true(success?(1-proj-3-tuple(v_1246))))) then symmetricstatepack(1-proj-3-tuple(v_1246),2-proj-3-tuple(v_1246),hash(3-proj-3-tuple(v_1246),3-proj-3-tuple(v_1211))) else fail-any) else fail-any)) in
        {696}let v_1248: bitstring = catch-fail((if success?(3-proj-3-tuple(v_1211)) then (if (not-caught-fail(v_1239) && success?(is-true(success?(1-proj-3-tuple(v_1239))))) then (if (not-caught-fail(v_1245) && success?(is-true(success?(1-proj-3-tuple(v_1245))))) then (if not-caught-fail(v_1247) then (v_1247,2-proj-3-tuple(v_1245),3-proj-3-tuple(v_1245)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {697}let v_1249: key = catch-fail(dhexp(key_s(charlie),validkey(g))) in
        {698}let v_1250: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_1248),2-proj-7-tuple(v_1210),3-proj-7-tuple(v_1210),v_1223,5-proj-7-tuple(v_1210),6-proj-7-tuple(v_1210),7-proj-7-tuple(v_1210))) in
        {699}let v_1251: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_1248))) in
        {700}let v_1252: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1251),zero)) in
        {701}let v_1253: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1251),zero)) in
        {702}let v_1254: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1251),zero)) in
        {703}let v_1255: bitstring = catch-fail((if success?(2-proj-3-tuple(v_1251)) then (if not-caught-fail(v_1252) then (if not-caught-fail(v_1253) then (if not-caught-fail(v_1254) then (v_1252,v_1253,v_1254) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {704}let v_1256: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_1255)) then cipherstatepack(1-proj-3-tuple(v_1255),minnonce) else fail-any)) in
        {705}let v_1257: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_1255)) then cipherstatepack(2-proj-3-tuple(v_1255),minnonce) else fail-any)) in
        {706}let v_1258: bitstring = catch-fail((if success?(1-proj-3-tuple(v_1248)) then (if (not-caught-fail(v_1251) && success?(is-true(success?(1-proj-3-tuple(v_1251))))) then (if (not-caught-fail(v_1255) && success?(is-true(success?(1-proj-3-tuple(v_1255))))) then (if not-caught-fail(v_1256) then (if not-caught-fail(v_1257) then (1-proj-3-tuple(v_1248),v_1256,v_1257) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {707}let (hs_1259: handshakestate,plaintext_c_1260: bitstring,valid_1261: bool,cs1_1262: cipherstate,cs2_1263: cipherstate) = (if (not-caught-fail(v_1210) && success?(is-true(success?(1-proj-7-tuple(v_1210))))) then (if (not-caught-fail(v_1211) && success?(is-true(success?(1-proj-3-tuple(v_1211))))) then (if not-caught-fail(v_1212) then (if (not-caught-fail(v_1222) && success?(is-true(success?(1-proj-3-tuple(v_1222))))) then (if not-caught-fail(v_1223) then (if not-caught-fail(v_1230) then (if not-caught-fail(v_1238) then (if (not-caught-fail(v_1248) && success?(is-true(success?(1-proj-3-tuple(v_1248))))) then (if ((3-proj-3-tuple(v_1222) && 3-proj-3-tuple(v_1248)) && (v_1223 = getpublickey((if not-caught-fail(v_1249) then keypairpack(validkey(v_1249),key_s(charlie)) else fail-any)))) then (if not-caught-fail(v_1250) then (if (not-caught-fail(v_1258) && success?(is-true(success?(1-proj-3-tuple(v_1258))))) then (v_1250,2-proj-3-tuple(v_1248),true,2-proj-3-tuple(v_1258),3-proj-3-tuple(v_1258)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {708}event RecvMsg(bob,charlie,stagepack_c(sid),plaintext_c_1260);
        {709}insert statestore(bob,charlie,sid,statepack_d(hs_1259,cs1_1262,cs2_1263))
    ) | (
        {711}!
        {730}get statestore(=bob,=charlie,=sid,statepack_d(hs_1264: handshakestate,cs1_1265: cipherstate,cs2_1266: cipherstate)) in
        {712}let hs_1267: handshakestate = handshakestatesetcs(hs_1264,cs2_1266) in
        {713}let v_1268: bitstring = catch-fail(handshakestateunpack(hs_1267)) in
        {714}let v_1269: bitstring = catch-fail((empty,empty,empty)) in
        {715}let v_1270: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1268))) in
        {716}let v_1271: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1270))) in
        {717}let v_1272: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_1271),2-proj-2-tuple(v_1271),3-proj-3-tuple(v_1270),msg_d(bob,charlie,sid))) in
        {718}let v_1273: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1270))) in
        {719}let v_1274: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1271))) && success?(1-proj-3-tuple(v_1270))) then (if (not-caught-fail(v_1273) && success?(is-true(success?(1-proj-2-tuple(v_1273))))) then cipherstatepack(1-proj-2-tuple(v_1273),increment_nonce(2-proj-2-tuple(v_1271))) else fail-any) else fail-any)) in
        {720}let v_1275: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1270)) && success?(1-proj-3-tuple(v_1270))) then (if (not-caught-fail(v_1271) && success?(is-true(success?(1-proj-2-tuple(v_1271))))) then (if not-caught-fail(v_1272) then (if not-caught-fail(v_1274) then (v_1274,v_1272) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {721}let v_1276: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_1275),2-proj-3-tuple(v_1270),3-proj-3-tuple(v_1270)))) in
        {722}let v_1277: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_1275)) && success?(symmetricstatepack(1-proj-2-tuple(v_1275),2-proj-3-tuple(v_1270),3-proj-3-tuple(v_1270)))) then (if (not-caught-fail(v_1276) && success?(is-true(success?(1-proj-3-tuple(v_1276))))) then symmetricstatepack(1-proj-3-tuple(v_1276),2-proj-3-tuple(v_1276),hash(3-proj-3-tuple(v_1276),2-proj-2-tuple(v_1275))) else fail-any) else fail-any)) in
        {723}let v_1278: bitstring = catch-fail((if success?(1-proj-7-tuple(v_1268)) then (if (not-caught-fail(v_1270) && success?(is-true(success?(1-proj-3-tuple(v_1270))))) then (if (not-caught-fail(v_1275) && success?(is-true(success?(1-proj-2-tuple(v_1275))))) then (if not-caught-fail(v_1277) then (v_1277,2-proj-2-tuple(v_1275)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {724}let v_1279: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_1278),2-proj-7-tuple(v_1268),3-proj-7-tuple(v_1268),4-proj-7-tuple(v_1268),5-proj-7-tuple(v_1268),6-proj-7-tuple(v_1268),7-proj-7-tuple(v_1268))) in
        {725}let v_1280: bitstring = catch-fail(concat3(1-proj-3-tuple(v_1269),2-proj-3-tuple(v_1269),2-proj-2-tuple(v_1278))) in
        {726}let (hs_1281: handshakestate,message_d_1282: bitstring) = (if (not-caught-fail(v_1268) && success?(is-true(success?(1-proj-7-tuple(v_1268))))) then (if (not-caught-fail(v_1269) && success?(is-true(success?(1-proj-3-tuple(v_1269))))) then (if (not-caught-fail(v_1278) && success?(is-true(success?(1-proj-2-tuple(v_1278))))) then (if not-caught-fail(v_1279) then (if not-caught-fail(v_1280) then (v_1279,v_1280) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {727}event SendMsg(bob,charlie,stagepack_d(sid),msg_d(bob,charlie,sid));
        {728}insert statestore(bob,charlie,sid,statepack_e(hs_1281,cs1_1265,handshakestategetcs(hs_1281)));
        {729}out(pub, message_d_1282)
    ) | (
        {731}!
        {751}get statestore(=bob,=charlie,=sid,statepack_e(hs_1283: handshakestate,cs1_1284: cipherstate,cs2_1285: cipherstate)) in
        {732}let hs_1286: handshakestate = handshakestatesetcs(hs_1283,cs1_1284) in
        {733}in(pub, message_e_1287: bitstring);
        {734}let v_1288: bitstring = catch-fail(handshakestateunpack(hs_1286)) in
        {735}let v_1289: bitstring = catch-fail(deconcat3(message_e_1287)) in
        {736}let v_1290: bool = catch-fail(true) in
        {737}let v_1291: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1288))) in
        {738}let v_1292: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1291))) in
        {739}let v_1293: aead = catch-fail(decrypt(1-proj-2-tuple(v_1292),2-proj-2-tuple(v_1292),3-proj-3-tuple(v_1291),3-proj-3-tuple(v_1289))) in
        {740}let v_1294: bitstring = catch-fail(aeadunpack(v_1293)) in
        {741}let v_1295: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1291))) in
        {742}let v_1296: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1292))) && success?(1-proj-3-tuple(v_1291))) then (if (not-caught-fail(v_1295) && success?(is-true(success?(1-proj-2-tuple(v_1295))))) then cipherstatepack(1-proj-2-tuple(v_1295),increment_nonce(2-proj-2-tuple(v_1292))) else fail-any) else fail-any)) in
        {743}let v_1297: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1289)) && (success?(3-proj-3-tuple(v_1291)) && success?(1-proj-3-tuple(v_1291)))) then (if (not-caught-fail(v_1292) && success?(is-true(success?(1-proj-2-tuple(v_1292))))) then (if not-caught-fail(v_1293) then (if (not-caught-fail(v_1294) && success?(is-true(success?(1-proj-3-tuple(v_1294))))) then (if not-caught-fail(v_1296) then (v_1296,3-proj-3-tuple(v_1294),1-proj-3-tuple(v_1294)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {744}let v_1298: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1297),2-proj-3-tuple(v_1291),3-proj-3-tuple(v_1291)))) in
        {745}let v_1299: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_1289)) && success?(symmetricstatepack(1-proj-3-tuple(v_1297),2-proj-3-tuple(v_1291),3-proj-3-tuple(v_1291)))) then (if (not-caught-fail(v_1298) && success?(is-true(success?(1-proj-3-tuple(v_1298))))) then symmetricstatepack(1-proj-3-tuple(v_1298),2-proj-3-tuple(v_1298),hash(3-proj-3-tuple(v_1298),3-proj-3-tuple(v_1289))) else fail-any) else fail-any)) in
        {746}let v_1300: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1289)) && success?(1-proj-7-tuple(v_1288))) then (if (not-caught-fail(v_1291) && success?(is-true(success?(1-proj-3-tuple(v_1291))))) then (if (not-caught-fail(v_1297) && success?(is-true(success?(1-proj-3-tuple(v_1297))))) then (if not-caught-fail(v_1299) then (v_1299,2-proj-3-tuple(v_1297),3-proj-3-tuple(v_1297)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {747}let v_1301: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_1300),2-proj-7-tuple(v_1288),3-proj-7-tuple(v_1288),4-proj-7-tuple(v_1288),5-proj-7-tuple(v_1288),6-proj-7-tuple(v_1288),7-proj-7-tuple(v_1288))) in
        {748}let (hs_1302: handshakestate,plaintext_e_1303: bitstring,valid_1304: bool) = (if (not-caught-fail(v_1288) && success?(is-true(success?(1-proj-7-tuple(v_1288))))) then (if (not-caught-fail(v_1289) && success?(is-true(success?(1-proj-3-tuple(v_1289))))) then (if not-caught-fail(v_1290) then (if (not-caught-fail(v_1300) && success?(is-true(success?(1-proj-3-tuple(v_1300))))) then (if (v_1290 && 3-proj-3-tuple(v_1300)) then (if not-caught-fail(v_1301) then (v_1301,2-proj-3-tuple(v_1300),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {749}event RecvMsg(bob,charlie,stagepack_e(sid),plaintext_e_1303);
        {750}event RecvEnd(valid_1304)
    ) | (
        {752}event LeakPsk(phase0,charlie,bob);
        {753}out(pub, key_psk(charlie,bob))
    ) | (
        {754}phase 1;
        {755}event LeakPsk(phase1,charlie,bob);
        {756}out(pub, key_psk(charlie,bob))
    ) | (
        {757}event LeakS(phase0,bob);
        {758}out(pub, key_s(bob))
    ) | (
        {759}phase 1;
        {760}event LeakS(phase1,bob);
        {761}out(pub, key_s(bob))
    )
)

-- Query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1422,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1422,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)); not attacker_p1(msg_a(alice,bob,sid_a)); attacker_p1(msg_a(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase1,alice,bob))) || (event(LeakS(phase1,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase1,bob)) && event(LeakPsk(phase1,alice,bob))); attacker_p1(msg_a(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,alice))); attacker_p1(msg_a(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1422,stagepack_b(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1422,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)); not attacker_p1(msg_b(bob,alice,sid_b)); attacker_p1(msg_b(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase1,alice,bob))) || (event(LeakS(phase1,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase1,alice)) && event(LeakPsk(phase1,alice,bob))); attacker_p1(msg_b(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,bob))); attacker_p1(msg_b(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1422,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1422,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)); not attacker_p1(msg_c(alice,bob,sid_a)); attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase1,alice,bob))) || (event(LeakS(phase1,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase1,bob)) && event(LeakPsk(phase1,alice,bob))); attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,alice))); attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1422,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1422,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)); not attacker_p1(msg_d(bob,alice,sid_b)); attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase1,alice,bob))) || (event(LeakS(phase1,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase1,alice)) && event(LeakPsk(phase1,alice,bob))); attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,bob))); attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)); event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1422,stagepack_e(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1422,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))); event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)); not attacker_p1(msg_e(alice,bob,sid_a)); attacker_p1(msg_e(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase1,alice,bob))) || (event(LeakS(phase1,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase1,bob)) && event(LeakPsk(phase1,alice,bob))); attacker_p1(msg_e(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,alice))); attacker_p1(msg_e(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))); not event(RecvEnd(true))
Completing...
200 rules inserted. The rule base contains 200 rules. 149 rules in the queue.
400 rules inserted. The rule base contains 382 rules. 59 rules in the queue.
600 rules inserted. The rule base contains 572 rules. 179 rules in the queue.
800 rules inserted. The rule base contains 759 rules. 155 rules in the queue.
1000 rules inserted. The rule base contains 959 rules. 399 rules in the queue.
1200 rules inserted. The rule base contains 1131 rules. 357 rules in the queue.
1400 rules inserted. The rule base contains 1294 rules. 246 rules in the queue.
1600 rules inserted. The rule base contains 1469 rules. 289 rules in the queue.
1800 rules inserted. The rule base contains 1641 rules. 394 rules in the queue.
2000 rules inserted. The rule base contains 1816 rules. 481 rules in the queue.
2200 rules inserted. The rule base contains 1985 rules. 517 rules in the queue.
2400 rules inserted. The rule base contains 2148 rules. 535 rules in the queue.
2600 rules inserted. The rule base contains 2290 rules. 544 rules in the queue.
2800 rules inserted. The rule base contains 2433 rules. 565 rules in the queue.
3000 rules inserted. The rule base contains 2560 rules. 579 rules in the queue.
3200 rules inserted. The rule base contains 2650 rules. 551 rules in the queue.
3400 rules inserted. The rule base contains 2715 rules. 528 rules in the queue.
3600 rules inserted. The rule base contains 2833 rules. 513 rules in the queue.
3800 rules inserted. The rule base contains 2997 rules. 527 rules in the queue.
4000 rules inserted. The rule base contains 3138 rules. 541 rules in the queue.
4200 rules inserted. The rule base contains 3271 rules. 554 rules in the queue.
4400 rules inserted. The rule base contains 3387 rules. 565 rules in the queue.
4600 rules inserted. The rule base contains 3504 rules. 530 rules in the queue.
4800 rules inserted. The rule base contains 3630 rules. 495 rules in the queue.
5000 rules inserted. The rule base contains 3726 rules. 522 rules in the queue.
5200 rules inserted. The rule base contains 3861 rules. 549 rules in the queue.
5400 rules inserted. The rule base contains 3985 rules. 578 rules in the queue.
5600 rules inserted. The rule base contains 4138 rules. 621 rules in the queue.
5800 rules inserted. The rule base contains 4287 rules. 684 rules in the queue.
6000 rules inserted. The rule base contains 4437 rules. 690 rules in the queue.
6200 rules inserted. The rule base contains 4552 rules. 680 rules in the queue.
6400 rules inserted. The rule base contains 4673 rules. 665 rules in the queue.
6600 rules inserted. The rule base contains 4761 rules. 658 rules in the queue.
6800 rules inserted. The rule base contains 4869 rules. 633 rules in the queue.
7000 rules inserted. The rule base contains 4992 rules. 616 rules in the queue.
7200 rules inserted. The rule base contains 5119 rules. 622 rules in the queue.
7400 rules inserted. The rule base contains 5248 rules. 632 rules in the queue.
7600 rules inserted. The rule base contains 5401 rules. 662 rules in the queue.
7800 rules inserted. The rule base contains 5502 rules. 676 rules in the queue.
8000 rules inserted. The rule base contains 5602 rules. 689 rules in the queue.
8200 rules inserted. The rule base contains 5694 rules. 706 rules in the queue.
8400 rules inserted. The rule base contains 5797 rules. 708 rules in the queue.
8600 rules inserted. The rule base contains 5900 rules. 711 rules in the queue.
8800 rules inserted. The rule base contains 6045 rules. 739 rules in the queue.
9000 rules inserted. The rule base contains 6143 rules. 716 rules in the queue.
9200 rules inserted. The rule base contains 6226 rules. 683 rules in the queue.
9400 rules inserted. The rule base contains 6319 rules. 688 rules in the queue.
9600 rules inserted. The rule base contains 6432 rules. 664 rules in the queue.
9800 rules inserted. The rule base contains 6581 rules. 646 rules in the queue.
10000 rules inserted. The rule base contains 6729 rules. 639 rules in the queue.
10200 rules inserted. The rule base contains 6858 rules. 598 rules in the queue.
10400 rules inserted. The rule base contains 7010 rules. 563 rules in the queue.
10600 rules inserted. The rule base contains 7138 rules. 548 rules in the queue.
10800 rules inserted. The rule base contains 7276 rules. 527 rules in the queue.
11000 rules inserted. The rule base contains 7388 rules. 502 rules in the queue.
11200 rules inserted. The rule base contains 7523 rules. 499 rules in the queue.
11400 rules inserted. The rule base contains 7686 rules. 506 rules in the queue.
11600 rules inserted. The rule base contains 7814 rules. 537 rules in the queue.
11800 rules inserted. The rule base contains 7969 rules. 602 rules in the queue.
12000 rules inserted. The rule base contains 8115 rules. 653 rules in the queue.
12200 rules inserted. The rule base contains 8251 rules. 662 rules in the queue.
12400 rules inserted. The rule base contains 8383 rules. 645 rules in the queue.
12600 rules inserted. The rule base contains 8496 rules. 676 rules in the queue.
12800 rules inserted. The rule base contains 8607 rules. 716 rules in the queue.
13000 rules inserted. The rule base contains 8746 rules. 702 rules in the queue.
13200 rules inserted. The rule base contains 8835 rules. 700 rules in the queue.
13400 rules inserted. The rule base contains 8936 rules. 669 rules in the queue.
13600 rules inserted. The rule base contains 9053 rules. 643 rules in the queue.
13800 rules inserted. The rule base contains 9157 rules. 647 rules in the queue.
14000 rules inserted. The rule base contains 9258 rules. 642 rules in the queue.
14200 rules inserted. The rule base contains 9394 rules. 628 rules in the queue.
14400 rules inserted. The rule base contains 9494 rules. 631 rules in the queue.
14600 rules inserted. The rule base contains 9574 rules. 610 rules in the queue.
14800 rules inserted. The rule base contains 9694 rules. 602 rules in the queue.
15000 rules inserted. The rule base contains 9765 rules. 575 rules in the queue.
15200 rules inserted. The rule base contains 9841 rules. 532 rules in the queue.
15400 rules inserted. The rule base contains 9954 rules. 531 rules in the queue.
15600 rules inserted. The rule base contains 10038 rules. 537 rules in the queue.
15800 rules inserted. The rule base contains 10178 rules. 559 rules in the queue.
16000 rules inserted. The rule base contains 10215 rules. 514 rules in the queue.
16200 rules inserted. The rule base contains 10326 rules. 484 rules in the queue.
16400 rules inserted. The rule base contains 10409 rules. 460 rules in the queue.
16600 rules inserted. The rule base contains 10548 rules. 463 rules in the queue.
16800 rules inserted. The rule base contains 10625 rules. 429 rules in the queue.
17000 rules inserted. The rule base contains 10733 rules. 407 rules in the queue.
17200 rules inserted. The rule base contains 10824 rules. 369 rules in the queue.
17400 rules inserted. The rule base contains 10951 rules. 347 rules in the queue.
17600 rules inserted. The rule base contains 11016 rules. 340 rules in the queue.
17800 rules inserted. The rule base contains 11134 rules. 337 rules in the queue.
18000 rules inserted. The rule base contains 11251 rules. 322 rules in the queue.
18200 rules inserted. The rule base contains 11328 rules. 357 rules in the queue.
18400 rules inserted. The rule base contains 11411 rules. 328 rules in the queue.
18600 rules inserted. The rule base contains 11479 rules. 273 rules in the queue.
18800 rules inserted. The rule base contains 11553 rules. 255 rules in the queue.
19000 rules inserted. The rule base contains 11601 rules. 226 rules in the queue.
19200 rules inserted. The rule base contains 11626 rules. 145 rules in the queue.
19400 rules inserted. The rule base contains 11649 rules. 66 rules in the queue.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79766618]),msg_a(alice,bob,sid[!1 = @sid_79766618]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_79766619]),msg_a(alice,bob,sid[!1 = @sid_79766618])))
RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1422,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79766627]),msg_a(alice,bob,sid[!1 = @sid_79766627]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_79766628]),msg_a(alice,bob,sid[!1 = @sid_79766627])))
RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1422,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1422,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79766637]),msg_a(alice,bob,sid[!1 = @sid_79766637]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_79766638]),msg_a(alice,bob,sid[!1 = @sid_79766637])))
RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1422,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79766647]),msg_a(alice,bob,sid[!1 = @sid_79766647]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_79766648]),msg_a(alice,bob,sid[!1 = @sid_79766647])))
RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79766656]),msg_a(alice,bob,sid[!1 = @sid_79766656]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_79766657]),msg_a(alice,bob,sid[!1 = @sid_79766656])))
RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query not attacker_p1(msg_a(alice,bob,sid_a))
goal reachable: begin(LeakS(phase1,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79766664]),msg_a(alice,bob,sid[!1 = @sid_79766664]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_79766664]))
Abbreviations:
sid_79766752 = sid[!1 = @sid_79766728]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_79766752,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,sid_79766752,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true)))).

3. The entry statestore(alice,bob,sid_79766752,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {54}.
The event SendMsg(alice,bob,stagepack_a(sid_79766752),msg_a(alice,bob,sid_79766752)) may be executed at {51}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766752),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766752),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766752),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766752),g))),msg_a(alice,bob,sid_79766752))) may be sent on channel pub at output {53}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766752),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766752),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766752),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766752),g))),msg_a(alice,bob,sid_79766752)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766752),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766752),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766752),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766752),g))),msg_a(alice,bob,sid_79766752))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766752),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766752),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766752),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766752),g))),msg_a(alice,bob,sid_79766752))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766752),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766752),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766752),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766752),g))),msg_a(alice,bob,sid_79766752)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766752),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766752),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766752),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766752),g))),msg_a(alice,bob,sid_79766752))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766752),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766752),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766752),g))),msg_a(alice,bob,sid_79766752)).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766752),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766752),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766752),g))),msg_a(alice,bob,sid_79766752))).

6. By 5, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766752),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766752),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766752),g))),msg_a(alice,bob,sid_79766752)).
So the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766752),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766752),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766752),g))),msg_a(alice,bob,sid_79766752)) in phase 1.
attacker_p1(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766752),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766752),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766752),g))),msg_a(alice,bob,sid_79766752))).

7. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766752),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766752),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766752),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766752),g))),msg_a(alice,bob,sid_79766752))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_79766752),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_79766752),g))).

8. The message validkey(dhexp_real(key_s(bob),g)) may be sent on channel pub at output {382}.
mess(pub,validkey(dhexp_real(key_s(bob),g))).

9. By 1, the attacker may have the channel pub.
By 8, the message validkey(dhexp_real(key_s(bob),g)) may be sent on this channel.
So the attacker may obtain the message validkey(dhexp_real(key_s(bob),g)) by listening on this channel.
attacker(validkey(dhexp_real(key_s(bob),g))).

10. Using the function empty the attacker may obtain empty.
attacker(empty).

11. Using the function somename the attacker may obtain somename.
attacker(somename).

12. By 11, the attacker may know somename.
By 10, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

13. By 12, the attacker may know hash(somename,empty).
By 10, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

14. By 13, the attacker may know hash(hash(somename,empty),empty).
By 9, the attacker may know validkey(dhexp_real(key_s(bob),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))).

15. By 14, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))).
By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_79766752),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766752),g))).
attacker(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766752),g)))).

16. By 15, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766752),g))).
So the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766752),g))) in phase 1.
attacker_p1(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766752),g)))).

17. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

18. By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_79766752),g)).
So the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_79766752),g)) in phase 1.
attacker_p1(validkey(dhexp_real(key_e(alice,bob,sid_79766752),g))).

19. Using the function pub the attacker may obtain pub in phase 1.
attacker_p1(pub).

20. The event LeakS(phase1,bob) may be executed at {569}.
So the message key_s(bob) may be sent on channel pub in phase 1 at output {570}.
mess_p1(pub,key_s(bob)).

21. By 19, the attacker may have the channel pub in phase 1.
By 20, the message key_s(bob) in phase 1 may be sent on this channel.
So the attacker may obtain the message key_s(bob) in phase 1 by listening on this channel.
attacker_p1(key_s(bob)).

22. By 21, the attacker may know key_s(bob) in phase 1.
By 18, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_79766752),g)) in phase 1.
Using the function dhexp the attacker may obtain dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766752),g)) in phase 1.
attacker_p1(dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766752),g))).

23. By 12, the attacker may know hash(somename,empty).
By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_79766752),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766752),g))).
attacker(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766752),g)))).

24. By 23, the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766752),g))).
So the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766752),g))) in phase 1.
attacker_p1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766752),g)))).

25. By 24, the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766752),g))) in phase 1.
By 22, the attacker may know dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766752),g)) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766752),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766752),g))) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766752),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766752),g)))).

26. By 25, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766752),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766752),g))) in phase 1.
By 17, the attacker may know minnonce in phase 1.
By 16, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766752),g))) in phase 1.
By 6, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766752),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766752),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766752),g))),msg_a(alice,bob,sid_79766752)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766752),g))),msg_a(alice,bob,sid_79766752)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766752),g))),msg_a(alice,bob,sid_79766752))).

27. By 26, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766752),g))),msg_a(alice,bob,sid_79766752)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_79766752) in phase 1.
attacker_p1(msg_a(alice,bob,sid_79766752)).


RESULT not attacker_p1(msg_a(alice,bob,sid_a)) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase1,alice,bob))) || (event(LeakS(phase1,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase1,bob)) && event(LeakPsk(phase1,alice,bob)))
goal reachable: begin(LeakS(phase1,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79766754]),msg_a(alice,bob,sid[!1 = @sid_79766754]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_79766754]))
Abbreviations:
sid_79766842 = sid[!1 = @sid_79766818]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_79766842,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,sid_79766842,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true)))).

3. The entry statestore(alice,bob,sid_79766842,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {54}.
The event SendMsg(alice,bob,stagepack_a(sid_79766842),msg_a(alice,bob,sid_79766842)) may be executed at {51}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766842),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766842),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766842),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766842),g))),msg_a(alice,bob,sid_79766842))) may be sent on channel pub at output {53}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766842),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766842),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766842),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766842),g))),msg_a(alice,bob,sid_79766842)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766842),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766842),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766842),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766842),g))),msg_a(alice,bob,sid_79766842))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766842),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766842),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766842),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766842),g))),msg_a(alice,bob,sid_79766842))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766842),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766842),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766842),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766842),g))),msg_a(alice,bob,sid_79766842)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766842),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766842),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766842),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766842),g))),msg_a(alice,bob,sid_79766842))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766842),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766842),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766842),g))),msg_a(alice,bob,sid_79766842)).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766842),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766842),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766842),g))),msg_a(alice,bob,sid_79766842))).

6. By 5, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766842),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766842),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766842),g))),msg_a(alice,bob,sid_79766842)).
So the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766842),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766842),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766842),g))),msg_a(alice,bob,sid_79766842)) in phase 1.
attacker_p1(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766842),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766842),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766842),g))),msg_a(alice,bob,sid_79766842))).

7. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766842),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766842),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766842),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766842),g))),msg_a(alice,bob,sid_79766842))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_79766842),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_79766842),g))).

8. The message validkey(dhexp_real(key_s(bob),g)) may be sent on channel pub at output {382}.
mess(pub,validkey(dhexp_real(key_s(bob),g))).

9. By 1, the attacker may have the channel pub.
By 8, the message validkey(dhexp_real(key_s(bob),g)) may be sent on this channel.
So the attacker may obtain the message validkey(dhexp_real(key_s(bob),g)) by listening on this channel.
attacker(validkey(dhexp_real(key_s(bob),g))).

10. Using the function empty the attacker may obtain empty.
attacker(empty).

11. Using the function somename the attacker may obtain somename.
attacker(somename).

12. By 11, the attacker may know somename.
By 10, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

13. By 12, the attacker may know hash(somename,empty).
By 10, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

14. By 13, the attacker may know hash(hash(somename,empty),empty).
By 9, the attacker may know validkey(dhexp_real(key_s(bob),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))).

15. By 14, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))).
By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_79766842),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766842),g))).
attacker(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766842),g)))).

16. By 15, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766842),g))).
So the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766842),g))) in phase 1.
attacker_p1(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766842),g)))).

17. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

18. By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_79766842),g)).
So the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_79766842),g)) in phase 1.
attacker_p1(validkey(dhexp_real(key_e(alice,bob,sid_79766842),g))).

19. Using the function pub the attacker may obtain pub in phase 1.
attacker_p1(pub).

20. The event LeakS(phase1,bob) may be executed at {569}.
So the message key_s(bob) may be sent on channel pub in phase 1 at output {570}.
mess_p1(pub,key_s(bob)).

21. By 19, the attacker may have the channel pub in phase 1.
By 20, the message key_s(bob) in phase 1 may be sent on this channel.
So the attacker may obtain the message key_s(bob) in phase 1 by listening on this channel.
attacker_p1(key_s(bob)).

22. By 21, the attacker may know key_s(bob) in phase 1.
By 18, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_79766842),g)) in phase 1.
Using the function dhexp the attacker may obtain dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766842),g)) in phase 1.
attacker_p1(dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766842),g))).

23. By 12, the attacker may know hash(somename,empty).
By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_79766842),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766842),g))).
attacker(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766842),g)))).

24. By 23, the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766842),g))).
So the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766842),g))) in phase 1.
attacker_p1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766842),g)))).

25. By 24, the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766842),g))) in phase 1.
By 22, the attacker may know dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766842),g)) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766842),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766842),g))) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766842),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766842),g)))).

26. By 25, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766842),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766842),g))) in phase 1.
By 17, the attacker may know minnonce in phase 1.
By 16, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766842),g))) in phase 1.
By 6, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766842),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766842),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766842),g))),msg_a(alice,bob,sid_79766842)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766842),g))),msg_a(alice,bob,sid_79766842)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766842),g))),msg_a(alice,bob,sid_79766842))).

27. By 26, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766842),g))),msg_a(alice,bob,sid_79766842)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_79766842) in phase 1.
attacker_p1(msg_a(alice,bob,sid_79766842)).


RESULT attacker_p1(msg_a(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase1,alice,bob))) || (event(LeakS(phase1,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase1,bob)) && event(LeakPsk(phase1,alice,bob))) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,alice)))
goal reachable: begin(LeakS(phase1,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79766844]),msg_a(alice,bob,sid[!1 = @sid_79766844]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_79766844]))
Abbreviations:
sid_79766935 = sid[!1 = @sid_79766911]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_79766935,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,sid_79766935,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true)))).

3. The entry statestore(alice,bob,sid_79766935,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {54}.
The event SendMsg(alice,bob,stagepack_a(sid_79766935),msg_a(alice,bob,sid_79766935)) may be executed at {51}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766935),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766935),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766935),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766935),g))),msg_a(alice,bob,sid_79766935))) may be sent on channel pub at output {53}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766935),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766935),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766935),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766935),g))),msg_a(alice,bob,sid_79766935)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766935),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766935),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766935),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766935),g))),msg_a(alice,bob,sid_79766935))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766935),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766935),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766935),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766935),g))),msg_a(alice,bob,sid_79766935))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766935),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766935),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766935),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766935),g))),msg_a(alice,bob,sid_79766935)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766935),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766935),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766935),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766935),g))),msg_a(alice,bob,sid_79766935))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766935),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766935),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766935),g))),msg_a(alice,bob,sid_79766935)).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766935),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766935),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766935),g))),msg_a(alice,bob,sid_79766935))).

6. By 5, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766935),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766935),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766935),g))),msg_a(alice,bob,sid_79766935)).
So the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766935),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766935),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766935),g))),msg_a(alice,bob,sid_79766935)) in phase 1.
attacker_p1(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766935),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766935),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766935),g))),msg_a(alice,bob,sid_79766935))).

7. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_79766935),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766935),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766935),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766935),g))),msg_a(alice,bob,sid_79766935))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_79766935),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_79766935),g))).

8. The message validkey(dhexp_real(key_s(bob),g)) may be sent on channel pub at output {382}.
mess(pub,validkey(dhexp_real(key_s(bob),g))).

9. By 1, the attacker may have the channel pub.
By 8, the message validkey(dhexp_real(key_s(bob),g)) may be sent on this channel.
So the attacker may obtain the message validkey(dhexp_real(key_s(bob),g)) by listening on this channel.
attacker(validkey(dhexp_real(key_s(bob),g))).

10. Using the function empty the attacker may obtain empty.
attacker(empty).

11. Using the function somename the attacker may obtain somename.
attacker(somename).

12. By 11, the attacker may know somename.
By 10, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

13. By 12, the attacker may know hash(somename,empty).
By 10, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

14. By 13, the attacker may know hash(hash(somename,empty),empty).
By 9, the attacker may know validkey(dhexp_real(key_s(bob),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))).

15. By 14, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))).
By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_79766935),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766935),g))).
attacker(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766935),g)))).

16. By 15, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766935),g))).
So the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766935),g))) in phase 1.
attacker_p1(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766935),g)))).

17. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

18. By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_79766935),g)).
So the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_79766935),g)) in phase 1.
attacker_p1(validkey(dhexp_real(key_e(alice,bob,sid_79766935),g))).

19. Using the function pub the attacker may obtain pub in phase 1.
attacker_p1(pub).

20. The event LeakS(phase1,bob) may be executed at {569}.
So the message key_s(bob) may be sent on channel pub in phase 1 at output {570}.
mess_p1(pub,key_s(bob)).

21. By 19, the attacker may have the channel pub in phase 1.
By 20, the message key_s(bob) in phase 1 may be sent on this channel.
So the attacker may obtain the message key_s(bob) in phase 1 by listening on this channel.
attacker_p1(key_s(bob)).

22. By 21, the attacker may know key_s(bob) in phase 1.
By 18, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_79766935),g)) in phase 1.
Using the function dhexp the attacker may obtain dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766935),g)) in phase 1.
attacker_p1(dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766935),g))).

23. By 12, the attacker may know hash(somename,empty).
By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_79766935),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766935),g))).
attacker(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766935),g)))).

24. By 23, the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766935),g))).
So the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766935),g))) in phase 1.
attacker_p1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766935),g)))).

25. By 24, the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766935),g))) in phase 1.
By 22, the attacker may know dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766935),g)) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766935),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766935),g))) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766935),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766935),g)))).

26. By 25, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766935),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766935),g))) in phase 1.
By 17, the attacker may know minnonce in phase 1.
By 16, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766935),g))) in phase 1.
By 6, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79766935),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79766935),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766935),g))),msg_a(alice,bob,sid_79766935)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766935),g))),msg_a(alice,bob,sid_79766935)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766935),g))),msg_a(alice,bob,sid_79766935))).

27. By 26, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79766935),g))),msg_a(alice,bob,sid_79766935)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_79766935) in phase 1.
attacker_p1(msg_a(alice,bob,sid_79766935)).


RESULT attacker_p1(msg_a(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,alice))) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(LeakS(phase1,bob)) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79766937]),msg_a(alice,bob,sid[!1 = @sid_79766937]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_79766937]))
Abbreviations:
sid_79767025 = sid[!1 = @sid_79767001]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_79767025,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,sid_79767025,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true)))).

3. The entry statestore(alice,bob,sid_79767025,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {54}.
The event SendMsg(alice,bob,stagepack_a(sid_79767025),msg_a(alice,bob,sid_79767025)) may be executed at {51}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_79767025),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767025),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767025),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767025),g))),msg_a(alice,bob,sid_79767025))) may be sent on channel pub at output {53}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_79767025),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767025),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767025),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767025),g))),msg_a(alice,bob,sid_79767025)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_79767025),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767025),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767025),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767025),g))),msg_a(alice,bob,sid_79767025))) may be sent on this channel.
So the attacker may obtain the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_79767025),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767025),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767025),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767025),g))),msg_a(alice,bob,sid_79767025))) by listening on this channel.
attacker(concat3(validkey(dhexp_real(key_e(alice,bob,sid_79767025),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767025),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767025),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767025),g))),msg_a(alice,bob,sid_79767025)))).

5. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_79767025),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767025),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767025),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767025),g))),msg_a(alice,bob,sid_79767025))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767025),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767025),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767025),g))),msg_a(alice,bob,sid_79767025)).
attacker(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767025),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767025),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767025),g))),msg_a(alice,bob,sid_79767025))).

6. By 5, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767025),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767025),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767025),g))),msg_a(alice,bob,sid_79767025)).
So the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767025),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767025),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767025),g))),msg_a(alice,bob,sid_79767025)) in phase 1.
attacker_p1(encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767025),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767025),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767025),g))),msg_a(alice,bob,sid_79767025))).

7. By 4, the attacker may know concat3(validkey(dhexp_real(key_e(alice,bob,sid_79767025),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767025),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767025),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767025),g))),msg_a(alice,bob,sid_79767025))).
Using the function 1-proj-concat3 the attacker may obtain validkey(dhexp_real(key_e(alice,bob,sid_79767025),g)).
attacker(validkey(dhexp_real(key_e(alice,bob,sid_79767025),g))).

8. The message validkey(dhexp_real(key_s(bob),g)) may be sent on channel pub at output {382}.
mess(pub,validkey(dhexp_real(key_s(bob),g))).

9. By 1, the attacker may have the channel pub.
By 8, the message validkey(dhexp_real(key_s(bob),g)) may be sent on this channel.
So the attacker may obtain the message validkey(dhexp_real(key_s(bob),g)) by listening on this channel.
attacker(validkey(dhexp_real(key_s(bob),g))).

10. Using the function empty the attacker may obtain empty.
attacker(empty).

11. Using the function somename the attacker may obtain somename.
attacker(somename).

12. By 11, the attacker may know somename.
By 10, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

13. By 12, the attacker may know hash(somename,empty).
By 10, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

14. By 13, the attacker may know hash(hash(somename,empty),empty).
By 9, the attacker may know validkey(dhexp_real(key_s(bob),g)).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))).
attacker(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))).

15. By 14, the attacker may know hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))).
By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_79767025),g)).
Using the function hash the attacker may obtain hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767025),g))).
attacker(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767025),g)))).

16. By 15, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767025),g))).
So the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767025),g))) in phase 1.
attacker_p1(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767025),g)))).

17. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

18. By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_79767025),g)).
So the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_79767025),g)) in phase 1.
attacker_p1(validkey(dhexp_real(key_e(alice,bob,sid_79767025),g))).

19. Using the function pub the attacker may obtain pub in phase 1.
attacker_p1(pub).

20. The event LeakS(phase1,bob) may be executed at {569}.
So the message key_s(bob) may be sent on channel pub in phase 1 at output {570}.
mess_p1(pub,key_s(bob)).

21. By 19, the attacker may have the channel pub in phase 1.
By 20, the message key_s(bob) in phase 1 may be sent on this channel.
So the attacker may obtain the message key_s(bob) in phase 1 by listening on this channel.
attacker_p1(key_s(bob)).

22. By 21, the attacker may know key_s(bob) in phase 1.
By 18, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_79767025),g)) in phase 1.
Using the function dhexp the attacker may obtain dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767025),g)) in phase 1.
attacker_p1(dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767025),g))).

23. By 12, the attacker may know hash(somename,empty).
By 7, the attacker may know validkey(dhexp_real(key_e(alice,bob,sid_79767025),g)).
Using the function hmac_hash1 the attacker may obtain hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767025),g))).
attacker(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767025),g)))).

24. By 23, the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767025),g))).
So the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767025),g))) in phase 1.
attacker_p1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767025),g)))).

25. By 24, the attacker may know hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767025),g))) in phase 1.
By 22, the attacker may know dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767025),g)) in phase 1.
Using the function hmac_hash2 the attacker may obtain hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767025),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767025),g))) in phase 1.
attacker_p1(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767025),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767025),g)))).

26. By 25, the attacker may know hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767025),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767025),g))) in phase 1.
By 17, the attacker may know minnonce in phase 1.
By 16, the attacker may know hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767025),g))) in phase 1.
By 6, the attacker may know encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767025),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767025),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767025),g))),msg_a(alice,bob,sid_79767025)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767025),g))),msg_a(alice,bob,sid_79767025)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767025),g))),msg_a(alice,bob,sid_79767025))).

27. By 26, the attacker may know aeadpack(true,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767025),g))),msg_a(alice,bob,sid_79767025)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_79767025) in phase 1.
attacker_p1(msg_a(alice,bob,sid_79767025)).


RESULT attacker_p1(msg_a(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m))
goal reachable: begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_79767032]),msg_b(bob,charlie,sid[!1 = @sid_79767032]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79767033]),msg_a(alice,bob,sid[!1 = @sid_79767033]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_79767033]),msg_b(bob,charlie,sid[!1 = @sid_79767032])))
Abbreviations:
sid_79767102 = sid[!1 = @sid_79767052]
sid_79767103 = sid[!1 = @sid_79767076]

1. The entry statestore(alice,bob,sid_79767102,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,sid_79767102,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true)))).

2. The entry statestore(alice,bob,sid_79767102,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) that may be in a table by 1 may be read at get {54}.
The event SendMsg(alice,bob,stagepack_a(sid_79767102),msg_a(alice,bob,sid_79767102)) may be executed at {51}.
So the entry statestore(alice,bob,sid_79767102,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767102),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767102),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767102),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),msg_a(alice,bob,sid_79767102)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_79767102),g)),key_e(alice,bob,sid_79767102)),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) may be inserted in a table at insert {52}.
table(statestore(alice,bob,sid_79767102,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767102),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767102),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767102),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),msg_a(alice,bob,sid_79767102)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_79767102),g)),key_e(alice,bob,sid_79767102)),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true)))).

3. The entry statestore(bob,charlie,sid_79767103,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,key_psk(charlie,bob),false))) may be inserted in a table at insert {585}.
table(statestore(bob,charlie,sid_79767103,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,key_psk(charlie,bob),false)))).

4. The entry statestore(alice,bob,sid_79767102,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) that may be in a table by 1 may be read at get {54}.
The event SendMsg(alice,bob,stagepack_a(sid_79767102),msg_a(alice,bob,sid_79767102)) may be executed at {51}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_79767102),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767102),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),msg_a(alice,bob,sid_79767102))) may be sent on channel pub at output {53}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_79767102),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767102),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),msg_a(alice,bob,sid_79767102)))).

5. The entry statestore(bob,charlie,sid_79767103,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,key_psk(charlie,bob),false))) that may be in a table by 3 may be read at get {620}.
The message concat3(validkey(dhexp_real(key_e(alice,bob,sid_79767102),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767102),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),msg_a(alice,bob,sid_79767102))) that may be sent on channel pub by 4 may be received at input {586}.
So the entry statestore(bob,charlie,sid_79767103,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767102),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767102),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767102),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),msg_a(alice,bob,sid_79767102)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_79767102),g)),key_psk(charlie,bob),false))) may be inserted in a table at insert {619}.
table(statestore(bob,charlie,sid_79767103,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767102),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767102),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767102),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),msg_a(alice,bob,sid_79767102)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_79767102),g)),key_psk(charlie,bob),false)))).

6. The entry statestore(bob,charlie,sid_79767103,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767102),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767102),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767102),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),msg_a(alice,bob,sid_79767102)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_79767102),g)),key_psk(charlie,bob),false))) that may be in a table by 5 may be read at get {656}.
The event SendMsg(bob,charlie,stagepack_b(sid_79767103),msg_b(bob,charlie,sid_79767103)) may be executed at {653}.
So the message concat3(validkey(dhexp_real(key_e(bob,charlie,sid_79767103),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767102),g))),validkey(dhexp_real(key_e(bob,charlie,sid_79767103),g))),dhexp_real(key_e(bob,charlie,sid_79767103),dhexp_real(key_e(alice,bob,sid_79767102),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767102),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),msg_a(alice,bob,sid_79767102))),validkey(dhexp_real(key_e(bob,charlie,sid_79767103),g))),msg_b(bob,charlie,sid_79767103))) may be sent on channel pub at output {655}.
mess(pub,concat3(validkey(dhexp_real(key_e(bob,charlie,sid_79767103),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767102),g))),validkey(dhexp_real(key_e(bob,charlie,sid_79767103),g))),dhexp_real(key_e(bob,charlie,sid_79767103),dhexp_real(key_e(alice,bob,sid_79767102),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767102),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),msg_a(alice,bob,sid_79767102))),validkey(dhexp_real(key_e(bob,charlie,sid_79767103),g))),msg_b(bob,charlie,sid_79767103)))).

7. The entry statestore(alice,bob,sid_79767102,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767102),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767102),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767102),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),msg_a(alice,bob,sid_79767102)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_79767102),g)),key_e(alice,bob,sid_79767102)),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {89}.
The message concat3(validkey(dhexp_real(key_e(bob,charlie,sid_79767103),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767102),g))),validkey(dhexp_real(key_e(bob,charlie,sid_79767103),g))),dhexp_real(key_e(bob,charlie,sid_79767103),dhexp_real(key_e(alice,bob,sid_79767102),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767102),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767102),g))),msg_a(alice,bob,sid_79767102))),validkey(dhexp_real(key_e(bob,charlie,sid_79767103),g))),msg_b(bob,charlie,sid_79767103))) that may be sent on channel pub by 6 may be received at input {55}.
So event RecvMsg(alice,bob,stagepack_b(sid_79767102),msg_b(bob,charlie,sid_79767103)) may be executed at {87}.
end(RecvMsg(alice,bob,stagepack_b(sid_79767102),msg_b(bob,charlie,sid_79767103))).


RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1422,stagepack_b(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_79767106]),msg_b(bob,alice,sid[!1 = @sid_79767106]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79767107]),msg_a(alice,bob,sid[!1 = @sid_79767107]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_79767107]),msg_b(bob,alice,sid[!1 = @sid_79767106])))
goal reachable: begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_79767110]),msg_b(bob,charlie,sid[!1 = @sid_79767110]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79767111]),msg_a(alice,bob,sid[!1 = @sid_79767111]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_79767111]),msg_b(bob,charlie,sid[!1 = @sid_79767110])))
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1422,stagepack_b(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1422,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_79767120]),msg_b(bob,alice,sid[!1 = @sid_79767120]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79767121]),msg_a(alice,bob,sid[!1 = @sid_79767121]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_79767121]),msg_b(bob,alice,sid[!1 = @sid_79767120])))
goal reachable: begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_79767124]),msg_b(bob,charlie,sid[!1 = @sid_79767124]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79767125]),msg_a(alice,bob,sid[!1 = @sid_79767125]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_79767125]),msg_b(bob,charlie,sid[!1 = @sid_79767124])))
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1422,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_79767138]),msg_b(bob,charlie,sid[!1 = @sid_79767138]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79767139]),msg_a(alice,bob,sid[!1 = @sid_79767139]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_79767139]),msg_b(bob,charlie,sid[!1 = @sid_79767138])))
Abbreviations:
sid_79767208 = sid[!1 = @sid_79767158]
sid_79767209 = sid[!1 = @sid_79767182]

1. The entry statestore(alice,bob,sid_79767208,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,sid_79767208,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true)))).

2. The entry statestore(alice,bob,sid_79767208,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) that may be in a table by 1 may be read at get {54}.
The event SendMsg(alice,bob,stagepack_a(sid_79767208),msg_a(alice,bob,sid_79767208)) may be executed at {51}.
So the entry statestore(alice,bob,sid_79767208,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767208),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767208),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767208),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),msg_a(alice,bob,sid_79767208)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_79767208),g)),key_e(alice,bob,sid_79767208)),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) may be inserted in a table at insert {52}.
table(statestore(alice,bob,sid_79767208,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767208),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767208),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767208),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),msg_a(alice,bob,sid_79767208)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_79767208),g)),key_e(alice,bob,sid_79767208)),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true)))).

3. The entry statestore(bob,charlie,sid_79767209,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,key_psk(charlie,bob),false))) may be inserted in a table at insert {585}.
table(statestore(bob,charlie,sid_79767209,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,key_psk(charlie,bob),false)))).

4. The entry statestore(alice,bob,sid_79767208,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) that may be in a table by 1 may be read at get {54}.
The event SendMsg(alice,bob,stagepack_a(sid_79767208),msg_a(alice,bob,sid_79767208)) may be executed at {51}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_79767208),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767208),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),msg_a(alice,bob,sid_79767208))) may be sent on channel pub at output {53}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_79767208),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767208),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),msg_a(alice,bob,sid_79767208)))).

5. The entry statestore(bob,charlie,sid_79767209,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,key_psk(charlie,bob),false))) that may be in a table by 3 may be read at get {620}.
The message concat3(validkey(dhexp_real(key_e(alice,bob,sid_79767208),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767208),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),msg_a(alice,bob,sid_79767208))) that may be sent on channel pub by 4 may be received at input {586}.
So the entry statestore(bob,charlie,sid_79767209,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767208),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767208),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767208),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),msg_a(alice,bob,sid_79767208)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_79767208),g)),key_psk(charlie,bob),false))) may be inserted in a table at insert {619}.
table(statestore(bob,charlie,sid_79767209,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767208),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767208),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767208),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),msg_a(alice,bob,sid_79767208)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_79767208),g)),key_psk(charlie,bob),false)))).

6. The entry statestore(bob,charlie,sid_79767209,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767208),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767208),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767208),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),msg_a(alice,bob,sid_79767208)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_79767208),g)),key_psk(charlie,bob),false))) that may be in a table by 5 may be read at get {656}.
The event SendMsg(bob,charlie,stagepack_b(sid_79767209),msg_b(bob,charlie,sid_79767209)) may be executed at {653}.
So the message concat3(validkey(dhexp_real(key_e(bob,charlie,sid_79767209),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767208),g))),validkey(dhexp_real(key_e(bob,charlie,sid_79767209),g))),dhexp_real(key_e(bob,charlie,sid_79767209),dhexp_real(key_e(alice,bob,sid_79767208),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767208),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),msg_a(alice,bob,sid_79767208))),validkey(dhexp_real(key_e(bob,charlie,sid_79767209),g))),msg_b(bob,charlie,sid_79767209))) may be sent on channel pub at output {655}.
mess(pub,concat3(validkey(dhexp_real(key_e(bob,charlie,sid_79767209),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767208),g))),validkey(dhexp_real(key_e(bob,charlie,sid_79767209),g))),dhexp_real(key_e(bob,charlie,sid_79767209),dhexp_real(key_e(alice,bob,sid_79767208),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767208),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),msg_a(alice,bob,sid_79767208))),validkey(dhexp_real(key_e(bob,charlie,sid_79767209),g))),msg_b(bob,charlie,sid_79767209)))).

7. The entry statestore(alice,bob,sid_79767208,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767208),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767208),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767208),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),msg_a(alice,bob,sid_79767208)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_79767208),g)),key_e(alice,bob,sid_79767208)),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {89}.
The message concat3(validkey(dhexp_real(key_e(bob,charlie,sid_79767209),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767208),g))),validkey(dhexp_real(key_e(bob,charlie,sid_79767209),g))),dhexp_real(key_e(bob,charlie,sid_79767209),dhexp_real(key_e(alice,bob,sid_79767208),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767208),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767208),g))),msg_a(alice,bob,sid_79767208))),validkey(dhexp_real(key_e(bob,charlie,sid_79767209),g))),msg_b(bob,charlie,sid_79767209))) that may be sent on channel pub by 6 may be received at input {55}.
So event RecvMsg(alice,bob,stagepack_b(sid_79767208),msg_b(bob,charlie,sid_79767209)) may be executed at {87}.
end(RecvMsg(alice,bob,stagepack_b(sid_79767208),msg_b(bob,charlie,sid_79767209))).


RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_79767216]),msg_b(bob,charlie,sid[!1 = @sid_79767216]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79767217]),msg_a(alice,bob,sid[!1 = @sid_79767217]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_79767217]),msg_b(bob,charlie,sid[!1 = @sid_79767216])))
Abbreviations:
sid_79767286 = sid[!1 = @sid_79767236]
sid_79767287 = sid[!1 = @sid_79767260]

1. The entry statestore(alice,bob,sid_79767286,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,sid_79767286,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true)))).

2. The entry statestore(alice,bob,sid_79767286,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) that may be in a table by 1 may be read at get {54}.
The event SendMsg(alice,bob,stagepack_a(sid_79767286),msg_a(alice,bob,sid_79767286)) may be executed at {51}.
So the entry statestore(alice,bob,sid_79767286,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767286),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767286),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767286),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),msg_a(alice,bob,sid_79767286)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_79767286),g)),key_e(alice,bob,sid_79767286)),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) may be inserted in a table at insert {52}.
table(statestore(alice,bob,sid_79767286,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767286),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767286),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767286),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),msg_a(alice,bob,sid_79767286)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_79767286),g)),key_e(alice,bob,sid_79767286)),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true)))).

3. The entry statestore(bob,charlie,sid_79767287,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,key_psk(charlie,bob),false))) may be inserted in a table at insert {585}.
table(statestore(bob,charlie,sid_79767287,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,key_psk(charlie,bob),false)))).

4. The entry statestore(alice,bob,sid_79767286,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) that may be in a table by 1 may be read at get {54}.
The event SendMsg(alice,bob,stagepack_a(sid_79767286),msg_a(alice,bob,sid_79767286)) may be executed at {51}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_79767286),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767286),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),msg_a(alice,bob,sid_79767286))) may be sent on channel pub at output {53}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_79767286),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767286),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),msg_a(alice,bob,sid_79767286)))).

5. The entry statestore(bob,charlie,sid_79767287,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,key_psk(charlie,bob),false))) that may be in a table by 3 may be read at get {620}.
The message concat3(validkey(dhexp_real(key_e(alice,bob,sid_79767286),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767286),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),msg_a(alice,bob,sid_79767286))) that may be sent on channel pub by 4 may be received at input {586}.
So the entry statestore(bob,charlie,sid_79767287,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767286),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767286),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767286),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),msg_a(alice,bob,sid_79767286)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_79767286),g)),key_psk(charlie,bob),false))) may be inserted in a table at insert {619}.
table(statestore(bob,charlie,sid_79767287,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767286),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767286),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767286),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),msg_a(alice,bob,sid_79767286)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_79767286),g)),key_psk(charlie,bob),false)))).

6. The entry statestore(bob,charlie,sid_79767287,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767286),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767286),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767286),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),msg_a(alice,bob,sid_79767286)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_79767286),g)),key_psk(charlie,bob),false))) that may be in a table by 5 may be read at get {656}.
The event SendMsg(bob,charlie,stagepack_b(sid_79767287),msg_b(bob,charlie,sid_79767287)) may be executed at {653}.
So the message concat3(validkey(dhexp_real(key_e(bob,charlie,sid_79767287),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767286),g))),validkey(dhexp_real(key_e(bob,charlie,sid_79767287),g))),dhexp_real(key_e(bob,charlie,sid_79767287),dhexp_real(key_e(alice,bob,sid_79767286),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767286),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),msg_a(alice,bob,sid_79767286))),validkey(dhexp_real(key_e(bob,charlie,sid_79767287),g))),msg_b(bob,charlie,sid_79767287))) may be sent on channel pub at output {655}.
mess(pub,concat3(validkey(dhexp_real(key_e(bob,charlie,sid_79767287),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767286),g))),validkey(dhexp_real(key_e(bob,charlie,sid_79767287),g))),dhexp_real(key_e(bob,charlie,sid_79767287),dhexp_real(key_e(alice,bob,sid_79767286),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767286),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),msg_a(alice,bob,sid_79767286))),validkey(dhexp_real(key_e(bob,charlie,sid_79767287),g))),msg_b(bob,charlie,sid_79767287)))).

7. The entry statestore(alice,bob,sid_79767286,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767286),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767286),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767286),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),msg_a(alice,bob,sid_79767286)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_79767286),g)),key_e(alice,bob,sid_79767286)),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {89}.
The message concat3(validkey(dhexp_real(key_e(bob,charlie,sid_79767287),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767286),g))),validkey(dhexp_real(key_e(bob,charlie,sid_79767287),g))),dhexp_real(key_e(bob,charlie,sid_79767287),dhexp_real(key_e(alice,bob,sid_79767286),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767286),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767286),g))),msg_a(alice,bob,sid_79767286))),validkey(dhexp_real(key_e(bob,charlie,sid_79767287),g))),msg_b(bob,charlie,sid_79767287))) that may be sent on channel pub by 6 may be received at input {55}.
So event RecvMsg(alice,bob,stagepack_b(sid_79767286),msg_b(bob,charlie,sid_79767287)) may be executed at {87}.
end(RecvMsg(alice,bob,stagepack_b(sid_79767286),msg_b(bob,charlie,sid_79767287))).


RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) cannot be proved.
Starting query not attacker_p1(msg_b(bob,alice,sid_b))
RESULT not attacker_p1(msg_b(bob,alice,sid_b)) is true.
Starting query attacker_p1(msg_b(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase1,alice,bob))) || (event(LeakS(phase1,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase1,alice)) && event(LeakPsk(phase1,alice,bob)))
RESULT attacker_p1(msg_b(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase1,alice,bob))) || (event(LeakS(phase1,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase1,alice)) && event(LeakPsk(phase1,alice,bob))) is true.
Starting query attacker_p1(msg_b(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,bob)))
RESULT attacker_p1(msg_b(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,bob))) is true.
Starting query attacker_p1(msg_b(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
RESULT attacker_p1(msg_b(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_79767305]),msg_c(alice,bob,sid[!1 = @sid_79767305]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_79767306]),msg_b(bob,alice,sid[!1 = @sid_79767306]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79767305]),msg_a(alice,bob,sid[!1 = @sid_79767305]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_79767306]),msg_c(alice,bob,sid[!1 = @sid_79767305])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1422,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_79767314]),msg_c(alice,bob,sid[!1 = @sid_79767314]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_79767315]),msg_b(bob,alice,sid[!1 = @sid_79767315]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79767314]),msg_a(alice,bob,sid[!1 = @sid_79767314]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_79767315]),msg_c(alice,bob,sid[!1 = @sid_79767314])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1422,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1422,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_79767324]),msg_c(alice,bob,sid[!1 = @sid_79767324]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_79767325]),msg_b(bob,alice,sid[!1 = @sid_79767325]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79767324]),msg_a(alice,bob,sid[!1 = @sid_79767324]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_79767325]),msg_c(alice,bob,sid[!1 = @sid_79767324])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1422,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_79767334]),msg_c(alice,bob,sid[!1 = @sid_79767334]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_79767335]),msg_b(bob,alice,sid[!1 = @sid_79767335]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79767334]),msg_a(alice,bob,sid[!1 = @sid_79767334]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_79767335]),msg_c(alice,bob,sid[!1 = @sid_79767334])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_79767343]),msg_c(alice,bob,sid[!1 = @sid_79767343]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_79767344]),msg_b(bob,alice,sid[!1 = @sid_79767344]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79767343]),msg_a(alice,bob,sid[!1 = @sid_79767343]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_79767344]),msg_c(alice,bob,sid[!1 = @sid_79767343])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query not attacker_p1(msg_c(alice,bob,sid_a))
RESULT not attacker_p1(msg_c(alice,bob,sid_a)) is true.
Starting query attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase1,alice,bob))) || (event(LeakS(phase1,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase1,bob)) && event(LeakPsk(phase1,alice,bob)))
RESULT attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase1,alice,bob))) || (event(LeakS(phase1,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase1,bob)) && event(LeakPsk(phase1,alice,bob))) is true.
Starting query attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,alice)))
RESULT attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,alice))) is true.
Starting query attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)))
RESULT attacker_p1(msg_c(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_79767367]),msg_d(bob,alice,sid[!1 = @sid_79767367]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_79767368]),msg_c(alice,bob,sid[!1 = @sid_79767368]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_79767367]),msg_b(bob,alice,sid[!1 = @sid_79767367]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79767368]),msg_a(alice,bob,sid[!1 = @sid_79767368]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_79767368]),msg_d(bob,alice,sid[!1 = @sid_79767367])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1422,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_79767376]),msg_d(bob,alice,sid[!1 = @sid_79767376]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_79767377]),msg_c(alice,bob,sid[!1 = @sid_79767377]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_79767376]),msg_b(bob,alice,sid[!1 = @sid_79767376]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79767377]),msg_a(alice,bob,sid[!1 = @sid_79767377]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_79767377]),msg_d(bob,alice,sid[!1 = @sid_79767376])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1422,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1422,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_79767386]),msg_d(bob,alice,sid[!1 = @sid_79767386]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_79767387]),msg_c(alice,bob,sid[!1 = @sid_79767387]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_79767386]),msg_b(bob,alice,sid[!1 = @sid_79767386]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79767387]),msg_a(alice,bob,sid[!1 = @sid_79767387]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_79767387]),msg_d(bob,alice,sid[!1 = @sid_79767386])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1422,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_79767396]),msg_d(bob,alice,sid[!1 = @sid_79767396]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_79767397]),msg_c(alice,bob,sid[!1 = @sid_79767397]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_79767396]),msg_b(bob,alice,sid[!1 = @sid_79767396]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79767397]),msg_a(alice,bob,sid[!1 = @sid_79767397]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_79767397]),msg_d(bob,alice,sid[!1 = @sid_79767396])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_79767405]),msg_d(bob,alice,sid[!1 = @sid_79767405]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_79767406]),msg_c(alice,bob,sid[!1 = @sid_79767406]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_79767405]),msg_b(bob,alice,sid[!1 = @sid_79767405]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79767406]),msg_a(alice,bob,sid[!1 = @sid_79767406]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_79767406]),msg_d(bob,alice,sid[!1 = @sid_79767405])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) is true.
Starting query not attacker_p1(msg_d(bob,alice,sid_b))
RESULT not attacker_p1(msg_d(bob,alice,sid_b)) is true.
Starting query attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase1,alice,bob))) || (event(LeakS(phase1,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase1,alice)) && event(LeakPsk(phase1,alice,bob)))
RESULT attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase1,alice,bob))) || (event(LeakS(phase1,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase1,alice)) && event(LeakPsk(phase1,alice,bob))) is true.
Starting query attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,bob)))
RESULT attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,alice)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,bob))) is true.
Starting query attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob)))
RESULT attacker_p1(msg_d(bob,alice,sid_b)) ==> (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_79767429]),msg_e(alice,bob,sid[!1 = @sid_79767429]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_79767430]),msg_d(bob,alice,sid[!1 = @sid_79767430]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_79767429]),msg_c(alice,bob,sid[!1 = @sid_79767429]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_79767430]),msg_b(bob,alice,sid[!1 = @sid_79767430]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79767429]),msg_a(alice,bob,sid[!1 = @sid_79767429]))) -> end(RecvMsg(bob,alice,stagepack_e(sid[!1 = @sid_79767430]),msg_e(alice,bob,sid[!1 = @sid_79767429])))
RESULT event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1422,stagepack_e(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_79767438]),msg_e(alice,bob,sid[!1 = @sid_79767438]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_79767439]),msg_d(bob,alice,sid[!1 = @sid_79767439]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_79767438]),msg_c(alice,bob,sid[!1 = @sid_79767438]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_79767439]),msg_b(bob,alice,sid[!1 = @sid_79767439]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79767438]),msg_a(alice,bob,sid[!1 = @sid_79767438]))) -> end(RecvMsg(bob,alice,stagepack_e(sid[!1 = @sid_79767439]),msg_e(alice,bob,sid[!1 = @sid_79767438])))
RESULT event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1422,stagepack_e(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1422,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_79767448]),msg_e(alice,bob,sid[!1 = @sid_79767448]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_79767449]),msg_d(bob,alice,sid[!1 = @sid_79767449]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_79767448]),msg_c(alice,bob,sid[!1 = @sid_79767448]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_79767449]),msg_b(bob,alice,sid[!1 = @sid_79767449]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79767448]),msg_a(alice,bob,sid[!1 = @sid_79767448]))) -> end(RecvMsg(bob,alice,stagepack_e(sid[!1 = @sid_79767449]),msg_e(alice,bob,sid[!1 = @sid_79767448])))
RESULT event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1422,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_79767458]),msg_e(alice,bob,sid[!1 = @sid_79767458]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_79767459]),msg_d(bob,alice,sid[!1 = @sid_79767459]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_79767458]),msg_c(alice,bob,sid[!1 = @sid_79767458]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_79767459]),msg_b(bob,alice,sid[!1 = @sid_79767459]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79767458]),msg_a(alice,bob,sid[!1 = @sid_79767458]))) -> end(RecvMsg(bob,alice,stagepack_e(sid[!1 = @sid_79767459]),msg_e(alice,bob,sid[!1 = @sid_79767458])))
RESULT event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || (event(LeakS(phase0,alice)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_79767467]),msg_e(alice,bob,sid[!1 = @sid_79767467]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_79767468]),msg_d(bob,alice,sid[!1 = @sid_79767468]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_79767467]),msg_c(alice,bob,sid[!1 = @sid_79767467]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_79767468]),msg_b(bob,alice,sid[!1 = @sid_79767468]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79767467]),msg_a(alice,bob,sid[!1 = @sid_79767467]))) -> end(RecvMsg(bob,alice,stagepack_e(sid[!1 = @sid_79767468]),msg_e(alice,bob,sid[!1 = @sid_79767467])))
RESULT event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query not attacker_p1(msg_e(alice,bob,sid_a))
RESULT not attacker_p1(msg_e(alice,bob,sid_a)) is true.
Starting query attacker_p1(msg_e(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase1,alice,bob))) || (event(LeakS(phase1,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase1,bob)) && event(LeakPsk(phase1,alice,bob)))
RESULT attacker_p1(msg_e(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase0,bob)) && event(LeakPsk(phase1,alice,bob))) || (event(LeakS(phase1,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(phase1,bob)) && event(LeakPsk(phase1,alice,bob))) is true.
Starting query attacker_p1(msg_e(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,alice)))
RESULT attacker_p1(msg_e(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) || (event(LeakS(px,bob)) && event(LeakPsk(py,alice,bob)) && event(LeakS(pz,alice))) is true.
Starting query attacker_p1(msg_e(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob)))
RESULT attacker_p1(msg_e(alice,bob,sid_a)) ==> (event(LeakS(phase0,bob)) && event(LeakPsk(phase0,alice,bob))) is true.
Starting query not event(RecvEnd(true))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_79767489]),msg_e(alice,bob,sid[!1 = @sid_79767489]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_79767490]),msg_d(bob,alice,sid[!1 = @sid_79767490]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_79767489]),msg_c(alice,bob,sid[!1 = @sid_79767489]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_79767490]),msg_b(bob,alice,sid[!1 = @sid_79767490]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_79767489]),msg_a(alice,bob,sid[!1 = @sid_79767489]))) -> end(RecvEnd(true))
Abbreviations:
sid_79767885 = sid[!1 = @sid_79767829]
sid_79767886 = sid[!1 = @sid_79767874]

1. The entry statestore(bob,alice,sid_79767886,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) may be inserted in a table at insert {394}.
table(statestore(bob,alice,sid_79767886,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false)))).

2. The entry statestore(alice,bob,sid_79767885,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) may be inserted in a table at insert {18}.
table(statestore(alice,bob,sid_79767885,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true)))).

3. The entry statestore(alice,bob,sid_79767885,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {54}.
The event SendMsg(alice,bob,stagepack_a(sid_79767885),msg_a(alice,bob,sid_79767885)) may be executed at {51}.
So the message concat3(validkey(dhexp_real(key_e(alice,bob,sid_79767885),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))) may be sent on channel pub at output {53}.
mess(pub,concat3(validkey(dhexp_real(key_e(alice,bob,sid_79767885),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885)))).

4. The entry statestore(bob,alice,sid_79767886,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,empty,key_psk(alice,bob),false))) that may be in a table by 1 may be read at get {429}.
The message concat3(validkey(dhexp_real(key_e(alice,bob,sid_79767885),g)),empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))) that may be sent on channel pub by 3 may be received at input {395}.
So the entry statestore(bob,alice,sid_79767886,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_79767885),g)),key_psk(alice,bob),false))) may be inserted in a table at insert {428}.
table(statestore(bob,alice,sid_79767886,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_79767885),g)),key_psk(alice,bob),false)))).

5. The entry statestore(bob,alice,sid_79767886,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_79767885),g)),key_psk(alice,bob),false))) that may be in a table by 4 may be read at get {465}.
The event SendMsg(bob,alice,stagepack_b(sid_79767886),msg_b(bob,alice,sid_79767886)) may be executed at {462}.
So the entry statestore(bob,alice,sid_79767886,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_79767886),g)),key_e(bob,alice,sid_79767886)),empty,validkey(dhexp_real(key_e(alice,bob,sid_79767885),g)),key_psk(alice,bob),false))) may be inserted in a table at insert {463}.
table(statestore(bob,alice,sid_79767886,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_79767886),g)),key_e(bob,alice,sid_79767886)),empty,validkey(dhexp_real(key_e(alice,bob,sid_79767885),g)),key_psk(alice,bob),false)))).

6. The entry statestore(alice,bob,sid_79767885,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g)))),keypairpack(empty,empty),keypairpack(empty,empty),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) that may be in a table by 2 may be read at get {54}.
The event SendMsg(alice,bob,stagepack_a(sid_79767885),msg_a(alice,bob,sid_79767885)) may be executed at {51}.
So the entry statestore(alice,bob,sid_79767885,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_79767885),g)),key_e(alice,bob,sid_79767885)),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) may be inserted in a table at insert {52}.
table(statestore(alice,bob,sid_79767885,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_79767885),g)),key_e(alice,bob,sid_79767885)),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true)))).

7. The entry statestore(bob,alice,sid_79767886,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(empty,empty),empty,validkey(dhexp_real(key_e(alice,bob,sid_79767885),g)),key_psk(alice,bob),false))) that may be in a table by 4 may be read at get {465}.
The event SendMsg(bob,alice,stagepack_b(sid_79767886),msg_b(bob,alice,sid_79767886)) may be executed at {462}.
So the message concat3(validkey(dhexp_real(key_e(bob,alice,sid_79767886),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))) may be sent on channel pub at output {464}.
mess(pub,concat3(validkey(dhexp_real(key_e(bob,alice,sid_79767886),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886)))).

8. The entry statestore(alice,bob,sid_79767885,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_79767885),g)),key_e(alice,bob,sid_79767885)),validkey(dhexp_real(key_s(bob),g)),empty,key_psk(alice,bob),true))) that may be in a table by 6 may be read at get {89}.
The message concat3(validkey(dhexp_real(key_e(bob,alice,sid_79767886),g)),empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))) that may be sent on channel pub by 7 may be received at input {55}.
So the entry statestore(alice,bob,sid_79767885,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_79767885),g)),key_e(alice,bob,sid_79767885)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g)),key_psk(alice,bob),true))) may be inserted in a table at insert {88}.
table(statestore(alice,bob,sid_79767885,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_79767885),g)),key_e(alice,bob,sid_79767885)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g)),key_psk(alice,bob),true)))).

9. The entry statestore(alice,bob,sid_79767885,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_79767885),g)),key_e(alice,bob,sid_79767885)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g)),key_psk(alice,bob),true))) that may be in a table by 8 may be read at get {141}.
The event SendMsg(alice,bob,stagepack_c(sid_79767885),msg_c(alice,bob,sid_79767885)) may be executed at {138}.
So the message concat3(empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767885))) may be sent on channel pub at output {140}.
mess(pub,concat3(empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767885)))).

10. The entry statestore(bob,alice,sid_79767886,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_79767886),g)),key_e(bob,alice,sid_79767886)),empty,validkey(dhexp_real(key_e(alice,bob,sid_79767885),g)),key_psk(alice,bob),false))) that may be in a table by 5 may be read at get {519}.
The message concat3(empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767885))) that may be sent on channel pub by 9 may be received at input {466}.
So the entry statestore(bob,alice,sid_79767886,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767885)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_79767886),g)),key_e(bob,alice,sid_79767886)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g)),key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),minnonce))) may be inserted in a table at insert {518}.
table(statestore(bob,alice,sid_79767886,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767885)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_79767886),g)),key_e(bob,alice,sid_79767886)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g)),key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),minnonce)))).

11. The entry statestore(bob,alice,sid_79767886,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767885)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_79767886),g)),key_e(bob,alice,sid_79767886)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g)),key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),minnonce))) that may be in a table by 10 may be read at get {539}.
The event SendMsg(bob,alice,stagepack_d(sid_79767886),msg_d(bob,alice,sid_79767886)) may be executed at {536}.
So the entry statestore(bob,alice,sid_79767886,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767885))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767885))),msg_d(bob,alice,sid_79767886)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_79767886),g)),key_e(bob,alice,sid_79767886)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g)),key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)))) may be inserted in a table at insert {537}.
table(statestore(bob,alice,sid_79767886,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767885))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767885))),msg_d(bob,alice,sid_79767886)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_79767886),g)),key_e(bob,alice,sid_79767886)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g)),key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce))))).

12. The entry statestore(alice,bob,sid_79767885,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886)))),keypairpack(empty,empty),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_79767885),g)),key_e(alice,bob,sid_79767885)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g)),key_psk(alice,bob),true))) that may be in a table by 8 may be read at get {141}.
The event SendMsg(alice,bob,stagepack_c(sid_79767885),msg_c(alice,bob,sid_79767885)) may be executed at {138}.
So the entry statestore(alice,bob,sid_79767885,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767885)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_79767885),g)),key_e(alice,bob,sid_79767885)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g)),key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),minnonce))) may be inserted in a table at insert {139}.
table(statestore(alice,bob,sid_79767885,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767885)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_79767885),g)),key_e(alice,bob,sid_79767885)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g)),key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),minnonce)))).

13. The entry statestore(bob,alice,sid_79767886,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767885)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_79767886),g)),key_e(bob,alice,sid_79767886)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g)),key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),minnonce))) that may be in a table by 10 may be read at get {539}.
The event SendMsg(bob,alice,stagepack_d(sid_79767886),msg_d(bob,alice,sid_79767886)) may be executed at {536}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767885))),msg_d(bob,alice,sid_79767886))) may be sent on channel pub at output {538}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767885))),msg_d(bob,alice,sid_79767886)))).

14. The entry statestore(alice,bob,sid_79767885,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767885)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_79767885),g)),key_e(alice,bob,sid_79767885)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g)),key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),minnonce))) that may be in a table by 12 may be read at get {162}.
The message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767885))),msg_d(bob,alice,sid_79767886))) that may be sent on channel pub by 13 may be received at input {144}.
So the entry statestore(alice,bob,sid_79767885,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767885))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767885))),msg_d(bob,alice,sid_79767886)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_79767885),g)),key_e(alice,bob,sid_79767885)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g)),key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)))) may be inserted in a table at insert {161}.
table(statestore(alice,bob,sid_79767885,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767885))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767885))),msg_d(bob,alice,sid_79767886)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_79767885),g)),key_e(alice,bob,sid_79767885)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g)),key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce))))).

15. The entry statestore(alice,bob,sid_79767885,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767885))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767885))),msg_d(bob,alice,sid_79767886)))),keypairpack(validkey(dhexp_real(key_s(alice),g)),key_s(alice)),keypairpack(validkey(dhexp_real(key_e(alice,bob,sid_79767885),g)),key_e(alice,bob,sid_79767885)),validkey(dhexp_real(key_s(bob),g)),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g)),key_psk(alice,bob),true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)))) that may be in a table by 14 may be read at get {181}.
The event SendMsg(alice,bob,stagepack_e(sid_79767885),msg_e(alice,bob,sid_79767885)) may be executed at {179}.
So the message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767885))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767885))),msg_d(bob,alice,sid_79767886))),msg_e(alice,bob,sid_79767885))) may be sent on channel pub at output {180}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767885))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767885))),msg_d(bob,alice,sid_79767886))),msg_e(alice,bob,sid_79767885)))).

16. The entry statestore(bob,alice,sid_79767886,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767885))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767885))),msg_d(bob,alice,sid_79767886)))),keypairpack(validkey(dhexp_real(key_s(bob),g)),key_s(bob)),keypairpack(validkey(dhexp_real(key_e(bob,alice,sid_79767886),g)),key_e(bob,alice,sid_79767886)),validkey(dhexp_real(key_s(alice),g)),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g)),key_psk(alice,bob),false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),increment_nonce(minnonce)))) that may be in a table by 11 may be read at get {560}.
The message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767885))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),encrypt(hmac_hash3(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob)),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(bob,alice,sid_79767886),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),minnonce,hash(hash(hash(hash(somename,empty),empty),validkey(dhexp_real(key_s(bob),g))),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),msg_a(alice,bob,sid_79767885))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),msg_b(bob,alice,sid_79767886))),validkey(dhexp_real(key_s(alice),g)))),hmac_hash2(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),validkey(dhexp_real(key_e(alice,bob,sid_79767885),g))),dhexp_real(key_s(bob),dhexp_real(key_e(alice,bob,sid_79767885),g))),validkey(dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_e(alice,bob,sid_79767885),dhexp_real(key_e(bob,alice,sid_79767886),g))),dhexp_real(key_s(alice),dhexp_real(key_e(bob,alice,sid_79767886),g))),key_psk(alice,bob))),msg_c(alice,bob,sid_79767885))),msg_d(bob,alice,sid_79767886))),msg_e(alice,bob,sid_79767885))) that may be sent on channel pub by 15 may be received at input {542}.
So event RecvEnd(true) may be executed at {559}.
end(RecvEnd(true)).


RESULT not event(RecvEnd(true)) cannot be proved.
