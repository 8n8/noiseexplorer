File "NX.noise.passive.pv", line 240, characters 7-8:
Warning: identifier ck rebound.
File "NX.noise.passive.pv", line 249, characters 7-8:
Warning: identifier ck rebound.
File "NX.noise.passive.pv", line 250, characters 7-8:
Warning: identifier cs rebound.
File "NX.noise.passive.pv", line 250, character 36:
Warning: identifier h rebound.
File "NX.noise.passive.pv", line 259, characters 7-8:
Warning: identifier cs rebound.
File "NX.noise.passive.pv", line 260, characters 6-7:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 265, characters 7-8:
Warning: identifier cs rebound.
File "NX.noise.passive.pv", line 266, characters 6-7:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 290, character 6:
Warning: identifier e rebound.
File "NX.noise.passive.pv", line 291, characters 6-7:
Warning: identifier ne rebound.
File "NX.noise.passive.pv", line 292, characters 6-7:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 294, characters 7-8:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 294, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NX.noise.passive.pv", line 295, characters 6-7:
Warning: identifier hs rebound.
File "NX.noise.passive.pv", line 303, character 6:
Warning: identifier e rebound.
File "NX.noise.passive.pv", line 304, characters 6-7:
Warning: identifier ne rebound.
File "NX.noise.passive.pv", line 305, characters 6-7:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 307, characters 6-7:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 308, character 6:
Warning: identifier s rebound.
File "NX.noise.passive.pv", line 309, characters 7-8:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 309, characters 26-36:
Warning: identifier ciphertext1 rebound.
File "NX.noise.passive.pv", line 310, characters 6-7:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 311, characters 7-8:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 311, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NX.noise.passive.pv", line 312, characters 6-7:
Warning: identifier hs rebound.
File "NX.noise.passive.pv", line 319, characters 7-8:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 319, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NX.noise.passive.pv", line 320, characters 6-7:
Warning: identifier hs rebound.
File "NX.noise.passive.pv", line 327, characters 7-8:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 327, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NX.noise.passive.pv", line 328, characters 6-7:
Warning: identifier hs rebound.
File "NX.noise.passive.pv", line 337, characters 6-7:
Warning: identifier re rebound.
File "NX.noise.passive.pv", line 338, characters 6-7:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 340, characters 7-8:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 342, characters 7-8:
Warning: identifier hs rebound.
File "NX.noise.passive.pv", line 350, characters 6-7:
Warning: identifier re rebound.
File "NX.noise.passive.pv", line 351, characters 6-7:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 353, characters 6-7:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 354, characters 7-8:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 354, characters 48-53:
Warning: identifier valid1 rebound.
File "NX.noise.passive.pv", line 355, characters 6-7:
Warning: identifier rs rebound.
File "NX.noise.passive.pv", line 356, characters 6-7:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 357, characters 7-8:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 359, characters 7-8:
Warning: identifier hs rebound.
File "NX.noise.passive.pv", line 367, characters 7-8:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 369, characters 7-8:
Warning: identifier hs rebound.
File "NX.noise.passive.pv", line 377, characters 7-8:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 379, characters 7-8:
Warning: identifier hs rebound.
File "NX.noise.passive.pv", line 524, characters 8-9:
Warning: identifier hs rebound.
File "NX.noise.passive.pv", line 377, characters 7-8:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 379, characters 7-8:
Warning: identifier hs rebound.
File "NX.noise.passive.pv", line 265, characters 7-8:
Warning: identifier cs rebound.
File "NX.noise.passive.pv", line 266, characters 6-7:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 516, characters 8-9:
Warning: identifier hs rebound.
File "NX.noise.passive.pv", line 319, characters 7-8:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 319, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NX.noise.passive.pv", line 320, characters 6-7:
Warning: identifier hs rebound.
File "NX.noise.passive.pv", line 259, characters 7-8:
Warning: identifier cs rebound.
File "NX.noise.passive.pv", line 260, characters 6-7:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 509, characters 8-9:
Warning: identifier hs rebound.
File "NX.noise.passive.pv", line 350, characters 6-7:
Warning: identifier re rebound.
File "NX.noise.passive.pv", line 351, characters 6-7:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 353, characters 6-7:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 354, characters 7-8:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 354, characters 48-53:
Warning: identifier valid1 rebound.
File "NX.noise.passive.pv", line 355, characters 6-7:
Warning: identifier rs rebound.
File "NX.noise.passive.pv", line 356, characters 6-7:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 357, characters 7-8:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 359, characters 7-8:
Warning: identifier hs rebound.
File "NX.noise.passive.pv", line 240, characters 7-8:
Warning: identifier ck rebound.
File "NX.noise.passive.pv", line 265, characters 7-8:
Warning: identifier cs rebound.
File "NX.noise.passive.pv", line 266, characters 6-7:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 240, characters 7-8:
Warning: identifier ck rebound.
File "NX.noise.passive.pv", line 265, characters 7-8:
Warning: identifier cs rebound.
File "NX.noise.passive.pv", line 266, characters 6-7:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 501, characters 8-9:
Warning: identifier hs rebound.
File "NX.noise.passive.pv", line 290, character 6:
Warning: identifier e rebound.
File "NX.noise.passive.pv", line 291, characters 6-7:
Warning: identifier ne rebound.
File "NX.noise.passive.pv", line 292, characters 6-7:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 294, characters 7-8:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 294, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NX.noise.passive.pv", line 295, characters 6-7:
Warning: identifier hs rebound.
File "NX.noise.passive.pv", line 259, characters 7-8:
Warning: identifier cs rebound.
File "NX.noise.passive.pv", line 260, characters 6-7:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 574, characters 8-9:
Warning: identifier hs rebound.
File "NX.noise.passive.pv", line 327, characters 7-8:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 327, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NX.noise.passive.pv", line 328, characters 6-7:
Warning: identifier hs rebound.
File "NX.noise.passive.pv", line 259, characters 7-8:
Warning: identifier cs rebound.
File "NX.noise.passive.pv", line 260, characters 6-7:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 567, characters 8-9:
Warning: identifier hs rebound.
File "NX.noise.passive.pv", line 367, characters 7-8:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 369, characters 7-8:
Warning: identifier hs rebound.
File "NX.noise.passive.pv", line 265, characters 7-8:
Warning: identifier cs rebound.
File "NX.noise.passive.pv", line 266, characters 6-7:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 559, characters 8-9:
Warning: identifier hs rebound.
File "NX.noise.passive.pv", line 303, character 6:
Warning: identifier e rebound.
File "NX.noise.passive.pv", line 304, characters 6-7:
Warning: identifier ne rebound.
File "NX.noise.passive.pv", line 305, characters 6-7:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 307, characters 6-7:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 308, character 6:
Warning: identifier s rebound.
File "NX.noise.passive.pv", line 309, characters 7-8:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 309, characters 26-36:
Warning: identifier ciphertext1 rebound.
File "NX.noise.passive.pv", line 310, characters 6-7:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 311, characters 7-8:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 311, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NX.noise.passive.pv", line 312, characters 6-7:
Warning: identifier hs rebound.
File "NX.noise.passive.pv", line 240, characters 7-8:
Warning: identifier ck rebound.
File "NX.noise.passive.pv", line 259, characters 7-8:
Warning: identifier cs rebound.
File "NX.noise.passive.pv", line 260, characters 6-7:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 240, characters 7-8:
Warning: identifier ck rebound.
File "NX.noise.passive.pv", line 259, characters 7-8:
Warning: identifier cs rebound.
File "NX.noise.passive.pv", line 260, characters 6-7:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 552, characters 8-9:
Warning: identifier hs rebound.
File "NX.noise.passive.pv", line 337, characters 6-7:
Warning: identifier re rebound.
File "NX.noise.passive.pv", line 338, characters 6-7:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 340, characters 7-8:
Warning: identifier ss rebound.
File "NX.noise.passive.pv", line 342, characters 7-8:
Warning: identifier hs rebound.
File "NX.noise.passive.pv", line 265, characters 7-8:
Warning: identifier cs rebound.
File "NX.noise.passive.pv", line 266, characters 6-7:
Warning: identifier ss rebound.
Linear part:
dhexp(b_49,dhexp(a_48,g)) = dhexp(a_48,dhexp(b_49,g))
Completing equations...
Completed equations:
dhexp(b_49,dhexp(a_48,g)) = dhexp(a_48,dhexp(b_49,g))
Convergent part:
Completing equations...
Completed equations:
Process:
{1}out(pub, key_s(charlie));
{2}!
(
    {3}let them: principal = bob in
    {4}let me: principal = alice in
    {5}let s_468: keypair = keypairpack(empty,empty) in
    (
        {6}let e_469: keypair = keypairpack(empty,empty) in
        {7}let rs_470: key = empty in
        {8}let re_471: key = empty in
        {9}let v_472: bitstring = catch-fail(hash(somename,empty)) in
        {10}let v_473: key = catch-fail(v_472) in
        {11}let v_474: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {12}let v_475: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_472) then (if not-caught-fail(v_473) then (if not-caught-fail(v_474) then symmetricstatepack(v_474,v_473,v_472) else fail-any) else fail-any) else fail-any))) in
        {13}let v_476: symmetricstate = catch-fail((if success?((if not-caught-fail(v_472) then (if not-caught-fail(v_473) then (if not-caught-fail(v_474) then symmetricstatepack(v_474,v_473,v_472) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_475) && success?(is-true(success?(1-proj-3-tuple(v_475))))) then symmetricstatepack(1-proj-3-tuple(v_475),2-proj-3-tuple(v_475),hash(3-proj-3-tuple(v_475),empty)) else fail-any) else fail-any)) in
        {14}let hs: handshakestate = (if not-caught-fail(v_476) then handshakestatepack(v_476,s_468,e_469,rs_470,re_471,empty,true) else fail-any) in
        {15}insert statestore(me,them,statepack_a(hs))
    ) | (
        {39}get statestore(=me,=them,statepack_a(hs_477: handshakestate)) in
        {16}let v_478: bitstring = catch-fail(handshakestateunpack(hs_477)) in
        {17}let v_479: bitstring = catch-fail((empty,empty,empty)) in
        {18}new key_e[me,them]: key;
        {19}let v_480: key = catch-fail(dhexp(key_e,g)) in
        {20}let v_481: keypair = catch-fail((if not-caught-fail(v_480) then keypairpack(v_480,key_e) else fail-any)) in
        {21}let v_482: bitstring = catch-fail(getpublickey(v_481)) in
        {22}let v_483: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_478))) in
        {23}let v_484: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_478)) then (if (not-caught-fail(v_483) && success?(is-true(success?(1-proj-3-tuple(v_483))))) then symmetricstatepack(1-proj-3-tuple(v_483),2-proj-3-tuple(v_483),hash(3-proj-3-tuple(v_483),v_482)) else fail-any) else fail-any)) in
        {24}let v_485: bitstring = catch-fail(symmetricstateunpack(v_484)) in
        {25}let v_486: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_485))) in
        {26}let v_487: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_486),2-proj-2-tuple(v_486),3-proj-3-tuple(v_485),msg_a(me,them))) in
        {27}let v_488: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_485))) in
        {28}let v_489: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_486))) && success?(1-proj-3-tuple(v_485))) then (if (not-caught-fail(v_488) && success?(is-true(success?(1-proj-2-tuple(v_488))))) then cipherstatepack(1-proj-2-tuple(v_488),increment_nonce(2-proj-2-tuple(v_486))) else fail-any) else fail-any)) in
        {29}let v_490: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_485)) && success?(1-proj-3-tuple(v_485))) then (if (not-caught-fail(v_486) && success?(is-true(success?(1-proj-2-tuple(v_486))))) then (if not-caught-fail(v_487) then (if not-caught-fail(v_489) then (v_489,v_487) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {30}let v_491: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_490),2-proj-3-tuple(v_485),3-proj-3-tuple(v_485)))) in
        {31}let v_492: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_490)) && success?(symmetricstatepack(1-proj-2-tuple(v_490),2-proj-3-tuple(v_485),3-proj-3-tuple(v_485)))) then (if (not-caught-fail(v_491) && success?(is-true(success?(1-proj-3-tuple(v_491))))) then symmetricstatepack(1-proj-3-tuple(v_491),2-proj-3-tuple(v_491),hash(3-proj-3-tuple(v_491),2-proj-2-tuple(v_490))) else fail-any) else fail-any)) in
        {32}let v_493: bitstring = catch-fail((if (not-caught-fail(v_485) && success?(is-true(success?(1-proj-3-tuple(v_485))))) then (if (not-caught-fail(v_490) && success?(is-true(success?(1-proj-2-tuple(v_490))))) then (if not-caught-fail(v_492) then (v_492,2-proj-2-tuple(v_490)) else fail-any) else fail-any) else fail-any)) in
        {33}let v_494: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_493),2-proj-7-tuple(v_478),v_481,4-proj-7-tuple(v_478),5-proj-7-tuple(v_478),6-proj-7-tuple(v_478),7-proj-7-tuple(v_478))) in
        {34}let v_495: bitstring = catch-fail(concat3(v_482,2-proj-3-tuple(v_479),2-proj-2-tuple(v_493))) in
        {35}let (hs_496: handshakestate,re_497: key,message_a: bitstring) = (if (not-caught-fail(v_478) && success?(is-true(success?(1-proj-7-tuple(v_478))))) then (if (not-caught-fail(v_479) && success?(is-true(success?(1-proj-3-tuple(v_479))))) then (if not-caught-fail(v_481) then (if not-caught-fail(v_482) then (if not-caught-fail(v_484) then (if (not-caught-fail(v_493) && success?(is-true(success?(1-proj-2-tuple(v_493))))) then (if not-caught-fail(v_494) then (if not-caught-fail(v_495) then (v_494,5-proj-7-tuple(v_478),v_495) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {36}event SendMsg(me,them,stage_a,msg_a(me,them),true);
        {37}insert statestore(me,them,statepack_b(hs_496));
        {38}out(pub, message_a)
    ) | (
        {87}get statestore(=me,=them,statepack_b(hs_498: handshakestate)) in
        {40}in(pub, message_b: bitstring);
        {41}let v_499: bitstring = catch-fail(handshakestateunpack(hs_498)) in
        {42}let v_500: bitstring = catch-fail(deconcat3(message_b)) in
        {43}let v_501: bool = catch-fail(true) in
        {44}let v_502: key = catch-fail(1-proj-3-tuple(v_500)) in
        {45}let v_503: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_499))) in
        {46}let v_504: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_499)) then (if (not-caught-fail(v_503) && success?(is-true(success?(1-proj-3-tuple(v_503))))) then symmetricstatepack(1-proj-3-tuple(v_503),2-proj-3-tuple(v_503),hash(3-proj-3-tuple(v_503),v_502)) else fail-any) else fail-any)) in
        {47}let v_505: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_499))) in
        {48}let v_506: bitstring = catch-fail(symmetricstateunpack(v_504)) in
        {49}let v_507: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_506),(if success?(3-proj-7-tuple(v_499)) then (if (not-caught-fail(v_505) && success?(is-true(success?(1-proj-2-tuple(v_505))))) then dhexp(2-proj-2-tuple(v_505),v_502) else fail-any) else fail-any))) in
        {50}let v_508: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_506),(if success?(3-proj-7-tuple(v_499)) then (if (not-caught-fail(v_505) && success?(is-true(success?(1-proj-2-tuple(v_505))))) then dhexp(2-proj-2-tuple(v_505),v_502) else fail-any) else fail-any))) in
        {51}let v_509: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_506),(if success?(3-proj-7-tuple(v_499)) then (if (not-caught-fail(v_505) && success?(is-true(success?(1-proj-2-tuple(v_505))))) then dhexp(2-proj-2-tuple(v_505),v_502) else fail-any) else fail-any))) in
        {52}let v_510: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_499)) then (if (not-caught-fail(v_505) && success?(is-true(success?(1-proj-2-tuple(v_505))))) then dhexp(2-proj-2-tuple(v_505),v_502) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_506))) then (if not-caught-fail(v_507) then (if not-caught-fail(v_508) then (if not-caught-fail(v_509) then (v_507,v_508,v_509) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {53}let v_511: symmetricstate = catch-fail((if success?((if success?(3-proj-7-tuple(v_499)) then (if (not-caught-fail(v_505) && success?(is-true(success?(1-proj-2-tuple(v_505))))) then dhexp(2-proj-2-tuple(v_505),v_502) else fail-any) else fail-any)) then (if (not-caught-fail(v_506) && success?(is-true(success?(1-proj-3-tuple(v_506))))) then (if (not-caught-fail(v_510) && success?(is-true(success?(1-proj-3-tuple(v_510))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_510)) then cipherstatepack(2-proj-3-tuple(v_510),minnonce) else fail-any),1-proj-3-tuple(v_510),3-proj-3-tuple(v_506)) else fail-any) else fail-any) else fail-any)) in
        {54}let v_512: bitstring = catch-fail(symmetricstateunpack(v_511)) in
        {55}let v_513: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_512))) in
        {56}let v_514: aead = catch-fail(decrypt(1-proj-2-tuple(v_513),2-proj-2-tuple(v_513),3-proj-3-tuple(v_512),2-proj-3-tuple(v_500))) in
        {57}let v_515: bitstring = catch-fail(aeadunpack(v_514)) in
        {58}let v_516: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_512))) in
        {59}let v_517: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_513))) && success?(1-proj-3-tuple(v_512))) then (if (not-caught-fail(v_516) && success?(is-true(success?(1-proj-2-tuple(v_516))))) then cipherstatepack(1-proj-2-tuple(v_516),increment_nonce(2-proj-2-tuple(v_513))) else fail-any) else fail-any)) in
        {60}let v_518: bitstring = catch-fail((if (success?(2-proj-3-tuple(v_500)) && (success?(3-proj-3-tuple(v_512)) && success?(1-proj-3-tuple(v_512)))) then (if (not-caught-fail(v_513) && success?(is-true(success?(1-proj-2-tuple(v_513))))) then (if not-caught-fail(v_514) then (if (not-caught-fail(v_515) && success?(is-true(success?(1-proj-3-tuple(v_515))))) then (if not-caught-fail(v_517) then (v_517,3-proj-3-tuple(v_515),1-proj-3-tuple(v_515)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {61}let v_519: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_518),2-proj-3-tuple(v_512),3-proj-3-tuple(v_512)))) in
        {62}let v_520: symmetricstate = catch-fail((if (success?(2-proj-3-tuple(v_500)) && success?(symmetricstatepack(1-proj-3-tuple(v_518),2-proj-3-tuple(v_512),3-proj-3-tuple(v_512)))) then (if (not-caught-fail(v_519) && success?(is-true(success?(1-proj-3-tuple(v_519))))) then symmetricstatepack(1-proj-3-tuple(v_519),2-proj-3-tuple(v_519),hash(3-proj-3-tuple(v_519),2-proj-3-tuple(v_500))) else fail-any) else fail-any)) in
        {63}let v_521: bitstring = catch-fail((if success?(2-proj-3-tuple(v_500)) then (if (not-caught-fail(v_512) && success?(is-true(success?(1-proj-3-tuple(v_512))))) then (if (not-caught-fail(v_518) && success?(is-true(success?(1-proj-3-tuple(v_518))))) then (if not-caught-fail(v_520) then (v_520,2-proj-3-tuple(v_518),3-proj-3-tuple(v_518)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {64}let v_522: key = catch-fail(2-proj-3-tuple(v_521)) in
        {65}let v_523: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_499))) in
        {66}let v_524: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_521))) in
        {67}let v_525: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_524),(if success?(3-proj-7-tuple(v_499)) then (if (not-caught-fail(v_523) && success?(is-true(success?(1-proj-2-tuple(v_523))))) then dhexp(2-proj-2-tuple(v_523),v_522) else fail-any) else fail-any))) in
        {68}let v_526: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_524),(if success?(3-proj-7-tuple(v_499)) then (if (not-caught-fail(v_523) && success?(is-true(success?(1-proj-2-tuple(v_523))))) then dhexp(2-proj-2-tuple(v_523),v_522) else fail-any) else fail-any))) in
        {69}let v_527: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_524),(if success?(3-proj-7-tuple(v_499)) then (if (not-caught-fail(v_523) && success?(is-true(success?(1-proj-2-tuple(v_523))))) then dhexp(2-proj-2-tuple(v_523),v_522) else fail-any) else fail-any))) in
        {70}let v_528: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_499)) then (if (not-caught-fail(v_523) && success?(is-true(success?(1-proj-2-tuple(v_523))))) then dhexp(2-proj-2-tuple(v_523),v_522) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_524))) then (if not-caught-fail(v_525) then (if not-caught-fail(v_526) then (if not-caught-fail(v_527) then (v_525,v_526,v_527) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {71}let v_529: symmetricstate = catch-fail((if (success?((if success?(3-proj-7-tuple(v_499)) then (if (not-caught-fail(v_523) && success?(is-true(success?(1-proj-2-tuple(v_523))))) then dhexp(2-proj-2-tuple(v_523),v_522) else fail-any) else fail-any)) && success?(1-proj-3-tuple(v_521))) then (if (not-caught-fail(v_524) && success?(is-true(success?(1-proj-3-tuple(v_524))))) then (if (not-caught-fail(v_528) && success?(is-true(success?(1-proj-3-tuple(v_528))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_528)) then cipherstatepack(2-proj-3-tuple(v_528),minnonce) else fail-any),1-proj-3-tuple(v_528),3-proj-3-tuple(v_524)) else fail-any) else fail-any) else fail-any)) in
        {72}let v_530: bitstring = catch-fail(symmetricstateunpack(v_529)) in
        {73}let v_531: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_530))) in
        {74}let v_532: aead = catch-fail(decrypt(1-proj-2-tuple(v_531),2-proj-2-tuple(v_531),3-proj-3-tuple(v_530),3-proj-3-tuple(v_500))) in
        {75}let v_533: bitstring = catch-fail(aeadunpack(v_532)) in
        {76}let v_534: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_530))) in
        {77}let v_535: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_531))) && success?(1-proj-3-tuple(v_530))) then (if (not-caught-fail(v_534) && success?(is-true(success?(1-proj-2-tuple(v_534))))) then cipherstatepack(1-proj-2-tuple(v_534),increment_nonce(2-proj-2-tuple(v_531))) else fail-any) else fail-any)) in
        {78}let v_536: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_500)) && (success?(3-proj-3-tuple(v_530)) && success?(1-proj-3-tuple(v_530)))) then (if (not-caught-fail(v_531) && success?(is-true(success?(1-proj-2-tuple(v_531))))) then (if not-caught-fail(v_532) then (if (not-caught-fail(v_533) && success?(is-true(success?(1-proj-3-tuple(v_533))))) then (if not-caught-fail(v_535) then (v_535,3-proj-3-tuple(v_533),1-proj-3-tuple(v_533)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {79}let v_537: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_536),2-proj-3-tuple(v_530),3-proj-3-tuple(v_530)))) in
        {80}let v_538: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_500)) && success?(symmetricstatepack(1-proj-3-tuple(v_536),2-proj-3-tuple(v_530),3-proj-3-tuple(v_530)))) then (if (not-caught-fail(v_537) && success?(is-true(success?(1-proj-3-tuple(v_537))))) then symmetricstatepack(1-proj-3-tuple(v_537),2-proj-3-tuple(v_537),hash(3-proj-3-tuple(v_537),3-proj-3-tuple(v_500))) else fail-any) else fail-any)) in
        {81}let v_539: bitstring = catch-fail((if success?(3-proj-3-tuple(v_500)) then (if (not-caught-fail(v_530) && success?(is-true(success?(1-proj-3-tuple(v_530))))) then (if (not-caught-fail(v_536) && success?(is-true(success?(1-proj-3-tuple(v_536))))) then (if not-caught-fail(v_538) then (v_538,2-proj-3-tuple(v_536),3-proj-3-tuple(v_536)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {82}let v_540: key = catch-fail(dhexp(key_s(them),g)) in
        {83}let v_541: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_539),2-proj-7-tuple(v_499),3-proj-7-tuple(v_499),v_522,v_502,6-proj-7-tuple(v_499),7-proj-7-tuple(v_499))) in
        {84}let (hs_542: handshakestate,re_543: key,plaintext_b: bitstring,valid: bool) = (if (not-caught-fail(v_499) && success?(is-true(success?(1-proj-7-tuple(v_499))))) then (if (not-caught-fail(v_500) && success?(is-true(success?(1-proj-3-tuple(v_500))))) then (if not-caught-fail(v_501) then (if not-caught-fail(v_502) then (if not-caught-fail(v_504) then (if not-caught-fail(v_511) then (if (not-caught-fail(v_521) && success?(is-true(success?(1-proj-3-tuple(v_521))))) then (if not-caught-fail(v_522) then (if not-caught-fail(v_529) then (if (not-caught-fail(v_539) && success?(is-true(success?(1-proj-3-tuple(v_539))))) then (if ((3-proj-3-tuple(v_521) && 3-proj-3-tuple(v_539)) && (v_522 = getpublickey((if not-caught-fail(v_540) then keypairpack(v_540,key_s(them)) else fail-any)))) then (if not-caught-fail(v_541) then (v_541,getpublickey(3-proj-7-tuple(v_499)),2-proj-3-tuple(v_539),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {85}event RecvMsg(me,them,stage_b,plaintext_b,valid);
        {86}insert statestore(me,them,statepack_c(hs_542))
    ) | (
        {105}get statestore(=me,=them,statepack_c(hs_544: handshakestate)) in
        {88}let v_545: bitstring = catch-fail(handshakestateunpack(hs_544)) in
        {89}let v_546: bitstring = catch-fail((empty,empty,empty)) in
        {90}let v_547: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_545))) in
        {91}let v_548: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_547))) in
        {92}let v_549: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_548),2-proj-2-tuple(v_548),3-proj-3-tuple(v_547),msg_c(me,them))) in
        {93}let v_550: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_547))) in
        {94}let v_551: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_548))) && success?(1-proj-3-tuple(v_547))) then (if (not-caught-fail(v_550) && success?(is-true(success?(1-proj-2-tuple(v_550))))) then cipherstatepack(1-proj-2-tuple(v_550),increment_nonce(2-proj-2-tuple(v_548))) else fail-any) else fail-any)) in
        {95}let v_552: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_547)) && success?(1-proj-3-tuple(v_547))) then (if (not-caught-fail(v_548) && success?(is-true(success?(1-proj-2-tuple(v_548))))) then (if not-caught-fail(v_549) then (if not-caught-fail(v_551) then (v_551,v_549) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {96}let v_553: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_552),2-proj-3-tuple(v_547),3-proj-3-tuple(v_547)))) in
        {97}let v_554: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_552)) && success?(symmetricstatepack(1-proj-2-tuple(v_552),2-proj-3-tuple(v_547),3-proj-3-tuple(v_547)))) then (if (not-caught-fail(v_553) && success?(is-true(success?(1-proj-3-tuple(v_553))))) then symmetricstatepack(1-proj-3-tuple(v_553),2-proj-3-tuple(v_553),hash(3-proj-3-tuple(v_553),2-proj-2-tuple(v_552))) else fail-any) else fail-any)) in
        {98}let v_555: bitstring = catch-fail((if success?(1-proj-7-tuple(v_545)) then (if (not-caught-fail(v_547) && success?(is-true(success?(1-proj-3-tuple(v_547))))) then (if (not-caught-fail(v_552) && success?(is-true(success?(1-proj-2-tuple(v_552))))) then (if not-caught-fail(v_554) then (v_554,2-proj-2-tuple(v_552)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {99}let v_556: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_555),2-proj-7-tuple(v_545),3-proj-7-tuple(v_545),4-proj-7-tuple(v_545),5-proj-7-tuple(v_545),6-proj-7-tuple(v_545),7-proj-7-tuple(v_545))) in
        {100}let v_557: bitstring = catch-fail(concat3(1-proj-3-tuple(v_546),2-proj-3-tuple(v_546),2-proj-2-tuple(v_555))) in
        {101}let (hs_558: handshakestate,re_559: key,message_c: bitstring) = (if (not-caught-fail(v_545) && success?(is-true(success?(1-proj-7-tuple(v_545))))) then (if (not-caught-fail(v_546) && success?(is-true(success?(1-proj-3-tuple(v_546))))) then (if (not-caught-fail(v_555) && success?(is-true(success?(1-proj-2-tuple(v_555))))) then (if not-caught-fail(v_556) then (if not-caught-fail(v_557) then (v_556,5-proj-7-tuple(v_545),v_557) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {102}event SendMsg(me,them,stage_c,msg_c(me,them),true);
        {103}insert statestore(me,them,statepack_d(hs_558));
        {104}out(pub, message_c)
    ) | (
        {133}get statestore(=me,=them,statepack_d(hs_560: handshakestate)) in
        {106}in(pub, message_d: bitstring);
        {107}let v_561: bitstring = catch-fail(handshakestateunpack(hs_560)) in
        {108}let v_562: bitstring = catch-fail(deconcat3(message_d)) in
        {109}let v_563: bool = catch-fail(true) in
        {110}let v_564: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_561))) in
        {111}let v_565: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_564))) in
        {112}let v_566: aead = catch-fail(decrypt(1-proj-2-tuple(v_565),2-proj-2-tuple(v_565),3-proj-3-tuple(v_564),3-proj-3-tuple(v_562))) in
        {113}let v_567: bitstring = catch-fail(aeadunpack(v_566)) in
        {114}let v_568: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_564))) in
        {115}let v_569: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_565))) && success?(1-proj-3-tuple(v_564))) then (if (not-caught-fail(v_568) && success?(is-true(success?(1-proj-2-tuple(v_568))))) then cipherstatepack(1-proj-2-tuple(v_568),increment_nonce(2-proj-2-tuple(v_565))) else fail-any) else fail-any)) in
        {116}let v_570: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_562)) && (success?(3-proj-3-tuple(v_564)) && success?(1-proj-3-tuple(v_564)))) then (if (not-caught-fail(v_565) && success?(is-true(success?(1-proj-2-tuple(v_565))))) then (if not-caught-fail(v_566) then (if (not-caught-fail(v_567) && success?(is-true(success?(1-proj-3-tuple(v_567))))) then (if not-caught-fail(v_569) then (v_569,3-proj-3-tuple(v_567),1-proj-3-tuple(v_567)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {117}let v_571: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_570),2-proj-3-tuple(v_564),3-proj-3-tuple(v_564)))) in
        {118}let v_572: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_562)) && success?(symmetricstatepack(1-proj-3-tuple(v_570),2-proj-3-tuple(v_564),3-proj-3-tuple(v_564)))) then (if (not-caught-fail(v_571) && success?(is-true(success?(1-proj-3-tuple(v_571))))) then symmetricstatepack(1-proj-3-tuple(v_571),2-proj-3-tuple(v_571),hash(3-proj-3-tuple(v_571),3-proj-3-tuple(v_562))) else fail-any) else fail-any)) in
        {119}let v_573: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_562)) && success?(1-proj-7-tuple(v_561))) then (if (not-caught-fail(v_564) && success?(is-true(success?(1-proj-3-tuple(v_564))))) then (if (not-caught-fail(v_570) && success?(is-true(success?(1-proj-3-tuple(v_570))))) then (if not-caught-fail(v_572) then (v_572,2-proj-3-tuple(v_570),3-proj-3-tuple(v_570)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {120}let v_574: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_573),2-proj-7-tuple(v_561),3-proj-7-tuple(v_561),4-proj-7-tuple(v_561),5-proj-7-tuple(v_561),6-proj-7-tuple(v_561),7-proj-7-tuple(v_561))) in
        {121}let v_575: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_573))) in
        {122}let v_576: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_575),zero)) in
        {123}let v_577: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_575),zero)) in
        {124}let v_578: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_575),zero)) in
        {125}let v_579: bitstring = catch-fail((if success?(2-proj-3-tuple(v_575)) then (if not-caught-fail(v_576) then (if not-caught-fail(v_577) then (if not-caught-fail(v_578) then (v_576,v_577,v_578) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {126}let v_580: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_579)) then cipherstatepack(1-proj-3-tuple(v_579),minnonce) else fail-any)) in
        {127}let v_581: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_579)) then cipherstatepack(2-proj-3-tuple(v_579),minnonce) else fail-any)) in
        {128}let v_582: bitstring = catch-fail((if success?(1-proj-3-tuple(v_573)) then (if (not-caught-fail(v_575) && success?(is-true(success?(1-proj-3-tuple(v_575))))) then (if (not-caught-fail(v_579) && success?(is-true(success?(1-proj-3-tuple(v_579))))) then (if not-caught-fail(v_580) then (if not-caught-fail(v_581) then (1-proj-3-tuple(v_573),v_580,v_581) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {129}let (hs_583: handshakestate,re_584: key,plaintext_d: bitstring,valid_585: bool,cs1: cipherstate,cs2: cipherstate) = (if (not-caught-fail(v_561) && success?(is-true(success?(1-proj-7-tuple(v_561))))) then (if (not-caught-fail(v_562) && success?(is-true(success?(1-proj-3-tuple(v_562))))) then (if not-caught-fail(v_563) then (if (not-caught-fail(v_573) && success?(is-true(success?(1-proj-3-tuple(v_573))))) then (if (v_563 && 3-proj-3-tuple(v_573)) then (if not-caught-fail(v_574) then (if (not-caught-fail(v_582) && success?(is-true(success?(1-proj-3-tuple(v_582))))) then (v_574,getpublickey(3-proj-7-tuple(v_561)),2-proj-3-tuple(v_573),true,2-proj-3-tuple(v_582),3-proj-3-tuple(v_582)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {130}event RecvMsg(me,them,stage_d,plaintext_d,valid_585);
        {131}insert statestore(me,them,statepack_e(hs_583));
        {132}event RecvEnd(valid_585)
    ) | (
        {134}event LeakS(phase0,me);
        {135}out(pub, key_s(me))
    ) | (
        {136}phase 1;
        {137}event LeakS(phase1,me);
        {138}out(pub, key_s(me))
    )
) | (
    {139}let them_586: principal = charlie in
    {140}let me_587: principal = alice in
    {141}let s_588: keypair = keypairpack(empty,empty) in
    (
        {142}let e_589: keypair = keypairpack(empty,empty) in
        {143}let rs_590: key = empty in
        {144}let re_591: key = empty in
        {145}let v_592: bitstring = catch-fail(hash(somename,empty)) in
        {146}let v_593: key = catch-fail(v_592) in
        {147}let v_594: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {148}let v_595: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_592) then (if not-caught-fail(v_593) then (if not-caught-fail(v_594) then symmetricstatepack(v_594,v_593,v_592) else fail-any) else fail-any) else fail-any))) in
        {149}let v_596: symmetricstate = catch-fail((if success?((if not-caught-fail(v_592) then (if not-caught-fail(v_593) then (if not-caught-fail(v_594) then symmetricstatepack(v_594,v_593,v_592) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_595) && success?(is-true(success?(1-proj-3-tuple(v_595))))) then symmetricstatepack(1-proj-3-tuple(v_595),2-proj-3-tuple(v_595),hash(3-proj-3-tuple(v_595),empty)) else fail-any) else fail-any)) in
        {150}let hs_597: handshakestate = (if not-caught-fail(v_596) then handshakestatepack(v_596,s_588,e_589,rs_590,re_591,empty,true) else fail-any) in
        {151}insert statestore(me_587,them_586,statepack_a(hs_597))
    ) | (
        {175}get statestore(=me_587,=them_586,statepack_a(hs_598: handshakestate)) in
        {152}let v_599: bitstring = catch-fail(handshakestateunpack(hs_598)) in
        {153}let v_600: bitstring = catch-fail((empty,empty,empty)) in
        {154}new key_e_601[me_587,them_586]: key;
        {155}let v_602: key = catch-fail(dhexp(key_e_601,g)) in
        {156}let v_603: keypair = catch-fail((if not-caught-fail(v_602) then keypairpack(v_602,key_e_601) else fail-any)) in
        {157}let v_604: bitstring = catch-fail(getpublickey(v_603)) in
        {158}let v_605: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_599))) in
        {159}let v_606: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_599)) then (if (not-caught-fail(v_605) && success?(is-true(success?(1-proj-3-tuple(v_605))))) then symmetricstatepack(1-proj-3-tuple(v_605),2-proj-3-tuple(v_605),hash(3-proj-3-tuple(v_605),v_604)) else fail-any) else fail-any)) in
        {160}let v_607: bitstring = catch-fail(symmetricstateunpack(v_606)) in
        {161}let v_608: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_607))) in
        {162}let v_609: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_608),2-proj-2-tuple(v_608),3-proj-3-tuple(v_607),msg_a(me_587,them_586))) in
        {163}let v_610: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_607))) in
        {164}let v_611: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_608))) && success?(1-proj-3-tuple(v_607))) then (if (not-caught-fail(v_610) && success?(is-true(success?(1-proj-2-tuple(v_610))))) then cipherstatepack(1-proj-2-tuple(v_610),increment_nonce(2-proj-2-tuple(v_608))) else fail-any) else fail-any)) in
        {165}let v_612: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_607)) && success?(1-proj-3-tuple(v_607))) then (if (not-caught-fail(v_608) && success?(is-true(success?(1-proj-2-tuple(v_608))))) then (if not-caught-fail(v_609) then (if not-caught-fail(v_611) then (v_611,v_609) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {166}let v_613: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_612),2-proj-3-tuple(v_607),3-proj-3-tuple(v_607)))) in
        {167}let v_614: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_612)) && success?(symmetricstatepack(1-proj-2-tuple(v_612),2-proj-3-tuple(v_607),3-proj-3-tuple(v_607)))) then (if (not-caught-fail(v_613) && success?(is-true(success?(1-proj-3-tuple(v_613))))) then symmetricstatepack(1-proj-3-tuple(v_613),2-proj-3-tuple(v_613),hash(3-proj-3-tuple(v_613),2-proj-2-tuple(v_612))) else fail-any) else fail-any)) in
        {168}let v_615: bitstring = catch-fail((if (not-caught-fail(v_607) && success?(is-true(success?(1-proj-3-tuple(v_607))))) then (if (not-caught-fail(v_612) && success?(is-true(success?(1-proj-2-tuple(v_612))))) then (if not-caught-fail(v_614) then (v_614,2-proj-2-tuple(v_612)) else fail-any) else fail-any) else fail-any)) in
        {169}let v_616: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_615),2-proj-7-tuple(v_599),v_603,4-proj-7-tuple(v_599),5-proj-7-tuple(v_599),6-proj-7-tuple(v_599),7-proj-7-tuple(v_599))) in
        {170}let v_617: bitstring = catch-fail(concat3(v_604,2-proj-3-tuple(v_600),2-proj-2-tuple(v_615))) in
        {171}let (hs_618: handshakestate,re_619: key,message_a_620: bitstring) = (if (not-caught-fail(v_599) && success?(is-true(success?(1-proj-7-tuple(v_599))))) then (if (not-caught-fail(v_600) && success?(is-true(success?(1-proj-3-tuple(v_600))))) then (if not-caught-fail(v_603) then (if not-caught-fail(v_604) then (if not-caught-fail(v_606) then (if (not-caught-fail(v_615) && success?(is-true(success?(1-proj-2-tuple(v_615))))) then (if not-caught-fail(v_616) then (if not-caught-fail(v_617) then (v_616,5-proj-7-tuple(v_599),v_617) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {172}event SendMsg(me_587,them_586,stage_a,msg_a(me_587,them_586),true);
        {173}insert statestore(me_587,them_586,statepack_b(hs_618));
        {174}out(pub, message_a_620)
    ) | (
        {223}get statestore(=me_587,=them_586,statepack_b(hs_621: handshakestate)) in
        {176}in(pub, message_b_622: bitstring);
        {177}let v_623: bitstring = catch-fail(handshakestateunpack(hs_621)) in
        {178}let v_624: bitstring = catch-fail(deconcat3(message_b_622)) in
        {179}let v_625: bool = catch-fail(true) in
        {180}let v_626: key = catch-fail(1-proj-3-tuple(v_624)) in
        {181}let v_627: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_623))) in
        {182}let v_628: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_623)) then (if (not-caught-fail(v_627) && success?(is-true(success?(1-proj-3-tuple(v_627))))) then symmetricstatepack(1-proj-3-tuple(v_627),2-proj-3-tuple(v_627),hash(3-proj-3-tuple(v_627),v_626)) else fail-any) else fail-any)) in
        {183}let v_629: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_623))) in
        {184}let v_630: bitstring = catch-fail(symmetricstateunpack(v_628)) in
        {185}let v_631: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_630),(if success?(3-proj-7-tuple(v_623)) then (if (not-caught-fail(v_629) && success?(is-true(success?(1-proj-2-tuple(v_629))))) then dhexp(2-proj-2-tuple(v_629),v_626) else fail-any) else fail-any))) in
        {186}let v_632: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_630),(if success?(3-proj-7-tuple(v_623)) then (if (not-caught-fail(v_629) && success?(is-true(success?(1-proj-2-tuple(v_629))))) then dhexp(2-proj-2-tuple(v_629),v_626) else fail-any) else fail-any))) in
        {187}let v_633: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_630),(if success?(3-proj-7-tuple(v_623)) then (if (not-caught-fail(v_629) && success?(is-true(success?(1-proj-2-tuple(v_629))))) then dhexp(2-proj-2-tuple(v_629),v_626) else fail-any) else fail-any))) in
        {188}let v_634: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_623)) then (if (not-caught-fail(v_629) && success?(is-true(success?(1-proj-2-tuple(v_629))))) then dhexp(2-proj-2-tuple(v_629),v_626) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_630))) then (if not-caught-fail(v_631) then (if not-caught-fail(v_632) then (if not-caught-fail(v_633) then (v_631,v_632,v_633) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {189}let v_635: symmetricstate = catch-fail((if success?((if success?(3-proj-7-tuple(v_623)) then (if (not-caught-fail(v_629) && success?(is-true(success?(1-proj-2-tuple(v_629))))) then dhexp(2-proj-2-tuple(v_629),v_626) else fail-any) else fail-any)) then (if (not-caught-fail(v_630) && success?(is-true(success?(1-proj-3-tuple(v_630))))) then (if (not-caught-fail(v_634) && success?(is-true(success?(1-proj-3-tuple(v_634))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_634)) then cipherstatepack(2-proj-3-tuple(v_634),minnonce) else fail-any),1-proj-3-tuple(v_634),3-proj-3-tuple(v_630)) else fail-any) else fail-any) else fail-any)) in
        {190}let v_636: bitstring = catch-fail(symmetricstateunpack(v_635)) in
        {191}let v_637: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_636))) in
        {192}let v_638: aead = catch-fail(decrypt(1-proj-2-tuple(v_637),2-proj-2-tuple(v_637),3-proj-3-tuple(v_636),2-proj-3-tuple(v_624))) in
        {193}let v_639: bitstring = catch-fail(aeadunpack(v_638)) in
        {194}let v_640: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_636))) in
        {195}let v_641: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_637))) && success?(1-proj-3-tuple(v_636))) then (if (not-caught-fail(v_640) && success?(is-true(success?(1-proj-2-tuple(v_640))))) then cipherstatepack(1-proj-2-tuple(v_640),increment_nonce(2-proj-2-tuple(v_637))) else fail-any) else fail-any)) in
        {196}let v_642: bitstring = catch-fail((if (success?(2-proj-3-tuple(v_624)) && (success?(3-proj-3-tuple(v_636)) && success?(1-proj-3-tuple(v_636)))) then (if (not-caught-fail(v_637) && success?(is-true(success?(1-proj-2-tuple(v_637))))) then (if not-caught-fail(v_638) then (if (not-caught-fail(v_639) && success?(is-true(success?(1-proj-3-tuple(v_639))))) then (if not-caught-fail(v_641) then (v_641,3-proj-3-tuple(v_639),1-proj-3-tuple(v_639)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {197}let v_643: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_642),2-proj-3-tuple(v_636),3-proj-3-tuple(v_636)))) in
        {198}let v_644: symmetricstate = catch-fail((if (success?(2-proj-3-tuple(v_624)) && success?(symmetricstatepack(1-proj-3-tuple(v_642),2-proj-3-tuple(v_636),3-proj-3-tuple(v_636)))) then (if (not-caught-fail(v_643) && success?(is-true(success?(1-proj-3-tuple(v_643))))) then symmetricstatepack(1-proj-3-tuple(v_643),2-proj-3-tuple(v_643),hash(3-proj-3-tuple(v_643),2-proj-3-tuple(v_624))) else fail-any) else fail-any)) in
        {199}let v_645: bitstring = catch-fail((if success?(2-proj-3-tuple(v_624)) then (if (not-caught-fail(v_636) && success?(is-true(success?(1-proj-3-tuple(v_636))))) then (if (not-caught-fail(v_642) && success?(is-true(success?(1-proj-3-tuple(v_642))))) then (if not-caught-fail(v_644) then (v_644,2-proj-3-tuple(v_642),3-proj-3-tuple(v_642)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {200}let v_646: key = catch-fail(2-proj-3-tuple(v_645)) in
        {201}let v_647: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_623))) in
        {202}let v_648: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_645))) in
        {203}let v_649: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_648),(if success?(3-proj-7-tuple(v_623)) then (if (not-caught-fail(v_647) && success?(is-true(success?(1-proj-2-tuple(v_647))))) then dhexp(2-proj-2-tuple(v_647),v_646) else fail-any) else fail-any))) in
        {204}let v_650: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_648),(if success?(3-proj-7-tuple(v_623)) then (if (not-caught-fail(v_647) && success?(is-true(success?(1-proj-2-tuple(v_647))))) then dhexp(2-proj-2-tuple(v_647),v_646) else fail-any) else fail-any))) in
        {205}let v_651: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_648),(if success?(3-proj-7-tuple(v_623)) then (if (not-caught-fail(v_647) && success?(is-true(success?(1-proj-2-tuple(v_647))))) then dhexp(2-proj-2-tuple(v_647),v_646) else fail-any) else fail-any))) in
        {206}let v_652: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_623)) then (if (not-caught-fail(v_647) && success?(is-true(success?(1-proj-2-tuple(v_647))))) then dhexp(2-proj-2-tuple(v_647),v_646) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_648))) then (if not-caught-fail(v_649) then (if not-caught-fail(v_650) then (if not-caught-fail(v_651) then (v_649,v_650,v_651) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {207}let v_653: symmetricstate = catch-fail((if (success?((if success?(3-proj-7-tuple(v_623)) then (if (not-caught-fail(v_647) && success?(is-true(success?(1-proj-2-tuple(v_647))))) then dhexp(2-proj-2-tuple(v_647),v_646) else fail-any) else fail-any)) && success?(1-proj-3-tuple(v_645))) then (if (not-caught-fail(v_648) && success?(is-true(success?(1-proj-3-tuple(v_648))))) then (if (not-caught-fail(v_652) && success?(is-true(success?(1-proj-3-tuple(v_652))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_652)) then cipherstatepack(2-proj-3-tuple(v_652),minnonce) else fail-any),1-proj-3-tuple(v_652),3-proj-3-tuple(v_648)) else fail-any) else fail-any) else fail-any)) in
        {208}let v_654: bitstring = catch-fail(symmetricstateunpack(v_653)) in
        {209}let v_655: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_654))) in
        {210}let v_656: aead = catch-fail(decrypt(1-proj-2-tuple(v_655),2-proj-2-tuple(v_655),3-proj-3-tuple(v_654),3-proj-3-tuple(v_624))) in
        {211}let v_657: bitstring = catch-fail(aeadunpack(v_656)) in
        {212}let v_658: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_654))) in
        {213}let v_659: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_655))) && success?(1-proj-3-tuple(v_654))) then (if (not-caught-fail(v_658) && success?(is-true(success?(1-proj-2-tuple(v_658))))) then cipherstatepack(1-proj-2-tuple(v_658),increment_nonce(2-proj-2-tuple(v_655))) else fail-any) else fail-any)) in
        {214}let v_660: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_624)) && (success?(3-proj-3-tuple(v_654)) && success?(1-proj-3-tuple(v_654)))) then (if (not-caught-fail(v_655) && success?(is-true(success?(1-proj-2-tuple(v_655))))) then (if not-caught-fail(v_656) then (if (not-caught-fail(v_657) && success?(is-true(success?(1-proj-3-tuple(v_657))))) then (if not-caught-fail(v_659) then (v_659,3-proj-3-tuple(v_657),1-proj-3-tuple(v_657)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {215}let v_661: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_660),2-proj-3-tuple(v_654),3-proj-3-tuple(v_654)))) in
        {216}let v_662: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_624)) && success?(symmetricstatepack(1-proj-3-tuple(v_660),2-proj-3-tuple(v_654),3-proj-3-tuple(v_654)))) then (if (not-caught-fail(v_661) && success?(is-true(success?(1-proj-3-tuple(v_661))))) then symmetricstatepack(1-proj-3-tuple(v_661),2-proj-3-tuple(v_661),hash(3-proj-3-tuple(v_661),3-proj-3-tuple(v_624))) else fail-any) else fail-any)) in
        {217}let v_663: bitstring = catch-fail((if success?(3-proj-3-tuple(v_624)) then (if (not-caught-fail(v_654) && success?(is-true(success?(1-proj-3-tuple(v_654))))) then (if (not-caught-fail(v_660) && success?(is-true(success?(1-proj-3-tuple(v_660))))) then (if not-caught-fail(v_662) then (v_662,2-proj-3-tuple(v_660),3-proj-3-tuple(v_660)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {218}let v_664: key = catch-fail(dhexp(key_s(them_586),g)) in
        {219}let v_665: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_663),2-proj-7-tuple(v_623),3-proj-7-tuple(v_623),v_646,v_626,6-proj-7-tuple(v_623),7-proj-7-tuple(v_623))) in
        {220}let (hs_666: handshakestate,re_667: key,plaintext_b_668: bitstring,valid_669: bool) = (if (not-caught-fail(v_623) && success?(is-true(success?(1-proj-7-tuple(v_623))))) then (if (not-caught-fail(v_624) && success?(is-true(success?(1-proj-3-tuple(v_624))))) then (if not-caught-fail(v_625) then (if not-caught-fail(v_626) then (if not-caught-fail(v_628) then (if not-caught-fail(v_635) then (if (not-caught-fail(v_645) && success?(is-true(success?(1-proj-3-tuple(v_645))))) then (if not-caught-fail(v_646) then (if not-caught-fail(v_653) then (if (not-caught-fail(v_663) && success?(is-true(success?(1-proj-3-tuple(v_663))))) then (if ((3-proj-3-tuple(v_645) && 3-proj-3-tuple(v_663)) && (v_646 = getpublickey((if not-caught-fail(v_664) then keypairpack(v_664,key_s(them_586)) else fail-any)))) then (if not-caught-fail(v_665) then (v_665,getpublickey(3-proj-7-tuple(v_623)),2-proj-3-tuple(v_663),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {221}event RecvMsg(me_587,them_586,stage_b,plaintext_b_668,valid_669);
        {222}insert statestore(me_587,them_586,statepack_c(hs_666))
    ) | (
        {241}get statestore(=me_587,=them_586,statepack_c(hs_670: handshakestate)) in
        {224}let v_671: bitstring = catch-fail(handshakestateunpack(hs_670)) in
        {225}let v_672: bitstring = catch-fail((empty,empty,empty)) in
        {226}let v_673: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_671))) in
        {227}let v_674: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_673))) in
        {228}let v_675: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_674),2-proj-2-tuple(v_674),3-proj-3-tuple(v_673),msg_c(me_587,them_586))) in
        {229}let v_676: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_673))) in
        {230}let v_677: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_674))) && success?(1-proj-3-tuple(v_673))) then (if (not-caught-fail(v_676) && success?(is-true(success?(1-proj-2-tuple(v_676))))) then cipherstatepack(1-proj-2-tuple(v_676),increment_nonce(2-proj-2-tuple(v_674))) else fail-any) else fail-any)) in
        {231}let v_678: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_673)) && success?(1-proj-3-tuple(v_673))) then (if (not-caught-fail(v_674) && success?(is-true(success?(1-proj-2-tuple(v_674))))) then (if not-caught-fail(v_675) then (if not-caught-fail(v_677) then (v_677,v_675) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {232}let v_679: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_678),2-proj-3-tuple(v_673),3-proj-3-tuple(v_673)))) in
        {233}let v_680: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_678)) && success?(symmetricstatepack(1-proj-2-tuple(v_678),2-proj-3-tuple(v_673),3-proj-3-tuple(v_673)))) then (if (not-caught-fail(v_679) && success?(is-true(success?(1-proj-3-tuple(v_679))))) then symmetricstatepack(1-proj-3-tuple(v_679),2-proj-3-tuple(v_679),hash(3-proj-3-tuple(v_679),2-proj-2-tuple(v_678))) else fail-any) else fail-any)) in
        {234}let v_681: bitstring = catch-fail((if success?(1-proj-7-tuple(v_671)) then (if (not-caught-fail(v_673) && success?(is-true(success?(1-proj-3-tuple(v_673))))) then (if (not-caught-fail(v_678) && success?(is-true(success?(1-proj-2-tuple(v_678))))) then (if not-caught-fail(v_680) then (v_680,2-proj-2-tuple(v_678)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {235}let v_682: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_681),2-proj-7-tuple(v_671),3-proj-7-tuple(v_671),4-proj-7-tuple(v_671),5-proj-7-tuple(v_671),6-proj-7-tuple(v_671),7-proj-7-tuple(v_671))) in
        {236}let v_683: bitstring = catch-fail(concat3(1-proj-3-tuple(v_672),2-proj-3-tuple(v_672),2-proj-2-tuple(v_681))) in
        {237}let (hs_684: handshakestate,re_685: key,message_c_686: bitstring) = (if (not-caught-fail(v_671) && success?(is-true(success?(1-proj-7-tuple(v_671))))) then (if (not-caught-fail(v_672) && success?(is-true(success?(1-proj-3-tuple(v_672))))) then (if (not-caught-fail(v_681) && success?(is-true(success?(1-proj-2-tuple(v_681))))) then (if not-caught-fail(v_682) then (if not-caught-fail(v_683) then (v_682,5-proj-7-tuple(v_671),v_683) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {238}event SendMsg(me_587,them_586,stage_c,msg_c(me_587,them_586),true);
        {239}insert statestore(me_587,them_586,statepack_d(hs_684));
        {240}out(pub, message_c_686)
    ) | (
        {269}get statestore(=me_587,=them_586,statepack_d(hs_687: handshakestate)) in
        {242}in(pub, message_d_688: bitstring);
        {243}let v_689: bitstring = catch-fail(handshakestateunpack(hs_687)) in
        {244}let v_690: bitstring = catch-fail(deconcat3(message_d_688)) in
        {245}let v_691: bool = catch-fail(true) in
        {246}let v_692: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_689))) in
        {247}let v_693: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_692))) in
        {248}let v_694: aead = catch-fail(decrypt(1-proj-2-tuple(v_693),2-proj-2-tuple(v_693),3-proj-3-tuple(v_692),3-proj-3-tuple(v_690))) in
        {249}let v_695: bitstring = catch-fail(aeadunpack(v_694)) in
        {250}let v_696: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_692))) in
        {251}let v_697: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_693))) && success?(1-proj-3-tuple(v_692))) then (if (not-caught-fail(v_696) && success?(is-true(success?(1-proj-2-tuple(v_696))))) then cipherstatepack(1-proj-2-tuple(v_696),increment_nonce(2-proj-2-tuple(v_693))) else fail-any) else fail-any)) in
        {252}let v_698: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_690)) && (success?(3-proj-3-tuple(v_692)) && success?(1-proj-3-tuple(v_692)))) then (if (not-caught-fail(v_693) && success?(is-true(success?(1-proj-2-tuple(v_693))))) then (if not-caught-fail(v_694) then (if (not-caught-fail(v_695) && success?(is-true(success?(1-proj-3-tuple(v_695))))) then (if not-caught-fail(v_697) then (v_697,3-proj-3-tuple(v_695),1-proj-3-tuple(v_695)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {253}let v_699: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_698),2-proj-3-tuple(v_692),3-proj-3-tuple(v_692)))) in
        {254}let v_700: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_690)) && success?(symmetricstatepack(1-proj-3-tuple(v_698),2-proj-3-tuple(v_692),3-proj-3-tuple(v_692)))) then (if (not-caught-fail(v_699) && success?(is-true(success?(1-proj-3-tuple(v_699))))) then symmetricstatepack(1-proj-3-tuple(v_699),2-proj-3-tuple(v_699),hash(3-proj-3-tuple(v_699),3-proj-3-tuple(v_690))) else fail-any) else fail-any)) in
        {255}let v_701: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_690)) && success?(1-proj-7-tuple(v_689))) then (if (not-caught-fail(v_692) && success?(is-true(success?(1-proj-3-tuple(v_692))))) then (if (not-caught-fail(v_698) && success?(is-true(success?(1-proj-3-tuple(v_698))))) then (if not-caught-fail(v_700) then (v_700,2-proj-3-tuple(v_698),3-proj-3-tuple(v_698)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {256}let v_702: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_701),2-proj-7-tuple(v_689),3-proj-7-tuple(v_689),4-proj-7-tuple(v_689),5-proj-7-tuple(v_689),6-proj-7-tuple(v_689),7-proj-7-tuple(v_689))) in
        {257}let v_703: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_701))) in
        {258}let v_704: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_703),zero)) in
        {259}let v_705: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_703),zero)) in
        {260}let v_706: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_703),zero)) in
        {261}let v_707: bitstring = catch-fail((if success?(2-proj-3-tuple(v_703)) then (if not-caught-fail(v_704) then (if not-caught-fail(v_705) then (if not-caught-fail(v_706) then (v_704,v_705,v_706) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {262}let v_708: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_707)) then cipherstatepack(1-proj-3-tuple(v_707),minnonce) else fail-any)) in
        {263}let v_709: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_707)) then cipherstatepack(2-proj-3-tuple(v_707),minnonce) else fail-any)) in
        {264}let v_710: bitstring = catch-fail((if success?(1-proj-3-tuple(v_701)) then (if (not-caught-fail(v_703) && success?(is-true(success?(1-proj-3-tuple(v_703))))) then (if (not-caught-fail(v_707) && success?(is-true(success?(1-proj-3-tuple(v_707))))) then (if not-caught-fail(v_708) then (if not-caught-fail(v_709) then (1-proj-3-tuple(v_701),v_708,v_709) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {265}let (hs_711: handshakestate,re_712: key,plaintext_d_713: bitstring,valid_714: bool,cs1_715: cipherstate,cs2_716: cipherstate) = (if (not-caught-fail(v_689) && success?(is-true(success?(1-proj-7-tuple(v_689))))) then (if (not-caught-fail(v_690) && success?(is-true(success?(1-proj-3-tuple(v_690))))) then (if not-caught-fail(v_691) then (if (not-caught-fail(v_701) && success?(is-true(success?(1-proj-3-tuple(v_701))))) then (if (v_691 && 3-proj-3-tuple(v_701)) then (if not-caught-fail(v_702) then (if (not-caught-fail(v_710) && success?(is-true(success?(1-proj-3-tuple(v_710))))) then (v_702,getpublickey(3-proj-7-tuple(v_689)),2-proj-3-tuple(v_701),true,2-proj-3-tuple(v_710),3-proj-3-tuple(v_710)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {266}event RecvMsg(me_587,them_586,stage_d,plaintext_d_713,valid_714);
        {267}insert statestore(me_587,them_586,statepack_e(hs_711));
        {268}event RecvEnd(valid_714)
    ) | (
        {270}event LeakS(phase0,me_587);
        {271}out(pub, key_s(me_587))
    ) | (
        {272}phase 1;
        {273}event LeakS(phase1,me_587);
        {274}out(pub, key_s(me_587))
    )
) | (
    {275}let them_717: principal = alice in
    {276}let me_718: principal = bob in
    {277}let s_719: keypair = keypairpack(empty,empty) in
    {278}out(pub, getpublickey(s_719));
    (
        {279}let e_720: keypair = keypairpack(empty,empty) in
        {280}let rs_721: key = empty in
        {281}let re_722: key = empty in
        {282}let v_723: bitstring = catch-fail(hash(somename,empty)) in
        {283}let v_724: key = catch-fail(v_723) in
        {284}let v_725: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {285}let v_726: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_723) then (if not-caught-fail(v_724) then (if not-caught-fail(v_725) then symmetricstatepack(v_725,v_724,v_723) else fail-any) else fail-any) else fail-any))) in
        {286}let v_727: symmetricstate = catch-fail((if success?((if not-caught-fail(v_723) then (if not-caught-fail(v_724) then (if not-caught-fail(v_725) then symmetricstatepack(v_725,v_724,v_723) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_726) && success?(is-true(success?(1-proj-3-tuple(v_726))))) then symmetricstatepack(1-proj-3-tuple(v_726),2-proj-3-tuple(v_726),hash(3-proj-3-tuple(v_726),empty)) else fail-any) else fail-any)) in
        {287}let hs_728: handshakestate = (if not-caught-fail(v_727) then handshakestatepack(v_727,s_719,e_720,rs_721,re_722,empty,false) else fail-any) in
        {288}insert statestore(me_718,them_717,statepack_a(hs_728))
    ) | (
        {310}get statestore(=me_718,=them_717,statepack_a(hs_729: handshakestate)) in
        {289}in(pub, message_a_730: bitstring);
        {290}let v_731: bitstring = catch-fail(handshakestateunpack(hs_729)) in
        {291}let v_732: bitstring = catch-fail(deconcat3(message_a_730)) in
        {292}let v_733: bool = catch-fail(true) in
        {293}let v_734: key = catch-fail(1-proj-3-tuple(v_732)) in
        {294}let v_735: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_731))) in
        {295}let v_736: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_731)) then (if (not-caught-fail(v_735) && success?(is-true(success?(1-proj-3-tuple(v_735))))) then symmetricstatepack(1-proj-3-tuple(v_735),2-proj-3-tuple(v_735),hash(3-proj-3-tuple(v_735),v_734)) else fail-any) else fail-any)) in
        {296}let v_737: bitstring = catch-fail(symmetricstateunpack(v_736)) in
        {297}let v_738: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_737))) in
        {298}let v_739: aead = catch-fail(decrypt(1-proj-2-tuple(v_738),2-proj-2-tuple(v_738),3-proj-3-tuple(v_737),3-proj-3-tuple(v_732))) in
        {299}let v_740: bitstring = catch-fail(aeadunpack(v_739)) in
        {300}let v_741: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_737))) in
        {301}let v_742: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_738))) && success?(1-proj-3-tuple(v_737))) then (if (not-caught-fail(v_741) && success?(is-true(success?(1-proj-2-tuple(v_741))))) then cipherstatepack(1-proj-2-tuple(v_741),increment_nonce(2-proj-2-tuple(v_738))) else fail-any) else fail-any)) in
        {302}let v_743: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_732)) && (success?(3-proj-3-tuple(v_737)) && success?(1-proj-3-tuple(v_737)))) then (if (not-caught-fail(v_738) && success?(is-true(success?(1-proj-2-tuple(v_738))))) then (if not-caught-fail(v_739) then (if (not-caught-fail(v_740) && success?(is-true(success?(1-proj-3-tuple(v_740))))) then (if not-caught-fail(v_742) then (v_742,3-proj-3-tuple(v_740),1-proj-3-tuple(v_740)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {303}let v_744: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_743),2-proj-3-tuple(v_737),3-proj-3-tuple(v_737)))) in
        {304}let v_745: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_732)) && success?(symmetricstatepack(1-proj-3-tuple(v_743),2-proj-3-tuple(v_737),3-proj-3-tuple(v_737)))) then (if (not-caught-fail(v_744) && success?(is-true(success?(1-proj-3-tuple(v_744))))) then symmetricstatepack(1-proj-3-tuple(v_744),2-proj-3-tuple(v_744),hash(3-proj-3-tuple(v_744),3-proj-3-tuple(v_732))) else fail-any) else fail-any)) in
        {305}let v_746: bitstring = catch-fail((if success?(3-proj-3-tuple(v_732)) then (if (not-caught-fail(v_737) && success?(is-true(success?(1-proj-3-tuple(v_737))))) then (if (not-caught-fail(v_743) && success?(is-true(success?(1-proj-3-tuple(v_743))))) then (if not-caught-fail(v_745) then (v_745,2-proj-3-tuple(v_743),3-proj-3-tuple(v_743)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {306}let v_747: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_746),2-proj-7-tuple(v_731),3-proj-7-tuple(v_731),4-proj-7-tuple(v_731),v_734,6-proj-7-tuple(v_731),7-proj-7-tuple(v_731))) in
        {307}let (hs_748: handshakestate,re_749: key,plaintext_a: bitstring,valid_750: bool) = (if (not-caught-fail(v_731) && success?(is-true(success?(1-proj-7-tuple(v_731))))) then (if (not-caught-fail(v_732) && success?(is-true(success?(1-proj-3-tuple(v_732))))) then (if not-caught-fail(v_733) then (if not-caught-fail(v_734) then (if not-caught-fail(v_736) then (if (not-caught-fail(v_746) && success?(is-true(success?(1-proj-3-tuple(v_746))))) then (if (v_733 && 3-proj-3-tuple(v_746)) then (if not-caught-fail(v_747) then (v_747,getpublickey(3-proj-7-tuple(v_731)),2-proj-3-tuple(v_746),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {308}event RecvMsg(me_718,them_717,stage_a,plaintext_a,valid_750);
        {309}insert statestore(me_718,them_717,statepack_b(hs_748))
    ) | (
        {359}get statestore(=me_718,=them_717,statepack_b(hs_751: handshakestate)) in
        {311}let v_752: bitstring = catch-fail(handshakestateunpack(hs_751)) in
        {312}let v_753: bitstring = catch-fail((empty,empty,empty)) in
        {313}new key_e_754[me_718,them_717]: key;
        {314}let v_755: key = catch-fail(dhexp(key_e_754,g)) in
        {315}let v_756: keypair = catch-fail((if not-caught-fail(v_755) then keypairpack(v_755,key_e_754) else fail-any)) in
        {316}let v_757: bitstring = catch-fail(getpublickey(v_756)) in
        {317}let v_758: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_752))) in
        {318}let v_759: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_752)) then (if (not-caught-fail(v_758) && success?(is-true(success?(1-proj-3-tuple(v_758))))) then symmetricstatepack(1-proj-3-tuple(v_758),2-proj-3-tuple(v_758),hash(3-proj-3-tuple(v_758),v_757)) else fail-any) else fail-any)) in
        {319}let v_760: bitstring = catch-fail(keypairunpack(v_756)) in
        {320}let v_761: bitstring = catch-fail(symmetricstateunpack(v_759)) in
        {321}let v_762: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_761),(if success?(5-proj-7-tuple(v_752)) then (if (not-caught-fail(v_760) && success?(is-true(success?(1-proj-2-tuple(v_760))))) then dhexp(2-proj-2-tuple(v_760),5-proj-7-tuple(v_752)) else fail-any) else fail-any))) in
        {322}let v_763: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_761),(if success?(5-proj-7-tuple(v_752)) then (if (not-caught-fail(v_760) && success?(is-true(success?(1-proj-2-tuple(v_760))))) then dhexp(2-proj-2-tuple(v_760),5-proj-7-tuple(v_752)) else fail-any) else fail-any))) in
        {323}let v_764: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_761),(if success?(5-proj-7-tuple(v_752)) then (if (not-caught-fail(v_760) && success?(is-true(success?(1-proj-2-tuple(v_760))))) then dhexp(2-proj-2-tuple(v_760),5-proj-7-tuple(v_752)) else fail-any) else fail-any))) in
        {324}let v_765: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_752)) then (if (not-caught-fail(v_760) && success?(is-true(success?(1-proj-2-tuple(v_760))))) then dhexp(2-proj-2-tuple(v_760),5-proj-7-tuple(v_752)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_761))) then (if not-caught-fail(v_762) then (if not-caught-fail(v_763) then (if not-caught-fail(v_764) then (v_762,v_763,v_764) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {325}let v_766: symmetricstate = catch-fail((if success?((if success?(5-proj-7-tuple(v_752)) then (if (not-caught-fail(v_760) && success?(is-true(success?(1-proj-2-tuple(v_760))))) then dhexp(2-proj-2-tuple(v_760),5-proj-7-tuple(v_752)) else fail-any) else fail-any)) then (if (not-caught-fail(v_761) && success?(is-true(success?(1-proj-3-tuple(v_761))))) then (if (not-caught-fail(v_765) && success?(is-true(success?(1-proj-3-tuple(v_765))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_765)) then cipherstatepack(2-proj-3-tuple(v_765),minnonce) else fail-any),1-proj-3-tuple(v_765),3-proj-3-tuple(v_761)) else fail-any) else fail-any) else fail-any)) in
        {326}let v_767: key = catch-fail(dhexp(key_s(me_718),g)) in
        {327}let v_768: keypair = catch-fail((if not-caught-fail(v_767) then keypairpack(v_767,key_s(me_718)) else fail-any)) in
        {328}let v_769: bitstring = catch-fail(symmetricstateunpack(v_766)) in
        {329}let v_770: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_769))) in
        {330}let v_771: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_770),2-proj-2-tuple(v_770),3-proj-3-tuple(v_769),getpublickey(v_768))) in
        {331}let v_772: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_769))) in
        {332}let v_773: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_770))) && success?(1-proj-3-tuple(v_769))) then (if (not-caught-fail(v_772) && success?(is-true(success?(1-proj-2-tuple(v_772))))) then cipherstatepack(1-proj-2-tuple(v_772),increment_nonce(2-proj-2-tuple(v_770))) else fail-any) else fail-any)) in
        {333}let v_774: bitstring = catch-fail((if (success?(getpublickey(v_768)) && (success?(3-proj-3-tuple(v_769)) && success?(1-proj-3-tuple(v_769)))) then (if (not-caught-fail(v_770) && success?(is-true(success?(1-proj-2-tuple(v_770))))) then (if not-caught-fail(v_771) then (if not-caught-fail(v_773) then (v_773,v_771) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {334}let v_775: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_774),2-proj-3-tuple(v_769),3-proj-3-tuple(v_769)))) in
        {335}let v_776: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_774)) && success?(symmetricstatepack(1-proj-2-tuple(v_774),2-proj-3-tuple(v_769),3-proj-3-tuple(v_769)))) then (if (not-caught-fail(v_775) && success?(is-true(success?(1-proj-3-tuple(v_775))))) then symmetricstatepack(1-proj-3-tuple(v_775),2-proj-3-tuple(v_775),hash(3-proj-3-tuple(v_775),2-proj-2-tuple(v_774))) else fail-any) else fail-any)) in
        {336}let v_777: bitstring = catch-fail((if success?(getpublickey(v_768)) then (if (not-caught-fail(v_769) && success?(is-true(success?(1-proj-3-tuple(v_769))))) then (if (not-caught-fail(v_774) && success?(is-true(success?(1-proj-2-tuple(v_774))))) then (if not-caught-fail(v_776) then (v_776,2-proj-2-tuple(v_774)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {337}let v_778: bitstring = catch-fail(keypairunpack(v_768)) in
        {338}let v_779: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_777))) in
        {339}let v_780: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_779),(if success?(5-proj-7-tuple(v_752)) then (if (not-caught-fail(v_778) && success?(is-true(success?(1-proj-2-tuple(v_778))))) then dhexp(2-proj-2-tuple(v_778),5-proj-7-tuple(v_752)) else fail-any) else fail-any))) in
        {340}let v_781: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_779),(if success?(5-proj-7-tuple(v_752)) then (if (not-caught-fail(v_778) && success?(is-true(success?(1-proj-2-tuple(v_778))))) then dhexp(2-proj-2-tuple(v_778),5-proj-7-tuple(v_752)) else fail-any) else fail-any))) in
        {341}let v_782: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_779),(if success?(5-proj-7-tuple(v_752)) then (if (not-caught-fail(v_778) && success?(is-true(success?(1-proj-2-tuple(v_778))))) then dhexp(2-proj-2-tuple(v_778),5-proj-7-tuple(v_752)) else fail-any) else fail-any))) in
        {342}let v_783: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_752)) then (if (not-caught-fail(v_778) && success?(is-true(success?(1-proj-2-tuple(v_778))))) then dhexp(2-proj-2-tuple(v_778),5-proj-7-tuple(v_752)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_779))) then (if not-caught-fail(v_780) then (if not-caught-fail(v_781) then (if not-caught-fail(v_782) then (v_780,v_781,v_782) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {343}let v_784: symmetricstate = catch-fail((if (success?((if success?(5-proj-7-tuple(v_752)) then (if (not-caught-fail(v_778) && success?(is-true(success?(1-proj-2-tuple(v_778))))) then dhexp(2-proj-2-tuple(v_778),5-proj-7-tuple(v_752)) else fail-any) else fail-any)) && success?(1-proj-2-tuple(v_777))) then (if (not-caught-fail(v_779) && success?(is-true(success?(1-proj-3-tuple(v_779))))) then (if (not-caught-fail(v_783) && success?(is-true(success?(1-proj-3-tuple(v_783))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_783)) then cipherstatepack(2-proj-3-tuple(v_783),minnonce) else fail-any),1-proj-3-tuple(v_783),3-proj-3-tuple(v_779)) else fail-any) else fail-any) else fail-any)) in
        {344}let v_785: bitstring = catch-fail(symmetricstateunpack(v_784)) in
        {345}let v_786: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_785))) in
        {346}let v_787: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_786),2-proj-2-tuple(v_786),3-proj-3-tuple(v_785),msg_b(me_718,them_717))) in
        {347}let v_788: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_785))) in
        {348}let v_789: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_786))) && success?(1-proj-3-tuple(v_785))) then (if (not-caught-fail(v_788) && success?(is-true(success?(1-proj-2-tuple(v_788))))) then cipherstatepack(1-proj-2-tuple(v_788),increment_nonce(2-proj-2-tuple(v_786))) else fail-any) else fail-any)) in
        {349}let v_790: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_785)) && success?(1-proj-3-tuple(v_785))) then (if (not-caught-fail(v_786) && success?(is-true(success?(1-proj-2-tuple(v_786))))) then (if not-caught-fail(v_787) then (if not-caught-fail(v_789) then (v_789,v_787) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {350}let v_791: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_790),2-proj-3-tuple(v_785),3-proj-3-tuple(v_785)))) in
        {351}let v_792: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_790)) && success?(symmetricstatepack(1-proj-2-tuple(v_790),2-proj-3-tuple(v_785),3-proj-3-tuple(v_785)))) then (if (not-caught-fail(v_791) && success?(is-true(success?(1-proj-3-tuple(v_791))))) then symmetricstatepack(1-proj-3-tuple(v_791),2-proj-3-tuple(v_791),hash(3-proj-3-tuple(v_791),2-proj-2-tuple(v_790))) else fail-any) else fail-any)) in
        {352}let v_793: bitstring = catch-fail((if (not-caught-fail(v_785) && success?(is-true(success?(1-proj-3-tuple(v_785))))) then (if (not-caught-fail(v_790) && success?(is-true(success?(1-proj-2-tuple(v_790))))) then (if not-caught-fail(v_792) then (v_792,2-proj-2-tuple(v_790)) else fail-any) else fail-any) else fail-any)) in
        {353}let v_794: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_793),v_768,v_756,4-proj-7-tuple(v_752),5-proj-7-tuple(v_752),6-proj-7-tuple(v_752),7-proj-7-tuple(v_752))) in
        {354}let v_795: bitstring = catch-fail(concat3(v_757,2-proj-2-tuple(v_777),2-proj-2-tuple(v_793))) in
        {355}let (hs_796: handshakestate,re_797: key,message_b_798: bitstring) = (if (not-caught-fail(v_752) && success?(is-true(success?(1-proj-7-tuple(v_752))))) then (if (not-caught-fail(v_753) && success?(is-true(success?(1-proj-3-tuple(v_753))))) then (if not-caught-fail(v_756) then (if not-caught-fail(v_757) then (if not-caught-fail(v_759) then (if not-caught-fail(v_766) then (if not-caught-fail(v_768) then (if (not-caught-fail(v_777) && success?(is-true(success?(1-proj-2-tuple(v_777))))) then (if not-caught-fail(v_784) then (if (not-caught-fail(v_793) && success?(is-true(success?(1-proj-2-tuple(v_793))))) then (if not-caught-fail(v_794) then (if not-caught-fail(v_795) then (v_794,5-proj-7-tuple(v_752),v_795) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {356}event SendMsg(me_718,them_717,stage_b,msg_b(me_718,them_717),true);
        {357}insert statestore(me_718,them_717,statepack_c(hs_796));
        {358}out(pub, message_b_798)
    ) | (
        {378}get statestore(=me_718,=them_717,statepack_c(hs_799: handshakestate)) in
        {360}in(pub, message_c_800: bitstring);
        {361}let v_801: bitstring = catch-fail(handshakestateunpack(hs_799)) in
        {362}let v_802: bitstring = catch-fail(deconcat3(message_c_800)) in
        {363}let v_803: bool = catch-fail(true) in
        {364}let v_804: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_801))) in
        {365}let v_805: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_804))) in
        {366}let v_806: aead = catch-fail(decrypt(1-proj-2-tuple(v_805),2-proj-2-tuple(v_805),3-proj-3-tuple(v_804),3-proj-3-tuple(v_802))) in
        {367}let v_807: bitstring = catch-fail(aeadunpack(v_806)) in
        {368}let v_808: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_804))) in
        {369}let v_809: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_805))) && success?(1-proj-3-tuple(v_804))) then (if (not-caught-fail(v_808) && success?(is-true(success?(1-proj-2-tuple(v_808))))) then cipherstatepack(1-proj-2-tuple(v_808),increment_nonce(2-proj-2-tuple(v_805))) else fail-any) else fail-any)) in
        {370}let v_810: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_802)) && (success?(3-proj-3-tuple(v_804)) && success?(1-proj-3-tuple(v_804)))) then (if (not-caught-fail(v_805) && success?(is-true(success?(1-proj-2-tuple(v_805))))) then (if not-caught-fail(v_806) then (if (not-caught-fail(v_807) && success?(is-true(success?(1-proj-3-tuple(v_807))))) then (if not-caught-fail(v_809) then (v_809,3-proj-3-tuple(v_807),1-proj-3-tuple(v_807)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {371}let v_811: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_810),2-proj-3-tuple(v_804),3-proj-3-tuple(v_804)))) in
        {372}let v_812: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_802)) && success?(symmetricstatepack(1-proj-3-tuple(v_810),2-proj-3-tuple(v_804),3-proj-3-tuple(v_804)))) then (if (not-caught-fail(v_811) && success?(is-true(success?(1-proj-3-tuple(v_811))))) then symmetricstatepack(1-proj-3-tuple(v_811),2-proj-3-tuple(v_811),hash(3-proj-3-tuple(v_811),3-proj-3-tuple(v_802))) else fail-any) else fail-any)) in
        {373}let v_813: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_802)) && success?(1-proj-7-tuple(v_801))) then (if (not-caught-fail(v_804) && success?(is-true(success?(1-proj-3-tuple(v_804))))) then (if (not-caught-fail(v_810) && success?(is-true(success?(1-proj-3-tuple(v_810))))) then (if not-caught-fail(v_812) then (v_812,2-proj-3-tuple(v_810),3-proj-3-tuple(v_810)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {374}let v_814: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_813),2-proj-7-tuple(v_801),3-proj-7-tuple(v_801),4-proj-7-tuple(v_801),5-proj-7-tuple(v_801),6-proj-7-tuple(v_801),7-proj-7-tuple(v_801))) in
        {375}let (hs_815: handshakestate,re_816: key,plaintext_c: bitstring,valid_817: bool) = (if (not-caught-fail(v_801) && success?(is-true(success?(1-proj-7-tuple(v_801))))) then (if (not-caught-fail(v_802) && success?(is-true(success?(1-proj-3-tuple(v_802))))) then (if not-caught-fail(v_803) then (if (not-caught-fail(v_813) && success?(is-true(success?(1-proj-3-tuple(v_813))))) then (if (v_803 && 3-proj-3-tuple(v_813)) then (if not-caught-fail(v_814) then (v_814,getpublickey(3-proj-7-tuple(v_801)),2-proj-3-tuple(v_813),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {376}event RecvMsg(me_718,them_717,stage_c,plaintext_c,valid_817);
        {377}insert statestore(me_718,them_717,statepack_d(hs_815))
    ) | (
        {404}get statestore(=me_718,=them_717,statepack_d(hs_818: handshakestate)) in
        {379}let v_819: bitstring = catch-fail(handshakestateunpack(hs_818)) in
        {380}let v_820: bitstring = catch-fail((empty,empty,empty)) in
        {381}let v_821: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_819))) in
        {382}let v_822: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_821))) in
        {383}let v_823: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_822),2-proj-2-tuple(v_822),3-proj-3-tuple(v_821),msg_d(me_718,them_717))) in
        {384}let v_824: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_821))) in
        {385}let v_825: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_822))) && success?(1-proj-3-tuple(v_821))) then (if (not-caught-fail(v_824) && success?(is-true(success?(1-proj-2-tuple(v_824))))) then cipherstatepack(1-proj-2-tuple(v_824),increment_nonce(2-proj-2-tuple(v_822))) else fail-any) else fail-any)) in
        {386}let v_826: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_821)) && success?(1-proj-3-tuple(v_821))) then (if (not-caught-fail(v_822) && success?(is-true(success?(1-proj-2-tuple(v_822))))) then (if not-caught-fail(v_823) then (if not-caught-fail(v_825) then (v_825,v_823) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {387}let v_827: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_826),2-proj-3-tuple(v_821),3-proj-3-tuple(v_821)))) in
        {388}let v_828: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_826)) && success?(symmetricstatepack(1-proj-2-tuple(v_826),2-proj-3-tuple(v_821),3-proj-3-tuple(v_821)))) then (if (not-caught-fail(v_827) && success?(is-true(success?(1-proj-3-tuple(v_827))))) then symmetricstatepack(1-proj-3-tuple(v_827),2-proj-3-tuple(v_827),hash(3-proj-3-tuple(v_827),2-proj-2-tuple(v_826))) else fail-any) else fail-any)) in
        {389}let v_829: bitstring = catch-fail((if success?(1-proj-7-tuple(v_819)) then (if (not-caught-fail(v_821) && success?(is-true(success?(1-proj-3-tuple(v_821))))) then (if (not-caught-fail(v_826) && success?(is-true(success?(1-proj-2-tuple(v_826))))) then (if not-caught-fail(v_828) then (v_828,2-proj-2-tuple(v_826)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {390}let v_830: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_829),2-proj-7-tuple(v_819),3-proj-7-tuple(v_819),4-proj-7-tuple(v_819),5-proj-7-tuple(v_819),6-proj-7-tuple(v_819),7-proj-7-tuple(v_819))) in
        {391}let v_831: bitstring = catch-fail(concat3(1-proj-3-tuple(v_820),2-proj-3-tuple(v_820),2-proj-2-tuple(v_829))) in
        {392}let v_832: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_829))) in
        {393}let v_833: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_832),zero)) in
        {394}let v_834: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_832),zero)) in
        {395}let v_835: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_832),zero)) in
        {396}let v_836: bitstring = catch-fail((if success?(2-proj-3-tuple(v_832)) then (if not-caught-fail(v_833) then (if not-caught-fail(v_834) then (if not-caught-fail(v_835) then (v_833,v_834,v_835) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {397}let v_837: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_836)) then cipherstatepack(1-proj-3-tuple(v_836),minnonce) else fail-any)) in
        {398}let v_838: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_836)) then cipherstatepack(2-proj-3-tuple(v_836),minnonce) else fail-any)) in
        {399}let v_839: bitstring = catch-fail((if success?(1-proj-2-tuple(v_829)) then (if (not-caught-fail(v_832) && success?(is-true(success?(1-proj-3-tuple(v_832))))) then (if (not-caught-fail(v_836) && success?(is-true(success?(1-proj-3-tuple(v_836))))) then (if not-caught-fail(v_837) then (if not-caught-fail(v_838) then (1-proj-2-tuple(v_829),v_837,v_838) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {400}let (hs_840: handshakestate,re_841: key,message_d_842: bitstring,cs1_843: cipherstate,cs2_844: cipherstate) = (if (not-caught-fail(v_819) && success?(is-true(success?(1-proj-7-tuple(v_819))))) then (if (not-caught-fail(v_820) && success?(is-true(success?(1-proj-3-tuple(v_820))))) then (if (not-caught-fail(v_829) && success?(is-true(success?(1-proj-2-tuple(v_829))))) then (if not-caught-fail(v_830) then (if not-caught-fail(v_831) then (if (not-caught-fail(v_839) && success?(is-true(success?(1-proj-3-tuple(v_839))))) then (v_830,5-proj-7-tuple(v_819),v_831,2-proj-3-tuple(v_839),3-proj-3-tuple(v_839)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {401}event SendMsg(me_718,them_717,stage_d,msg_d(me_718,them_717),true);
        {402}insert statestore(me_718,them_717,statepack_e(hs_840));
        {403}out(pub, message_d_842)
    ) | (
        {405}event LeakS(phase0,me_718);
        {406}out(pub, key_s(me_718))
    ) | (
        {407}phase 1;
        {408}event LeakS(phase1,me_718);
        {409}out(pub, key_s(me_718))
    )
) | (
    {410}let them_845: principal = charlie in
    {411}let me_846: principal = bob in
    {412}let s_847: keypair = keypairpack(empty,empty) in
    {413}out(pub, getpublickey(s_847));
    (
        {414}let e_848: keypair = keypairpack(empty,empty) in
        {415}let rs_849: key = empty in
        {416}let re_850: key = empty in
        {417}let v_851: bitstring = catch-fail(hash(somename,empty)) in
        {418}let v_852: key = catch-fail(v_851) in
        {419}let v_853: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {420}let v_854: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_851) then (if not-caught-fail(v_852) then (if not-caught-fail(v_853) then symmetricstatepack(v_853,v_852,v_851) else fail-any) else fail-any) else fail-any))) in
        {421}let v_855: symmetricstate = catch-fail((if success?((if not-caught-fail(v_851) then (if not-caught-fail(v_852) then (if not-caught-fail(v_853) then symmetricstatepack(v_853,v_852,v_851) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_854) && success?(is-true(success?(1-proj-3-tuple(v_854))))) then symmetricstatepack(1-proj-3-tuple(v_854),2-proj-3-tuple(v_854),hash(3-proj-3-tuple(v_854),empty)) else fail-any) else fail-any)) in
        {422}let hs_856: handshakestate = (if not-caught-fail(v_855) then handshakestatepack(v_855,s_847,e_848,rs_849,re_850,empty,false) else fail-any) in
        {423}insert statestore(me_846,them_845,statepack_a(hs_856))
    ) | (
        {445}get statestore(=me_846,=them_845,statepack_a(hs_857: handshakestate)) in
        {424}in(pub, message_a_858: bitstring);
        {425}let v_859: bitstring = catch-fail(handshakestateunpack(hs_857)) in
        {426}let v_860: bitstring = catch-fail(deconcat3(message_a_858)) in
        {427}let v_861: bool = catch-fail(true) in
        {428}let v_862: key = catch-fail(1-proj-3-tuple(v_860)) in
        {429}let v_863: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_859))) in
        {430}let v_864: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_859)) then (if (not-caught-fail(v_863) && success?(is-true(success?(1-proj-3-tuple(v_863))))) then symmetricstatepack(1-proj-3-tuple(v_863),2-proj-3-tuple(v_863),hash(3-proj-3-tuple(v_863),v_862)) else fail-any) else fail-any)) in
        {431}let v_865: bitstring = catch-fail(symmetricstateunpack(v_864)) in
        {432}let v_866: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_865))) in
        {433}let v_867: aead = catch-fail(decrypt(1-proj-2-tuple(v_866),2-proj-2-tuple(v_866),3-proj-3-tuple(v_865),3-proj-3-tuple(v_860))) in
        {434}let v_868: bitstring = catch-fail(aeadunpack(v_867)) in
        {435}let v_869: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_865))) in
        {436}let v_870: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_866))) && success?(1-proj-3-tuple(v_865))) then (if (not-caught-fail(v_869) && success?(is-true(success?(1-proj-2-tuple(v_869))))) then cipherstatepack(1-proj-2-tuple(v_869),increment_nonce(2-proj-2-tuple(v_866))) else fail-any) else fail-any)) in
        {437}let v_871: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_860)) && (success?(3-proj-3-tuple(v_865)) && success?(1-proj-3-tuple(v_865)))) then (if (not-caught-fail(v_866) && success?(is-true(success?(1-proj-2-tuple(v_866))))) then (if not-caught-fail(v_867) then (if (not-caught-fail(v_868) && success?(is-true(success?(1-proj-3-tuple(v_868))))) then (if not-caught-fail(v_870) then (v_870,3-proj-3-tuple(v_868),1-proj-3-tuple(v_868)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {438}let v_872: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_871),2-proj-3-tuple(v_865),3-proj-3-tuple(v_865)))) in
        {439}let v_873: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_860)) && success?(symmetricstatepack(1-proj-3-tuple(v_871),2-proj-3-tuple(v_865),3-proj-3-tuple(v_865)))) then (if (not-caught-fail(v_872) && success?(is-true(success?(1-proj-3-tuple(v_872))))) then symmetricstatepack(1-proj-3-tuple(v_872),2-proj-3-tuple(v_872),hash(3-proj-3-tuple(v_872),3-proj-3-tuple(v_860))) else fail-any) else fail-any)) in
        {440}let v_874: bitstring = catch-fail((if success?(3-proj-3-tuple(v_860)) then (if (not-caught-fail(v_865) && success?(is-true(success?(1-proj-3-tuple(v_865))))) then (if (not-caught-fail(v_871) && success?(is-true(success?(1-proj-3-tuple(v_871))))) then (if not-caught-fail(v_873) then (v_873,2-proj-3-tuple(v_871),3-proj-3-tuple(v_871)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {441}let v_875: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_874),2-proj-7-tuple(v_859),3-proj-7-tuple(v_859),4-proj-7-tuple(v_859),v_862,6-proj-7-tuple(v_859),7-proj-7-tuple(v_859))) in
        {442}let (hs_876: handshakestate,re_877: key,plaintext_a_878: bitstring,valid_879: bool) = (if (not-caught-fail(v_859) && success?(is-true(success?(1-proj-7-tuple(v_859))))) then (if (not-caught-fail(v_860) && success?(is-true(success?(1-proj-3-tuple(v_860))))) then (if not-caught-fail(v_861) then (if not-caught-fail(v_862) then (if not-caught-fail(v_864) then (if (not-caught-fail(v_874) && success?(is-true(success?(1-proj-3-tuple(v_874))))) then (if (v_861 && 3-proj-3-tuple(v_874)) then (if not-caught-fail(v_875) then (v_875,getpublickey(3-proj-7-tuple(v_859)),2-proj-3-tuple(v_874),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {443}event RecvMsg(me_846,them_845,stage_a,plaintext_a_878,valid_879);
        {444}insert statestore(me_846,them_845,statepack_b(hs_876))
    ) | (
        {494}get statestore(=me_846,=them_845,statepack_b(hs_880: handshakestate)) in
        {446}let v_881: bitstring = catch-fail(handshakestateunpack(hs_880)) in
        {447}let v_882: bitstring = catch-fail((empty,empty,empty)) in
        {448}new key_e_883[me_846,them_845]: key;
        {449}let v_884: key = catch-fail(dhexp(key_e_883,g)) in
        {450}let v_885: keypair = catch-fail((if not-caught-fail(v_884) then keypairpack(v_884,key_e_883) else fail-any)) in
        {451}let v_886: bitstring = catch-fail(getpublickey(v_885)) in
        {452}let v_887: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_881))) in
        {453}let v_888: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_881)) then (if (not-caught-fail(v_887) && success?(is-true(success?(1-proj-3-tuple(v_887))))) then symmetricstatepack(1-proj-3-tuple(v_887),2-proj-3-tuple(v_887),hash(3-proj-3-tuple(v_887),v_886)) else fail-any) else fail-any)) in
        {454}let v_889: bitstring = catch-fail(keypairunpack(v_885)) in
        {455}let v_890: bitstring = catch-fail(symmetricstateunpack(v_888)) in
        {456}let v_891: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_890),(if success?(5-proj-7-tuple(v_881)) then (if (not-caught-fail(v_889) && success?(is-true(success?(1-proj-2-tuple(v_889))))) then dhexp(2-proj-2-tuple(v_889),5-proj-7-tuple(v_881)) else fail-any) else fail-any))) in
        {457}let v_892: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_890),(if success?(5-proj-7-tuple(v_881)) then (if (not-caught-fail(v_889) && success?(is-true(success?(1-proj-2-tuple(v_889))))) then dhexp(2-proj-2-tuple(v_889),5-proj-7-tuple(v_881)) else fail-any) else fail-any))) in
        {458}let v_893: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_890),(if success?(5-proj-7-tuple(v_881)) then (if (not-caught-fail(v_889) && success?(is-true(success?(1-proj-2-tuple(v_889))))) then dhexp(2-proj-2-tuple(v_889),5-proj-7-tuple(v_881)) else fail-any) else fail-any))) in
        {459}let v_894: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_881)) then (if (not-caught-fail(v_889) && success?(is-true(success?(1-proj-2-tuple(v_889))))) then dhexp(2-proj-2-tuple(v_889),5-proj-7-tuple(v_881)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_890))) then (if not-caught-fail(v_891) then (if not-caught-fail(v_892) then (if not-caught-fail(v_893) then (v_891,v_892,v_893) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {460}let v_895: symmetricstate = catch-fail((if success?((if success?(5-proj-7-tuple(v_881)) then (if (not-caught-fail(v_889) && success?(is-true(success?(1-proj-2-tuple(v_889))))) then dhexp(2-proj-2-tuple(v_889),5-proj-7-tuple(v_881)) else fail-any) else fail-any)) then (if (not-caught-fail(v_890) && success?(is-true(success?(1-proj-3-tuple(v_890))))) then (if (not-caught-fail(v_894) && success?(is-true(success?(1-proj-3-tuple(v_894))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_894)) then cipherstatepack(2-proj-3-tuple(v_894),minnonce) else fail-any),1-proj-3-tuple(v_894),3-proj-3-tuple(v_890)) else fail-any) else fail-any) else fail-any)) in
        {461}let v_896: key = catch-fail(dhexp(key_s(me_846),g)) in
        {462}let v_897: keypair = catch-fail((if not-caught-fail(v_896) then keypairpack(v_896,key_s(me_846)) else fail-any)) in
        {463}let v_898: bitstring = catch-fail(symmetricstateunpack(v_895)) in
        {464}let v_899: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_898))) in
        {465}let v_900: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_899),2-proj-2-tuple(v_899),3-proj-3-tuple(v_898),getpublickey(v_897))) in
        {466}let v_901: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_898))) in
        {467}let v_902: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_899))) && success?(1-proj-3-tuple(v_898))) then (if (not-caught-fail(v_901) && success?(is-true(success?(1-proj-2-tuple(v_901))))) then cipherstatepack(1-proj-2-tuple(v_901),increment_nonce(2-proj-2-tuple(v_899))) else fail-any) else fail-any)) in
        {468}let v_903: bitstring = catch-fail((if (success?(getpublickey(v_897)) && (success?(3-proj-3-tuple(v_898)) && success?(1-proj-3-tuple(v_898)))) then (if (not-caught-fail(v_899) && success?(is-true(success?(1-proj-2-tuple(v_899))))) then (if not-caught-fail(v_900) then (if not-caught-fail(v_902) then (v_902,v_900) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {469}let v_904: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_903),2-proj-3-tuple(v_898),3-proj-3-tuple(v_898)))) in
        {470}let v_905: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_903)) && success?(symmetricstatepack(1-proj-2-tuple(v_903),2-proj-3-tuple(v_898),3-proj-3-tuple(v_898)))) then (if (not-caught-fail(v_904) && success?(is-true(success?(1-proj-3-tuple(v_904))))) then symmetricstatepack(1-proj-3-tuple(v_904),2-proj-3-tuple(v_904),hash(3-proj-3-tuple(v_904),2-proj-2-tuple(v_903))) else fail-any) else fail-any)) in
        {471}let v_906: bitstring = catch-fail((if success?(getpublickey(v_897)) then (if (not-caught-fail(v_898) && success?(is-true(success?(1-proj-3-tuple(v_898))))) then (if (not-caught-fail(v_903) && success?(is-true(success?(1-proj-2-tuple(v_903))))) then (if not-caught-fail(v_905) then (v_905,2-proj-2-tuple(v_903)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {472}let v_907: bitstring = catch-fail(keypairunpack(v_897)) in
        {473}let v_908: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_906))) in
        {474}let v_909: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_908),(if success?(5-proj-7-tuple(v_881)) then (if (not-caught-fail(v_907) && success?(is-true(success?(1-proj-2-tuple(v_907))))) then dhexp(2-proj-2-tuple(v_907),5-proj-7-tuple(v_881)) else fail-any) else fail-any))) in
        {475}let v_910: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_908),(if success?(5-proj-7-tuple(v_881)) then (if (not-caught-fail(v_907) && success?(is-true(success?(1-proj-2-tuple(v_907))))) then dhexp(2-proj-2-tuple(v_907),5-proj-7-tuple(v_881)) else fail-any) else fail-any))) in
        {476}let v_911: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_908),(if success?(5-proj-7-tuple(v_881)) then (if (not-caught-fail(v_907) && success?(is-true(success?(1-proj-2-tuple(v_907))))) then dhexp(2-proj-2-tuple(v_907),5-proj-7-tuple(v_881)) else fail-any) else fail-any))) in
        {477}let v_912: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_881)) then (if (not-caught-fail(v_907) && success?(is-true(success?(1-proj-2-tuple(v_907))))) then dhexp(2-proj-2-tuple(v_907),5-proj-7-tuple(v_881)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_908))) then (if not-caught-fail(v_909) then (if not-caught-fail(v_910) then (if not-caught-fail(v_911) then (v_909,v_910,v_911) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {478}let v_913: symmetricstate = catch-fail((if (success?((if success?(5-proj-7-tuple(v_881)) then (if (not-caught-fail(v_907) && success?(is-true(success?(1-proj-2-tuple(v_907))))) then dhexp(2-proj-2-tuple(v_907),5-proj-7-tuple(v_881)) else fail-any) else fail-any)) && success?(1-proj-2-tuple(v_906))) then (if (not-caught-fail(v_908) && success?(is-true(success?(1-proj-3-tuple(v_908))))) then (if (not-caught-fail(v_912) && success?(is-true(success?(1-proj-3-tuple(v_912))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_912)) then cipherstatepack(2-proj-3-tuple(v_912),minnonce) else fail-any),1-proj-3-tuple(v_912),3-proj-3-tuple(v_908)) else fail-any) else fail-any) else fail-any)) in
        {479}let v_914: bitstring = catch-fail(symmetricstateunpack(v_913)) in
        {480}let v_915: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_914))) in
        {481}let v_916: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_915),2-proj-2-tuple(v_915),3-proj-3-tuple(v_914),msg_b(me_846,them_845))) in
        {482}let v_917: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_914))) in
        {483}let v_918: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_915))) && success?(1-proj-3-tuple(v_914))) then (if (not-caught-fail(v_917) && success?(is-true(success?(1-proj-2-tuple(v_917))))) then cipherstatepack(1-proj-2-tuple(v_917),increment_nonce(2-proj-2-tuple(v_915))) else fail-any) else fail-any)) in
        {484}let v_919: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_914)) && success?(1-proj-3-tuple(v_914))) then (if (not-caught-fail(v_915) && success?(is-true(success?(1-proj-2-tuple(v_915))))) then (if not-caught-fail(v_916) then (if not-caught-fail(v_918) then (v_918,v_916) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {485}let v_920: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_919),2-proj-3-tuple(v_914),3-proj-3-tuple(v_914)))) in
        {486}let v_921: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_919)) && success?(symmetricstatepack(1-proj-2-tuple(v_919),2-proj-3-tuple(v_914),3-proj-3-tuple(v_914)))) then (if (not-caught-fail(v_920) && success?(is-true(success?(1-proj-3-tuple(v_920))))) then symmetricstatepack(1-proj-3-tuple(v_920),2-proj-3-tuple(v_920),hash(3-proj-3-tuple(v_920),2-proj-2-tuple(v_919))) else fail-any) else fail-any)) in
        {487}let v_922: bitstring = catch-fail((if (not-caught-fail(v_914) && success?(is-true(success?(1-proj-3-tuple(v_914))))) then (if (not-caught-fail(v_919) && success?(is-true(success?(1-proj-2-tuple(v_919))))) then (if not-caught-fail(v_921) then (v_921,2-proj-2-tuple(v_919)) else fail-any) else fail-any) else fail-any)) in
        {488}let v_923: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_922),v_897,v_885,4-proj-7-tuple(v_881),5-proj-7-tuple(v_881),6-proj-7-tuple(v_881),7-proj-7-tuple(v_881))) in
        {489}let v_924: bitstring = catch-fail(concat3(v_886,2-proj-2-tuple(v_906),2-proj-2-tuple(v_922))) in
        {490}let (hs_925: handshakestate,re_926: key,message_b_927: bitstring) = (if (not-caught-fail(v_881) && success?(is-true(success?(1-proj-7-tuple(v_881))))) then (if (not-caught-fail(v_882) && success?(is-true(success?(1-proj-3-tuple(v_882))))) then (if not-caught-fail(v_885) then (if not-caught-fail(v_886) then (if not-caught-fail(v_888) then (if not-caught-fail(v_895) then (if not-caught-fail(v_897) then (if (not-caught-fail(v_906) && success?(is-true(success?(1-proj-2-tuple(v_906))))) then (if not-caught-fail(v_913) then (if (not-caught-fail(v_922) && success?(is-true(success?(1-proj-2-tuple(v_922))))) then (if not-caught-fail(v_923) then (if not-caught-fail(v_924) then (v_923,5-proj-7-tuple(v_881),v_924) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {491}event SendMsg(me_846,them_845,stage_b,msg_b(me_846,them_845),true);
        {492}insert statestore(me_846,them_845,statepack_c(hs_925));
        {493}out(pub, message_b_927)
    ) | (
        {513}get statestore(=me_846,=them_845,statepack_c(hs_928: handshakestate)) in
        {495}in(pub, message_c_929: bitstring);
        {496}let v_930: bitstring = catch-fail(handshakestateunpack(hs_928)) in
        {497}let v_931: bitstring = catch-fail(deconcat3(message_c_929)) in
        {498}let v_932: bool = catch-fail(true) in
        {499}let v_933: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_930))) in
        {500}let v_934: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_933))) in
        {501}let v_935: aead = catch-fail(decrypt(1-proj-2-tuple(v_934),2-proj-2-tuple(v_934),3-proj-3-tuple(v_933),3-proj-3-tuple(v_931))) in
        {502}let v_936: bitstring = catch-fail(aeadunpack(v_935)) in
        {503}let v_937: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_933))) in
        {504}let v_938: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_934))) && success?(1-proj-3-tuple(v_933))) then (if (not-caught-fail(v_937) && success?(is-true(success?(1-proj-2-tuple(v_937))))) then cipherstatepack(1-proj-2-tuple(v_937),increment_nonce(2-proj-2-tuple(v_934))) else fail-any) else fail-any)) in
        {505}let v_939: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_931)) && (success?(3-proj-3-tuple(v_933)) && success?(1-proj-3-tuple(v_933)))) then (if (not-caught-fail(v_934) && success?(is-true(success?(1-proj-2-tuple(v_934))))) then (if not-caught-fail(v_935) then (if (not-caught-fail(v_936) && success?(is-true(success?(1-proj-3-tuple(v_936))))) then (if not-caught-fail(v_938) then (v_938,3-proj-3-tuple(v_936),1-proj-3-tuple(v_936)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {506}let v_940: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_939),2-proj-3-tuple(v_933),3-proj-3-tuple(v_933)))) in
        {507}let v_941: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_931)) && success?(symmetricstatepack(1-proj-3-tuple(v_939),2-proj-3-tuple(v_933),3-proj-3-tuple(v_933)))) then (if (not-caught-fail(v_940) && success?(is-true(success?(1-proj-3-tuple(v_940))))) then symmetricstatepack(1-proj-3-tuple(v_940),2-proj-3-tuple(v_940),hash(3-proj-3-tuple(v_940),3-proj-3-tuple(v_931))) else fail-any) else fail-any)) in
        {508}let v_942: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_931)) && success?(1-proj-7-tuple(v_930))) then (if (not-caught-fail(v_933) && success?(is-true(success?(1-proj-3-tuple(v_933))))) then (if (not-caught-fail(v_939) && success?(is-true(success?(1-proj-3-tuple(v_939))))) then (if not-caught-fail(v_941) then (v_941,2-proj-3-tuple(v_939),3-proj-3-tuple(v_939)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {509}let v_943: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_942),2-proj-7-tuple(v_930),3-proj-7-tuple(v_930),4-proj-7-tuple(v_930),5-proj-7-tuple(v_930),6-proj-7-tuple(v_930),7-proj-7-tuple(v_930))) in
        {510}let (hs_944: handshakestate,re_945: key,plaintext_c_946: bitstring,valid_947: bool) = (if (not-caught-fail(v_930) && success?(is-true(success?(1-proj-7-tuple(v_930))))) then (if (not-caught-fail(v_931) && success?(is-true(success?(1-proj-3-tuple(v_931))))) then (if not-caught-fail(v_932) then (if (not-caught-fail(v_942) && success?(is-true(success?(1-proj-3-tuple(v_942))))) then (if (v_932 && 3-proj-3-tuple(v_942)) then (if not-caught-fail(v_943) then (v_943,getpublickey(3-proj-7-tuple(v_930)),2-proj-3-tuple(v_942),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {511}event RecvMsg(me_846,them_845,stage_c,plaintext_c_946,valid_947);
        {512}insert statestore(me_846,them_845,statepack_d(hs_944))
    ) | (
        {539}get statestore(=me_846,=them_845,statepack_d(hs_948: handshakestate)) in
        {514}let v_949: bitstring = catch-fail(handshakestateunpack(hs_948)) in
        {515}let v_950: bitstring = catch-fail((empty,empty,empty)) in
        {516}let v_951: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_949))) in
        {517}let v_952: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_951))) in
        {518}let v_953: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_952),2-proj-2-tuple(v_952),3-proj-3-tuple(v_951),msg_d(me_846,them_845))) in
        {519}let v_954: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_951))) in
        {520}let v_955: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_952))) && success?(1-proj-3-tuple(v_951))) then (if (not-caught-fail(v_954) && success?(is-true(success?(1-proj-2-tuple(v_954))))) then cipherstatepack(1-proj-2-tuple(v_954),increment_nonce(2-proj-2-tuple(v_952))) else fail-any) else fail-any)) in
        {521}let v_956: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_951)) && success?(1-proj-3-tuple(v_951))) then (if (not-caught-fail(v_952) && success?(is-true(success?(1-proj-2-tuple(v_952))))) then (if not-caught-fail(v_953) then (if not-caught-fail(v_955) then (v_955,v_953) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {522}let v_957: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_956),2-proj-3-tuple(v_951),3-proj-3-tuple(v_951)))) in
        {523}let v_958: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_956)) && success?(symmetricstatepack(1-proj-2-tuple(v_956),2-proj-3-tuple(v_951),3-proj-3-tuple(v_951)))) then (if (not-caught-fail(v_957) && success?(is-true(success?(1-proj-3-tuple(v_957))))) then symmetricstatepack(1-proj-3-tuple(v_957),2-proj-3-tuple(v_957),hash(3-proj-3-tuple(v_957),2-proj-2-tuple(v_956))) else fail-any) else fail-any)) in
        {524}let v_959: bitstring = catch-fail((if success?(1-proj-7-tuple(v_949)) then (if (not-caught-fail(v_951) && success?(is-true(success?(1-proj-3-tuple(v_951))))) then (if (not-caught-fail(v_956) && success?(is-true(success?(1-proj-2-tuple(v_956))))) then (if not-caught-fail(v_958) then (v_958,2-proj-2-tuple(v_956)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {525}let v_960: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_959),2-proj-7-tuple(v_949),3-proj-7-tuple(v_949),4-proj-7-tuple(v_949),5-proj-7-tuple(v_949),6-proj-7-tuple(v_949),7-proj-7-tuple(v_949))) in
        {526}let v_961: bitstring = catch-fail(concat3(1-proj-3-tuple(v_950),2-proj-3-tuple(v_950),2-proj-2-tuple(v_959))) in
        {527}let v_962: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_959))) in
        {528}let v_963: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_962),zero)) in
        {529}let v_964: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_962),zero)) in
        {530}let v_965: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_962),zero)) in
        {531}let v_966: bitstring = catch-fail((if success?(2-proj-3-tuple(v_962)) then (if not-caught-fail(v_963) then (if not-caught-fail(v_964) then (if not-caught-fail(v_965) then (v_963,v_964,v_965) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {532}let v_967: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_966)) then cipherstatepack(1-proj-3-tuple(v_966),minnonce) else fail-any)) in
        {533}let v_968: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_966)) then cipherstatepack(2-proj-3-tuple(v_966),minnonce) else fail-any)) in
        {534}let v_969: bitstring = catch-fail((if success?(1-proj-2-tuple(v_959)) then (if (not-caught-fail(v_962) && success?(is-true(success?(1-proj-3-tuple(v_962))))) then (if (not-caught-fail(v_966) && success?(is-true(success?(1-proj-3-tuple(v_966))))) then (if not-caught-fail(v_967) then (if not-caught-fail(v_968) then (1-proj-2-tuple(v_959),v_967,v_968) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {535}let (hs_970: handshakestate,re_971: key,message_d_972: bitstring,cs1_973: cipherstate,cs2_974: cipherstate) = (if (not-caught-fail(v_949) && success?(is-true(success?(1-proj-7-tuple(v_949))))) then (if (not-caught-fail(v_950) && success?(is-true(success?(1-proj-3-tuple(v_950))))) then (if (not-caught-fail(v_959) && success?(is-true(success?(1-proj-2-tuple(v_959))))) then (if not-caught-fail(v_960) then (if not-caught-fail(v_961) then (if (not-caught-fail(v_969) && success?(is-true(success?(1-proj-3-tuple(v_969))))) then (v_960,5-proj-7-tuple(v_949),v_961,2-proj-3-tuple(v_969),3-proj-3-tuple(v_969)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {536}event SendMsg(me_846,them_845,stage_d,msg_d(me_846,them_845),true);
        {537}insert statestore(me_846,them_845,statepack_e(hs_970));
        {538}out(pub, message_d_972)
    ) | (
        {540}event LeakS(phase0,me_846);
        {541}out(pub, key_s(me_846))
    ) | (
        {542}phase 1;
        {543}event LeakS(phase1,me_846);
        {544}out(pub, key_s(me_846))
    )
)

-- Query event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)); event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,c_1055,stage_a,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,c_1055,stage_a,m,true)) || event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)) || event(LeakS(phase0,alice)); not attacker_p1(msg_a(alice,bob)); attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob)); attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice))); attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true)); event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,c_1055,stage_b,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,c_1055,stage_b,m,true)) || event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true)) || event(LeakS(phase0,bob)); not attacker_p1(msg_b(bob,alice)); attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice)); attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob))); attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true)); event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,c_1055,stage_c,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,c_1055,stage_c,m,true)) || event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true)) || event(LeakS(phase0,alice)); not attacker_p1(msg_c(alice,bob)); attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob)); attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice))); attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true)); event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,c_1055,stage_d,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,c_1055,stage_d,m,true)) || event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true)) || event(LeakS(phase0,bob)); not attacker_p1(msg_d(bob,alice)); attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice)); attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob))); attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice))
Completing...
200 rules inserted. The rule base contains 200 rules. 194 rules in the queue.
400 rules inserted. The rule base contains 399 rules. 17 rules in the queue.
600 rules inserted. The rule base contains 582 rules. 233 rules in the queue.
800 rules inserted. The rule base contains 747 rules. 96 rules in the queue.
1000 rules inserted. The rule base contains 943 rules. 219 rules in the queue.
1200 rules inserted. The rule base contains 1115 rules. 250 rules in the queue.
1400 rules inserted. The rule base contains 1251 rules. 223 rules in the queue.
1600 rules inserted. The rule base contains 1387 rules. 188 rules in the queue.
1800 rules inserted. The rule base contains 1559 rules. 205 rules in the queue.
2000 rules inserted. The rule base contains 1715 rules. 240 rules in the queue.
2200 rules inserted. The rule base contains 1860 rules. 285 rules in the queue.
2400 rules inserted. The rule base contains 1996 rules. 319 rules in the queue.
2600 rules inserted. The rule base contains 2091 rules. 316 rules in the queue.
2800 rules inserted. The rule base contains 2185 rules. 299 rules in the queue.
3000 rules inserted. The rule base contains 2323 rules. 296 rules in the queue.
3200 rules inserted. The rule base contains 2464 rules. 306 rules in the queue.
3400 rules inserted. The rule base contains 2589 rules. 329 rules in the queue.
3600 rules inserted. The rule base contains 2756 rules. 346 rules in the queue.
3800 rules inserted. The rule base contains 2908 rules. 343 rules in the queue.
4000 rules inserted. The rule base contains 3046 rules. 355 rules in the queue.
4200 rules inserted. The rule base contains 3151 rules. 322 rules in the queue.
4400 rules inserted. The rule base contains 3223 rules. 259 rules in the queue.
4600 rules inserted. The rule base contains 3272 rules. 215 rules in the queue.
4800 rules inserted. The rule base contains 3387 rules. 191 rules in the queue.
5000 rules inserted. The rule base contains 3490 rules. 208 rules in the queue.
5200 rules inserted. The rule base contains 3617 rules. 211 rules in the queue.
5400 rules inserted. The rule base contains 3742 rules. 172 rules in the queue.
5600 rules inserted. The rule base contains 3860 rules. 139 rules in the queue.
5800 rules inserted. The rule base contains 3967 rules. 126 rules in the queue.
6000 rules inserted. The rule base contains 4075 rules. 100 rules in the queue.
6200 rules inserted. The rule base contains 4129 rules. 28 rules in the queue.
Starting query event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true))
goal reachable: begin(SendMsg(alice,charlie,stage_a,msg_a(alice,charlie),true)) -> end(RecvMsg(bob,alice,stage_a,msg_a(alice,charlie),true))
Abbreviations:
key_e_323722383 = key_e_601[me_587 = alice,them_586 = charlie,!1 = @sid_323722365]

1. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {288}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

2. The entry statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {151}.
table(statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {175}.
The event SendMsg(alice,charlie,stage_a,msg_a(alice,charlie),true) may be executed at {172}.
So the message concat3(dhexp(key_e_323722383,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_323722383,g)),msg_a(alice,charlie))) may be sent on channel pub at output {174}.
mess(pub,concat3(dhexp(key_e_323722383,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_323722383,g)),msg_a(alice,charlie)))).

4. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 1 may be read at get {310}.
The message concat3(dhexp(key_e_323722383,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_323722383,g)),msg_a(alice,charlie))) that may be sent on channel pub by 3 may be received at input {289}.
We have dhexp(key_e_323722383,g) <> caught-fail.
So event RecvMsg(bob,alice,stage_a,msg_a(alice,charlie),true) may be executed at {308}.
end(RecvMsg(bob,alice,stage_a,msg_a(alice,charlie),true)).


RESULT event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)) cannot be proved.
Starting query event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,c_1055,stage_a,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(bob,alice,stage_a,msg_a(alice,bob),true))
goal reachable: begin(SendMsg(alice,charlie,stage_a,msg_a(alice,charlie),true)) -> end(RecvMsg(bob,alice,stage_a,msg_a(alice,charlie),true))
RESULT event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,c_1055,stage_a,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,c_1055,stage_a,m,true)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(bob,alice,stage_a,msg_a(alice,bob),true))
goal reachable: begin(SendMsg(alice,charlie,stage_a,msg_a(alice,charlie),true)) -> end(RecvMsg(bob,alice,stage_a,msg_a(alice,charlie),true))
RESULT event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,c_1055,stage_a,m,true)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,charlie,stage_a,msg_a(alice,charlie),true)) -> end(RecvMsg(bob,alice,stage_a,msg_a(alice,charlie),true))
Abbreviations:
key_e_323722421 = key_e_601[me_587 = alice,them_586 = charlie,!1 = @sid_323722403]

1. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {288}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

2. The entry statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {151}.
table(statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {175}.
The event SendMsg(alice,charlie,stage_a,msg_a(alice,charlie),true) may be executed at {172}.
So the message concat3(dhexp(key_e_323722421,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_323722421,g)),msg_a(alice,charlie))) may be sent on channel pub at output {174}.
mess(pub,concat3(dhexp(key_e_323722421,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_323722421,g)),msg_a(alice,charlie)))).

4. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 1 may be read at get {310}.
The message concat3(dhexp(key_e_323722421,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_323722421,g)),msg_a(alice,charlie))) that may be sent on channel pub by 3 may be received at input {289}.
We have dhexp(key_e_323722421,g) <> caught-fail.
So event RecvMsg(bob,alice,stage_a,msg_a(alice,charlie),true) may be executed at {308}.
end(RecvMsg(bob,alice,stage_a,msg_a(alice,charlie),true)).


RESULT event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) cannot be proved.
Starting query event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,charlie,stage_a,msg_a(alice,charlie),true)) -> end(RecvMsg(bob,alice,stage_a,msg_a(alice,charlie),true))
Abbreviations:
key_e_323722453 = key_e_601[me_587 = alice,them_586 = charlie,!1 = @sid_323722435]

1. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {288}.
table(statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

2. The entry statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {151}.
table(statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {175}.
The event SendMsg(alice,charlie,stage_a,msg_a(alice,charlie),true) may be executed at {172}.
So the message concat3(dhexp(key_e_323722453,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_323722453,g)),msg_a(alice,charlie))) may be sent on channel pub at output {174}.
mess(pub,concat3(dhexp(key_e_323722453,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_323722453,g)),msg_a(alice,charlie)))).

4. The entry statestore(bob,alice,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 1 may be read at get {310}.
The message concat3(dhexp(key_e_323722453,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e_323722453,g)),msg_a(alice,charlie))) that may be sent on channel pub by 3 may be received at input {289}.
We have dhexp(key_e_323722453,g) <> caught-fail.
So event RecvMsg(bob,alice,stage_a,msg_a(alice,charlie),true) may be executed at {308}.
end(RecvMsg(bob,alice,stage_a,msg_a(alice,charlie),true)).


RESULT event(RecvMsg(bob,alice,stage_a,m,true)) ==> event(SendMsg(alice,bob,stage_a,m,true)) || event(LeakS(phase0,alice)) cannot be proved.
Starting query not attacker_p1(msg_a(alice,bob))
goal reachable: begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> attacker_p1(msg_a(alice,bob))
Abbreviations:
key_323722503 = key_e[me = alice,them = bob,!1 = @sid_323722489]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the message concat3(dhexp(key_323722503,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722503,g)),msg_a(alice,bob))) may be sent on channel pub at output {38}.
mess(pub,concat3(dhexp(key_323722503,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722503,g)),msg_a(alice,bob)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(dhexp(key_323722503,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722503,g)),msg_a(alice,bob))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_323722503,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722503,g)),msg_a(alice,bob))) by listening on this channel.
attacker(concat3(dhexp(key_323722503,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722503,g)),msg_a(alice,bob)))).

5. By 4, the attacker may know concat3(dhexp(key_323722503,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722503,g)),msg_a(alice,bob))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722503,g)),msg_a(alice,bob)).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722503,g)),msg_a(alice,bob))).

6. By 5, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722503,g)),msg_a(alice,bob)).
So the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722503,g)),msg_a(alice,bob)) in phase 1.
attacker_p1(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722503,g)),msg_a(alice,bob))).

7. By 4, the attacker may know concat3(dhexp(key_323722503,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722503,g)),msg_a(alice,bob))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_323722503,g).
attacker(dhexp(key_323722503,g)).

8. Using the function empty the attacker may obtain empty.
attacker(empty).

9. Using the function somename the attacker may obtain somename.
attacker(somename).

10. By 9, the attacker may know somename.
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

11. By 10, the attacker may know hash(somename,empty).
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

12. By 11, the attacker may know hash(hash(somename,empty),empty).
By 7, the attacker may know dhexp(key_323722503,g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_323722503,g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_323722503,g))).

13. By 12, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_323722503,g)).
So the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_323722503,g)) in phase 1.
attacker_p1(hash(hash(hash(somename,empty),empty),dhexp(key_323722503,g))).

14. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

15. Using the function empty the attacker may obtain empty in phase 1.
attacker_p1(empty).

16. By 15, the attacker may know empty in phase 1.
By 14, the attacker may know minnonce in phase 1.
By 13, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_323722503,g)) in phase 1.
By 6, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722503,g)),msg_a(alice,bob)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_323722503,g)),msg_a(alice,bob)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_323722503,g)),msg_a(alice,bob))).

17. By 16, the attacker may know aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_323722503,g)),msg_a(alice,bob)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob) in phase 1.
attacker_p1(msg_a(alice,bob)).


RESULT not attacker_p1(msg_a(alice,bob)) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob))
goal reachable: begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> attacker_p1(msg_a(alice,bob))
Abbreviations:
key_323722553 = key_e[me = alice,them = bob,!1 = @sid_323722539]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the message concat3(dhexp(key_323722553,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722553,g)),msg_a(alice,bob))) may be sent on channel pub at output {38}.
mess(pub,concat3(dhexp(key_323722553,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722553,g)),msg_a(alice,bob)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(dhexp(key_323722553,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722553,g)),msg_a(alice,bob))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_323722553,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722553,g)),msg_a(alice,bob))) by listening on this channel.
attacker(concat3(dhexp(key_323722553,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722553,g)),msg_a(alice,bob)))).

5. By 4, the attacker may know concat3(dhexp(key_323722553,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722553,g)),msg_a(alice,bob))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722553,g)),msg_a(alice,bob)).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722553,g)),msg_a(alice,bob))).

6. By 5, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722553,g)),msg_a(alice,bob)).
So the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722553,g)),msg_a(alice,bob)) in phase 1.
attacker_p1(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722553,g)),msg_a(alice,bob))).

7. By 4, the attacker may know concat3(dhexp(key_323722553,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722553,g)),msg_a(alice,bob))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_323722553,g).
attacker(dhexp(key_323722553,g)).

8. Using the function empty the attacker may obtain empty.
attacker(empty).

9. Using the function somename the attacker may obtain somename.
attacker(somename).

10. By 9, the attacker may know somename.
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

11. By 10, the attacker may know hash(somename,empty).
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

12. By 11, the attacker may know hash(hash(somename,empty),empty).
By 7, the attacker may know dhexp(key_323722553,g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_323722553,g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_323722553,g))).

13. By 12, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_323722553,g)).
So the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_323722553,g)) in phase 1.
attacker_p1(hash(hash(hash(somename,empty),empty),dhexp(key_323722553,g))).

14. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

15. Using the function empty the attacker may obtain empty in phase 1.
attacker_p1(empty).

16. By 15, the attacker may know empty in phase 1.
By 14, the attacker may know minnonce in phase 1.
By 13, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_323722553,g)) in phase 1.
By 6, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722553,g)),msg_a(alice,bob)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_323722553,g)),msg_a(alice,bob)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_323722553,g)),msg_a(alice,bob))).

17. By 16, the attacker may know aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_323722553,g)),msg_a(alice,bob)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob) in phase 1.
attacker_p1(msg_a(alice,bob)).


RESULT attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob)) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice)))
goal reachable: begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> attacker_p1(msg_a(alice,bob))
Abbreviations:
key_323722604 = key_e[me = alice,them = bob,!1 = @sid_323722590]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the message concat3(dhexp(key_323722604,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722604,g)),msg_a(alice,bob))) may be sent on channel pub at output {38}.
mess(pub,concat3(dhexp(key_323722604,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722604,g)),msg_a(alice,bob)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(dhexp(key_323722604,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722604,g)),msg_a(alice,bob))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_323722604,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722604,g)),msg_a(alice,bob))) by listening on this channel.
attacker(concat3(dhexp(key_323722604,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722604,g)),msg_a(alice,bob)))).

5. By 4, the attacker may know concat3(dhexp(key_323722604,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722604,g)),msg_a(alice,bob))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722604,g)),msg_a(alice,bob)).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722604,g)),msg_a(alice,bob))).

6. By 5, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722604,g)),msg_a(alice,bob)).
So the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722604,g)),msg_a(alice,bob)) in phase 1.
attacker_p1(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722604,g)),msg_a(alice,bob))).

7. By 4, the attacker may know concat3(dhexp(key_323722604,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722604,g)),msg_a(alice,bob))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_323722604,g).
attacker(dhexp(key_323722604,g)).

8. Using the function empty the attacker may obtain empty.
attacker(empty).

9. Using the function somename the attacker may obtain somename.
attacker(somename).

10. By 9, the attacker may know somename.
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

11. By 10, the attacker may know hash(somename,empty).
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

12. By 11, the attacker may know hash(hash(somename,empty),empty).
By 7, the attacker may know dhexp(key_323722604,g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_323722604,g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_323722604,g))).

13. By 12, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_323722604,g)).
So the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_323722604,g)) in phase 1.
attacker_p1(hash(hash(hash(somename,empty),empty),dhexp(key_323722604,g))).

14. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

15. Using the function empty the attacker may obtain empty in phase 1.
attacker_p1(empty).

16. By 15, the attacker may know empty in phase 1.
By 14, the attacker may know minnonce in phase 1.
By 13, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_323722604,g)) in phase 1.
By 6, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722604,g)),msg_a(alice,bob)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_323722604,g)),msg_a(alice,bob)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_323722604,g)),msg_a(alice,bob))).

17. By 16, the attacker may know aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_323722604,g)),msg_a(alice,bob)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob) in phase 1.
attacker_p1(msg_a(alice,bob)).


RESULT attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice))) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> attacker_p1(msg_a(alice,bob))
Abbreviations:
key_323722654 = key_e[me = alice,them = bob,!1 = @sid_323722640]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the message concat3(dhexp(key_323722654,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722654,g)),msg_a(alice,bob))) may be sent on channel pub at output {38}.
mess(pub,concat3(dhexp(key_323722654,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722654,g)),msg_a(alice,bob)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(dhexp(key_323722654,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722654,g)),msg_a(alice,bob))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_323722654,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722654,g)),msg_a(alice,bob))) by listening on this channel.
attacker(concat3(dhexp(key_323722654,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722654,g)),msg_a(alice,bob)))).

5. By 4, the attacker may know concat3(dhexp(key_323722654,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722654,g)),msg_a(alice,bob))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722654,g)),msg_a(alice,bob)).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722654,g)),msg_a(alice,bob))).

6. By 5, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722654,g)),msg_a(alice,bob)).
So the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722654,g)),msg_a(alice,bob)) in phase 1.
attacker_p1(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722654,g)),msg_a(alice,bob))).

7. By 4, the attacker may know concat3(dhexp(key_323722654,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722654,g)),msg_a(alice,bob))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_323722654,g).
attacker(dhexp(key_323722654,g)).

8. Using the function empty the attacker may obtain empty.
attacker(empty).

9. Using the function somename the attacker may obtain somename.
attacker(somename).

10. By 9, the attacker may know somename.
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

11. By 10, the attacker may know hash(somename,empty).
By 8, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

12. By 11, the attacker may know hash(hash(somename,empty),empty).
By 7, the attacker may know dhexp(key_323722654,g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_323722654,g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_323722654,g))).

13. By 12, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_323722654,g)).
So the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_323722654,g)) in phase 1.
attacker_p1(hash(hash(hash(somename,empty),empty),dhexp(key_323722654,g))).

14. Using the function minnonce the attacker may obtain minnonce in phase 1.
attacker_p1(minnonce).

15. Using the function empty the attacker may obtain empty in phase 1.
attacker_p1(empty).

16. By 15, the attacker may know empty in phase 1.
By 14, the attacker may know minnonce in phase 1.
By 13, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_323722654,g)) in phase 1.
By 6, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722654,g)),msg_a(alice,bob)) in phase 1.
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_323722654,g)),msg_a(alice,bob)) in phase 1.
attacker_p1(aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_323722654,g)),msg_a(alice,bob))).

17. By 16, the attacker may know aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_323722654,g)),msg_a(alice,bob)) in phase 1.
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob) in phase 1.
attacker_p1(msg_a(alice,bob)).


RESULT attacker_p1(msg_a(alice,bob)) ==> event(LeakS(phase0,bob)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true))
goal reachable: begin(SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_b,msg_b(bob,charlie),true))
Abbreviations:
key_e_323722721 = key_e_883[me_846 = bob,them_845 = charlie,!1 = @sid_323722706]
key_323722722 = key_e[me = alice,them = bob,!1 = @sid_323722680]

1. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 1 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722722,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722722,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_323722722,g),key_323722722),empty,empty,empty,true))) may be inserted in a table at insert {37}.
table(statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722722,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722722,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_323722722,g),key_323722722),empty,empty,empty,true)))).

3. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {423}.
table(statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

4. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

5. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 4 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the message concat3(dhexp(key_323722722,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722722,g)),msg_a(alice,bob))) may be sent on channel pub at output {38}.
mess(pub,concat3(dhexp(key_323722722,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722722,g)),msg_a(alice,bob)))).

6. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 3 may be read at get {445}.
The message concat3(dhexp(key_323722722,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722722,g)),msg_a(alice,bob))) that may be sent on channel pub by 5 may be received at input {424}.
We have dhexp(key_323722722,g) <> caught-fail.
So the entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722722,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722722,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_323722722,g),empty,false))) may be inserted in a table at insert {444}.
table(statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722722,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722722,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_323722722,g),empty,false)))).

7. The entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722722,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722722,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_323722722,g),empty,false))) that may be in a table by 6 may be read at get {494}.
The event SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true) may be executed at {491}.
So the message concat3(dhexp(key_e_323722721,g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323722722,dhexp(key_e_323722721,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722722,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722722,g)),msg_a(alice,bob))),dhexp(key_e_323722721,g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323722722,dhexp(key_e_323722721,g))),dhexp(key_323722722,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722722,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722722,g)),msg_a(alice,bob))),dhexp(key_e_323722721,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323722722,dhexp(key_e_323722721,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722722,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722722,g)),msg_a(alice,bob))),dhexp(key_e_323722721,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))) may be sent on channel pub at output {493}.
mess(pub,concat3(dhexp(key_e_323722721,g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323722722,dhexp(key_e_323722721,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722722,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722722,g)),msg_a(alice,bob))),dhexp(key_e_323722721,g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323722722,dhexp(key_e_323722721,g))),dhexp(key_323722722,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722722,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722722,g)),msg_a(alice,bob))),dhexp(key_e_323722721,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323722722,dhexp(key_e_323722721,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722722,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722722,g)),msg_a(alice,bob))),dhexp(key_e_323722721,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie)))).

8. The entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722722,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722722,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_323722722,g),key_323722722),empty,empty,empty,true))) that may be in a table by 2 may be read at get {87}.
The message concat3(dhexp(key_e_323722721,g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323722722,dhexp(key_e_323722721,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722722,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722722,g)),msg_a(alice,bob))),dhexp(key_e_323722721,g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323722722,dhexp(key_e_323722721,g))),dhexp(key_323722722,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722722,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722722,g)),msg_a(alice,bob))),dhexp(key_e_323722721,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323722722,dhexp(key_e_323722721,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722722,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722722,g)),msg_a(alice,bob))),dhexp(key_e_323722721,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))) that may be sent on channel pub by 7 may be received at input {40}.
We have dhexp(key_e_323722721,g) <> caught-fail.
So event RecvMsg(alice,bob,stage_b,msg_b(bob,charlie),true) may be executed at {85}.
end(RecvMsg(alice,bob,stage_b,msg_b(bob,charlie),true)).


RESULT event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,c_1055,stage_b,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_b,msg_b(bob,charlie),true))
goal reachable: begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_b,msg_b(bob,alice),true))
RESULT event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,c_1055,stage_b,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,c_1055,stage_b,m,true)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_b,msg_b(bob,charlie),true))
goal reachable: begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_b,msg_b(bob,alice),true))
RESULT event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,c_1055,stage_b,m,true)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_b,msg_b(bob,charlie),true))
Abbreviations:
key_e_323722795 = key_e_883[me_846 = bob,them_845 = charlie,!1 = @sid_323722780]
key_323722796 = key_e[me = alice,them = bob,!1 = @sid_323722754]

1. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 1 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722796,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722796,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_323722796,g),key_323722796),empty,empty,empty,true))) may be inserted in a table at insert {37}.
table(statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722796,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722796,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_323722796,g),key_323722796),empty,empty,empty,true)))).

3. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {423}.
table(statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

4. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

5. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 4 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the message concat3(dhexp(key_323722796,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722796,g)),msg_a(alice,bob))) may be sent on channel pub at output {38}.
mess(pub,concat3(dhexp(key_323722796,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722796,g)),msg_a(alice,bob)))).

6. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 3 may be read at get {445}.
The message concat3(dhexp(key_323722796,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722796,g)),msg_a(alice,bob))) that may be sent on channel pub by 5 may be received at input {424}.
We have dhexp(key_323722796,g) <> caught-fail.
So the entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722796,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722796,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_323722796,g),empty,false))) may be inserted in a table at insert {444}.
table(statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722796,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722796,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_323722796,g),empty,false)))).

7. The entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722796,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722796,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_323722796,g),empty,false))) that may be in a table by 6 may be read at get {494}.
The event SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true) may be executed at {491}.
So the message concat3(dhexp(key_e_323722795,g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323722796,dhexp(key_e_323722795,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722796,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722796,g)),msg_a(alice,bob))),dhexp(key_e_323722795,g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323722796,dhexp(key_e_323722795,g))),dhexp(key_323722796,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722796,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722796,g)),msg_a(alice,bob))),dhexp(key_e_323722795,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323722796,dhexp(key_e_323722795,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722796,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722796,g)),msg_a(alice,bob))),dhexp(key_e_323722795,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))) may be sent on channel pub at output {493}.
mess(pub,concat3(dhexp(key_e_323722795,g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323722796,dhexp(key_e_323722795,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722796,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722796,g)),msg_a(alice,bob))),dhexp(key_e_323722795,g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323722796,dhexp(key_e_323722795,g))),dhexp(key_323722796,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722796,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722796,g)),msg_a(alice,bob))),dhexp(key_e_323722795,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323722796,dhexp(key_e_323722795,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722796,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722796,g)),msg_a(alice,bob))),dhexp(key_e_323722795,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie)))).

8. The entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722796,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722796,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_323722796,g),key_323722796),empty,empty,empty,true))) that may be in a table by 2 may be read at get {87}.
The message concat3(dhexp(key_e_323722795,g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323722796,dhexp(key_e_323722795,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722796,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722796,g)),msg_a(alice,bob))),dhexp(key_e_323722795,g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323722796,dhexp(key_e_323722795,g))),dhexp(key_323722796,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722796,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722796,g)),msg_a(alice,bob))),dhexp(key_e_323722795,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323722796,dhexp(key_e_323722795,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722796,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722796,g)),msg_a(alice,bob))),dhexp(key_e_323722795,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))) that may be sent on channel pub by 7 may be received at input {40}.
We have dhexp(key_e_323722795,g) <> caught-fail.
So event RecvMsg(alice,bob,stage_b,msg_b(bob,charlie),true) may be executed at {85}.
end(RecvMsg(alice,bob,stage_b,msg_b(bob,charlie),true)).


RESULT event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_b,msg_b(bob,charlie),true))
Abbreviations:
key_e_323722863 = key_e_883[me_846 = bob,them_845 = charlie,!1 = @sid_323722848]
key_323722864 = key_e[me = alice,them = bob,!1 = @sid_323722822]

1. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 1 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722864,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722864,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_323722864,g),key_323722864),empty,empty,empty,true))) may be inserted in a table at insert {37}.
table(statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722864,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722864,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_323722864,g),key_323722864),empty,empty,empty,true)))).

3. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {423}.
table(statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

4. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

5. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 4 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the message concat3(dhexp(key_323722864,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722864,g)),msg_a(alice,bob))) may be sent on channel pub at output {38}.
mess(pub,concat3(dhexp(key_323722864,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722864,g)),msg_a(alice,bob)))).

6. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 3 may be read at get {445}.
The message concat3(dhexp(key_323722864,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722864,g)),msg_a(alice,bob))) that may be sent on channel pub by 5 may be received at input {424}.
We have dhexp(key_323722864,g) <> caught-fail.
So the entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722864,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722864,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_323722864,g),empty,false))) may be inserted in a table at insert {444}.
table(statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722864,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722864,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_323722864,g),empty,false)))).

7. The entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722864,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722864,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_323722864,g),empty,false))) that may be in a table by 6 may be read at get {494}.
The event SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true) may be executed at {491}.
So the message concat3(dhexp(key_e_323722863,g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323722864,dhexp(key_e_323722863,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722864,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722864,g)),msg_a(alice,bob))),dhexp(key_e_323722863,g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323722864,dhexp(key_e_323722863,g))),dhexp(key_323722864,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722864,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722864,g)),msg_a(alice,bob))),dhexp(key_e_323722863,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323722864,dhexp(key_e_323722863,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722864,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722864,g)),msg_a(alice,bob))),dhexp(key_e_323722863,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))) may be sent on channel pub at output {493}.
mess(pub,concat3(dhexp(key_e_323722863,g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323722864,dhexp(key_e_323722863,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722864,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722864,g)),msg_a(alice,bob))),dhexp(key_e_323722863,g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323722864,dhexp(key_e_323722863,g))),dhexp(key_323722864,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722864,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722864,g)),msg_a(alice,bob))),dhexp(key_e_323722863,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323722864,dhexp(key_e_323722863,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722864,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722864,g)),msg_a(alice,bob))),dhexp(key_e_323722863,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie)))).

8. The entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722864,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722864,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_323722864,g),key_323722864),empty,empty,empty,true))) that may be in a table by 2 may be read at get {87}.
The message concat3(dhexp(key_e_323722863,g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323722864,dhexp(key_e_323722863,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722864,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722864,g)),msg_a(alice,bob))),dhexp(key_e_323722863,g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323722864,dhexp(key_e_323722863,g))),dhexp(key_323722864,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722864,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722864,g)),msg_a(alice,bob))),dhexp(key_e_323722863,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323722864,dhexp(key_e_323722863,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323722864,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323722864,g)),msg_a(alice,bob))),dhexp(key_e_323722863,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))) that may be sent on channel pub by 7 may be received at input {40}.
We have dhexp(key_e_323722863,g) <> caught-fail.
So event RecvMsg(alice,bob,stage_b,msg_b(bob,charlie),true) may be executed at {85}.
end(RecvMsg(alice,bob,stage_b,msg_b(bob,charlie),true)).


RESULT event(RecvMsg(alice,bob,stage_b,m,true)) ==> event(SendMsg(bob,alice,stage_b,m,true)) || event(LeakS(phase0,bob)) cannot be proved.
Starting query not attacker_p1(msg_b(bob,alice))
RESULT not attacker_p1(msg_b(bob,alice)) is true.
Starting query attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice))
RESULT attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice)) is true.
Starting query attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob)))
RESULT attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob))) is true.
Starting query attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice))
RESULT attacker_p1(msg_b(bob,alice)) ==> event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true))
goal reachable: begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(bob,alice,stage_c,msg_c(alice,bob),true))
RESULT event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true)) is true.
Starting query event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,c_1055,stage_c,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(bob,alice,stage_c,msg_c(alice,bob),true))
RESULT event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,c_1055,stage_c,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,c_1055,stage_c,m,true)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(bob,alice,stage_c,msg_c(alice,bob),true))
RESULT event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,c_1055,stage_c,m,true)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(bob,alice,stage_c,msg_c(alice,bob),true))
RESULT event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(bob,alice,stage_c,msg_c(alice,bob),true))
RESULT event(RecvMsg(bob,alice,stage_c,m,true)) ==> event(SendMsg(alice,bob,stage_c,m,true)) || event(LeakS(phase0,alice)) is true.
Starting query not attacker_p1(msg_c(alice,bob))
RESULT not attacker_p1(msg_c(alice,bob)) is true.
Starting query attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob))
RESULT attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob)) is true.
Starting query attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice)))
RESULT attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice))) is true.
Starting query attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob))
RESULT attacker_p1(msg_c(alice,bob)) ==> event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true))
goal reachable: begin(SendMsg(bob,charlie,stage_d,msg_d(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_d,msg_d(bob,charlie),true))
Abbreviations:
key_323723109 = key_e[me = alice,them = bob,!1 = @sid_323723042]
key_e_323723110 = key_e_883[me_846 = bob,them_845 = charlie,!1 = @sid_323723068]

1. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 1 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723109,g),key_323723109),empty,empty,empty,true))) may be inserted in a table at insert {37}.
table(statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723109,g),key_323723109),empty,empty,empty,true)))).

3. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {423}.
table(statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

4. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

5. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 4 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the message concat3(dhexp(key_323723109,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))) may be sent on channel pub at output {38}.
mess(pub,concat3(dhexp(key_323723109,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob)))).

6. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 3 may be read at get {445}.
The message concat3(dhexp(key_323723109,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))) that may be sent on channel pub by 5 may be received at input {424}.
We have dhexp(key_323723109,g) <> caught-fail.
So the entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_323723109,g),empty,false))) may be inserted in a table at insert {444}.
table(statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_323723109,g),empty,false)))).

7. The entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_323723109,g),empty,false))) that may be in a table by 6 may be read at get {494}.
The event SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true) may be executed at {491}.
So the message concat3(dhexp(key_e_323723110,g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))) may be sent on channel pub at output {493}.
mess(pub,concat3(dhexp(key_e_323723110,g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie)))).

8. The entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723109,g),key_323723109),empty,empty,empty,true))) that may be in a table by 2 may be read at get {87}.
The message concat3(dhexp(key_e_323723110,g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))) that may be sent on channel pub by 7 may be received at input {40}.
We have dhexp(key_e_323723110,g) <> caught-fail.
So the entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_s(bob),dhexp(key_323723109,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723109,g),key_323723109),dhexp(key_s(bob),g),dhexp(key_e_323723110,g),empty,true))) may be inserted in a table at insert {86}.
table(statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_s(bob),dhexp(key_323723109,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723109,g),key_323723109),dhexp(key_s(bob),g),dhexp(key_e_323723110,g),empty,true)))).

9. The entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_s(bob),dhexp(key_323723109,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723109,g),key_323723109),dhexp(key_s(bob),g),dhexp(key_e_323723110,g),empty,true))) that may be in a table by 8 may be read at get {105}.
The event SendMsg(alice,bob,stage_c,msg_c(alice,bob),true) may be executed at {102}.
So the entry statestore(alice,bob,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_s(bob),dhexp(key_323723109,g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723109,g),key_323723109),dhexp(key_s(bob),g),dhexp(key_e_323723110,g),empty,true))) may be inserted in a table at insert {103}.
table(statestore(alice,bob,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_s(bob),dhexp(key_323723109,g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723109,g),key_323723109),dhexp(key_s(bob),g),dhexp(key_e_323723110,g),empty,true)))).

10. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {423}.
table(statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

11. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

12. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 11 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the message concat3(dhexp(key_323723109,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))) may be sent on channel pub at output {38}.
mess(pub,concat3(dhexp(key_323723109,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob)))).

13. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 10 may be read at get {445}.
The message concat3(dhexp(key_323723109,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))) that may be sent on channel pub by 12 may be received at input {424}.
We have dhexp(key_323723109,g) <> caught-fail.
So the entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_323723109,g),empty,false))) may be inserted in a table at insert {444}.
table(statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_323723109,g),empty,false)))).

14. The entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_323723109,g),empty,false))) that may be in a table by 13 may be read at get {494}.
The event SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true) may be executed at {491}.
So the entry statestore(bob,charlie,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_s(bob),dhexp(key_323723109,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_323723110,g),key_e_323723110),empty,dhexp(key_323723109,g),empty,false))) may be inserted in a table at insert {492}.
table(statestore(bob,charlie,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_s(bob),dhexp(key_323723109,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_323723110,g),key_e_323723110),empty,dhexp(key_323723109,g),empty,false)))).

15. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

16. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 15 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723109,g),key_323723109),empty,empty,empty,true))) may be inserted in a table at insert {37}.
table(statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723109,g),key_323723109),empty,empty,empty,true)))).

17. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {423}.
table(statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

18. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

19. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 18 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the message concat3(dhexp(key_323723109,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))) may be sent on channel pub at output {38}.
mess(pub,concat3(dhexp(key_323723109,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob)))).

20. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 17 may be read at get {445}.
The message concat3(dhexp(key_323723109,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))) that may be sent on channel pub by 19 may be received at input {424}.
We have dhexp(key_323723109,g) <> caught-fail.
So the entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_323723109,g),empty,false))) may be inserted in a table at insert {444}.
table(statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_323723109,g),empty,false)))).

21. The entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_323723109,g),empty,false))) that may be in a table by 20 may be read at get {494}.
The event SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true) may be executed at {491}.
So the message concat3(dhexp(key_e_323723110,g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))) may be sent on channel pub at output {493}.
mess(pub,concat3(dhexp(key_e_323723110,g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie)))).

22. The entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723109,g),key_323723109),empty,empty,empty,true))) that may be in a table by 16 may be read at get {87}.
The message concat3(dhexp(key_e_323723110,g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))) that may be sent on channel pub by 21 may be received at input {40}.
We have dhexp(key_e_323723110,g) <> caught-fail.
So the entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_s(bob),dhexp(key_323723109,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723109,g),key_323723109),dhexp(key_s(bob),g),dhexp(key_e_323723110,g),empty,true))) may be inserted in a table at insert {86}.
table(statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_s(bob),dhexp(key_323723109,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723109,g),key_323723109),dhexp(key_s(bob),g),dhexp(key_e_323723110,g),empty,true)))).

23. The entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_s(bob),dhexp(key_323723109,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723109,g),key_323723109),dhexp(key_s(bob),g),dhexp(key_e_323723110,g),empty,true))) that may be in a table by 22 may be read at get {105}.
The event SendMsg(alice,bob,stage_c,msg_c(alice,bob),true) may be executed at {102}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),msg_c(alice,bob))) may be sent on channel pub at output {104}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),msg_c(alice,bob)))).

24. The entry statestore(bob,charlie,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_s(bob),dhexp(key_323723109,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_323723110,g),key_e_323723110),empty,dhexp(key_323723109,g),empty,false))) that may be in a table by 14 may be read at get {513}.
The message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),msg_c(alice,bob))) that may be sent on channel pub by 23 may be received at input {495}.
So the entry statestore(bob,charlie,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_s(bob),dhexp(key_323723109,g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_323723110,g),key_e_323723110),empty,dhexp(key_323723109,g),empty,false))) may be inserted in a table at insert {512}.
table(statestore(bob,charlie,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_s(bob),dhexp(key_323723109,g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_323723110,g),key_e_323723110),empty,dhexp(key_323723109,g),empty,false)))).

25. The entry statestore(bob,charlie,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_s(bob),dhexp(key_323723109,g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_323723110,g),key_e_323723110),empty,dhexp(key_323723109,g),empty,false))) that may be in a table by 24 may be read at get {539}.
The event SendMsg(bob,charlie,stage_d,msg_d(bob,charlie),true) may be executed at {536}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),msg_c(alice,bob))),msg_d(bob,charlie))) may be sent on channel pub at output {538}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),msg_c(alice,bob))),msg_d(bob,charlie)))).

26. The entry statestore(alice,bob,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_s(bob),dhexp(key_323723109,g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723109,g),key_323723109),dhexp(key_s(bob),g),dhexp(key_e_323723110,g),empty,true))) that may be in a table by 9 may be read at get {133}.
The message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),dhexp(key_323723109,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723109,dhexp(key_e_323723110,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723109,g)),msg_a(alice,bob))),dhexp(key_e_323723110,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),msg_c(alice,bob))),msg_d(bob,charlie))) that may be sent on channel pub by 25 may be received at input {106}.
So event RecvMsg(alice,bob,stage_d,msg_d(bob,charlie),true) may be executed at {130}.
end(RecvMsg(alice,bob,stage_d,msg_d(bob,charlie),true)).


RESULT event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,c_1055,stage_d,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(bob,charlie,stage_d,msg_d(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_d,msg_d(bob,charlie),true))
goal reachable: begin(SendMsg(bob,alice,stage_d,msg_d(bob,alice),true)) && begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_d,msg_d(bob,alice),true))
RESULT event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,c_1055,stage_d,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,c_1055,stage_d,m,true)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(bob,charlie,stage_d,msg_d(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_d,msg_d(bob,charlie),true))
goal reachable: begin(SendMsg(bob,alice,stage_d,msg_d(bob,alice),true)) && begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,alice,stage_b,msg_b(bob,alice),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_d,msg_d(bob,alice),true))
RESULT event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,c_1055,stage_d,m,true)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(bob,charlie,stage_d,msg_d(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_d,msg_d(bob,charlie),true))
Abbreviations:
key_323723347 = key_e[me = alice,them = bob,!1 = @sid_323723280]
key_e_323723348 = key_e_883[me_846 = bob,them_845 = charlie,!1 = @sid_323723306]

1. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 1 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723347,g),key_323723347),empty,empty,empty,true))) may be inserted in a table at insert {37}.
table(statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723347,g),key_323723347),empty,empty,empty,true)))).

3. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {423}.
table(statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

4. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

5. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 4 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the message concat3(dhexp(key_323723347,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))) may be sent on channel pub at output {38}.
mess(pub,concat3(dhexp(key_323723347,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob)))).

6. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 3 may be read at get {445}.
The message concat3(dhexp(key_323723347,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))) that may be sent on channel pub by 5 may be received at input {424}.
We have dhexp(key_323723347,g) <> caught-fail.
So the entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_323723347,g),empty,false))) may be inserted in a table at insert {444}.
table(statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_323723347,g),empty,false)))).

7. The entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_323723347,g),empty,false))) that may be in a table by 6 may be read at get {494}.
The event SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true) may be executed at {491}.
So the message concat3(dhexp(key_e_323723348,g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))) may be sent on channel pub at output {493}.
mess(pub,concat3(dhexp(key_e_323723348,g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie)))).

8. The entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723347,g),key_323723347),empty,empty,empty,true))) that may be in a table by 2 may be read at get {87}.
The message concat3(dhexp(key_e_323723348,g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))) that may be sent on channel pub by 7 may be received at input {40}.
We have dhexp(key_e_323723348,g) <> caught-fail.
So the entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_s(bob),dhexp(key_323723347,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723347,g),key_323723347),dhexp(key_s(bob),g),dhexp(key_e_323723348,g),empty,true))) may be inserted in a table at insert {86}.
table(statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_s(bob),dhexp(key_323723347,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723347,g),key_323723347),dhexp(key_s(bob),g),dhexp(key_e_323723348,g),empty,true)))).

9. The entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_s(bob),dhexp(key_323723347,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723347,g),key_323723347),dhexp(key_s(bob),g),dhexp(key_e_323723348,g),empty,true))) that may be in a table by 8 may be read at get {105}.
The event SendMsg(alice,bob,stage_c,msg_c(alice,bob),true) may be executed at {102}.
So the entry statestore(alice,bob,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_s(bob),dhexp(key_323723347,g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723347,g),key_323723347),dhexp(key_s(bob),g),dhexp(key_e_323723348,g),empty,true))) may be inserted in a table at insert {103}.
table(statestore(alice,bob,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_s(bob),dhexp(key_323723347,g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723347,g),key_323723347),dhexp(key_s(bob),g),dhexp(key_e_323723348,g),empty,true)))).

10. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {423}.
table(statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

11. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

12. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 11 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the message concat3(dhexp(key_323723347,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))) may be sent on channel pub at output {38}.
mess(pub,concat3(dhexp(key_323723347,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob)))).

13. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 10 may be read at get {445}.
The message concat3(dhexp(key_323723347,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))) that may be sent on channel pub by 12 may be received at input {424}.
We have dhexp(key_323723347,g) <> caught-fail.
So the entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_323723347,g),empty,false))) may be inserted in a table at insert {444}.
table(statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_323723347,g),empty,false)))).

14. The entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_323723347,g),empty,false))) that may be in a table by 13 may be read at get {494}.
The event SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true) may be executed at {491}.
So the entry statestore(bob,charlie,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_s(bob),dhexp(key_323723347,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_323723348,g),key_e_323723348),empty,dhexp(key_323723347,g),empty,false))) may be inserted in a table at insert {492}.
table(statestore(bob,charlie,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_s(bob),dhexp(key_323723347,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_323723348,g),key_e_323723348),empty,dhexp(key_323723347,g),empty,false)))).

15. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

16. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 15 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723347,g),key_323723347),empty,empty,empty,true))) may be inserted in a table at insert {37}.
table(statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723347,g),key_323723347),empty,empty,empty,true)))).

17. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {423}.
table(statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

18. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

19. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 18 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the message concat3(dhexp(key_323723347,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))) may be sent on channel pub at output {38}.
mess(pub,concat3(dhexp(key_323723347,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob)))).

20. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 17 may be read at get {445}.
The message concat3(dhexp(key_323723347,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))) that may be sent on channel pub by 19 may be received at input {424}.
We have dhexp(key_323723347,g) <> caught-fail.
So the entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_323723347,g),empty,false))) may be inserted in a table at insert {444}.
table(statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_323723347,g),empty,false)))).

21. The entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_323723347,g),empty,false))) that may be in a table by 20 may be read at get {494}.
The event SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true) may be executed at {491}.
So the message concat3(dhexp(key_e_323723348,g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))) may be sent on channel pub at output {493}.
mess(pub,concat3(dhexp(key_e_323723348,g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie)))).

22. The entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723347,g),key_323723347),empty,empty,empty,true))) that may be in a table by 16 may be read at get {87}.
The message concat3(dhexp(key_e_323723348,g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))) that may be sent on channel pub by 21 may be received at input {40}.
We have dhexp(key_e_323723348,g) <> caught-fail.
So the entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_s(bob),dhexp(key_323723347,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723347,g),key_323723347),dhexp(key_s(bob),g),dhexp(key_e_323723348,g),empty,true))) may be inserted in a table at insert {86}.
table(statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_s(bob),dhexp(key_323723347,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723347,g),key_323723347),dhexp(key_s(bob),g),dhexp(key_e_323723348,g),empty,true)))).

23. The entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_s(bob),dhexp(key_323723347,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723347,g),key_323723347),dhexp(key_s(bob),g),dhexp(key_e_323723348,g),empty,true))) that may be in a table by 22 may be read at get {105}.
The event SendMsg(alice,bob,stage_c,msg_c(alice,bob),true) may be executed at {102}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),msg_c(alice,bob))) may be sent on channel pub at output {104}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),msg_c(alice,bob)))).

24. The entry statestore(bob,charlie,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_s(bob),dhexp(key_323723347,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_323723348,g),key_e_323723348),empty,dhexp(key_323723347,g),empty,false))) that may be in a table by 14 may be read at get {513}.
The message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),msg_c(alice,bob))) that may be sent on channel pub by 23 may be received at input {495}.
So the entry statestore(bob,charlie,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_s(bob),dhexp(key_323723347,g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_323723348,g),key_e_323723348),empty,dhexp(key_323723347,g),empty,false))) may be inserted in a table at insert {512}.
table(statestore(bob,charlie,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_s(bob),dhexp(key_323723347,g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_323723348,g),key_e_323723348),empty,dhexp(key_323723347,g),empty,false)))).

25. The entry statestore(bob,charlie,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_s(bob),dhexp(key_323723347,g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_323723348,g),key_e_323723348),empty,dhexp(key_323723347,g),empty,false))) that may be in a table by 24 may be read at get {539}.
The event SendMsg(bob,charlie,stage_d,msg_d(bob,charlie),true) may be executed at {536}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),msg_c(alice,bob))),msg_d(bob,charlie))) may be sent on channel pub at output {538}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),msg_c(alice,bob))),msg_d(bob,charlie)))).

26. The entry statestore(alice,bob,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_s(bob),dhexp(key_323723347,g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723347,g),key_323723347),dhexp(key_s(bob),g),dhexp(key_e_323723348,g),empty,true))) that may be in a table by 9 may be read at get {133}.
The message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),dhexp(key_323723347,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723347,dhexp(key_e_323723348,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723347,g)),msg_a(alice,bob))),dhexp(key_e_323723348,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),msg_c(alice,bob))),msg_d(bob,charlie))) that may be sent on channel pub by 25 may be received at input {106}.
So event RecvMsg(alice,bob,stage_d,msg_d(bob,charlie),true) may be executed at {130}.
end(RecvMsg(alice,bob,stage_d,msg_d(bob,charlie),true)).


RESULT event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(bob,charlie,stage_d,msg_d(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_c,msg_c(alice,bob),true)) && begin(SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true)) && begin(SendMsg(alice,bob,stage_a,msg_a(alice,bob),true)) -> end(RecvMsg(alice,bob,stage_d,msg_d(bob,charlie),true))
Abbreviations:
key_323723579 = key_e[me = alice,them = bob,!1 = @sid_323723512]
key_e_323723580 = key_e_883[me_846 = bob,them_845 = charlie,!1 = @sid_323723538]

1. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

2. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 1 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723579,g),key_323723579),empty,empty,empty,true))) may be inserted in a table at insert {37}.
table(statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723579,g),key_323723579),empty,empty,empty,true)))).

3. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {423}.
table(statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

4. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

5. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 4 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the message concat3(dhexp(key_323723579,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))) may be sent on channel pub at output {38}.
mess(pub,concat3(dhexp(key_323723579,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob)))).

6. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 3 may be read at get {445}.
The message concat3(dhexp(key_323723579,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))) that may be sent on channel pub by 5 may be received at input {424}.
We have dhexp(key_323723579,g) <> caught-fail.
So the entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_323723579,g),empty,false))) may be inserted in a table at insert {444}.
table(statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_323723579,g),empty,false)))).

7. The entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_323723579,g),empty,false))) that may be in a table by 6 may be read at get {494}.
The event SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true) may be executed at {491}.
So the message concat3(dhexp(key_e_323723580,g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))) may be sent on channel pub at output {493}.
mess(pub,concat3(dhexp(key_e_323723580,g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie)))).

8. The entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723579,g),key_323723579),empty,empty,empty,true))) that may be in a table by 2 may be read at get {87}.
The message concat3(dhexp(key_e_323723580,g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))) that may be sent on channel pub by 7 may be received at input {40}.
We have dhexp(key_e_323723580,g) <> caught-fail.
So the entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_s(bob),dhexp(key_323723579,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723579,g),key_323723579),dhexp(key_s(bob),g),dhexp(key_e_323723580,g),empty,true))) may be inserted in a table at insert {86}.
table(statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_s(bob),dhexp(key_323723579,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723579,g),key_323723579),dhexp(key_s(bob),g),dhexp(key_e_323723580,g),empty,true)))).

9. The entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_s(bob),dhexp(key_323723579,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723579,g),key_323723579),dhexp(key_s(bob),g),dhexp(key_e_323723580,g),empty,true))) that may be in a table by 8 may be read at get {105}.
The event SendMsg(alice,bob,stage_c,msg_c(alice,bob),true) may be executed at {102}.
So the entry statestore(alice,bob,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_s(bob),dhexp(key_323723579,g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723579,g),key_323723579),dhexp(key_s(bob),g),dhexp(key_e_323723580,g),empty,true))) may be inserted in a table at insert {103}.
table(statestore(alice,bob,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_s(bob),dhexp(key_323723579,g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723579,g),key_323723579),dhexp(key_s(bob),g),dhexp(key_e_323723580,g),empty,true)))).

10. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {423}.
table(statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

11. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

12. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 11 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the message concat3(dhexp(key_323723579,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))) may be sent on channel pub at output {38}.
mess(pub,concat3(dhexp(key_323723579,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob)))).

13. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 10 may be read at get {445}.
The message concat3(dhexp(key_323723579,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))) that may be sent on channel pub by 12 may be received at input {424}.
We have dhexp(key_323723579,g) <> caught-fail.
So the entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_323723579,g),empty,false))) may be inserted in a table at insert {444}.
table(statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_323723579,g),empty,false)))).

14. The entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_323723579,g),empty,false))) that may be in a table by 13 may be read at get {494}.
The event SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true) may be executed at {491}.
So the entry statestore(bob,charlie,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_s(bob),dhexp(key_323723579,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_323723580,g),key_e_323723580),empty,dhexp(key_323723579,g),empty,false))) may be inserted in a table at insert {492}.
table(statestore(bob,charlie,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_s(bob),dhexp(key_323723579,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_323723580,g),key_e_323723580),empty,dhexp(key_323723579,g),empty,false)))).

15. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

16. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 15 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723579,g),key_323723579),empty,empty,empty,true))) may be inserted in a table at insert {37}.
table(statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723579,g),key_323723579),empty,empty,empty,true)))).

17. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {423}.
table(statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

18. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {15}.
table(statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

19. The entry statestore(alice,bob,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 18 may be read at get {39}.
The event SendMsg(alice,bob,stage_a,msg_a(alice,bob),true) may be executed at {36}.
So the message concat3(dhexp(key_323723579,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))) may be sent on channel pub at output {38}.
mess(pub,concat3(dhexp(key_323723579,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob)))).

20. The entry statestore(bob,charlie,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 17 may be read at get {445}.
The message concat3(dhexp(key_323723579,g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))) that may be sent on channel pub by 19 may be received at input {424}.
We have dhexp(key_323723579,g) <> caught-fail.
So the entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_323723579,g),empty,false))) may be inserted in a table at insert {444}.
table(statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_323723579,g),empty,false)))).

21. The entry statestore(bob,charlie,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_323723579,g),empty,false))) that may be in a table by 20 may be read at get {494}.
The event SendMsg(bob,charlie,stage_b,msg_b(bob,charlie),true) may be executed at {491}.
So the message concat3(dhexp(key_e_323723580,g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))) may be sent on channel pub at output {493}.
mess(pub,concat3(dhexp(key_e_323723580,g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie)))).

22. The entry statestore(alice,bob,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723579,g),key_323723579),empty,empty,empty,true))) that may be in a table by 16 may be read at get {87}.
The message concat3(dhexp(key_e_323723580,g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))) that may be sent on channel pub by 21 may be received at input {40}.
We have dhexp(key_e_323723580,g) <> caught-fail.
So the entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_s(bob),dhexp(key_323723579,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723579,g),key_323723579),dhexp(key_s(bob),g),dhexp(key_e_323723580,g),empty,true))) may be inserted in a table at insert {86}.
table(statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_s(bob),dhexp(key_323723579,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723579,g),key_323723579),dhexp(key_s(bob),g),dhexp(key_e_323723580,g),empty,true)))).

23. The entry statestore(alice,bob,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_s(bob),dhexp(key_323723579,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723579,g),key_323723579),dhexp(key_s(bob),g),dhexp(key_e_323723580,g),empty,true))) that may be in a table by 22 may be read at get {105}.
The event SendMsg(alice,bob,stage_c,msg_c(alice,bob),true) may be executed at {102}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),msg_c(alice,bob))) may be sent on channel pub at output {104}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),msg_c(alice,bob)))).

24. The entry statestore(bob,charlie,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_s(bob),dhexp(key_323723579,g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_323723580,g),key_e_323723580),empty,dhexp(key_323723579,g),empty,false))) that may be in a table by 14 may be read at get {513}.
The message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),msg_c(alice,bob))) that may be sent on channel pub by 23 may be received at input {495}.
So the entry statestore(bob,charlie,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_s(bob),dhexp(key_323723579,g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_323723580,g),key_e_323723580),empty,dhexp(key_323723579,g),empty,false))) may be inserted in a table at insert {512}.
table(statestore(bob,charlie,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_s(bob),dhexp(key_323723579,g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_323723580,g),key_e_323723580),empty,dhexp(key_323723579,g),empty,false)))).

25. The entry statestore(bob,charlie,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_s(bob),dhexp(key_323723579,g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e_323723580,g),key_e_323723580),empty,dhexp(key_323723579,g),empty,false))) that may be in a table by 24 may be read at get {539}.
The event SendMsg(bob,charlie,stage_d,msg_d(bob,charlie),true) may be executed at {536}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),msg_c(alice,bob))),msg_d(bob,charlie))) may be sent on channel pub at output {538}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),msg_c(alice,bob))),msg_d(bob,charlie)))).

26. The entry statestore(alice,bob,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_s(bob),dhexp(key_323723579,g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),msg_c(alice,bob)))),keypairpack(empty,empty),keypairpack(dhexp(key_323723579,g),key_323723579),dhexp(key_s(bob),g),dhexp(key_e_323723580,g),empty,true))) that may be in a table by 9 may be read at get {133}.
The message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),increment_nonce(increment_nonce(minnonce)),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),dhexp(key_323723579,dhexp(key_s(bob),g))),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_323723579,dhexp(key_e_323723580,g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_323723579,g)),msg_a(alice,bob))),dhexp(key_e_323723580,g)),dhexp(key_s(bob),g))),msg_b(bob,charlie))),msg_c(alice,bob))),msg_d(bob,charlie))) that may be sent on channel pub by 25 may be received at input {106}.
So event RecvMsg(alice,bob,stage_d,msg_d(bob,charlie),true) may be executed at {130}.
end(RecvMsg(alice,bob,stage_d,msg_d(bob,charlie),true)).


RESULT event(RecvMsg(alice,bob,stage_d,m,true)) ==> event(SendMsg(bob,alice,stage_d,m,true)) || event(LeakS(phase0,bob)) cannot be proved.
Starting query not attacker_p1(msg_d(bob,alice))
RESULT not attacker_p1(msg_d(bob,alice)) is true.
Starting query attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice))
RESULT attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice)) is true.
Starting query attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob)))
RESULT attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob))) is true.
Starting query attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice))
RESULT attacker_p1(msg_d(bob,alice)) ==> event(LeakS(phase0,alice)) is true.
