File "NN.noise.passive.pv", line 222, characters 7-8:
Warning: identifier ck rebound.
File "NN.noise.passive.pv", line 231, characters 7-8:
Warning: identifier ck rebound.
File "NN.noise.passive.pv", line 232, characters 7-8:
Warning: identifier cs rebound.
File "NN.noise.passive.pv", line 232, character 36:
Warning: identifier h rebound.
File "NN.noise.passive.pv", line 241, characters 7-8:
Warning: identifier cs rebound.
File "NN.noise.passive.pv", line 242, characters 6-7:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 247, characters 7-8:
Warning: identifier cs rebound.
File "NN.noise.passive.pv", line 248, characters 6-7:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 271, character 6:
Warning: identifier e rebound.
File "NN.noise.passive.pv", line 272, characters 6-7:
Warning: identifier ne rebound.
File "NN.noise.passive.pv", line 273, characters 6-7:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 275, characters 7-8:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 275, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NN.noise.passive.pv", line 276, characters 6-7:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 283, character 6:
Warning: identifier e rebound.
File "NN.noise.passive.pv", line 284, characters 6-7:
Warning: identifier ne rebound.
File "NN.noise.passive.pv", line 285, characters 6-7:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 287, characters 6-7:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 288, characters 7-8:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 288, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NN.noise.passive.pv", line 289, characters 6-7:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 297, characters 7-8:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 297, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NN.noise.passive.pv", line 298, characters 6-7:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 305, characters 7-8:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 305, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NN.noise.passive.pv", line 306, characters 6-7:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 314, characters 6-7:
Warning: identifier re rebound.
File "NN.noise.passive.pv", line 315, characters 6-7:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 317, characters 7-8:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 319, characters 7-8:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 327, characters 6-7:
Warning: identifier re rebound.
File "NN.noise.passive.pv", line 328, characters 6-7:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 330, characters 6-7:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 331, characters 7-8:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 333, characters 7-8:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 342, characters 7-8:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 344, characters 7-8:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 352, characters 7-8:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 354, characters 7-8:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 499, characters 7-8:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 501, characters 8-9:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 352, characters 7-8:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 354, characters 7-8:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 247, characters 7-8:
Warning: identifier cs rebound.
File "NN.noise.passive.pv", line 248, characters 6-7:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 491, characters 7-8:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 492, characters 8-9:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 297, characters 7-8:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 297, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NN.noise.passive.pv", line 298, characters 6-7:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 241, characters 7-8:
Warning: identifier cs rebound.
File "NN.noise.passive.pv", line 242, characters 6-7:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 484, characters 8-9:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 327, characters 6-7:
Warning: identifier re rebound.
File "NN.noise.passive.pv", line 328, characters 6-7:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 330, characters 6-7:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 331, characters 7-8:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 333, characters 7-8:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 222, characters 7-8:
Warning: identifier ck rebound.
File "NN.noise.passive.pv", line 247, characters 7-8:
Warning: identifier cs rebound.
File "NN.noise.passive.pv", line 248, characters 6-7:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 476, characters 8-9:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 271, character 6:
Warning: identifier e rebound.
File "NN.noise.passive.pv", line 272, characters 6-7:
Warning: identifier ne rebound.
File "NN.noise.passive.pv", line 273, characters 6-7:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 275, characters 7-8:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 275, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NN.noise.passive.pv", line 276, characters 6-7:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 241, characters 7-8:
Warning: identifier cs rebound.
File "NN.noise.passive.pv", line 242, characters 6-7:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 552, characters 7-8:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 553, characters 8-9:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 305, characters 7-8:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 305, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NN.noise.passive.pv", line 306, characters 6-7:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 241, characters 7-8:
Warning: identifier cs rebound.
File "NN.noise.passive.pv", line 242, characters 6-7:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 543, characters 7-8:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 545, characters 8-9:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 342, characters 7-8:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 344, characters 7-8:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 247, characters 7-8:
Warning: identifier cs rebound.
File "NN.noise.passive.pv", line 248, characters 6-7:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 536, characters 8-9:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 283, character 6:
Warning: identifier e rebound.
File "NN.noise.passive.pv", line 284, characters 6-7:
Warning: identifier ne rebound.
File "NN.noise.passive.pv", line 285, characters 6-7:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 287, characters 6-7:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 288, characters 7-8:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 288, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NN.noise.passive.pv", line 289, characters 6-7:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 222, characters 7-8:
Warning: identifier ck rebound.
File "NN.noise.passive.pv", line 241, characters 7-8:
Warning: identifier cs rebound.
File "NN.noise.passive.pv", line 242, characters 6-7:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 529, characters 8-9:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 314, characters 6-7:
Warning: identifier re rebound.
File "NN.noise.passive.pv", line 315, characters 6-7:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 317, characters 7-8:
Warning: identifier ss rebound.
File "NN.noise.passive.pv", line 319, characters 7-8:
Warning: identifier hs rebound.
File "NN.noise.passive.pv", line 247, characters 7-8:
Warning: identifier cs rebound.
File "NN.noise.passive.pv", line 248, characters 6-7:
Warning: identifier ss rebound.
Linear part:
dhexp(b_76,dhexp(a_75,g)) = dhexp(a_75,dhexp(b_76,g))
Completing equations...
Completed equations:
dhexp(b_76,dhexp(a_75,g)) = dhexp(a_75,dhexp(b_76,g))
Convergent part:
Completing equations...
Completed equations:
Process:
{1}out(pub, key_s(charlie));
{2}!
{3}new sid: sessionid;
(
    {4}let s_449: keypair = keypairpack(empty,empty) in
    (
        {5}let e_450: keypair = keypairpack(empty,empty) in
        {6}let rs_451: key = empty in
        {7}let re_452: key = empty in
        {8}let v_453: bitstring = catch-fail(hash(somename,empty)) in
        {9}let v_454: key = catch-fail(v_453) in
        {10}let v_455: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {11}let v_456: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_453) then (if not-caught-fail(v_454) then (if not-caught-fail(v_455) then symmetricstatepack(v_455,v_454,v_453) else fail-any) else fail-any) else fail-any))) in
        {12}let v_457: symmetricstate = catch-fail((if success?((if not-caught-fail(v_453) then (if not-caught-fail(v_454) then (if not-caught-fail(v_455) then symmetricstatepack(v_455,v_454,v_453) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_456) && success?(is-true(success?(1-proj-3-tuple(v_456))))) then symmetricstatepack(1-proj-3-tuple(v_456),2-proj-3-tuple(v_456),hash(3-proj-3-tuple(v_456),empty)) else fail-any) else fail-any)) in
        {13}let hs: handshakestate = (if not-caught-fail(v_457) then handshakestatepack(v_457,s_449,e_450,rs_451,re_452,empty,true) else fail-any) in
        {14}insert statestore(alice,bob,sid,statepack_a(hs))
    ) | (
        {37}get statestore(=alice,=bob,=sid,statepack_a(hs_458: handshakestate)) in
        {15}let v_459: bitstring = catch-fail(handshakestateunpack(hs_458)) in
        {16}let v_460: bitstring = catch-fail((empty,empty,empty)) in
        {17}let v_461: key = catch-fail(dhexp(key_e(alice,bob,sid),g)) in
        {18}let v_462: keypair = catch-fail((if not-caught-fail(v_461) then keypairpack(v_461,key_e(alice,bob,sid)) else fail-any)) in
        {19}let v_463: bitstring = catch-fail(getpublickey(v_462)) in
        {20}let v_464: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_459))) in
        {21}let v_465: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_459)) then (if (not-caught-fail(v_464) && success?(is-true(success?(1-proj-3-tuple(v_464))))) then symmetricstatepack(1-proj-3-tuple(v_464),2-proj-3-tuple(v_464),hash(3-proj-3-tuple(v_464),v_463)) else fail-any) else fail-any)) in
        {22}let v_466: bitstring = catch-fail(symmetricstateunpack(v_465)) in
        {23}let v_467: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_466))) in
        {24}let v_468: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_467),2-proj-2-tuple(v_467),3-proj-3-tuple(v_466),msg_a(alice,bob,sid))) in
        {25}let v_469: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_466))) in
        {26}let v_470: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_467))) && success?(1-proj-3-tuple(v_466))) then (if (not-caught-fail(v_469) && success?(is-true(success?(1-proj-2-tuple(v_469))))) then cipherstatepack(1-proj-2-tuple(v_469),increment_nonce(2-proj-2-tuple(v_467))) else fail-any) else fail-any)) in
        {27}let v_471: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_466)) && success?(1-proj-3-tuple(v_466))) then (if (not-caught-fail(v_467) && success?(is-true(success?(1-proj-2-tuple(v_467))))) then (if not-caught-fail(v_468) then (if not-caught-fail(v_470) then (v_470,v_468) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {28}let v_472: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_471),2-proj-3-tuple(v_466),3-proj-3-tuple(v_466)))) in
        {29}let v_473: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_471)) && success?(symmetricstatepack(1-proj-2-tuple(v_471),2-proj-3-tuple(v_466),3-proj-3-tuple(v_466)))) then (if (not-caught-fail(v_472) && success?(is-true(success?(1-proj-3-tuple(v_472))))) then symmetricstatepack(1-proj-3-tuple(v_472),2-proj-3-tuple(v_472),hash(3-proj-3-tuple(v_472),2-proj-2-tuple(v_471))) else fail-any) else fail-any)) in
        {30}let v_474: bitstring = catch-fail((if (not-caught-fail(v_466) && success?(is-true(success?(1-proj-3-tuple(v_466))))) then (if (not-caught-fail(v_471) && success?(is-true(success?(1-proj-2-tuple(v_471))))) then (if not-caught-fail(v_473) then (v_473,2-proj-2-tuple(v_471)) else fail-any) else fail-any) else fail-any)) in
        {31}let v_475: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_474),2-proj-7-tuple(v_459),v_462,4-proj-7-tuple(v_459),5-proj-7-tuple(v_459),6-proj-7-tuple(v_459),7-proj-7-tuple(v_459))) in
        {32}let v_476: bitstring = catch-fail(concat3(v_463,2-proj-3-tuple(v_460),2-proj-2-tuple(v_474))) in
        {33}let (hs_477: handshakestate,message_a: bitstring) = (if (not-caught-fail(v_459) && success?(is-true(success?(1-proj-7-tuple(v_459))))) then (if (not-caught-fail(v_460) && success?(is-true(success?(1-proj-3-tuple(v_460))))) then (if not-caught-fail(v_462) then (if not-caught-fail(v_463) then (if not-caught-fail(v_465) then (if (not-caught-fail(v_474) && success?(is-true(success?(1-proj-2-tuple(v_474))))) then (if not-caught-fail(v_475) then (if not-caught-fail(v_476) then (v_475,v_476) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {34}event SendMsg(alice,bob,stagepack_a(sid),msg_a(alice,bob,sid));
        {35}insert statestore(alice,bob,sid,statepack_b(hs_477));
        {36}out(pub, message_a)
    ) | (
        {74}get statestore(=alice,=bob,=sid,statepack_b(hs_478: handshakestate)) in
        {38}in(pub, message_b: bitstring);
        {39}let v_479: bitstring = catch-fail(handshakestateunpack(hs_478)) in
        {40}let v_480: bitstring = catch-fail(deconcat3(message_b)) in
        {41}let v_481: bool = catch-fail(true) in
        {42}let v_482: key = catch-fail(1-proj-3-tuple(v_480)) in
        {43}let v_483: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_479))) in
        {44}let v_484: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_479)) then (if (not-caught-fail(v_483) && success?(is-true(success?(1-proj-3-tuple(v_483))))) then symmetricstatepack(1-proj-3-tuple(v_483),2-proj-3-tuple(v_483),hash(3-proj-3-tuple(v_483),v_482)) else fail-any) else fail-any)) in
        {45}let v_485: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_479))) in
        {46}let v_486: bitstring = catch-fail(symmetricstateunpack(v_484)) in
        {47}let v_487: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_486),(if success?(3-proj-7-tuple(v_479)) then (if (not-caught-fail(v_485) && success?(is-true(success?(1-proj-2-tuple(v_485))))) then dhexp(2-proj-2-tuple(v_485),v_482) else fail-any) else fail-any))) in
        {48}let v_488: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_486),(if success?(3-proj-7-tuple(v_479)) then (if (not-caught-fail(v_485) && success?(is-true(success?(1-proj-2-tuple(v_485))))) then dhexp(2-proj-2-tuple(v_485),v_482) else fail-any) else fail-any))) in
        {49}let v_489: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_486),(if success?(3-proj-7-tuple(v_479)) then (if (not-caught-fail(v_485) && success?(is-true(success?(1-proj-2-tuple(v_485))))) then dhexp(2-proj-2-tuple(v_485),v_482) else fail-any) else fail-any))) in
        {50}let v_490: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_479)) then (if (not-caught-fail(v_485) && success?(is-true(success?(1-proj-2-tuple(v_485))))) then dhexp(2-proj-2-tuple(v_485),v_482) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_486))) then (if not-caught-fail(v_487) then (if not-caught-fail(v_488) then (if not-caught-fail(v_489) then (v_487,v_488,v_489) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {51}let v_491: symmetricstate = catch-fail((if success?((if success?(3-proj-7-tuple(v_479)) then (if (not-caught-fail(v_485) && success?(is-true(success?(1-proj-2-tuple(v_485))))) then dhexp(2-proj-2-tuple(v_485),v_482) else fail-any) else fail-any)) then (if (not-caught-fail(v_486) && success?(is-true(success?(1-proj-3-tuple(v_486))))) then (if (not-caught-fail(v_490) && success?(is-true(success?(1-proj-3-tuple(v_490))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_490)) then cipherstatepack(2-proj-3-tuple(v_490),minnonce) else fail-any),1-proj-3-tuple(v_490),3-proj-3-tuple(v_486)) else fail-any) else fail-any) else fail-any)) in
        {52}let v_492: bitstring = catch-fail(symmetricstateunpack(v_491)) in
        {53}let v_493: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_492))) in
        {54}let v_494: aead = catch-fail(decrypt(1-proj-2-tuple(v_493),2-proj-2-tuple(v_493),3-proj-3-tuple(v_492),3-proj-3-tuple(v_480))) in
        {55}let v_495: bitstring = catch-fail(aeadunpack(v_494)) in
        {56}let v_496: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_492))) in
        {57}let v_497: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_493))) && success?(1-proj-3-tuple(v_492))) then (if (not-caught-fail(v_496) && success?(is-true(success?(1-proj-2-tuple(v_496))))) then cipherstatepack(1-proj-2-tuple(v_496),increment_nonce(2-proj-2-tuple(v_493))) else fail-any) else fail-any)) in
        {58}let v_498: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_480)) && (success?(3-proj-3-tuple(v_492)) && success?(1-proj-3-tuple(v_492)))) then (if (not-caught-fail(v_493) && success?(is-true(success?(1-proj-2-tuple(v_493))))) then (if not-caught-fail(v_494) then (if (not-caught-fail(v_495) && success?(is-true(success?(1-proj-3-tuple(v_495))))) then (if not-caught-fail(v_497) then (v_497,3-proj-3-tuple(v_495),1-proj-3-tuple(v_495)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {59}let v_499: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_498),2-proj-3-tuple(v_492),3-proj-3-tuple(v_492)))) in
        {60}let v_500: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_480)) && success?(symmetricstatepack(1-proj-3-tuple(v_498),2-proj-3-tuple(v_492),3-proj-3-tuple(v_492)))) then (if (not-caught-fail(v_499) && success?(is-true(success?(1-proj-3-tuple(v_499))))) then symmetricstatepack(1-proj-3-tuple(v_499),2-proj-3-tuple(v_499),hash(3-proj-3-tuple(v_499),3-proj-3-tuple(v_480))) else fail-any) else fail-any)) in
        {61}let v_501: bitstring = catch-fail((if success?(3-proj-3-tuple(v_480)) then (if (not-caught-fail(v_492) && success?(is-true(success?(1-proj-3-tuple(v_492))))) then (if (not-caught-fail(v_498) && success?(is-true(success?(1-proj-3-tuple(v_498))))) then (if not-caught-fail(v_500) then (v_500,2-proj-3-tuple(v_498),3-proj-3-tuple(v_498)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {62}let v_502: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_501),2-proj-7-tuple(v_479),3-proj-7-tuple(v_479),4-proj-7-tuple(v_479),v_482,6-proj-7-tuple(v_479),7-proj-7-tuple(v_479))) in
        {63}let v_503: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_501))) in
        {64}let v_504: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_503),zero)) in
        {65}let v_505: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_503),zero)) in
        {66}let v_506: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_503),zero)) in
        {67}let v_507: bitstring = catch-fail((if success?(2-proj-3-tuple(v_503)) then (if not-caught-fail(v_504) then (if not-caught-fail(v_505) then (if not-caught-fail(v_506) then (v_504,v_505,v_506) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {68}let v_508: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_507)) then cipherstatepack(1-proj-3-tuple(v_507),minnonce) else fail-any)) in
        {69}let v_509: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_507)) then cipherstatepack(2-proj-3-tuple(v_507),minnonce) else fail-any)) in
        {70}let v_510: bitstring = catch-fail((if success?(1-proj-3-tuple(v_501)) then (if (not-caught-fail(v_503) && success?(is-true(success?(1-proj-3-tuple(v_503))))) then (if (not-caught-fail(v_507) && success?(is-true(success?(1-proj-3-tuple(v_507))))) then (if not-caught-fail(v_508) then (if not-caught-fail(v_509) then (1-proj-3-tuple(v_501),v_508,v_509) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {71}let (hs_511: handshakestate,plaintext_b: bitstring,valid: bool,cs1: cipherstate,cs2: cipherstate) = (if (not-caught-fail(v_479) && success?(is-true(success?(1-proj-7-tuple(v_479))))) then (if (not-caught-fail(v_480) && success?(is-true(success?(1-proj-3-tuple(v_480))))) then (if not-caught-fail(v_481) then (if not-caught-fail(v_482) then (if not-caught-fail(v_484) then (if not-caught-fail(v_491) then (if (not-caught-fail(v_501) && success?(is-true(success?(1-proj-3-tuple(v_501))))) then (if (v_481 && 3-proj-3-tuple(v_501)) then (if not-caught-fail(v_502) then (if (not-caught-fail(v_510) && success?(is-true(success?(1-proj-3-tuple(v_510))))) then (v_502,2-proj-3-tuple(v_501),true,2-proj-3-tuple(v_510),3-proj-3-tuple(v_510)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {72}event RecvMsg(alice,bob,stagepack_b(sid),plaintext_b);
        {73}insert statestore(alice,bob,sid,statepack_c(hs_511,cs1,cs2))
    ) | (
        {75}!
        {94}get statestore(=alice,=bob,=sid,statepack_c(hs_512: handshakestate,cs1_513: cipherstate,cs2_514: cipherstate)) in
        {76}let hs_515: handshakestate = handshakestatesetcs(hs_512,cs1_513) in
        {77}let v_516: bitstring = catch-fail(handshakestateunpack(hs_515)) in
        {78}let v_517: bitstring = catch-fail((empty,empty,empty)) in
        {79}let v_518: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_516))) in
        {80}let v_519: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_518))) in
        {81}let v_520: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_519),2-proj-2-tuple(v_519),3-proj-3-tuple(v_518),msg_c(alice,bob,sid))) in
        {82}let v_521: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_518))) in
        {83}let v_522: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_519))) && success?(1-proj-3-tuple(v_518))) then (if (not-caught-fail(v_521) && success?(is-true(success?(1-proj-2-tuple(v_521))))) then cipherstatepack(1-proj-2-tuple(v_521),increment_nonce(2-proj-2-tuple(v_519))) else fail-any) else fail-any)) in
        {84}let v_523: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_518)) && success?(1-proj-3-tuple(v_518))) then (if (not-caught-fail(v_519) && success?(is-true(success?(1-proj-2-tuple(v_519))))) then (if not-caught-fail(v_520) then (if not-caught-fail(v_522) then (v_522,v_520) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {85}let v_524: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_523),2-proj-3-tuple(v_518),3-proj-3-tuple(v_518)))) in
        {86}let v_525: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_523)) && success?(symmetricstatepack(1-proj-2-tuple(v_523),2-proj-3-tuple(v_518),3-proj-3-tuple(v_518)))) then (if (not-caught-fail(v_524) && success?(is-true(success?(1-proj-3-tuple(v_524))))) then symmetricstatepack(1-proj-3-tuple(v_524),2-proj-3-tuple(v_524),hash(3-proj-3-tuple(v_524),2-proj-2-tuple(v_523))) else fail-any) else fail-any)) in
        {87}let v_526: bitstring = catch-fail((if success?(1-proj-7-tuple(v_516)) then (if (not-caught-fail(v_518) && success?(is-true(success?(1-proj-3-tuple(v_518))))) then (if (not-caught-fail(v_523) && success?(is-true(success?(1-proj-2-tuple(v_523))))) then (if not-caught-fail(v_525) then (v_525,2-proj-2-tuple(v_523)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {88}let v_527: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_526),2-proj-7-tuple(v_516),3-proj-7-tuple(v_516),4-proj-7-tuple(v_516),5-proj-7-tuple(v_516),6-proj-7-tuple(v_516),7-proj-7-tuple(v_516))) in
        {89}let v_528: bitstring = catch-fail(concat3(1-proj-3-tuple(v_517),2-proj-3-tuple(v_517),2-proj-2-tuple(v_526))) in
        {90}let (hs_529: handshakestate,message_c: bitstring) = (if (not-caught-fail(v_516) && success?(is-true(success?(1-proj-7-tuple(v_516))))) then (if (not-caught-fail(v_517) && success?(is-true(success?(1-proj-3-tuple(v_517))))) then (if (not-caught-fail(v_526) && success?(is-true(success?(1-proj-2-tuple(v_526))))) then (if not-caught-fail(v_527) then (if not-caught-fail(v_528) then (v_527,v_528) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {91}event SendMsg(alice,bob,stagepack_c(sid),msg_c(alice,bob,sid));
        {92}insert statestore(alice,bob,sid,statepack_d(hs_529,handshakestategetcs(hs_529),cs2_514));
        {93}out(pub, message_c)
    ) | (
        {95}!
        {115}get statestore(=alice,=bob,=sid,statepack_d(hs_530: handshakestate,cs1_531: cipherstate,cs2_532: cipherstate)) in
        {96}let hs_533: handshakestate = handshakestatesetcs(hs_530,cs2_532) in
        {97}in(pub, message_d: bitstring);
        {98}let v_534: bitstring = catch-fail(handshakestateunpack(hs_533)) in
        {99}let v_535: bitstring = catch-fail(deconcat3(message_d)) in
        {100}let v_536: bool = catch-fail(true) in
        {101}let v_537: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_534))) in
        {102}let v_538: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_537))) in
        {103}let v_539: aead = catch-fail(decrypt(1-proj-2-tuple(v_538),2-proj-2-tuple(v_538),3-proj-3-tuple(v_537),3-proj-3-tuple(v_535))) in
        {104}let v_540: bitstring = catch-fail(aeadunpack(v_539)) in
        {105}let v_541: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_537))) in
        {106}let v_542: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_538))) && success?(1-proj-3-tuple(v_537))) then (if (not-caught-fail(v_541) && success?(is-true(success?(1-proj-2-tuple(v_541))))) then cipherstatepack(1-proj-2-tuple(v_541),increment_nonce(2-proj-2-tuple(v_538))) else fail-any) else fail-any)) in
        {107}let v_543: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_535)) && (success?(3-proj-3-tuple(v_537)) && success?(1-proj-3-tuple(v_537)))) then (if (not-caught-fail(v_538) && success?(is-true(success?(1-proj-2-tuple(v_538))))) then (if not-caught-fail(v_539) then (if (not-caught-fail(v_540) && success?(is-true(success?(1-proj-3-tuple(v_540))))) then (if not-caught-fail(v_542) then (v_542,3-proj-3-tuple(v_540),1-proj-3-tuple(v_540)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {108}let v_544: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_543),2-proj-3-tuple(v_537),3-proj-3-tuple(v_537)))) in
        {109}let v_545: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_535)) && success?(symmetricstatepack(1-proj-3-tuple(v_543),2-proj-3-tuple(v_537),3-proj-3-tuple(v_537)))) then (if (not-caught-fail(v_544) && success?(is-true(success?(1-proj-3-tuple(v_544))))) then symmetricstatepack(1-proj-3-tuple(v_544),2-proj-3-tuple(v_544),hash(3-proj-3-tuple(v_544),3-proj-3-tuple(v_535))) else fail-any) else fail-any)) in
        {110}let v_546: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_535)) && success?(1-proj-7-tuple(v_534))) then (if (not-caught-fail(v_537) && success?(is-true(success?(1-proj-3-tuple(v_537))))) then (if (not-caught-fail(v_543) && success?(is-true(success?(1-proj-3-tuple(v_543))))) then (if not-caught-fail(v_545) then (v_545,2-proj-3-tuple(v_543),3-proj-3-tuple(v_543)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {111}let v_547: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_546),2-proj-7-tuple(v_534),3-proj-7-tuple(v_534),4-proj-7-tuple(v_534),5-proj-7-tuple(v_534),6-proj-7-tuple(v_534),7-proj-7-tuple(v_534))) in
        {112}let (hs_548: handshakestate,plaintext_d: bitstring,valid_549: bool) = (if (not-caught-fail(v_534) && success?(is-true(success?(1-proj-7-tuple(v_534))))) then (if (not-caught-fail(v_535) && success?(is-true(success?(1-proj-3-tuple(v_535))))) then (if not-caught-fail(v_536) then (if (not-caught-fail(v_546) && success?(is-true(success?(1-proj-3-tuple(v_546))))) then (if (v_536 && 3-proj-3-tuple(v_546)) then (if not-caught-fail(v_547) then (v_547,2-proj-3-tuple(v_546),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {113}event RecvMsg(alice,bob,stagepack_d(sid),plaintext_d);
        {114}event RecvEnd(valid_549)
    ) | (
        {116}event LeakS(phase0,alice);
        {117}out(pub, key_s(alice))
    ) | (
        {118}phase 1;
        {119}event LeakS(phase1,alice);
        {120}out(pub, key_s(alice))
    )
) | (
    {121}let s_550: keypair = keypairpack(empty,empty) in
    (
        {122}let e_551: keypair = keypairpack(empty,empty) in
        {123}let rs_552: key = empty in
        {124}let re_553: key = empty in
        {125}let v_554: bitstring = catch-fail(hash(somename,empty)) in
        {126}let v_555: key = catch-fail(v_554) in
        {127}let v_556: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {128}let v_557: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_554) then (if not-caught-fail(v_555) then (if not-caught-fail(v_556) then symmetricstatepack(v_556,v_555,v_554) else fail-any) else fail-any) else fail-any))) in
        {129}let v_558: symmetricstate = catch-fail((if success?((if not-caught-fail(v_554) then (if not-caught-fail(v_555) then (if not-caught-fail(v_556) then symmetricstatepack(v_556,v_555,v_554) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_557) && success?(is-true(success?(1-proj-3-tuple(v_557))))) then symmetricstatepack(1-proj-3-tuple(v_557),2-proj-3-tuple(v_557),hash(3-proj-3-tuple(v_557),empty)) else fail-any) else fail-any)) in
        {130}let hs_559: handshakestate = (if not-caught-fail(v_558) then handshakestatepack(v_558,s_550,e_551,rs_552,re_553,empty,true) else fail-any) in
        {131}insert statestore(alice,charlie,sid,statepack_a(hs_559))
    ) | (
        {154}get statestore(=alice,=charlie,=sid,statepack_a(hs_560: handshakestate)) in
        {132}let v_561: bitstring = catch-fail(handshakestateunpack(hs_560)) in
        {133}let v_562: bitstring = catch-fail((empty,empty,empty)) in
        {134}let v_563: key = catch-fail(dhexp(key_e(alice,charlie,sid),g)) in
        {135}let v_564: keypair = catch-fail((if not-caught-fail(v_563) then keypairpack(v_563,key_e(alice,charlie,sid)) else fail-any)) in
        {136}let v_565: bitstring = catch-fail(getpublickey(v_564)) in
        {137}let v_566: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_561))) in
        {138}let v_567: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_561)) then (if (not-caught-fail(v_566) && success?(is-true(success?(1-proj-3-tuple(v_566))))) then symmetricstatepack(1-proj-3-tuple(v_566),2-proj-3-tuple(v_566),hash(3-proj-3-tuple(v_566),v_565)) else fail-any) else fail-any)) in
        {139}let v_568: bitstring = catch-fail(symmetricstateunpack(v_567)) in
        {140}let v_569: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_568))) in
        {141}let v_570: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_569),2-proj-2-tuple(v_569),3-proj-3-tuple(v_568),msg_a(alice,charlie,sid))) in
        {142}let v_571: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_568))) in
        {143}let v_572: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_569))) && success?(1-proj-3-tuple(v_568))) then (if (not-caught-fail(v_571) && success?(is-true(success?(1-proj-2-tuple(v_571))))) then cipherstatepack(1-proj-2-tuple(v_571),increment_nonce(2-proj-2-tuple(v_569))) else fail-any) else fail-any)) in
        {144}let v_573: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_568)) && success?(1-proj-3-tuple(v_568))) then (if (not-caught-fail(v_569) && success?(is-true(success?(1-proj-2-tuple(v_569))))) then (if not-caught-fail(v_570) then (if not-caught-fail(v_572) then (v_572,v_570) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {145}let v_574: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_573),2-proj-3-tuple(v_568),3-proj-3-tuple(v_568)))) in
        {146}let v_575: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_573)) && success?(symmetricstatepack(1-proj-2-tuple(v_573),2-proj-3-tuple(v_568),3-proj-3-tuple(v_568)))) then (if (not-caught-fail(v_574) && success?(is-true(success?(1-proj-3-tuple(v_574))))) then symmetricstatepack(1-proj-3-tuple(v_574),2-proj-3-tuple(v_574),hash(3-proj-3-tuple(v_574),2-proj-2-tuple(v_573))) else fail-any) else fail-any)) in
        {147}let v_576: bitstring = catch-fail((if (not-caught-fail(v_568) && success?(is-true(success?(1-proj-3-tuple(v_568))))) then (if (not-caught-fail(v_573) && success?(is-true(success?(1-proj-2-tuple(v_573))))) then (if not-caught-fail(v_575) then (v_575,2-proj-2-tuple(v_573)) else fail-any) else fail-any) else fail-any)) in
        {148}let v_577: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_576),2-proj-7-tuple(v_561),v_564,4-proj-7-tuple(v_561),5-proj-7-tuple(v_561),6-proj-7-tuple(v_561),7-proj-7-tuple(v_561))) in
        {149}let v_578: bitstring = catch-fail(concat3(v_565,2-proj-3-tuple(v_562),2-proj-2-tuple(v_576))) in
        {150}let (hs_579: handshakestate,message_a_580: bitstring) = (if (not-caught-fail(v_561) && success?(is-true(success?(1-proj-7-tuple(v_561))))) then (if (not-caught-fail(v_562) && success?(is-true(success?(1-proj-3-tuple(v_562))))) then (if not-caught-fail(v_564) then (if not-caught-fail(v_565) then (if not-caught-fail(v_567) then (if (not-caught-fail(v_576) && success?(is-true(success?(1-proj-2-tuple(v_576))))) then (if not-caught-fail(v_577) then (if not-caught-fail(v_578) then (v_577,v_578) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {151}event SendMsg(alice,charlie,stagepack_a(sid),msg_a(alice,charlie,sid));
        {152}insert statestore(alice,charlie,sid,statepack_b(hs_579));
        {153}out(pub, message_a_580)
    ) | (
        {191}get statestore(=alice,=charlie,=sid,statepack_b(hs_581: handshakestate)) in
        {155}in(pub, message_b_582: bitstring);
        {156}let v_583: bitstring = catch-fail(handshakestateunpack(hs_581)) in
        {157}let v_584: bitstring = catch-fail(deconcat3(message_b_582)) in
        {158}let v_585: bool = catch-fail(true) in
        {159}let v_586: key = catch-fail(1-proj-3-tuple(v_584)) in
        {160}let v_587: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_583))) in
        {161}let v_588: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_583)) then (if (not-caught-fail(v_587) && success?(is-true(success?(1-proj-3-tuple(v_587))))) then symmetricstatepack(1-proj-3-tuple(v_587),2-proj-3-tuple(v_587),hash(3-proj-3-tuple(v_587),v_586)) else fail-any) else fail-any)) in
        {162}let v_589: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_583))) in
        {163}let v_590: bitstring = catch-fail(symmetricstateunpack(v_588)) in
        {164}let v_591: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_590),(if success?(3-proj-7-tuple(v_583)) then (if (not-caught-fail(v_589) && success?(is-true(success?(1-proj-2-tuple(v_589))))) then dhexp(2-proj-2-tuple(v_589),v_586) else fail-any) else fail-any))) in
        {165}let v_592: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_590),(if success?(3-proj-7-tuple(v_583)) then (if (not-caught-fail(v_589) && success?(is-true(success?(1-proj-2-tuple(v_589))))) then dhexp(2-proj-2-tuple(v_589),v_586) else fail-any) else fail-any))) in
        {166}let v_593: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_590),(if success?(3-proj-7-tuple(v_583)) then (if (not-caught-fail(v_589) && success?(is-true(success?(1-proj-2-tuple(v_589))))) then dhexp(2-proj-2-tuple(v_589),v_586) else fail-any) else fail-any))) in
        {167}let v_594: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_583)) then (if (not-caught-fail(v_589) && success?(is-true(success?(1-proj-2-tuple(v_589))))) then dhexp(2-proj-2-tuple(v_589),v_586) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_590))) then (if not-caught-fail(v_591) then (if not-caught-fail(v_592) then (if not-caught-fail(v_593) then (v_591,v_592,v_593) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {168}let v_595: symmetricstate = catch-fail((if success?((if success?(3-proj-7-tuple(v_583)) then (if (not-caught-fail(v_589) && success?(is-true(success?(1-proj-2-tuple(v_589))))) then dhexp(2-proj-2-tuple(v_589),v_586) else fail-any) else fail-any)) then (if (not-caught-fail(v_590) && success?(is-true(success?(1-proj-3-tuple(v_590))))) then (if (not-caught-fail(v_594) && success?(is-true(success?(1-proj-3-tuple(v_594))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_594)) then cipherstatepack(2-proj-3-tuple(v_594),minnonce) else fail-any),1-proj-3-tuple(v_594),3-proj-3-tuple(v_590)) else fail-any) else fail-any) else fail-any)) in
        {169}let v_596: bitstring = catch-fail(symmetricstateunpack(v_595)) in
        {170}let v_597: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_596))) in
        {171}let v_598: aead = catch-fail(decrypt(1-proj-2-tuple(v_597),2-proj-2-tuple(v_597),3-proj-3-tuple(v_596),3-proj-3-tuple(v_584))) in
        {172}let v_599: bitstring = catch-fail(aeadunpack(v_598)) in
        {173}let v_600: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_596))) in
        {174}let v_601: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_597))) && success?(1-proj-3-tuple(v_596))) then (if (not-caught-fail(v_600) && success?(is-true(success?(1-proj-2-tuple(v_600))))) then cipherstatepack(1-proj-2-tuple(v_600),increment_nonce(2-proj-2-tuple(v_597))) else fail-any) else fail-any)) in
        {175}let v_602: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_584)) && (success?(3-proj-3-tuple(v_596)) && success?(1-proj-3-tuple(v_596)))) then (if (not-caught-fail(v_597) && success?(is-true(success?(1-proj-2-tuple(v_597))))) then (if not-caught-fail(v_598) then (if (not-caught-fail(v_599) && success?(is-true(success?(1-proj-3-tuple(v_599))))) then (if not-caught-fail(v_601) then (v_601,3-proj-3-tuple(v_599),1-proj-3-tuple(v_599)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {176}let v_603: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_602),2-proj-3-tuple(v_596),3-proj-3-tuple(v_596)))) in
        {177}let v_604: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_584)) && success?(symmetricstatepack(1-proj-3-tuple(v_602),2-proj-3-tuple(v_596),3-proj-3-tuple(v_596)))) then (if (not-caught-fail(v_603) && success?(is-true(success?(1-proj-3-tuple(v_603))))) then symmetricstatepack(1-proj-3-tuple(v_603),2-proj-3-tuple(v_603),hash(3-proj-3-tuple(v_603),3-proj-3-tuple(v_584))) else fail-any) else fail-any)) in
        {178}let v_605: bitstring = catch-fail((if success?(3-proj-3-tuple(v_584)) then (if (not-caught-fail(v_596) && success?(is-true(success?(1-proj-3-tuple(v_596))))) then (if (not-caught-fail(v_602) && success?(is-true(success?(1-proj-3-tuple(v_602))))) then (if not-caught-fail(v_604) then (v_604,2-proj-3-tuple(v_602),3-proj-3-tuple(v_602)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {179}let v_606: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_605),2-proj-7-tuple(v_583),3-proj-7-tuple(v_583),4-proj-7-tuple(v_583),v_586,6-proj-7-tuple(v_583),7-proj-7-tuple(v_583))) in
        {180}let v_607: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_605))) in
        {181}let v_608: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_607),zero)) in
        {182}let v_609: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_607),zero)) in
        {183}let v_610: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_607),zero)) in
        {184}let v_611: bitstring = catch-fail((if success?(2-proj-3-tuple(v_607)) then (if not-caught-fail(v_608) then (if not-caught-fail(v_609) then (if not-caught-fail(v_610) then (v_608,v_609,v_610) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {185}let v_612: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_611)) then cipherstatepack(1-proj-3-tuple(v_611),minnonce) else fail-any)) in
        {186}let v_613: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_611)) then cipherstatepack(2-proj-3-tuple(v_611),minnonce) else fail-any)) in
        {187}let v_614: bitstring = catch-fail((if success?(1-proj-3-tuple(v_605)) then (if (not-caught-fail(v_607) && success?(is-true(success?(1-proj-3-tuple(v_607))))) then (if (not-caught-fail(v_611) && success?(is-true(success?(1-proj-3-tuple(v_611))))) then (if not-caught-fail(v_612) then (if not-caught-fail(v_613) then (1-proj-3-tuple(v_605),v_612,v_613) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {188}let (hs_615: handshakestate,plaintext_b_616: bitstring,valid_617: bool,cs1_618: cipherstate,cs2_619: cipherstate) = (if (not-caught-fail(v_583) && success?(is-true(success?(1-proj-7-tuple(v_583))))) then (if (not-caught-fail(v_584) && success?(is-true(success?(1-proj-3-tuple(v_584))))) then (if not-caught-fail(v_585) then (if not-caught-fail(v_586) then (if not-caught-fail(v_588) then (if not-caught-fail(v_595) then (if (not-caught-fail(v_605) && success?(is-true(success?(1-proj-3-tuple(v_605))))) then (if (v_585 && 3-proj-3-tuple(v_605)) then (if not-caught-fail(v_606) then (if (not-caught-fail(v_614) && success?(is-true(success?(1-proj-3-tuple(v_614))))) then (v_606,2-proj-3-tuple(v_605),true,2-proj-3-tuple(v_614),3-proj-3-tuple(v_614)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {189}event RecvMsg(alice,charlie,stagepack_b(sid),plaintext_b_616);
        {190}insert statestore(alice,charlie,sid,statepack_c(hs_615,cs1_618,cs2_619))
    ) | (
        {192}!
        {211}get statestore(=alice,=charlie,=sid,statepack_c(hs_620: handshakestate,cs1_621: cipherstate,cs2_622: cipherstate)) in
        {193}let hs_623: handshakestate = handshakestatesetcs(hs_620,cs1_621) in
        {194}let v_624: bitstring = catch-fail(handshakestateunpack(hs_623)) in
        {195}let v_625: bitstring = catch-fail((empty,empty,empty)) in
        {196}let v_626: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_624))) in
        {197}let v_627: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_626))) in
        {198}let v_628: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_627),2-proj-2-tuple(v_627),3-proj-3-tuple(v_626),msg_c(alice,charlie,sid))) in
        {199}let v_629: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_626))) in
        {200}let v_630: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_627))) && success?(1-proj-3-tuple(v_626))) then (if (not-caught-fail(v_629) && success?(is-true(success?(1-proj-2-tuple(v_629))))) then cipherstatepack(1-proj-2-tuple(v_629),increment_nonce(2-proj-2-tuple(v_627))) else fail-any) else fail-any)) in
        {201}let v_631: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_626)) && success?(1-proj-3-tuple(v_626))) then (if (not-caught-fail(v_627) && success?(is-true(success?(1-proj-2-tuple(v_627))))) then (if not-caught-fail(v_628) then (if not-caught-fail(v_630) then (v_630,v_628) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {202}let v_632: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_631),2-proj-3-tuple(v_626),3-proj-3-tuple(v_626)))) in
        {203}let v_633: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_631)) && success?(symmetricstatepack(1-proj-2-tuple(v_631),2-proj-3-tuple(v_626),3-proj-3-tuple(v_626)))) then (if (not-caught-fail(v_632) && success?(is-true(success?(1-proj-3-tuple(v_632))))) then symmetricstatepack(1-proj-3-tuple(v_632),2-proj-3-tuple(v_632),hash(3-proj-3-tuple(v_632),2-proj-2-tuple(v_631))) else fail-any) else fail-any)) in
        {204}let v_634: bitstring = catch-fail((if success?(1-proj-7-tuple(v_624)) then (if (not-caught-fail(v_626) && success?(is-true(success?(1-proj-3-tuple(v_626))))) then (if (not-caught-fail(v_631) && success?(is-true(success?(1-proj-2-tuple(v_631))))) then (if not-caught-fail(v_633) then (v_633,2-proj-2-tuple(v_631)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {205}let v_635: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_634),2-proj-7-tuple(v_624),3-proj-7-tuple(v_624),4-proj-7-tuple(v_624),5-proj-7-tuple(v_624),6-proj-7-tuple(v_624),7-proj-7-tuple(v_624))) in
        {206}let v_636: bitstring = catch-fail(concat3(1-proj-3-tuple(v_625),2-proj-3-tuple(v_625),2-proj-2-tuple(v_634))) in
        {207}let (hs_637: handshakestate,message_c_638: bitstring) = (if (not-caught-fail(v_624) && success?(is-true(success?(1-proj-7-tuple(v_624))))) then (if (not-caught-fail(v_625) && success?(is-true(success?(1-proj-3-tuple(v_625))))) then (if (not-caught-fail(v_634) && success?(is-true(success?(1-proj-2-tuple(v_634))))) then (if not-caught-fail(v_635) then (if not-caught-fail(v_636) then (v_635,v_636) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {208}event SendMsg(alice,charlie,stagepack_c(sid),msg_c(alice,charlie,sid));
        {209}insert statestore(alice,charlie,sid,statepack_d(hs_637,handshakestategetcs(hs_637),cs2_622));
        {210}out(pub, message_c_638)
    ) | (
        {212}!
        {232}get statestore(=alice,=charlie,=sid,statepack_d(hs_639: handshakestate,cs1_640: cipherstate,cs2_641: cipherstate)) in
        {213}let hs_642: handshakestate = handshakestatesetcs(hs_639,cs2_641) in
        {214}in(pub, message_d_643: bitstring);
        {215}let v_644: bitstring = catch-fail(handshakestateunpack(hs_642)) in
        {216}let v_645: bitstring = catch-fail(deconcat3(message_d_643)) in
        {217}let v_646: bool = catch-fail(true) in
        {218}let v_647: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_644))) in
        {219}let v_648: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_647))) in
        {220}let v_649: aead = catch-fail(decrypt(1-proj-2-tuple(v_648),2-proj-2-tuple(v_648),3-proj-3-tuple(v_647),3-proj-3-tuple(v_645))) in
        {221}let v_650: bitstring = catch-fail(aeadunpack(v_649)) in
        {222}let v_651: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_647))) in
        {223}let v_652: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_648))) && success?(1-proj-3-tuple(v_647))) then (if (not-caught-fail(v_651) && success?(is-true(success?(1-proj-2-tuple(v_651))))) then cipherstatepack(1-proj-2-tuple(v_651),increment_nonce(2-proj-2-tuple(v_648))) else fail-any) else fail-any)) in
        {224}let v_653: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_645)) && (success?(3-proj-3-tuple(v_647)) && success?(1-proj-3-tuple(v_647)))) then (if (not-caught-fail(v_648) && success?(is-true(success?(1-proj-2-tuple(v_648))))) then (if not-caught-fail(v_649) then (if (not-caught-fail(v_650) && success?(is-true(success?(1-proj-3-tuple(v_650))))) then (if not-caught-fail(v_652) then (v_652,3-proj-3-tuple(v_650),1-proj-3-tuple(v_650)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {225}let v_654: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_653),2-proj-3-tuple(v_647),3-proj-3-tuple(v_647)))) in
        {226}let v_655: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_645)) && success?(symmetricstatepack(1-proj-3-tuple(v_653),2-proj-3-tuple(v_647),3-proj-3-tuple(v_647)))) then (if (not-caught-fail(v_654) && success?(is-true(success?(1-proj-3-tuple(v_654))))) then symmetricstatepack(1-proj-3-tuple(v_654),2-proj-3-tuple(v_654),hash(3-proj-3-tuple(v_654),3-proj-3-tuple(v_645))) else fail-any) else fail-any)) in
        {227}let v_656: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_645)) && success?(1-proj-7-tuple(v_644))) then (if (not-caught-fail(v_647) && success?(is-true(success?(1-proj-3-tuple(v_647))))) then (if (not-caught-fail(v_653) && success?(is-true(success?(1-proj-3-tuple(v_653))))) then (if not-caught-fail(v_655) then (v_655,2-proj-3-tuple(v_653),3-proj-3-tuple(v_653)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {228}let v_657: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_656),2-proj-7-tuple(v_644),3-proj-7-tuple(v_644),4-proj-7-tuple(v_644),5-proj-7-tuple(v_644),6-proj-7-tuple(v_644),7-proj-7-tuple(v_644))) in
        {229}let (hs_658: handshakestate,plaintext_d_659: bitstring,valid_660: bool) = (if (not-caught-fail(v_644) && success?(is-true(success?(1-proj-7-tuple(v_644))))) then (if (not-caught-fail(v_645) && success?(is-true(success?(1-proj-3-tuple(v_645))))) then (if not-caught-fail(v_646) then (if (not-caught-fail(v_656) && success?(is-true(success?(1-proj-3-tuple(v_656))))) then (if (v_646 && 3-proj-3-tuple(v_656)) then (if not-caught-fail(v_657) then (v_657,2-proj-3-tuple(v_656),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {230}event RecvMsg(alice,charlie,stagepack_d(sid),plaintext_d_659);
        {231}event RecvEnd(valid_660)
    ) | (
        {233}event LeakS(phase0,alice);
        {234}out(pub, key_s(alice))
    ) | (
        {235}phase 1;
        {236}event LeakS(phase1,alice);
        {237}out(pub, key_s(alice))
    )
) | (
    {238}let s_661: keypair = keypairpack(empty,empty) in
    (
        {239}let e_662: keypair = keypairpack(empty,empty) in
        {240}let rs_663: key = empty in
        {241}let re_664: key = empty in
        {242}let v_665: bitstring = catch-fail(hash(somename,empty)) in
        {243}let v_666: key = catch-fail(v_665) in
        {244}let v_667: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {245}let v_668: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_665) then (if not-caught-fail(v_666) then (if not-caught-fail(v_667) then symmetricstatepack(v_667,v_666,v_665) else fail-any) else fail-any) else fail-any))) in
        {246}let v_669: symmetricstate = catch-fail((if success?((if not-caught-fail(v_665) then (if not-caught-fail(v_666) then (if not-caught-fail(v_667) then symmetricstatepack(v_667,v_666,v_665) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_668) && success?(is-true(success?(1-proj-3-tuple(v_668))))) then symmetricstatepack(1-proj-3-tuple(v_668),2-proj-3-tuple(v_668),hash(3-proj-3-tuple(v_668),empty)) else fail-any) else fail-any)) in
        {247}let hs_670: handshakestate = (if not-caught-fail(v_669) then handshakestatepack(v_669,s_661,e_662,rs_663,re_664,empty,false) else fail-any) in
        {248}insert statestore(bob,alice,sid,statepack_a(hs_670))
    ) | (
        {270}get statestore(=bob,=alice,=sid,statepack_a(hs_671: handshakestate)) in
        {249}in(pub, message_a_672: bitstring);
        {250}let v_673: bitstring = catch-fail(handshakestateunpack(hs_671)) in
        {251}let v_674: bitstring = catch-fail(deconcat3(message_a_672)) in
        {252}let v_675: bool = catch-fail(true) in
        {253}let v_676: key = catch-fail(1-proj-3-tuple(v_674)) in
        {254}let v_677: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_673))) in
        {255}let v_678: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_673)) then (if (not-caught-fail(v_677) && success?(is-true(success?(1-proj-3-tuple(v_677))))) then symmetricstatepack(1-proj-3-tuple(v_677),2-proj-3-tuple(v_677),hash(3-proj-3-tuple(v_677),v_676)) else fail-any) else fail-any)) in
        {256}let v_679: bitstring = catch-fail(symmetricstateunpack(v_678)) in
        {257}let v_680: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_679))) in
        {258}let v_681: aead = catch-fail(decrypt(1-proj-2-tuple(v_680),2-proj-2-tuple(v_680),3-proj-3-tuple(v_679),3-proj-3-tuple(v_674))) in
        {259}let v_682: bitstring = catch-fail(aeadunpack(v_681)) in
        {260}let v_683: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_679))) in
        {261}let v_684: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_680))) && success?(1-proj-3-tuple(v_679))) then (if (not-caught-fail(v_683) && success?(is-true(success?(1-proj-2-tuple(v_683))))) then cipherstatepack(1-proj-2-tuple(v_683),increment_nonce(2-proj-2-tuple(v_680))) else fail-any) else fail-any)) in
        {262}let v_685: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_674)) && (success?(3-proj-3-tuple(v_679)) && success?(1-proj-3-tuple(v_679)))) then (if (not-caught-fail(v_680) && success?(is-true(success?(1-proj-2-tuple(v_680))))) then (if not-caught-fail(v_681) then (if (not-caught-fail(v_682) && success?(is-true(success?(1-proj-3-tuple(v_682))))) then (if not-caught-fail(v_684) then (v_684,3-proj-3-tuple(v_682),1-proj-3-tuple(v_682)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {263}let v_686: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_685),2-proj-3-tuple(v_679),3-proj-3-tuple(v_679)))) in
        {264}let v_687: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_674)) && success?(symmetricstatepack(1-proj-3-tuple(v_685),2-proj-3-tuple(v_679),3-proj-3-tuple(v_679)))) then (if (not-caught-fail(v_686) && success?(is-true(success?(1-proj-3-tuple(v_686))))) then symmetricstatepack(1-proj-3-tuple(v_686),2-proj-3-tuple(v_686),hash(3-proj-3-tuple(v_686),3-proj-3-tuple(v_674))) else fail-any) else fail-any)) in
        {265}let v_688: bitstring = catch-fail((if success?(3-proj-3-tuple(v_674)) then (if (not-caught-fail(v_679) && success?(is-true(success?(1-proj-3-tuple(v_679))))) then (if (not-caught-fail(v_685) && success?(is-true(success?(1-proj-3-tuple(v_685))))) then (if not-caught-fail(v_687) then (v_687,2-proj-3-tuple(v_685),3-proj-3-tuple(v_685)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {266}let v_689: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_688),2-proj-7-tuple(v_673),3-proj-7-tuple(v_673),4-proj-7-tuple(v_673),v_676,6-proj-7-tuple(v_673),7-proj-7-tuple(v_673))) in
        {267}let (hs_690: handshakestate,plaintext_a: bitstring,valid_691: bool) = (if (not-caught-fail(v_673) && success?(is-true(success?(1-proj-7-tuple(v_673))))) then (if (not-caught-fail(v_674) && success?(is-true(success?(1-proj-3-tuple(v_674))))) then (if not-caught-fail(v_675) then (if not-caught-fail(v_676) then (if not-caught-fail(v_678) then (if (not-caught-fail(v_688) && success?(is-true(success?(1-proj-3-tuple(v_688))))) then (if (v_675 && 3-proj-3-tuple(v_688)) then (if not-caught-fail(v_689) then (v_689,2-proj-3-tuple(v_688),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {268}event RecvMsg(bob,alice,stagepack_a(sid),plaintext_a);
        {269}insert statestore(bob,alice,sid,statepack_b(hs_690))
    ) | (
        {308}get statestore(=bob,=alice,=sid,statepack_b(hs_692: handshakestate)) in
        {271}let v_693: bitstring = catch-fail(handshakestateunpack(hs_692)) in
        {272}let v_694: bitstring = catch-fail((empty,empty,empty)) in
        {273}let v_695: key = catch-fail(dhexp(key_e(bob,alice,sid),g)) in
        {274}let v_696: keypair = catch-fail((if not-caught-fail(v_695) then keypairpack(v_695,key_e(bob,alice,sid)) else fail-any)) in
        {275}let v_697: bitstring = catch-fail(getpublickey(v_696)) in
        {276}let v_698: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_693))) in
        {277}let v_699: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_693)) then (if (not-caught-fail(v_698) && success?(is-true(success?(1-proj-3-tuple(v_698))))) then symmetricstatepack(1-proj-3-tuple(v_698),2-proj-3-tuple(v_698),hash(3-proj-3-tuple(v_698),v_697)) else fail-any) else fail-any)) in
        {278}let v_700: bitstring = catch-fail(keypairunpack(v_696)) in
        {279}let v_701: bitstring = catch-fail(symmetricstateunpack(v_699)) in
        {280}let v_702: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_701),(if success?(5-proj-7-tuple(v_693)) then (if (not-caught-fail(v_700) && success?(is-true(success?(1-proj-2-tuple(v_700))))) then dhexp(2-proj-2-tuple(v_700),5-proj-7-tuple(v_693)) else fail-any) else fail-any))) in
        {281}let v_703: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_701),(if success?(5-proj-7-tuple(v_693)) then (if (not-caught-fail(v_700) && success?(is-true(success?(1-proj-2-tuple(v_700))))) then dhexp(2-proj-2-tuple(v_700),5-proj-7-tuple(v_693)) else fail-any) else fail-any))) in
        {282}let v_704: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_701),(if success?(5-proj-7-tuple(v_693)) then (if (not-caught-fail(v_700) && success?(is-true(success?(1-proj-2-tuple(v_700))))) then dhexp(2-proj-2-tuple(v_700),5-proj-7-tuple(v_693)) else fail-any) else fail-any))) in
        {283}let v_705: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_693)) then (if (not-caught-fail(v_700) && success?(is-true(success?(1-proj-2-tuple(v_700))))) then dhexp(2-proj-2-tuple(v_700),5-proj-7-tuple(v_693)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_701))) then (if not-caught-fail(v_702) then (if not-caught-fail(v_703) then (if not-caught-fail(v_704) then (v_702,v_703,v_704) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {284}let v_706: symmetricstate = catch-fail((if success?((if success?(5-proj-7-tuple(v_693)) then (if (not-caught-fail(v_700) && success?(is-true(success?(1-proj-2-tuple(v_700))))) then dhexp(2-proj-2-tuple(v_700),5-proj-7-tuple(v_693)) else fail-any) else fail-any)) then (if (not-caught-fail(v_701) && success?(is-true(success?(1-proj-3-tuple(v_701))))) then (if (not-caught-fail(v_705) && success?(is-true(success?(1-proj-3-tuple(v_705))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_705)) then cipherstatepack(2-proj-3-tuple(v_705),minnonce) else fail-any),1-proj-3-tuple(v_705),3-proj-3-tuple(v_701)) else fail-any) else fail-any) else fail-any)) in
        {285}let v_707: bitstring = catch-fail(symmetricstateunpack(v_706)) in
        {286}let v_708: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_707))) in
        {287}let v_709: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_708),2-proj-2-tuple(v_708),3-proj-3-tuple(v_707),msg_b(bob,alice,sid))) in
        {288}let v_710: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_707))) in
        {289}let v_711: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_708))) && success?(1-proj-3-tuple(v_707))) then (if (not-caught-fail(v_710) && success?(is-true(success?(1-proj-2-tuple(v_710))))) then cipherstatepack(1-proj-2-tuple(v_710),increment_nonce(2-proj-2-tuple(v_708))) else fail-any) else fail-any)) in
        {290}let v_712: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_707)) && success?(1-proj-3-tuple(v_707))) then (if (not-caught-fail(v_708) && success?(is-true(success?(1-proj-2-tuple(v_708))))) then (if not-caught-fail(v_709) then (if not-caught-fail(v_711) then (v_711,v_709) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {291}let v_713: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_712),2-proj-3-tuple(v_707),3-proj-3-tuple(v_707)))) in
        {292}let v_714: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_712)) && success?(symmetricstatepack(1-proj-2-tuple(v_712),2-proj-3-tuple(v_707),3-proj-3-tuple(v_707)))) then (if (not-caught-fail(v_713) && success?(is-true(success?(1-proj-3-tuple(v_713))))) then symmetricstatepack(1-proj-3-tuple(v_713),2-proj-3-tuple(v_713),hash(3-proj-3-tuple(v_713),2-proj-2-tuple(v_712))) else fail-any) else fail-any)) in
        {293}let v_715: bitstring = catch-fail((if (not-caught-fail(v_707) && success?(is-true(success?(1-proj-3-tuple(v_707))))) then (if (not-caught-fail(v_712) && success?(is-true(success?(1-proj-2-tuple(v_712))))) then (if not-caught-fail(v_714) then (v_714,2-proj-2-tuple(v_712)) else fail-any) else fail-any) else fail-any)) in
        {294}let v_716: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_715),2-proj-7-tuple(v_693),v_696,4-proj-7-tuple(v_693),5-proj-7-tuple(v_693),6-proj-7-tuple(v_693),7-proj-7-tuple(v_693))) in
        {295}let v_717: bitstring = catch-fail(concat3(v_697,2-proj-3-tuple(v_694),2-proj-2-tuple(v_715))) in
        {296}let v_718: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_715))) in
        {297}let v_719: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_718),zero)) in
        {298}let v_720: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_718),zero)) in
        {299}let v_721: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_718),zero)) in
        {300}let v_722: bitstring = catch-fail((if success?(2-proj-3-tuple(v_718)) then (if not-caught-fail(v_719) then (if not-caught-fail(v_720) then (if not-caught-fail(v_721) then (v_719,v_720,v_721) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {301}let v_723: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_722)) then cipherstatepack(1-proj-3-tuple(v_722),minnonce) else fail-any)) in
        {302}let v_724: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_722)) then cipherstatepack(2-proj-3-tuple(v_722),minnonce) else fail-any)) in
        {303}let v_725: bitstring = catch-fail((if success?(1-proj-2-tuple(v_715)) then (if (not-caught-fail(v_718) && success?(is-true(success?(1-proj-3-tuple(v_718))))) then (if (not-caught-fail(v_722) && success?(is-true(success?(1-proj-3-tuple(v_722))))) then (if not-caught-fail(v_723) then (if not-caught-fail(v_724) then (1-proj-2-tuple(v_715),v_723,v_724) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {304}let (hs_726: handshakestate,message_b_727: bitstring,cs1_728: cipherstate,cs2_729: cipherstate) = (if (not-caught-fail(v_693) && success?(is-true(success?(1-proj-7-tuple(v_693))))) then (if (not-caught-fail(v_694) && success?(is-true(success?(1-proj-3-tuple(v_694))))) then (if not-caught-fail(v_696) then (if not-caught-fail(v_697) then (if not-caught-fail(v_699) then (if not-caught-fail(v_706) then (if (not-caught-fail(v_715) && success?(is-true(success?(1-proj-2-tuple(v_715))))) then (if not-caught-fail(v_716) then (if not-caught-fail(v_717) then (if (not-caught-fail(v_725) && success?(is-true(success?(1-proj-3-tuple(v_725))))) then (v_716,v_717,2-proj-3-tuple(v_725),3-proj-3-tuple(v_725)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {305}event SendMsg(bob,alice,stagepack_b(sid),msg_b(bob,alice,sid));
        {306}insert statestore(bob,alice,sid,statepack_c(hs_726,cs1_728,cs2_729));
        {307}out(pub, message_b_727)
    ) | (
        {309}!
        {329}get statestore(=bob,=alice,=sid,statepack_c(hs_730: handshakestate,cs1_731: cipherstate,cs2_732: cipherstate)) in
        {310}let hs_733: handshakestate = handshakestatesetcs(hs_730,cs1_731) in
        {311}in(pub, message_c_734: bitstring);
        {312}let v_735: bitstring = catch-fail(handshakestateunpack(hs_733)) in
        {313}let v_736: bitstring = catch-fail(deconcat3(message_c_734)) in
        {314}let v_737: bool = catch-fail(true) in
        {315}let v_738: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_735))) in
        {316}let v_739: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_738))) in
        {317}let v_740: aead = catch-fail(decrypt(1-proj-2-tuple(v_739),2-proj-2-tuple(v_739),3-proj-3-tuple(v_738),3-proj-3-tuple(v_736))) in
        {318}let v_741: bitstring = catch-fail(aeadunpack(v_740)) in
        {319}let v_742: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_738))) in
        {320}let v_743: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_739))) && success?(1-proj-3-tuple(v_738))) then (if (not-caught-fail(v_742) && success?(is-true(success?(1-proj-2-tuple(v_742))))) then cipherstatepack(1-proj-2-tuple(v_742),increment_nonce(2-proj-2-tuple(v_739))) else fail-any) else fail-any)) in
        {321}let v_744: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_736)) && (success?(3-proj-3-tuple(v_738)) && success?(1-proj-3-tuple(v_738)))) then (if (not-caught-fail(v_739) && success?(is-true(success?(1-proj-2-tuple(v_739))))) then (if not-caught-fail(v_740) then (if (not-caught-fail(v_741) && success?(is-true(success?(1-proj-3-tuple(v_741))))) then (if not-caught-fail(v_743) then (v_743,3-proj-3-tuple(v_741),1-proj-3-tuple(v_741)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {322}let v_745: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_744),2-proj-3-tuple(v_738),3-proj-3-tuple(v_738)))) in
        {323}let v_746: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_736)) && success?(symmetricstatepack(1-proj-3-tuple(v_744),2-proj-3-tuple(v_738),3-proj-3-tuple(v_738)))) then (if (not-caught-fail(v_745) && success?(is-true(success?(1-proj-3-tuple(v_745))))) then symmetricstatepack(1-proj-3-tuple(v_745),2-proj-3-tuple(v_745),hash(3-proj-3-tuple(v_745),3-proj-3-tuple(v_736))) else fail-any) else fail-any)) in
        {324}let v_747: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_736)) && success?(1-proj-7-tuple(v_735))) then (if (not-caught-fail(v_738) && success?(is-true(success?(1-proj-3-tuple(v_738))))) then (if (not-caught-fail(v_744) && success?(is-true(success?(1-proj-3-tuple(v_744))))) then (if not-caught-fail(v_746) then (v_746,2-proj-3-tuple(v_744),3-proj-3-tuple(v_744)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {325}let v_748: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_747),2-proj-7-tuple(v_735),3-proj-7-tuple(v_735),4-proj-7-tuple(v_735),5-proj-7-tuple(v_735),6-proj-7-tuple(v_735),7-proj-7-tuple(v_735))) in
        {326}let (hs_749: handshakestate,plaintext_c: bitstring,valid_750: bool) = (if (not-caught-fail(v_735) && success?(is-true(success?(1-proj-7-tuple(v_735))))) then (if (not-caught-fail(v_736) && success?(is-true(success?(1-proj-3-tuple(v_736))))) then (if not-caught-fail(v_737) then (if (not-caught-fail(v_747) && success?(is-true(success?(1-proj-3-tuple(v_747))))) then (if (v_737 && 3-proj-3-tuple(v_747)) then (if not-caught-fail(v_748) then (v_748,2-proj-3-tuple(v_747),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {327}event RecvMsg(bob,alice,stagepack_c(sid),plaintext_c);
        {328}insert statestore(bob,alice,sid,statepack_d(hs_749,handshakestategetcs(hs_749),cs2_732))
    ) | (
        {330}!
        {348}get statestore(=bob,=alice,=sid,statepack_d(hs_751: handshakestate,cs1_752: cipherstate,cs2_753: cipherstate)) in
        {331}let hs_754: handshakestate = handshakestatesetcs(hs_751,cs2_753) in
        {332}let v_755: bitstring = catch-fail(handshakestateunpack(hs_754)) in
        {333}let v_756: bitstring = catch-fail((empty,empty,empty)) in
        {334}let v_757: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_755))) in
        {335}let v_758: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_757))) in
        {336}let v_759: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_758),2-proj-2-tuple(v_758),3-proj-3-tuple(v_757),msg_d(bob,alice,sid))) in
        {337}let v_760: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_757))) in
        {338}let v_761: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_758))) && success?(1-proj-3-tuple(v_757))) then (if (not-caught-fail(v_760) && success?(is-true(success?(1-proj-2-tuple(v_760))))) then cipherstatepack(1-proj-2-tuple(v_760),increment_nonce(2-proj-2-tuple(v_758))) else fail-any) else fail-any)) in
        {339}let v_762: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_757)) && success?(1-proj-3-tuple(v_757))) then (if (not-caught-fail(v_758) && success?(is-true(success?(1-proj-2-tuple(v_758))))) then (if not-caught-fail(v_759) then (if not-caught-fail(v_761) then (v_761,v_759) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {340}let v_763: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_762),2-proj-3-tuple(v_757),3-proj-3-tuple(v_757)))) in
        {341}let v_764: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_762)) && success?(symmetricstatepack(1-proj-2-tuple(v_762),2-proj-3-tuple(v_757),3-proj-3-tuple(v_757)))) then (if (not-caught-fail(v_763) && success?(is-true(success?(1-proj-3-tuple(v_763))))) then symmetricstatepack(1-proj-3-tuple(v_763),2-proj-3-tuple(v_763),hash(3-proj-3-tuple(v_763),2-proj-2-tuple(v_762))) else fail-any) else fail-any)) in
        {342}let v_765: bitstring = catch-fail((if success?(1-proj-7-tuple(v_755)) then (if (not-caught-fail(v_757) && success?(is-true(success?(1-proj-3-tuple(v_757))))) then (if (not-caught-fail(v_762) && success?(is-true(success?(1-proj-2-tuple(v_762))))) then (if not-caught-fail(v_764) then (v_764,2-proj-2-tuple(v_762)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {343}let v_766: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_765),2-proj-7-tuple(v_755),3-proj-7-tuple(v_755),4-proj-7-tuple(v_755),5-proj-7-tuple(v_755),6-proj-7-tuple(v_755),7-proj-7-tuple(v_755))) in
        {344}let v_767: bitstring = catch-fail(concat3(1-proj-3-tuple(v_756),2-proj-3-tuple(v_756),2-proj-2-tuple(v_765))) in
        {345}let (hs_768: handshakestate,message_d_769: bitstring) = (if (not-caught-fail(v_755) && success?(is-true(success?(1-proj-7-tuple(v_755))))) then (if (not-caught-fail(v_756) && success?(is-true(success?(1-proj-3-tuple(v_756))))) then (if (not-caught-fail(v_765) && success?(is-true(success?(1-proj-2-tuple(v_765))))) then (if not-caught-fail(v_766) then (if not-caught-fail(v_767) then (v_766,v_767) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {346}event SendMsg(bob,alice,stagepack_d(sid),msg_d(bob,alice,sid));
        {347}out(pub, message_d_769)
    ) | (
        {349}event LeakS(phase0,bob);
        {350}out(pub, key_s(bob))
    ) | (
        {351}phase 1;
        {352}event LeakS(phase1,bob);
        {353}out(pub, key_s(bob))
    )
) | (
    {354}let s_770: keypair = keypairpack(empty,empty) in
    (
        {355}let e_771: keypair = keypairpack(empty,empty) in
        {356}let rs_772: key = empty in
        {357}let re_773: key = empty in
        {358}let v_774: bitstring = catch-fail(hash(somename,empty)) in
        {359}let v_775: key = catch-fail(v_774) in
        {360}let v_776: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {361}let v_777: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_774) then (if not-caught-fail(v_775) then (if not-caught-fail(v_776) then symmetricstatepack(v_776,v_775,v_774) else fail-any) else fail-any) else fail-any))) in
        {362}let v_778: symmetricstate = catch-fail((if success?((if not-caught-fail(v_774) then (if not-caught-fail(v_775) then (if not-caught-fail(v_776) then symmetricstatepack(v_776,v_775,v_774) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_777) && success?(is-true(success?(1-proj-3-tuple(v_777))))) then symmetricstatepack(1-proj-3-tuple(v_777),2-proj-3-tuple(v_777),hash(3-proj-3-tuple(v_777),empty)) else fail-any) else fail-any)) in
        {363}let hs_779: handshakestate = (if not-caught-fail(v_778) then handshakestatepack(v_778,s_770,e_771,rs_772,re_773,empty,false) else fail-any) in
        {364}insert statestore(bob,charlie,sid,statepack_a(hs_779))
    ) | (
        {386}get statestore(=bob,=charlie,=sid,statepack_a(hs_780: handshakestate)) in
        {365}in(pub, message_a_781: bitstring);
        {366}let v_782: bitstring = catch-fail(handshakestateunpack(hs_780)) in
        {367}let v_783: bitstring = catch-fail(deconcat3(message_a_781)) in
        {368}let v_784: bool = catch-fail(true) in
        {369}let v_785: key = catch-fail(1-proj-3-tuple(v_783)) in
        {370}let v_786: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_782))) in
        {371}let v_787: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_782)) then (if (not-caught-fail(v_786) && success?(is-true(success?(1-proj-3-tuple(v_786))))) then symmetricstatepack(1-proj-3-tuple(v_786),2-proj-3-tuple(v_786),hash(3-proj-3-tuple(v_786),v_785)) else fail-any) else fail-any)) in
        {372}let v_788: bitstring = catch-fail(symmetricstateunpack(v_787)) in
        {373}let v_789: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_788))) in
        {374}let v_790: aead = catch-fail(decrypt(1-proj-2-tuple(v_789),2-proj-2-tuple(v_789),3-proj-3-tuple(v_788),3-proj-3-tuple(v_783))) in
        {375}let v_791: bitstring = catch-fail(aeadunpack(v_790)) in
        {376}let v_792: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_788))) in
        {377}let v_793: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_789))) && success?(1-proj-3-tuple(v_788))) then (if (not-caught-fail(v_792) && success?(is-true(success?(1-proj-2-tuple(v_792))))) then cipherstatepack(1-proj-2-tuple(v_792),increment_nonce(2-proj-2-tuple(v_789))) else fail-any) else fail-any)) in
        {378}let v_794: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_783)) && (success?(3-proj-3-tuple(v_788)) && success?(1-proj-3-tuple(v_788)))) then (if (not-caught-fail(v_789) && success?(is-true(success?(1-proj-2-tuple(v_789))))) then (if not-caught-fail(v_790) then (if (not-caught-fail(v_791) && success?(is-true(success?(1-proj-3-tuple(v_791))))) then (if not-caught-fail(v_793) then (v_793,3-proj-3-tuple(v_791),1-proj-3-tuple(v_791)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {379}let v_795: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_794),2-proj-3-tuple(v_788),3-proj-3-tuple(v_788)))) in
        {380}let v_796: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_783)) && success?(symmetricstatepack(1-proj-3-tuple(v_794),2-proj-3-tuple(v_788),3-proj-3-tuple(v_788)))) then (if (not-caught-fail(v_795) && success?(is-true(success?(1-proj-3-tuple(v_795))))) then symmetricstatepack(1-proj-3-tuple(v_795),2-proj-3-tuple(v_795),hash(3-proj-3-tuple(v_795),3-proj-3-tuple(v_783))) else fail-any) else fail-any)) in
        {381}let v_797: bitstring = catch-fail((if success?(3-proj-3-tuple(v_783)) then (if (not-caught-fail(v_788) && success?(is-true(success?(1-proj-3-tuple(v_788))))) then (if (not-caught-fail(v_794) && success?(is-true(success?(1-proj-3-tuple(v_794))))) then (if not-caught-fail(v_796) then (v_796,2-proj-3-tuple(v_794),3-proj-3-tuple(v_794)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {382}let v_798: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_797),2-proj-7-tuple(v_782),3-proj-7-tuple(v_782),4-proj-7-tuple(v_782),v_785,6-proj-7-tuple(v_782),7-proj-7-tuple(v_782))) in
        {383}let (hs_799: handshakestate,plaintext_a_800: bitstring,valid_801: bool) = (if (not-caught-fail(v_782) && success?(is-true(success?(1-proj-7-tuple(v_782))))) then (if (not-caught-fail(v_783) && success?(is-true(success?(1-proj-3-tuple(v_783))))) then (if not-caught-fail(v_784) then (if not-caught-fail(v_785) then (if not-caught-fail(v_787) then (if (not-caught-fail(v_797) && success?(is-true(success?(1-proj-3-tuple(v_797))))) then (if (v_784 && 3-proj-3-tuple(v_797)) then (if not-caught-fail(v_798) then (v_798,2-proj-3-tuple(v_797),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {384}event RecvMsg(bob,charlie,stagepack_a(sid),plaintext_a_800);
        {385}insert statestore(bob,charlie,sid,statepack_b(hs_799))
    ) | (
        {424}get statestore(=bob,=charlie,=sid,statepack_b(hs_802: handshakestate)) in
        {387}let v_803: bitstring = catch-fail(handshakestateunpack(hs_802)) in
        {388}let v_804: bitstring = catch-fail((empty,empty,empty)) in
        {389}let v_805: key = catch-fail(dhexp(key_e(bob,charlie,sid),g)) in
        {390}let v_806: keypair = catch-fail((if not-caught-fail(v_805) then keypairpack(v_805,key_e(bob,charlie,sid)) else fail-any)) in
        {391}let v_807: bitstring = catch-fail(getpublickey(v_806)) in
        {392}let v_808: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_803))) in
        {393}let v_809: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_803)) then (if (not-caught-fail(v_808) && success?(is-true(success?(1-proj-3-tuple(v_808))))) then symmetricstatepack(1-proj-3-tuple(v_808),2-proj-3-tuple(v_808),hash(3-proj-3-tuple(v_808),v_807)) else fail-any) else fail-any)) in
        {394}let v_810: bitstring = catch-fail(keypairunpack(v_806)) in
        {395}let v_811: bitstring = catch-fail(symmetricstateunpack(v_809)) in
        {396}let v_812: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_811),(if success?(5-proj-7-tuple(v_803)) then (if (not-caught-fail(v_810) && success?(is-true(success?(1-proj-2-tuple(v_810))))) then dhexp(2-proj-2-tuple(v_810),5-proj-7-tuple(v_803)) else fail-any) else fail-any))) in
        {397}let v_813: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_811),(if success?(5-proj-7-tuple(v_803)) then (if (not-caught-fail(v_810) && success?(is-true(success?(1-proj-2-tuple(v_810))))) then dhexp(2-proj-2-tuple(v_810),5-proj-7-tuple(v_803)) else fail-any) else fail-any))) in
        {398}let v_814: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_811),(if success?(5-proj-7-tuple(v_803)) then (if (not-caught-fail(v_810) && success?(is-true(success?(1-proj-2-tuple(v_810))))) then dhexp(2-proj-2-tuple(v_810),5-proj-7-tuple(v_803)) else fail-any) else fail-any))) in
        {399}let v_815: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_803)) then (if (not-caught-fail(v_810) && success?(is-true(success?(1-proj-2-tuple(v_810))))) then dhexp(2-proj-2-tuple(v_810),5-proj-7-tuple(v_803)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_811))) then (if not-caught-fail(v_812) then (if not-caught-fail(v_813) then (if not-caught-fail(v_814) then (v_812,v_813,v_814) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {400}let v_816: symmetricstate = catch-fail((if success?((if success?(5-proj-7-tuple(v_803)) then (if (not-caught-fail(v_810) && success?(is-true(success?(1-proj-2-tuple(v_810))))) then dhexp(2-proj-2-tuple(v_810),5-proj-7-tuple(v_803)) else fail-any) else fail-any)) then (if (not-caught-fail(v_811) && success?(is-true(success?(1-proj-3-tuple(v_811))))) then (if (not-caught-fail(v_815) && success?(is-true(success?(1-proj-3-tuple(v_815))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_815)) then cipherstatepack(2-proj-3-tuple(v_815),minnonce) else fail-any),1-proj-3-tuple(v_815),3-proj-3-tuple(v_811)) else fail-any) else fail-any) else fail-any)) in
        {401}let v_817: bitstring = catch-fail(symmetricstateunpack(v_816)) in
        {402}let v_818: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_817))) in
        {403}let v_819: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_818),2-proj-2-tuple(v_818),3-proj-3-tuple(v_817),msg_b(bob,charlie,sid))) in
        {404}let v_820: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_817))) in
        {405}let v_821: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_818))) && success?(1-proj-3-tuple(v_817))) then (if (not-caught-fail(v_820) && success?(is-true(success?(1-proj-2-tuple(v_820))))) then cipherstatepack(1-proj-2-tuple(v_820),increment_nonce(2-proj-2-tuple(v_818))) else fail-any) else fail-any)) in
        {406}let v_822: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_817)) && success?(1-proj-3-tuple(v_817))) then (if (not-caught-fail(v_818) && success?(is-true(success?(1-proj-2-tuple(v_818))))) then (if not-caught-fail(v_819) then (if not-caught-fail(v_821) then (v_821,v_819) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {407}let v_823: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_822),2-proj-3-tuple(v_817),3-proj-3-tuple(v_817)))) in
        {408}let v_824: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_822)) && success?(symmetricstatepack(1-proj-2-tuple(v_822),2-proj-3-tuple(v_817),3-proj-3-tuple(v_817)))) then (if (not-caught-fail(v_823) && success?(is-true(success?(1-proj-3-tuple(v_823))))) then symmetricstatepack(1-proj-3-tuple(v_823),2-proj-3-tuple(v_823),hash(3-proj-3-tuple(v_823),2-proj-2-tuple(v_822))) else fail-any) else fail-any)) in
        {409}let v_825: bitstring = catch-fail((if (not-caught-fail(v_817) && success?(is-true(success?(1-proj-3-tuple(v_817))))) then (if (not-caught-fail(v_822) && success?(is-true(success?(1-proj-2-tuple(v_822))))) then (if not-caught-fail(v_824) then (v_824,2-proj-2-tuple(v_822)) else fail-any) else fail-any) else fail-any)) in
        {410}let v_826: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_825),2-proj-7-tuple(v_803),v_806,4-proj-7-tuple(v_803),5-proj-7-tuple(v_803),6-proj-7-tuple(v_803),7-proj-7-tuple(v_803))) in
        {411}let v_827: bitstring = catch-fail(concat3(v_807,2-proj-3-tuple(v_804),2-proj-2-tuple(v_825))) in
        {412}let v_828: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_825))) in
        {413}let v_829: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_828),zero)) in
        {414}let v_830: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_828),zero)) in
        {415}let v_831: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_828),zero)) in
        {416}let v_832: bitstring = catch-fail((if success?(2-proj-3-tuple(v_828)) then (if not-caught-fail(v_829) then (if not-caught-fail(v_830) then (if not-caught-fail(v_831) then (v_829,v_830,v_831) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {417}let v_833: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_832)) then cipherstatepack(1-proj-3-tuple(v_832),minnonce) else fail-any)) in
        {418}let v_834: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_832)) then cipherstatepack(2-proj-3-tuple(v_832),minnonce) else fail-any)) in
        {419}let v_835: bitstring = catch-fail((if success?(1-proj-2-tuple(v_825)) then (if (not-caught-fail(v_828) && success?(is-true(success?(1-proj-3-tuple(v_828))))) then (if (not-caught-fail(v_832) && success?(is-true(success?(1-proj-3-tuple(v_832))))) then (if not-caught-fail(v_833) then (if not-caught-fail(v_834) then (1-proj-2-tuple(v_825),v_833,v_834) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {420}let (hs_836: handshakestate,message_b_837: bitstring,cs1_838: cipherstate,cs2_839: cipherstate) = (if (not-caught-fail(v_803) && success?(is-true(success?(1-proj-7-tuple(v_803))))) then (if (not-caught-fail(v_804) && success?(is-true(success?(1-proj-3-tuple(v_804))))) then (if not-caught-fail(v_806) then (if not-caught-fail(v_807) then (if not-caught-fail(v_809) then (if not-caught-fail(v_816) then (if (not-caught-fail(v_825) && success?(is-true(success?(1-proj-2-tuple(v_825))))) then (if not-caught-fail(v_826) then (if not-caught-fail(v_827) then (if (not-caught-fail(v_835) && success?(is-true(success?(1-proj-3-tuple(v_835))))) then (v_826,v_827,2-proj-3-tuple(v_835),3-proj-3-tuple(v_835)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {421}event SendMsg(bob,charlie,stagepack_b(sid),msg_b(bob,charlie,sid));
        {422}insert statestore(bob,charlie,sid,statepack_c(hs_836,cs1_838,cs2_839));
        {423}out(pub, message_b_837)
    ) | (
        {425}!
        {445}get statestore(=bob,=charlie,=sid,statepack_c(hs_840: handshakestate,cs1_841: cipherstate,cs2_842: cipherstate)) in
        {426}let hs_843: handshakestate = handshakestatesetcs(hs_840,cs1_841) in
        {427}in(pub, message_c_844: bitstring);
        {428}let v_845: bitstring = catch-fail(handshakestateunpack(hs_843)) in
        {429}let v_846: bitstring = catch-fail(deconcat3(message_c_844)) in
        {430}let v_847: bool = catch-fail(true) in
        {431}let v_848: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_845))) in
        {432}let v_849: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_848))) in
        {433}let v_850: aead = catch-fail(decrypt(1-proj-2-tuple(v_849),2-proj-2-tuple(v_849),3-proj-3-tuple(v_848),3-proj-3-tuple(v_846))) in
        {434}let v_851: bitstring = catch-fail(aeadunpack(v_850)) in
        {435}let v_852: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_848))) in
        {436}let v_853: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_849))) && success?(1-proj-3-tuple(v_848))) then (if (not-caught-fail(v_852) && success?(is-true(success?(1-proj-2-tuple(v_852))))) then cipherstatepack(1-proj-2-tuple(v_852),increment_nonce(2-proj-2-tuple(v_849))) else fail-any) else fail-any)) in
        {437}let v_854: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_846)) && (success?(3-proj-3-tuple(v_848)) && success?(1-proj-3-tuple(v_848)))) then (if (not-caught-fail(v_849) && success?(is-true(success?(1-proj-2-tuple(v_849))))) then (if not-caught-fail(v_850) then (if (not-caught-fail(v_851) && success?(is-true(success?(1-proj-3-tuple(v_851))))) then (if not-caught-fail(v_853) then (v_853,3-proj-3-tuple(v_851),1-proj-3-tuple(v_851)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {438}let v_855: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_854),2-proj-3-tuple(v_848),3-proj-3-tuple(v_848)))) in
        {439}let v_856: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_846)) && success?(symmetricstatepack(1-proj-3-tuple(v_854),2-proj-3-tuple(v_848),3-proj-3-tuple(v_848)))) then (if (not-caught-fail(v_855) && success?(is-true(success?(1-proj-3-tuple(v_855))))) then symmetricstatepack(1-proj-3-tuple(v_855),2-proj-3-tuple(v_855),hash(3-proj-3-tuple(v_855),3-proj-3-tuple(v_846))) else fail-any) else fail-any)) in
        {440}let v_857: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_846)) && success?(1-proj-7-tuple(v_845))) then (if (not-caught-fail(v_848) && success?(is-true(success?(1-proj-3-tuple(v_848))))) then (if (not-caught-fail(v_854) && success?(is-true(success?(1-proj-3-tuple(v_854))))) then (if not-caught-fail(v_856) then (v_856,2-proj-3-tuple(v_854),3-proj-3-tuple(v_854)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {441}let v_858: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_857),2-proj-7-tuple(v_845),3-proj-7-tuple(v_845),4-proj-7-tuple(v_845),5-proj-7-tuple(v_845),6-proj-7-tuple(v_845),7-proj-7-tuple(v_845))) in
        {442}let (hs_859: handshakestate,plaintext_c_860: bitstring,valid_861: bool) = (if (not-caught-fail(v_845) && success?(is-true(success?(1-proj-7-tuple(v_845))))) then (if (not-caught-fail(v_846) && success?(is-true(success?(1-proj-3-tuple(v_846))))) then (if not-caught-fail(v_847) then (if (not-caught-fail(v_857) && success?(is-true(success?(1-proj-3-tuple(v_857))))) then (if (v_847 && 3-proj-3-tuple(v_857)) then (if not-caught-fail(v_858) then (v_858,2-proj-3-tuple(v_857),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {443}event RecvMsg(bob,charlie,stagepack_c(sid),plaintext_c_860);
        {444}insert statestore(bob,charlie,sid,statepack_d(hs_859,handshakestategetcs(hs_859),cs2_842))
    ) | (
        {446}!
        {464}get statestore(=bob,=charlie,=sid,statepack_d(hs_862: handshakestate,cs1_863: cipherstate,cs2_864: cipherstate)) in
        {447}let hs_865: handshakestate = handshakestatesetcs(hs_862,cs2_864) in
        {448}let v_866: bitstring = catch-fail(handshakestateunpack(hs_865)) in
        {449}let v_867: bitstring = catch-fail((empty,empty,empty)) in
        {450}let v_868: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_866))) in
        {451}let v_869: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_868))) in
        {452}let v_870: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_869),2-proj-2-tuple(v_869),3-proj-3-tuple(v_868),msg_d(bob,charlie,sid))) in
        {453}let v_871: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_868))) in
        {454}let v_872: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_869))) && success?(1-proj-3-tuple(v_868))) then (if (not-caught-fail(v_871) && success?(is-true(success?(1-proj-2-tuple(v_871))))) then cipherstatepack(1-proj-2-tuple(v_871),increment_nonce(2-proj-2-tuple(v_869))) else fail-any) else fail-any)) in
        {455}let v_873: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_868)) && success?(1-proj-3-tuple(v_868))) then (if (not-caught-fail(v_869) && success?(is-true(success?(1-proj-2-tuple(v_869))))) then (if not-caught-fail(v_870) then (if not-caught-fail(v_872) then (v_872,v_870) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {456}let v_874: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_873),2-proj-3-tuple(v_868),3-proj-3-tuple(v_868)))) in
        {457}let v_875: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_873)) && success?(symmetricstatepack(1-proj-2-tuple(v_873),2-proj-3-tuple(v_868),3-proj-3-tuple(v_868)))) then (if (not-caught-fail(v_874) && success?(is-true(success?(1-proj-3-tuple(v_874))))) then symmetricstatepack(1-proj-3-tuple(v_874),2-proj-3-tuple(v_874),hash(3-proj-3-tuple(v_874),2-proj-2-tuple(v_873))) else fail-any) else fail-any)) in
        {458}let v_876: bitstring = catch-fail((if success?(1-proj-7-tuple(v_866)) then (if (not-caught-fail(v_868) && success?(is-true(success?(1-proj-3-tuple(v_868))))) then (if (not-caught-fail(v_873) && success?(is-true(success?(1-proj-2-tuple(v_873))))) then (if not-caught-fail(v_875) then (v_875,2-proj-2-tuple(v_873)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {459}let v_877: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_876),2-proj-7-tuple(v_866),3-proj-7-tuple(v_866),4-proj-7-tuple(v_866),5-proj-7-tuple(v_866),6-proj-7-tuple(v_866),7-proj-7-tuple(v_866))) in
        {460}let v_878: bitstring = catch-fail(concat3(1-proj-3-tuple(v_867),2-proj-3-tuple(v_867),2-proj-2-tuple(v_876))) in
        {461}let (hs_879: handshakestate,message_d_880: bitstring) = (if (not-caught-fail(v_866) && success?(is-true(success?(1-proj-7-tuple(v_866))))) then (if (not-caught-fail(v_867) && success?(is-true(success?(1-proj-3-tuple(v_867))))) then (if (not-caught-fail(v_876) && success?(is-true(success?(1-proj-2-tuple(v_876))))) then (if not-caught-fail(v_877) then (if not-caught-fail(v_878) then (v_877,v_878) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {462}event SendMsg(bob,charlie,stagepack_d(sid),msg_d(bob,charlie,sid));
        {463}out(pub, message_d_880)
    ) | (
        {465}event LeakS(phase0,bob);
        {466}out(pub, key_s(bob))
    ) | (
        {467}phase 1;
        {468}event LeakS(phase1,bob);
        {469}out(pub, key_s(bob))
    )
)

-- Query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_983,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_983,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)); not attacker_p1(msg_a(alice,bob,sid_a)); attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob)); attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice))); attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_983,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_983,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)); not attacker_p1(msg_b(bob,alice,sid_b)); attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice)); attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob))); attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_983,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_983,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)); not attacker_p1(msg_c(alice,bob,sid_a)); attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob)); attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice))); attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_983,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_983,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)); not attacker_p1(msg_d(bob,alice,sid_b)); attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice)); attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob))); attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)); not event(RecvEnd(true))
Completing...
200 rules inserted. The rule base contains 200 rules. 75 rules in the queue.
400 rules inserted. The rule base contains 384 rules. 80 rules in the queue.
600 rules inserted. The rule base contains 559 rules. 104 rules in the queue.
800 rules inserted. The rule base contains 716 rules. 95 rules in the queue.
1000 rules inserted. The rule base contains 849 rules. 130 rules in the queue.
1200 rules inserted. The rule base contains 1003 rules. 168 rules in the queue.
1400 rules inserted. The rule base contains 1105 rules. 163 rules in the queue.
1600 rules inserted. The rule base contains 1178 rules. 138 rules in the queue.
1800 rules inserted. The rule base contains 1295 rules. 107 rules in the queue.
2000 rules inserted. The rule base contains 1434 rules. 127 rules in the queue.
2200 rules inserted. The rule base contains 1548 rules. 103 rules in the queue.
2400 rules inserted. The rule base contains 1645 rules. 86 rules in the queue.
2600 rules inserted. The rule base contains 1760 rules. 16 rules in the queue.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m))
goal reachable: begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_17408321]),msg_a(alice,charlie,sid[!1 = @sid_17408321]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_17408322]),msg_a(alice,charlie,sid[!1 = @sid_17408321])))
Abbreviations:
sid_17408357 = sid[!1 = @sid_17408347]
sid_17408358 = sid[!1 = @sid_17408329]

1. The entry statestore(bob,alice,sid_17408357,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {248}.
table(statestore(bob,alice,sid_17408357,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

2. The entry statestore(alice,charlie,sid_17408358,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {131}.
table(statestore(alice,charlie,sid_17408358,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,charlie,sid_17408358,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {154}.
The event SendMsg(alice,charlie,stagepack_a(sid_17408358),msg_a(alice,charlie,sid_17408358)) may be executed at {151}.
So the message concat3(dhexp(key_e(alice,charlie,sid_17408358),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17408358),g)),msg_a(alice,charlie,sid_17408358))) may be sent on channel pub at output {153}.
mess(pub,concat3(dhexp(key_e(alice,charlie,sid_17408358),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17408358),g)),msg_a(alice,charlie,sid_17408358)))).

4. The entry statestore(bob,alice,sid_17408357,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 1 may be read at get {270}.
The message concat3(dhexp(key_e(alice,charlie,sid_17408358),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17408358),g)),msg_a(alice,charlie,sid_17408358))) that may be sent on channel pub by 3 may be received at input {249}.
We have dhexp(key_e(alice,charlie,sid_17408358),g) <> caught-fail.
So event RecvMsg(bob,alice,stagepack_a(sid_17408357),msg_a(alice,charlie,sid_17408358)) may be executed at {268}.
end(RecvMsg(bob,alice,stagepack_a(sid_17408357),msg_a(alice,charlie,sid_17408358))).


RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) cannot be proved.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_983,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_17408361]),msg_a(alice,bob,sid[!1 = @sid_17408361]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_17408362]),msg_a(alice,bob,sid[!1 = @sid_17408361])))
goal reachable: begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_17408365]),msg_a(alice,charlie,sid[!1 = @sid_17408365]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_17408366]),msg_a(alice,charlie,sid[!1 = @sid_17408365])))
RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_983,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_983,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_17408375]),msg_a(alice,bob,sid[!1 = @sid_17408375]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_17408376]),msg_a(alice,bob,sid[!1 = @sid_17408375])))
goal reachable: begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_17408379]),msg_a(alice,charlie,sid[!1 = @sid_17408379]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_17408380]),msg_a(alice,charlie,sid[!1 = @sid_17408379])))
RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_983,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_17408393]),msg_a(alice,charlie,sid[!1 = @sid_17408393]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_17408394]),msg_a(alice,charlie,sid[!1 = @sid_17408393])))
Abbreviations:
sid_17408429 = sid[!1 = @sid_17408419]
sid_17408430 = sid[!1 = @sid_17408401]

1. The entry statestore(bob,alice,sid_17408429,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {248}.
table(statestore(bob,alice,sid_17408429,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

2. The entry statestore(alice,charlie,sid_17408430,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {131}.
table(statestore(alice,charlie,sid_17408430,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,charlie,sid_17408430,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {154}.
The event SendMsg(alice,charlie,stagepack_a(sid_17408430),msg_a(alice,charlie,sid_17408430)) may be executed at {151}.
So the message concat3(dhexp(key_e(alice,charlie,sid_17408430),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17408430),g)),msg_a(alice,charlie,sid_17408430))) may be sent on channel pub at output {153}.
mess(pub,concat3(dhexp(key_e(alice,charlie,sid_17408430),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17408430),g)),msg_a(alice,charlie,sid_17408430)))).

4. The entry statestore(bob,alice,sid_17408429,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 1 may be read at get {270}.
The message concat3(dhexp(key_e(alice,charlie,sid_17408430),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17408430),g)),msg_a(alice,charlie,sid_17408430))) that may be sent on channel pub by 3 may be received at input {249}.
We have dhexp(key_e(alice,charlie,sid_17408430),g) <> caught-fail.
So event RecvMsg(bob,alice,stagepack_a(sid_17408429),msg_a(alice,charlie,sid_17408430)) may be executed at {268}.
end(RecvMsg(bob,alice,stagepack_a(sid_17408429),msg_a(alice,charlie,sid_17408430))).


RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) cannot be proved.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_17408437]),msg_a(alice,charlie,sid[!1 = @sid_17408437]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_17408438]),msg_a(alice,charlie,sid[!1 = @sid_17408437])))
Abbreviations:
sid_17408473 = sid[!1 = @sid_17408463]
sid_17408474 = sid[!1 = @sid_17408445]

1. The entry statestore(bob,alice,sid_17408473,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {248}.
table(statestore(bob,alice,sid_17408473,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

2. The entry statestore(alice,charlie,sid_17408474,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {131}.
table(statestore(alice,charlie,sid_17408474,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,charlie,sid_17408474,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {154}.
The event SendMsg(alice,charlie,stagepack_a(sid_17408474),msg_a(alice,charlie,sid_17408474)) may be executed at {151}.
So the message concat3(dhexp(key_e(alice,charlie,sid_17408474),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17408474),g)),msg_a(alice,charlie,sid_17408474))) may be sent on channel pub at output {153}.
mess(pub,concat3(dhexp(key_e(alice,charlie,sid_17408474),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17408474),g)),msg_a(alice,charlie,sid_17408474)))).

4. The entry statestore(bob,alice,sid_17408473,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 1 may be read at get {270}.
The message concat3(dhexp(key_e(alice,charlie,sid_17408474),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17408474),g)),msg_a(alice,charlie,sid_17408474))) that may be sent on channel pub by 3 may be received at input {249}.
We have dhexp(key_e(alice,charlie,sid_17408474),g) <> caught-fail.
So event RecvMsg(bob,alice,stagepack_a(sid_17408473),msg_a(alice,charlie,sid_17408474)) may be executed at {268}.
end(RecvMsg(bob,alice,stagepack_a(sid_17408473),msg_a(alice,charlie,sid_17408474))).


RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) cannot be proved.
Starting query not attacker_p1(msg_a(alice,bob,sid_a))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_17408477]),msg_a(alice,bob,sid[!1 = @sid_17408477]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_17408477]))
Abbreviations:
sid_17408529 = sid[!1 = @sid_17408504]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_17408529,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {14}.
table(statestore(alice,bob,sid_17408529,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,bob,sid_17408529,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {37}.
The event SendMsg(alice,bob,stagepack_a(sid_17408529),msg_a(alice,bob,sid_17408529)) may be executed at {34}.
So the message concat3(dhexp(key_e(alice,bob,sid_17408529),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408529),g)),msg_a(alice,bob,sid_17408529))) may be sent on channel pub at output {36}.
mess(pub,concat3(dhexp(key_e(alice,bob,sid_17408529),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408529),g)),msg_a(alice,bob,sid_17408529)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(dhexp(key_e(alice,bob,sid_17408529),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408529),g)),msg_a(alice,bob,sid_17408529))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e(alice,bob,sid_17408529),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408529),g)),msg_a(alice,bob,sid_17408529))) by listening on this channel.
attacker(concat3(dhexp(key_e(alice,bob,sid_17408529),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408529),g)),msg_a(alice,bob,sid_17408529)))).

5. By 4, the attacker may know concat3(dhexp(key_e(alice,bob,sid_17408529),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408529),g)),msg_a(alice,bob,sid_17408529))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408529),g)),msg_a(alice,bob,sid_17408529)).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408529),g)),msg_a(alice,bob,sid_17408529))).

6. By 4, the attacker may know concat3(dhexp(key_e(alice,bob,sid_17408529),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408529),g)),msg_a(alice,bob,sid_17408529))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_e(alice,bob,sid_17408529),g).
attacker(dhexp(key_e(alice,bob,sid_17408529),g)).

7. Using the function empty the attacker may obtain empty.
attacker(empty).

8. Using the function somename the attacker may obtain somename.
attacker(somename).

9. By 8, the attacker may know somename.
By 7, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

10. By 9, the attacker may know hash(somename,empty).
By 7, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

11. By 10, the attacker may know hash(hash(somename,empty),empty).
By 6, the attacker may know dhexp(key_e(alice,bob,sid_17408529),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408529),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408529),g))).

12. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

13. By 7, the attacker may know empty.
By 12, the attacker may know minnonce.
By 11, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408529),g)).
By 5, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408529),g)),msg_a(alice,bob,sid_17408529)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408529),g)),msg_a(alice,bob,sid_17408529)).
attacker(aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408529),g)),msg_a(alice,bob,sid_17408529))).

14. By 13, the attacker may know aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408529),g)),msg_a(alice,bob,sid_17408529)).
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_17408529).
attacker(msg_a(alice,bob,sid_17408529)).

15. By 14, the attacker may know msg_a(alice,bob,sid_17408529).
So the attacker may know msg_a(alice,bob,sid_17408529) in phase 1.
attacker_p1(msg_a(alice,bob,sid_17408529)).


RESULT not attacker_p1(msg_a(alice,bob,sid_a)) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_17408532]),msg_a(alice,bob,sid[!1 = @sid_17408532]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_17408532]))
Abbreviations:
sid_17408584 = sid[!1 = @sid_17408559]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_17408584,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {14}.
table(statestore(alice,bob,sid_17408584,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,bob,sid_17408584,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {37}.
The event SendMsg(alice,bob,stagepack_a(sid_17408584),msg_a(alice,bob,sid_17408584)) may be executed at {34}.
So the message concat3(dhexp(key_e(alice,bob,sid_17408584),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408584),g)),msg_a(alice,bob,sid_17408584))) may be sent on channel pub at output {36}.
mess(pub,concat3(dhexp(key_e(alice,bob,sid_17408584),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408584),g)),msg_a(alice,bob,sid_17408584)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(dhexp(key_e(alice,bob,sid_17408584),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408584),g)),msg_a(alice,bob,sid_17408584))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e(alice,bob,sid_17408584),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408584),g)),msg_a(alice,bob,sid_17408584))) by listening on this channel.
attacker(concat3(dhexp(key_e(alice,bob,sid_17408584),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408584),g)),msg_a(alice,bob,sid_17408584)))).

5. By 4, the attacker may know concat3(dhexp(key_e(alice,bob,sid_17408584),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408584),g)),msg_a(alice,bob,sid_17408584))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408584),g)),msg_a(alice,bob,sid_17408584)).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408584),g)),msg_a(alice,bob,sid_17408584))).

6. By 4, the attacker may know concat3(dhexp(key_e(alice,bob,sid_17408584),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408584),g)),msg_a(alice,bob,sid_17408584))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_e(alice,bob,sid_17408584),g).
attacker(dhexp(key_e(alice,bob,sid_17408584),g)).

7. Using the function empty the attacker may obtain empty.
attacker(empty).

8. Using the function somename the attacker may obtain somename.
attacker(somename).

9. By 8, the attacker may know somename.
By 7, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

10. By 9, the attacker may know hash(somename,empty).
By 7, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

11. By 10, the attacker may know hash(hash(somename,empty),empty).
By 6, the attacker may know dhexp(key_e(alice,bob,sid_17408584),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408584),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408584),g))).

12. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

13. By 7, the attacker may know empty.
By 12, the attacker may know minnonce.
By 11, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408584),g)).
By 5, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408584),g)),msg_a(alice,bob,sid_17408584)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408584),g)),msg_a(alice,bob,sid_17408584)).
attacker(aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408584),g)),msg_a(alice,bob,sid_17408584))).

14. By 13, the attacker may know aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408584),g)),msg_a(alice,bob,sid_17408584)).
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_17408584).
attacker(msg_a(alice,bob,sid_17408584)).

15. By 14, the attacker may know msg_a(alice,bob,sid_17408584).
So the attacker may know msg_a(alice,bob,sid_17408584) in phase 1.
attacker_p1(msg_a(alice,bob,sid_17408584)).


RESULT attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob)) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice)))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_17408587]),msg_a(alice,bob,sid[!1 = @sid_17408587]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_17408587]))
Abbreviations:
sid_17408640 = sid[!1 = @sid_17408615]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_17408640,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {14}.
table(statestore(alice,bob,sid_17408640,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,bob,sid_17408640,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {37}.
The event SendMsg(alice,bob,stagepack_a(sid_17408640),msg_a(alice,bob,sid_17408640)) may be executed at {34}.
So the message concat3(dhexp(key_e(alice,bob,sid_17408640),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408640),g)),msg_a(alice,bob,sid_17408640))) may be sent on channel pub at output {36}.
mess(pub,concat3(dhexp(key_e(alice,bob,sid_17408640),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408640),g)),msg_a(alice,bob,sid_17408640)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(dhexp(key_e(alice,bob,sid_17408640),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408640),g)),msg_a(alice,bob,sid_17408640))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e(alice,bob,sid_17408640),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408640),g)),msg_a(alice,bob,sid_17408640))) by listening on this channel.
attacker(concat3(dhexp(key_e(alice,bob,sid_17408640),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408640),g)),msg_a(alice,bob,sid_17408640)))).

5. By 4, the attacker may know concat3(dhexp(key_e(alice,bob,sid_17408640),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408640),g)),msg_a(alice,bob,sid_17408640))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408640),g)),msg_a(alice,bob,sid_17408640)).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408640),g)),msg_a(alice,bob,sid_17408640))).

6. By 4, the attacker may know concat3(dhexp(key_e(alice,bob,sid_17408640),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408640),g)),msg_a(alice,bob,sid_17408640))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_e(alice,bob,sid_17408640),g).
attacker(dhexp(key_e(alice,bob,sid_17408640),g)).

7. Using the function empty the attacker may obtain empty.
attacker(empty).

8. Using the function somename the attacker may obtain somename.
attacker(somename).

9. By 8, the attacker may know somename.
By 7, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

10. By 9, the attacker may know hash(somename,empty).
By 7, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

11. By 10, the attacker may know hash(hash(somename,empty),empty).
By 6, the attacker may know dhexp(key_e(alice,bob,sid_17408640),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408640),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408640),g))).

12. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

13. By 7, the attacker may know empty.
By 12, the attacker may know minnonce.
By 11, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408640),g)).
By 5, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408640),g)),msg_a(alice,bob,sid_17408640)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408640),g)),msg_a(alice,bob,sid_17408640)).
attacker(aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408640),g)),msg_a(alice,bob,sid_17408640))).

14. By 13, the attacker may know aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408640),g)),msg_a(alice,bob,sid_17408640)).
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_17408640).
attacker(msg_a(alice,bob,sid_17408640)).

15. By 14, the attacker may know msg_a(alice,bob,sid_17408640).
So the attacker may know msg_a(alice,bob,sid_17408640) in phase 1.
attacker_p1(msg_a(alice,bob,sid_17408640)).


RESULT attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice))) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_17408643]),msg_a(alice,bob,sid[!1 = @sid_17408643]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_17408643]))
Abbreviations:
sid_17408695 = sid[!1 = @sid_17408670]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_17408695,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {14}.
table(statestore(alice,bob,sid_17408695,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,bob,sid_17408695,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {37}.
The event SendMsg(alice,bob,stagepack_a(sid_17408695),msg_a(alice,bob,sid_17408695)) may be executed at {34}.
So the message concat3(dhexp(key_e(alice,bob,sid_17408695),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408695),g)),msg_a(alice,bob,sid_17408695))) may be sent on channel pub at output {36}.
mess(pub,concat3(dhexp(key_e(alice,bob,sid_17408695),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408695),g)),msg_a(alice,bob,sid_17408695)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(dhexp(key_e(alice,bob,sid_17408695),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408695),g)),msg_a(alice,bob,sid_17408695))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e(alice,bob,sid_17408695),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408695),g)),msg_a(alice,bob,sid_17408695))) by listening on this channel.
attacker(concat3(dhexp(key_e(alice,bob,sid_17408695),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408695),g)),msg_a(alice,bob,sid_17408695)))).

5. By 4, the attacker may know concat3(dhexp(key_e(alice,bob,sid_17408695),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408695),g)),msg_a(alice,bob,sid_17408695))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408695),g)),msg_a(alice,bob,sid_17408695)).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408695),g)),msg_a(alice,bob,sid_17408695))).

6. By 4, the attacker may know concat3(dhexp(key_e(alice,bob,sid_17408695),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408695),g)),msg_a(alice,bob,sid_17408695))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_e(alice,bob,sid_17408695),g).
attacker(dhexp(key_e(alice,bob,sid_17408695),g)).

7. Using the function empty the attacker may obtain empty.
attacker(empty).

8. Using the function somename the attacker may obtain somename.
attacker(somename).

9. By 8, the attacker may know somename.
By 7, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

10. By 9, the attacker may know hash(somename,empty).
By 7, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

11. By 10, the attacker may know hash(hash(somename,empty),empty).
By 6, the attacker may know dhexp(key_e(alice,bob,sid_17408695),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408695),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408695),g))).

12. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

13. By 7, the attacker may know empty.
By 12, the attacker may know minnonce.
By 11, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408695),g)).
By 5, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408695),g)),msg_a(alice,bob,sid_17408695)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408695),g)),msg_a(alice,bob,sid_17408695)).
attacker(aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408695),g)),msg_a(alice,bob,sid_17408695))).

14. By 13, the attacker may know aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408695),g)),msg_a(alice,bob,sid_17408695)).
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_17408695).
attacker(msg_a(alice,bob,sid_17408695)).

15. By 14, the attacker may know msg_a(alice,bob,sid_17408695).
So the attacker may know msg_a(alice,bob,sid_17408695) in phase 1.
attacker_p1(msg_a(alice,bob,sid_17408695)).


RESULT attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m))
goal reachable: begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_17408698]),msg_b(bob,charlie,sid[!1 = @sid_17408698]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_17408699]),msg_a(alice,bob,sid[!1 = @sid_17408699]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_17408699]),msg_b(bob,charlie,sid[!1 = @sid_17408698])))
Abbreviations:
sid_17408774 = sid[!1 = @sid_17408764]
sid_17408775 = sid[!1 = @sid_17408736]

1. The entry statestore(alice,bob,sid_17408774,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {14}.
table(statestore(alice,bob,sid_17408774,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

2. The entry statestore(alice,bob,sid_17408774,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 1 may be read at get {37}.
The event SendMsg(alice,bob,stagepack_a(sid_17408774),msg_a(alice,bob,sid_17408774)) may be executed at {34}.
So the entry statestore(alice,bob,sid_17408774,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408774),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408774),g)),msg_a(alice,bob,sid_17408774)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17408774),g),key_e(alice,bob,sid_17408774)),empty,empty,empty,true))) may be inserted in a table at insert {35}.
table(statestore(alice,bob,sid_17408774,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408774),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408774),g)),msg_a(alice,bob,sid_17408774)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17408774),g),key_e(alice,bob,sid_17408774)),empty,empty,empty,true)))).

3. The entry statestore(bob,charlie,sid_17408775,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {364}.
table(statestore(bob,charlie,sid_17408775,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

4. The entry statestore(alice,bob,sid_17408774,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 1 may be read at get {37}.
The event SendMsg(alice,bob,stagepack_a(sid_17408774),msg_a(alice,bob,sid_17408774)) may be executed at {34}.
So the message concat3(dhexp(key_e(alice,bob,sid_17408774),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408774),g)),msg_a(alice,bob,sid_17408774))) may be sent on channel pub at output {36}.
mess(pub,concat3(dhexp(key_e(alice,bob,sid_17408774),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408774),g)),msg_a(alice,bob,sid_17408774)))).

5. The entry statestore(bob,charlie,sid_17408775,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 3 may be read at get {386}.
The message concat3(dhexp(key_e(alice,bob,sid_17408774),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408774),g)),msg_a(alice,bob,sid_17408774))) that may be sent on channel pub by 4 may be received at input {365}.
We have dhexp(key_e(alice,bob,sid_17408774),g) <> caught-fail.
So the entry statestore(bob,charlie,sid_17408775,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408774),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408774),g)),msg_a(alice,bob,sid_17408774)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_17408774),g),empty,false))) may be inserted in a table at insert {385}.
table(statestore(bob,charlie,sid_17408775,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408774),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408774),g)),msg_a(alice,bob,sid_17408774)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_17408774),g),empty,false)))).

6. The entry statestore(bob,charlie,sid_17408775,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408774),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408774),g)),msg_a(alice,bob,sid_17408774)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_17408774),g),empty,false))) that may be in a table by 5 may be read at get {424}.
The event SendMsg(bob,charlie,stagepack_b(sid_17408775),msg_b(bob,charlie,sid_17408775)) may be executed at {421}.
So the message concat3(dhexp(key_e(bob,charlie,sid_17408775),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17408774),dhexp(key_e(bob,charlie,sid_17408775),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408774),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408774),g)),msg_a(alice,bob,sid_17408774))),dhexp(key_e(bob,charlie,sid_17408775),g)),msg_b(bob,charlie,sid_17408775))) may be sent on channel pub at output {423}.
mess(pub,concat3(dhexp(key_e(bob,charlie,sid_17408775),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17408774),dhexp(key_e(bob,charlie,sid_17408775),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408774),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408774),g)),msg_a(alice,bob,sid_17408774))),dhexp(key_e(bob,charlie,sid_17408775),g)),msg_b(bob,charlie,sid_17408775)))).

7. The entry statestore(alice,bob,sid_17408774,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408774),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408774),g)),msg_a(alice,bob,sid_17408774)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17408774),g),key_e(alice,bob,sid_17408774)),empty,empty,empty,true))) that may be in a table by 2 may be read at get {74}.
The message concat3(dhexp(key_e(bob,charlie,sid_17408775),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17408774),dhexp(key_e(bob,charlie,sid_17408775),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408774),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408774),g)),msg_a(alice,bob,sid_17408774))),dhexp(key_e(bob,charlie,sid_17408775),g)),msg_b(bob,charlie,sid_17408775))) that may be sent on channel pub by 6 may be received at input {38}.
We have dhexp(key_e(bob,charlie,sid_17408775),g) <> caught-fail.
So event RecvMsg(alice,bob,stagepack_b(sid_17408774),msg_b(bob,charlie,sid_17408775)) may be executed at {72}.
end(RecvMsg(alice,bob,stagepack_b(sid_17408774),msg_b(bob,charlie,sid_17408775))).


RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_983,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_17408778]),msg_b(bob,charlie,sid[!1 = @sid_17408778]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_17408779]),msg_a(alice,bob,sid[!1 = @sid_17408779]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_17408779]),msg_b(bob,charlie,sid[!1 = @sid_17408778])))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_17408782]),msg_b(bob,alice,sid[!1 = @sid_17408782]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_17408783]),msg_a(alice,bob,sid[!1 = @sid_17408783]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_17408783]),msg_b(bob,alice,sid[!1 = @sid_17408782])))
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_983,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_983,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_17408792]),msg_b(bob,charlie,sid[!1 = @sid_17408792]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_17408793]),msg_a(alice,bob,sid[!1 = @sid_17408793]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_17408793]),msg_b(bob,charlie,sid[!1 = @sid_17408792])))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_17408796]),msg_b(bob,alice,sid[!1 = @sid_17408796]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_17408797]),msg_a(alice,bob,sid[!1 = @sid_17408797]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_17408797]),msg_b(bob,alice,sid[!1 = @sid_17408796])))
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_983,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_17408806]),msg_b(bob,charlie,sid[!1 = @sid_17408806]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_17408807]),msg_a(alice,bob,sid[!1 = @sid_17408807]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_17408807]),msg_b(bob,charlie,sid[!1 = @sid_17408806])))
Abbreviations:
sid_17408882 = sid[!1 = @sid_17408872]
sid_17408883 = sid[!1 = @sid_17408844]

1. The entry statestore(alice,bob,sid_17408882,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {14}.
table(statestore(alice,bob,sid_17408882,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

2. The entry statestore(alice,bob,sid_17408882,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 1 may be read at get {37}.
The event SendMsg(alice,bob,stagepack_a(sid_17408882),msg_a(alice,bob,sid_17408882)) may be executed at {34}.
So the entry statestore(alice,bob,sid_17408882,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408882),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408882),g)),msg_a(alice,bob,sid_17408882)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17408882),g),key_e(alice,bob,sid_17408882)),empty,empty,empty,true))) may be inserted in a table at insert {35}.
table(statestore(alice,bob,sid_17408882,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408882),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408882),g)),msg_a(alice,bob,sid_17408882)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17408882),g),key_e(alice,bob,sid_17408882)),empty,empty,empty,true)))).

3. The entry statestore(bob,charlie,sid_17408883,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {364}.
table(statestore(bob,charlie,sid_17408883,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

4. The entry statestore(alice,bob,sid_17408882,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 1 may be read at get {37}.
The event SendMsg(alice,bob,stagepack_a(sid_17408882),msg_a(alice,bob,sid_17408882)) may be executed at {34}.
So the message concat3(dhexp(key_e(alice,bob,sid_17408882),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408882),g)),msg_a(alice,bob,sid_17408882))) may be sent on channel pub at output {36}.
mess(pub,concat3(dhexp(key_e(alice,bob,sid_17408882),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408882),g)),msg_a(alice,bob,sid_17408882)))).

5. The entry statestore(bob,charlie,sid_17408883,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 3 may be read at get {386}.
The message concat3(dhexp(key_e(alice,bob,sid_17408882),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408882),g)),msg_a(alice,bob,sid_17408882))) that may be sent on channel pub by 4 may be received at input {365}.
We have dhexp(key_e(alice,bob,sid_17408882),g) <> caught-fail.
So the entry statestore(bob,charlie,sid_17408883,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408882),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408882),g)),msg_a(alice,bob,sid_17408882)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_17408882),g),empty,false))) may be inserted in a table at insert {385}.
table(statestore(bob,charlie,sid_17408883,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408882),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408882),g)),msg_a(alice,bob,sid_17408882)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_17408882),g),empty,false)))).

6. The entry statestore(bob,charlie,sid_17408883,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408882),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408882),g)),msg_a(alice,bob,sid_17408882)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_17408882),g),empty,false))) that may be in a table by 5 may be read at get {424}.
The event SendMsg(bob,charlie,stagepack_b(sid_17408883),msg_b(bob,charlie,sid_17408883)) may be executed at {421}.
So the message concat3(dhexp(key_e(bob,charlie,sid_17408883),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17408882),dhexp(key_e(bob,charlie,sid_17408883),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408882),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408882),g)),msg_a(alice,bob,sid_17408882))),dhexp(key_e(bob,charlie,sid_17408883),g)),msg_b(bob,charlie,sid_17408883))) may be sent on channel pub at output {423}.
mess(pub,concat3(dhexp(key_e(bob,charlie,sid_17408883),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17408882),dhexp(key_e(bob,charlie,sid_17408883),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408882),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408882),g)),msg_a(alice,bob,sid_17408882))),dhexp(key_e(bob,charlie,sid_17408883),g)),msg_b(bob,charlie,sid_17408883)))).

7. The entry statestore(alice,bob,sid_17408882,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408882),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408882),g)),msg_a(alice,bob,sid_17408882)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17408882),g),key_e(alice,bob,sid_17408882)),empty,empty,empty,true))) that may be in a table by 2 may be read at get {74}.
The message concat3(dhexp(key_e(bob,charlie,sid_17408883),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17408882),dhexp(key_e(bob,charlie,sid_17408883),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408882),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408882),g)),msg_a(alice,bob,sid_17408882))),dhexp(key_e(bob,charlie,sid_17408883),g)),msg_b(bob,charlie,sid_17408883))) that may be sent on channel pub by 6 may be received at input {38}.
We have dhexp(key_e(bob,charlie,sid_17408883),g) <> caught-fail.
So event RecvMsg(alice,bob,stagepack_b(sid_17408882),msg_b(bob,charlie,sid_17408883)) may be executed at {72}.
end(RecvMsg(alice,bob,stagepack_b(sid_17408882),msg_b(bob,charlie,sid_17408883))).


RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_17408886]),msg_b(bob,charlie,sid[!1 = @sid_17408886]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_17408887]),msg_a(alice,bob,sid[!1 = @sid_17408887]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_17408887]),msg_b(bob,charlie,sid[!1 = @sid_17408886])))
Abbreviations:
sid_17408962 = sid[!1 = @sid_17408952]
sid_17408963 = sid[!1 = @sid_17408924]

1. The entry statestore(alice,bob,sid_17408962,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {14}.
table(statestore(alice,bob,sid_17408962,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

2. The entry statestore(alice,bob,sid_17408962,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 1 may be read at get {37}.
The event SendMsg(alice,bob,stagepack_a(sid_17408962),msg_a(alice,bob,sid_17408962)) may be executed at {34}.
So the entry statestore(alice,bob,sid_17408962,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408962),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408962),g)),msg_a(alice,bob,sid_17408962)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17408962),g),key_e(alice,bob,sid_17408962)),empty,empty,empty,true))) may be inserted in a table at insert {35}.
table(statestore(alice,bob,sid_17408962,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408962),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408962),g)),msg_a(alice,bob,sid_17408962)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17408962),g),key_e(alice,bob,sid_17408962)),empty,empty,empty,true)))).

3. The entry statestore(bob,charlie,sid_17408963,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {364}.
table(statestore(bob,charlie,sid_17408963,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

4. The entry statestore(alice,bob,sid_17408962,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 1 may be read at get {37}.
The event SendMsg(alice,bob,stagepack_a(sid_17408962),msg_a(alice,bob,sid_17408962)) may be executed at {34}.
So the message concat3(dhexp(key_e(alice,bob,sid_17408962),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408962),g)),msg_a(alice,bob,sid_17408962))) may be sent on channel pub at output {36}.
mess(pub,concat3(dhexp(key_e(alice,bob,sid_17408962),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408962),g)),msg_a(alice,bob,sid_17408962)))).

5. The entry statestore(bob,charlie,sid_17408963,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 3 may be read at get {386}.
The message concat3(dhexp(key_e(alice,bob,sid_17408962),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408962),g)),msg_a(alice,bob,sid_17408962))) that may be sent on channel pub by 4 may be received at input {365}.
We have dhexp(key_e(alice,bob,sid_17408962),g) <> caught-fail.
So the entry statestore(bob,charlie,sid_17408963,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408962),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408962),g)),msg_a(alice,bob,sid_17408962)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_17408962),g),empty,false))) may be inserted in a table at insert {385}.
table(statestore(bob,charlie,sid_17408963,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408962),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408962),g)),msg_a(alice,bob,sid_17408962)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_17408962),g),empty,false)))).

6. The entry statestore(bob,charlie,sid_17408963,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408962),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408962),g)),msg_a(alice,bob,sid_17408962)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_17408962),g),empty,false))) that may be in a table by 5 may be read at get {424}.
The event SendMsg(bob,charlie,stagepack_b(sid_17408963),msg_b(bob,charlie,sid_17408963)) may be executed at {421}.
So the message concat3(dhexp(key_e(bob,charlie,sid_17408963),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17408962),dhexp(key_e(bob,charlie,sid_17408963),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408962),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408962),g)),msg_a(alice,bob,sid_17408962))),dhexp(key_e(bob,charlie,sid_17408963),g)),msg_b(bob,charlie,sid_17408963))) may be sent on channel pub at output {423}.
mess(pub,concat3(dhexp(key_e(bob,charlie,sid_17408963),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17408962),dhexp(key_e(bob,charlie,sid_17408963),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408962),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408962),g)),msg_a(alice,bob,sid_17408962))),dhexp(key_e(bob,charlie,sid_17408963),g)),msg_b(bob,charlie,sid_17408963)))).

7. The entry statestore(alice,bob,sid_17408962,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408962),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408962),g)),msg_a(alice,bob,sid_17408962)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17408962),g),key_e(alice,bob,sid_17408962)),empty,empty,empty,true))) that may be in a table by 2 may be read at get {74}.
The message concat3(dhexp(key_e(bob,charlie,sid_17408963),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17408962),dhexp(key_e(bob,charlie,sid_17408963),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408962),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17408962),g)),msg_a(alice,bob,sid_17408962))),dhexp(key_e(bob,charlie,sid_17408963),g)),msg_b(bob,charlie,sid_17408963))) that may be sent on channel pub by 6 may be received at input {38}.
We have dhexp(key_e(bob,charlie,sid_17408963),g) <> caught-fail.
So event RecvMsg(alice,bob,stagepack_b(sid_17408962),msg_b(bob,charlie,sid_17408963)) may be executed at {72}.
end(RecvMsg(alice,bob,stagepack_b(sid_17408962),msg_b(bob,charlie,sid_17408963))).


RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) cannot be proved.
Starting query not attacker_p1(msg_b(bob,alice,sid_b))
RESULT not attacker_p1(msg_b(bob,alice,sid_b)) is true.
Starting query attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice))
RESULT attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice)) is true.
Starting query attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob)))
RESULT attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob))) is true.
Starting query attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice))
RESULT attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m))
goal reachable: begin(SendMsg(alice,charlie,stagepack_c(sid[!1 = @sid_17408983]),msg_c(alice,charlie,sid[!1 = @sid_17408983]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_17408984]),msg_b(bob,alice,sid[!1 = @sid_17408984]))) && begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_17408983]),msg_a(alice,charlie,sid[!1 = @sid_17408983]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_17408984]),msg_c(alice,charlie,sid[!1 = @sid_17408983])))
Abbreviations:
sid_17409123 = sid[!1 = @sid_17409110]
sid_17409124 = sid[!1 = @sid_17409068]

1. The entry statestore(bob,alice,sid_17409123,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {248}.
table(statestore(bob,alice,sid_17409123,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

2. The entry statestore(alice,charlie,sid_17409124,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {131}.
table(statestore(alice,charlie,sid_17409124,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,charlie,sid_17409124,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {154}.
The event SendMsg(alice,charlie,stagepack_a(sid_17409124),msg_a(alice,charlie,sid_17409124)) may be executed at {151}.
So the message concat3(dhexp(key_e(alice,charlie,sid_17409124),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),msg_a(alice,charlie,sid_17409124))) may be sent on channel pub at output {153}.
mess(pub,concat3(dhexp(key_e(alice,charlie,sid_17409124),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),msg_a(alice,charlie,sid_17409124)))).

4. The entry statestore(bob,alice,sid_17409123,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 1 may be read at get {270}.
The message concat3(dhexp(key_e(alice,charlie,sid_17409124),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),msg_a(alice,charlie,sid_17409124))) that may be sent on channel pub by 3 may be received at input {249}.
We have dhexp(key_e(alice,charlie,sid_17409124),g) <> caught-fail.
So the entry statestore(bob,alice,sid_17409123,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),msg_a(alice,charlie,sid_17409124)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,charlie,sid_17409124),g),empty,false))) may be inserted in a table at insert {269}.
table(statestore(bob,alice,sid_17409123,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),msg_a(alice,charlie,sid_17409124)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,charlie,sid_17409124),g),empty,false)))).

5. The entry statestore(bob,alice,sid_17409123,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),msg_a(alice,charlie,sid_17409124)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,charlie,sid_17409124),g),empty,false))) that may be in a table by 4 may be read at get {308}.
The event SendMsg(bob,alice,stagepack_b(sid_17409123),msg_b(bob,alice,sid_17409123)) may be executed at {305}.
So the entry statestore(bob,alice,sid_17409123,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409124),dhexp(key_e(bob,alice,sid_17409123),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409124),dhexp(key_e(bob,alice,sid_17409123),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),msg_a(alice,charlie,sid_17409124))),dhexp(key_e(bob,alice,sid_17409123),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409124),dhexp(key_e(bob,alice,sid_17409123),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),msg_a(alice,charlie,sid_17409124))),dhexp(key_e(bob,alice,sid_17409123),g)),msg_b(bob,alice,sid_17409123)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(bob,alice,sid_17409123),g),key_e(bob,alice,sid_17409123)),empty,dhexp(key_e(alice,charlie,sid_17409124),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409124),dhexp(key_e(bob,alice,sid_17409123),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409124),dhexp(key_e(bob,alice,sid_17409123),g))),zero),minnonce))) may be inserted in a table at insert {306}.
table(statestore(bob,alice,sid_17409123,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409124),dhexp(key_e(bob,alice,sid_17409123),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409124),dhexp(key_e(bob,alice,sid_17409123),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),msg_a(alice,charlie,sid_17409124))),dhexp(key_e(bob,alice,sid_17409123),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409124),dhexp(key_e(bob,alice,sid_17409123),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),msg_a(alice,charlie,sid_17409124))),dhexp(key_e(bob,alice,sid_17409123),g)),msg_b(bob,alice,sid_17409123)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(bob,alice,sid_17409123),g),key_e(bob,alice,sid_17409123)),empty,dhexp(key_e(alice,charlie,sid_17409124),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409124),dhexp(key_e(bob,alice,sid_17409123),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409124),dhexp(key_e(bob,alice,sid_17409123),g))),zero),minnonce)))).

6. The entry statestore(alice,charlie,sid_17409124,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {154}.
The event SendMsg(alice,charlie,stagepack_a(sid_17409124),msg_a(alice,charlie,sid_17409124)) may be executed at {151}.
So the entry statestore(alice,charlie,sid_17409124,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),msg_a(alice,charlie,sid_17409124)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,charlie,sid_17409124),g),key_e(alice,charlie,sid_17409124)),empty,empty,empty,true))) may be inserted in a table at insert {152}.
table(statestore(alice,charlie,sid_17409124,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),msg_a(alice,charlie,sid_17409124)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,charlie,sid_17409124),g),key_e(alice,charlie,sid_17409124)),empty,empty,empty,true)))).

7. The entry statestore(bob,alice,sid_17409123,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),msg_a(alice,charlie,sid_17409124)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,charlie,sid_17409124),g),empty,false))) that may be in a table by 4 may be read at get {308}.
The event SendMsg(bob,alice,stagepack_b(sid_17409123),msg_b(bob,alice,sid_17409123)) may be executed at {305}.
So the message concat3(dhexp(key_e(bob,alice,sid_17409123),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409124),dhexp(key_e(bob,alice,sid_17409123),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),msg_a(alice,charlie,sid_17409124))),dhexp(key_e(bob,alice,sid_17409123),g)),msg_b(bob,alice,sid_17409123))) may be sent on channel pub at output {307}.
mess(pub,concat3(dhexp(key_e(bob,alice,sid_17409123),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409124),dhexp(key_e(bob,alice,sid_17409123),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),msg_a(alice,charlie,sid_17409124))),dhexp(key_e(bob,alice,sid_17409123),g)),msg_b(bob,alice,sid_17409123)))).

8. The entry statestore(alice,charlie,sid_17409124,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),msg_a(alice,charlie,sid_17409124)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,charlie,sid_17409124),g),key_e(alice,charlie,sid_17409124)),empty,empty,empty,true))) that may be in a table by 6 may be read at get {191}.
The message concat3(dhexp(key_e(bob,alice,sid_17409123),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409124),dhexp(key_e(bob,alice,sid_17409123),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),msg_a(alice,charlie,sid_17409124))),dhexp(key_e(bob,alice,sid_17409123),g)),msg_b(bob,alice,sid_17409123))) that may be sent on channel pub by 7 may be received at input {155}.
We have dhexp(key_e(bob,alice,sid_17409123),g) <> caught-fail.
So the entry statestore(alice,charlie,sid_17409124,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409124),dhexp(key_e(bob,alice,sid_17409123),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409124),dhexp(key_e(bob,alice,sid_17409123),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),msg_a(alice,charlie,sid_17409124))),dhexp(key_e(bob,alice,sid_17409123),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409124),dhexp(key_e(bob,alice,sid_17409123),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),msg_a(alice,charlie,sid_17409124))),dhexp(key_e(bob,alice,sid_17409123),g)),msg_b(bob,alice,sid_17409123)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,charlie,sid_17409124),g),key_e(alice,charlie,sid_17409124)),empty,dhexp(key_e(bob,alice,sid_17409123),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409124),dhexp(key_e(bob,alice,sid_17409123),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409124),dhexp(key_e(bob,alice,sid_17409123),g))),zero),minnonce))) may be inserted in a table at insert {190}.
table(statestore(alice,charlie,sid_17409124,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409124),dhexp(key_e(bob,alice,sid_17409123),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409124),dhexp(key_e(bob,alice,sid_17409123),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),msg_a(alice,charlie,sid_17409124))),dhexp(key_e(bob,alice,sid_17409123),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409124),dhexp(key_e(bob,alice,sid_17409123),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),msg_a(alice,charlie,sid_17409124))),dhexp(key_e(bob,alice,sid_17409123),g)),msg_b(bob,alice,sid_17409123)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,charlie,sid_17409124),g),key_e(alice,charlie,sid_17409124)),empty,dhexp(key_e(bob,alice,sid_17409123),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409124),dhexp(key_e(bob,alice,sid_17409123),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409124),dhexp(key_e(bob,alice,sid_17409123),g))),zero),minnonce)))).

9. The entry statestore(alice,charlie,sid_17409124,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409124),dhexp(key_e(bob,alice,sid_17409123),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409124),dhexp(key_e(bob,alice,sid_17409123),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),msg_a(alice,charlie,sid_17409124))),dhexp(key_e(bob,alice,sid_17409123),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409124),dhexp(key_e(bob,alice,sid_17409123),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),msg_a(alice,charlie,sid_17409124))),dhexp(key_e(bob,alice,sid_17409123),g)),msg_b(bob,alice,sid_17409123)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,charlie,sid_17409124),g),key_e(alice,charlie,sid_17409124)),empty,dhexp(key_e(bob,alice,sid_17409123),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409124),dhexp(key_e(bob,alice,sid_17409123),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409124),dhexp(key_e(bob,alice,sid_17409123),g))),zero),minnonce))) that may be in a table by 8 may be read at get {211}.
The event SendMsg(alice,charlie,stagepack_c(sid_17409124),msg_c(alice,charlie,sid_17409124)) may be executed at {208}.
So the message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409124),dhexp(key_e(bob,alice,sid_17409123),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),msg_a(alice,charlie,sid_17409124))),dhexp(key_e(bob,alice,sid_17409123),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409124),dhexp(key_e(bob,alice,sid_17409123),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),msg_a(alice,charlie,sid_17409124))),dhexp(key_e(bob,alice,sid_17409123),g)),msg_b(bob,alice,sid_17409123))),msg_c(alice,charlie,sid_17409124))) may be sent on channel pub at output {210}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409124),dhexp(key_e(bob,alice,sid_17409123),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),msg_a(alice,charlie,sid_17409124))),dhexp(key_e(bob,alice,sid_17409123),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409124),dhexp(key_e(bob,alice,sid_17409123),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),msg_a(alice,charlie,sid_17409124))),dhexp(key_e(bob,alice,sid_17409123),g)),msg_b(bob,alice,sid_17409123))),msg_c(alice,charlie,sid_17409124)))).

10. The entry statestore(bob,alice,sid_17409123,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409124),dhexp(key_e(bob,alice,sid_17409123),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409124),dhexp(key_e(bob,alice,sid_17409123),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),msg_a(alice,charlie,sid_17409124))),dhexp(key_e(bob,alice,sid_17409123),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409124),dhexp(key_e(bob,alice,sid_17409123),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),msg_a(alice,charlie,sid_17409124))),dhexp(key_e(bob,alice,sid_17409123),g)),msg_b(bob,alice,sid_17409123)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(bob,alice,sid_17409123),g),key_e(bob,alice,sid_17409123)),empty,dhexp(key_e(alice,charlie,sid_17409124),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409124),dhexp(key_e(bob,alice,sid_17409123),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409124),dhexp(key_e(bob,alice,sid_17409123),g))),zero),minnonce))) that may be in a table by 5 may be read at get {329}.
The message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409124),dhexp(key_e(bob,alice,sid_17409123),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),msg_a(alice,charlie,sid_17409124))),dhexp(key_e(bob,alice,sid_17409123),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409124),dhexp(key_e(bob,alice,sid_17409123),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409124),g)),msg_a(alice,charlie,sid_17409124))),dhexp(key_e(bob,alice,sid_17409123),g)),msg_b(bob,alice,sid_17409123))),msg_c(alice,charlie,sid_17409124))) that may be sent on channel pub by 9 may be received at input {311}.
So event RecvMsg(bob,alice,stagepack_c(sid_17409123),msg_c(alice,charlie,sid_17409124)) may be executed at {327}.
end(RecvMsg(bob,alice,stagepack_c(sid_17409123),msg_c(alice,charlie,sid_17409124))).


RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) cannot be proved.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_983,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_17409127]),msg_c(alice,bob,sid[!1 = @sid_17409127]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_17409128]),msg_b(bob,alice,sid[!1 = @sid_17409128]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_17409127]),msg_a(alice,bob,sid[!1 = @sid_17409127]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_17409128]),msg_c(alice,bob,sid[!1 = @sid_17409127])))
goal reachable: begin(SendMsg(alice,charlie,stagepack_c(sid[!1 = @sid_17409131]),msg_c(alice,charlie,sid[!1 = @sid_17409131]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_17409132]),msg_b(bob,alice,sid[!1 = @sid_17409132]))) && begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_17409131]),msg_a(alice,charlie,sid[!1 = @sid_17409131]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_17409132]),msg_c(alice,charlie,sid[!1 = @sid_17409131])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_983,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_983,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_17409141]),msg_c(alice,bob,sid[!1 = @sid_17409141]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_17409142]),msg_b(bob,alice,sid[!1 = @sid_17409142]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_17409141]),msg_a(alice,bob,sid[!1 = @sid_17409141]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_17409142]),msg_c(alice,bob,sid[!1 = @sid_17409141])))
goal reachable: begin(SendMsg(alice,charlie,stagepack_c(sid[!1 = @sid_17409145]),msg_c(alice,charlie,sid[!1 = @sid_17409145]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_17409146]),msg_b(bob,alice,sid[!1 = @sid_17409146]))) && begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_17409145]),msg_a(alice,charlie,sid[!1 = @sid_17409145]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_17409146]),msg_c(alice,charlie,sid[!1 = @sid_17409145])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_983,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,charlie,stagepack_c(sid[!1 = @sid_17409159]),msg_c(alice,charlie,sid[!1 = @sid_17409159]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_17409160]),msg_b(bob,alice,sid[!1 = @sid_17409160]))) && begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_17409159]),msg_a(alice,charlie,sid[!1 = @sid_17409159]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_17409160]),msg_c(alice,charlie,sid[!1 = @sid_17409159])))
Abbreviations:
sid_17409299 = sid[!1 = @sid_17409286]
sid_17409300 = sid[!1 = @sid_17409244]

1. The entry statestore(bob,alice,sid_17409299,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {248}.
table(statestore(bob,alice,sid_17409299,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

2. The entry statestore(alice,charlie,sid_17409300,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {131}.
table(statestore(alice,charlie,sid_17409300,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,charlie,sid_17409300,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {154}.
The event SendMsg(alice,charlie,stagepack_a(sid_17409300),msg_a(alice,charlie,sid_17409300)) may be executed at {151}.
So the message concat3(dhexp(key_e(alice,charlie,sid_17409300),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),msg_a(alice,charlie,sid_17409300))) may be sent on channel pub at output {153}.
mess(pub,concat3(dhexp(key_e(alice,charlie,sid_17409300),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),msg_a(alice,charlie,sid_17409300)))).

4. The entry statestore(bob,alice,sid_17409299,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 1 may be read at get {270}.
The message concat3(dhexp(key_e(alice,charlie,sid_17409300),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),msg_a(alice,charlie,sid_17409300))) that may be sent on channel pub by 3 may be received at input {249}.
We have dhexp(key_e(alice,charlie,sid_17409300),g) <> caught-fail.
So the entry statestore(bob,alice,sid_17409299,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),msg_a(alice,charlie,sid_17409300)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,charlie,sid_17409300),g),empty,false))) may be inserted in a table at insert {269}.
table(statestore(bob,alice,sid_17409299,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),msg_a(alice,charlie,sid_17409300)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,charlie,sid_17409300),g),empty,false)))).

5. The entry statestore(bob,alice,sid_17409299,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),msg_a(alice,charlie,sid_17409300)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,charlie,sid_17409300),g),empty,false))) that may be in a table by 4 may be read at get {308}.
The event SendMsg(bob,alice,stagepack_b(sid_17409299),msg_b(bob,alice,sid_17409299)) may be executed at {305}.
So the entry statestore(bob,alice,sid_17409299,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409300),dhexp(key_e(bob,alice,sid_17409299),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409300),dhexp(key_e(bob,alice,sid_17409299),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),msg_a(alice,charlie,sid_17409300))),dhexp(key_e(bob,alice,sid_17409299),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409300),dhexp(key_e(bob,alice,sid_17409299),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),msg_a(alice,charlie,sid_17409300))),dhexp(key_e(bob,alice,sid_17409299),g)),msg_b(bob,alice,sid_17409299)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(bob,alice,sid_17409299),g),key_e(bob,alice,sid_17409299)),empty,dhexp(key_e(alice,charlie,sid_17409300),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409300),dhexp(key_e(bob,alice,sid_17409299),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409300),dhexp(key_e(bob,alice,sid_17409299),g))),zero),minnonce))) may be inserted in a table at insert {306}.
table(statestore(bob,alice,sid_17409299,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409300),dhexp(key_e(bob,alice,sid_17409299),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409300),dhexp(key_e(bob,alice,sid_17409299),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),msg_a(alice,charlie,sid_17409300))),dhexp(key_e(bob,alice,sid_17409299),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409300),dhexp(key_e(bob,alice,sid_17409299),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),msg_a(alice,charlie,sid_17409300))),dhexp(key_e(bob,alice,sid_17409299),g)),msg_b(bob,alice,sid_17409299)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(bob,alice,sid_17409299),g),key_e(bob,alice,sid_17409299)),empty,dhexp(key_e(alice,charlie,sid_17409300),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409300),dhexp(key_e(bob,alice,sid_17409299),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409300),dhexp(key_e(bob,alice,sid_17409299),g))),zero),minnonce)))).

6. The entry statestore(alice,charlie,sid_17409300,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {154}.
The event SendMsg(alice,charlie,stagepack_a(sid_17409300),msg_a(alice,charlie,sid_17409300)) may be executed at {151}.
So the entry statestore(alice,charlie,sid_17409300,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),msg_a(alice,charlie,sid_17409300)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,charlie,sid_17409300),g),key_e(alice,charlie,sid_17409300)),empty,empty,empty,true))) may be inserted in a table at insert {152}.
table(statestore(alice,charlie,sid_17409300,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),msg_a(alice,charlie,sid_17409300)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,charlie,sid_17409300),g),key_e(alice,charlie,sid_17409300)),empty,empty,empty,true)))).

7. The entry statestore(bob,alice,sid_17409299,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),msg_a(alice,charlie,sid_17409300)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,charlie,sid_17409300),g),empty,false))) that may be in a table by 4 may be read at get {308}.
The event SendMsg(bob,alice,stagepack_b(sid_17409299),msg_b(bob,alice,sid_17409299)) may be executed at {305}.
So the message concat3(dhexp(key_e(bob,alice,sid_17409299),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409300),dhexp(key_e(bob,alice,sid_17409299),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),msg_a(alice,charlie,sid_17409300))),dhexp(key_e(bob,alice,sid_17409299),g)),msg_b(bob,alice,sid_17409299))) may be sent on channel pub at output {307}.
mess(pub,concat3(dhexp(key_e(bob,alice,sid_17409299),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409300),dhexp(key_e(bob,alice,sid_17409299),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),msg_a(alice,charlie,sid_17409300))),dhexp(key_e(bob,alice,sid_17409299),g)),msg_b(bob,alice,sid_17409299)))).

8. The entry statestore(alice,charlie,sid_17409300,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),msg_a(alice,charlie,sid_17409300)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,charlie,sid_17409300),g),key_e(alice,charlie,sid_17409300)),empty,empty,empty,true))) that may be in a table by 6 may be read at get {191}.
The message concat3(dhexp(key_e(bob,alice,sid_17409299),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409300),dhexp(key_e(bob,alice,sid_17409299),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),msg_a(alice,charlie,sid_17409300))),dhexp(key_e(bob,alice,sid_17409299),g)),msg_b(bob,alice,sid_17409299))) that may be sent on channel pub by 7 may be received at input {155}.
We have dhexp(key_e(bob,alice,sid_17409299),g) <> caught-fail.
So the entry statestore(alice,charlie,sid_17409300,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409300),dhexp(key_e(bob,alice,sid_17409299),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409300),dhexp(key_e(bob,alice,sid_17409299),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),msg_a(alice,charlie,sid_17409300))),dhexp(key_e(bob,alice,sid_17409299),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409300),dhexp(key_e(bob,alice,sid_17409299),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),msg_a(alice,charlie,sid_17409300))),dhexp(key_e(bob,alice,sid_17409299),g)),msg_b(bob,alice,sid_17409299)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,charlie,sid_17409300),g),key_e(alice,charlie,sid_17409300)),empty,dhexp(key_e(bob,alice,sid_17409299),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409300),dhexp(key_e(bob,alice,sid_17409299),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409300),dhexp(key_e(bob,alice,sid_17409299),g))),zero),minnonce))) may be inserted in a table at insert {190}.
table(statestore(alice,charlie,sid_17409300,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409300),dhexp(key_e(bob,alice,sid_17409299),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409300),dhexp(key_e(bob,alice,sid_17409299),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),msg_a(alice,charlie,sid_17409300))),dhexp(key_e(bob,alice,sid_17409299),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409300),dhexp(key_e(bob,alice,sid_17409299),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),msg_a(alice,charlie,sid_17409300))),dhexp(key_e(bob,alice,sid_17409299),g)),msg_b(bob,alice,sid_17409299)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,charlie,sid_17409300),g),key_e(alice,charlie,sid_17409300)),empty,dhexp(key_e(bob,alice,sid_17409299),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409300),dhexp(key_e(bob,alice,sid_17409299),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409300),dhexp(key_e(bob,alice,sid_17409299),g))),zero),minnonce)))).

9. The entry statestore(alice,charlie,sid_17409300,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409300),dhexp(key_e(bob,alice,sid_17409299),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409300),dhexp(key_e(bob,alice,sid_17409299),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),msg_a(alice,charlie,sid_17409300))),dhexp(key_e(bob,alice,sid_17409299),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409300),dhexp(key_e(bob,alice,sid_17409299),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),msg_a(alice,charlie,sid_17409300))),dhexp(key_e(bob,alice,sid_17409299),g)),msg_b(bob,alice,sid_17409299)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,charlie,sid_17409300),g),key_e(alice,charlie,sid_17409300)),empty,dhexp(key_e(bob,alice,sid_17409299),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409300),dhexp(key_e(bob,alice,sid_17409299),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409300),dhexp(key_e(bob,alice,sid_17409299),g))),zero),minnonce))) that may be in a table by 8 may be read at get {211}.
The event SendMsg(alice,charlie,stagepack_c(sid_17409300),msg_c(alice,charlie,sid_17409300)) may be executed at {208}.
So the message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409300),dhexp(key_e(bob,alice,sid_17409299),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),msg_a(alice,charlie,sid_17409300))),dhexp(key_e(bob,alice,sid_17409299),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409300),dhexp(key_e(bob,alice,sid_17409299),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),msg_a(alice,charlie,sid_17409300))),dhexp(key_e(bob,alice,sid_17409299),g)),msg_b(bob,alice,sid_17409299))),msg_c(alice,charlie,sid_17409300))) may be sent on channel pub at output {210}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409300),dhexp(key_e(bob,alice,sid_17409299),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),msg_a(alice,charlie,sid_17409300))),dhexp(key_e(bob,alice,sid_17409299),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409300),dhexp(key_e(bob,alice,sid_17409299),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),msg_a(alice,charlie,sid_17409300))),dhexp(key_e(bob,alice,sid_17409299),g)),msg_b(bob,alice,sid_17409299))),msg_c(alice,charlie,sid_17409300)))).

10. The entry statestore(bob,alice,sid_17409299,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409300),dhexp(key_e(bob,alice,sid_17409299),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409300),dhexp(key_e(bob,alice,sid_17409299),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),msg_a(alice,charlie,sid_17409300))),dhexp(key_e(bob,alice,sid_17409299),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409300),dhexp(key_e(bob,alice,sid_17409299),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),msg_a(alice,charlie,sid_17409300))),dhexp(key_e(bob,alice,sid_17409299),g)),msg_b(bob,alice,sid_17409299)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(bob,alice,sid_17409299),g),key_e(bob,alice,sid_17409299)),empty,dhexp(key_e(alice,charlie,sid_17409300),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409300),dhexp(key_e(bob,alice,sid_17409299),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409300),dhexp(key_e(bob,alice,sid_17409299),g))),zero),minnonce))) that may be in a table by 5 may be read at get {329}.
The message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409300),dhexp(key_e(bob,alice,sid_17409299),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),msg_a(alice,charlie,sid_17409300))),dhexp(key_e(bob,alice,sid_17409299),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409300),dhexp(key_e(bob,alice,sid_17409299),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409300),g)),msg_a(alice,charlie,sid_17409300))),dhexp(key_e(bob,alice,sid_17409299),g)),msg_b(bob,alice,sid_17409299))),msg_c(alice,charlie,sid_17409300))) that may be sent on channel pub by 9 may be received at input {311}.
So event RecvMsg(bob,alice,stagepack_c(sid_17409299),msg_c(alice,charlie,sid_17409300)) may be executed at {327}.
end(RecvMsg(bob,alice,stagepack_c(sid_17409299),msg_c(alice,charlie,sid_17409300))).


RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) cannot be proved.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,charlie,stagepack_c(sid[!1 = @sid_17409307]),msg_c(alice,charlie,sid[!1 = @sid_17409307]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_17409308]),msg_b(bob,alice,sid[!1 = @sid_17409308]))) && begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_17409307]),msg_a(alice,charlie,sid[!1 = @sid_17409307]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_17409308]),msg_c(alice,charlie,sid[!1 = @sid_17409307])))
Abbreviations:
sid_17409447 = sid[!1 = @sid_17409434]
sid_17409448 = sid[!1 = @sid_17409392]

1. The entry statestore(bob,alice,sid_17409447,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {248}.
table(statestore(bob,alice,sid_17409447,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

2. The entry statestore(alice,charlie,sid_17409448,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {131}.
table(statestore(alice,charlie,sid_17409448,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,charlie,sid_17409448,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {154}.
The event SendMsg(alice,charlie,stagepack_a(sid_17409448),msg_a(alice,charlie,sid_17409448)) may be executed at {151}.
So the message concat3(dhexp(key_e(alice,charlie,sid_17409448),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),msg_a(alice,charlie,sid_17409448))) may be sent on channel pub at output {153}.
mess(pub,concat3(dhexp(key_e(alice,charlie,sid_17409448),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),msg_a(alice,charlie,sid_17409448)))).

4. The entry statestore(bob,alice,sid_17409447,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 1 may be read at get {270}.
The message concat3(dhexp(key_e(alice,charlie,sid_17409448),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),msg_a(alice,charlie,sid_17409448))) that may be sent on channel pub by 3 may be received at input {249}.
We have dhexp(key_e(alice,charlie,sid_17409448),g) <> caught-fail.
So the entry statestore(bob,alice,sid_17409447,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),msg_a(alice,charlie,sid_17409448)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,charlie,sid_17409448),g),empty,false))) may be inserted in a table at insert {269}.
table(statestore(bob,alice,sid_17409447,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),msg_a(alice,charlie,sid_17409448)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,charlie,sid_17409448),g),empty,false)))).

5. The entry statestore(bob,alice,sid_17409447,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),msg_a(alice,charlie,sid_17409448)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,charlie,sid_17409448),g),empty,false))) that may be in a table by 4 may be read at get {308}.
The event SendMsg(bob,alice,stagepack_b(sid_17409447),msg_b(bob,alice,sid_17409447)) may be executed at {305}.
So the entry statestore(bob,alice,sid_17409447,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409448),dhexp(key_e(bob,alice,sid_17409447),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409448),dhexp(key_e(bob,alice,sid_17409447),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),msg_a(alice,charlie,sid_17409448))),dhexp(key_e(bob,alice,sid_17409447),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409448),dhexp(key_e(bob,alice,sid_17409447),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),msg_a(alice,charlie,sid_17409448))),dhexp(key_e(bob,alice,sid_17409447),g)),msg_b(bob,alice,sid_17409447)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(bob,alice,sid_17409447),g),key_e(bob,alice,sid_17409447)),empty,dhexp(key_e(alice,charlie,sid_17409448),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409448),dhexp(key_e(bob,alice,sid_17409447),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409448),dhexp(key_e(bob,alice,sid_17409447),g))),zero),minnonce))) may be inserted in a table at insert {306}.
table(statestore(bob,alice,sid_17409447,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409448),dhexp(key_e(bob,alice,sid_17409447),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409448),dhexp(key_e(bob,alice,sid_17409447),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),msg_a(alice,charlie,sid_17409448))),dhexp(key_e(bob,alice,sid_17409447),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409448),dhexp(key_e(bob,alice,sid_17409447),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),msg_a(alice,charlie,sid_17409448))),dhexp(key_e(bob,alice,sid_17409447),g)),msg_b(bob,alice,sid_17409447)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(bob,alice,sid_17409447),g),key_e(bob,alice,sid_17409447)),empty,dhexp(key_e(alice,charlie,sid_17409448),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409448),dhexp(key_e(bob,alice,sid_17409447),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409448),dhexp(key_e(bob,alice,sid_17409447),g))),zero),minnonce)))).

6. The entry statestore(alice,charlie,sid_17409448,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {154}.
The event SendMsg(alice,charlie,stagepack_a(sid_17409448),msg_a(alice,charlie,sid_17409448)) may be executed at {151}.
So the entry statestore(alice,charlie,sid_17409448,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),msg_a(alice,charlie,sid_17409448)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,charlie,sid_17409448),g),key_e(alice,charlie,sid_17409448)),empty,empty,empty,true))) may be inserted in a table at insert {152}.
table(statestore(alice,charlie,sid_17409448,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),msg_a(alice,charlie,sid_17409448)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,charlie,sid_17409448),g),key_e(alice,charlie,sid_17409448)),empty,empty,empty,true)))).

7. The entry statestore(bob,alice,sid_17409447,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),msg_a(alice,charlie,sid_17409448)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,charlie,sid_17409448),g),empty,false))) that may be in a table by 4 may be read at get {308}.
The event SendMsg(bob,alice,stagepack_b(sid_17409447),msg_b(bob,alice,sid_17409447)) may be executed at {305}.
So the message concat3(dhexp(key_e(bob,alice,sid_17409447),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409448),dhexp(key_e(bob,alice,sid_17409447),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),msg_a(alice,charlie,sid_17409448))),dhexp(key_e(bob,alice,sid_17409447),g)),msg_b(bob,alice,sid_17409447))) may be sent on channel pub at output {307}.
mess(pub,concat3(dhexp(key_e(bob,alice,sid_17409447),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409448),dhexp(key_e(bob,alice,sid_17409447),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),msg_a(alice,charlie,sid_17409448))),dhexp(key_e(bob,alice,sid_17409447),g)),msg_b(bob,alice,sid_17409447)))).

8. The entry statestore(alice,charlie,sid_17409448,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),msg_a(alice,charlie,sid_17409448)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,charlie,sid_17409448),g),key_e(alice,charlie,sid_17409448)),empty,empty,empty,true))) that may be in a table by 6 may be read at get {191}.
The message concat3(dhexp(key_e(bob,alice,sid_17409447),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409448),dhexp(key_e(bob,alice,sid_17409447),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),msg_a(alice,charlie,sid_17409448))),dhexp(key_e(bob,alice,sid_17409447),g)),msg_b(bob,alice,sid_17409447))) that may be sent on channel pub by 7 may be received at input {155}.
We have dhexp(key_e(bob,alice,sid_17409447),g) <> caught-fail.
So the entry statestore(alice,charlie,sid_17409448,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409448),dhexp(key_e(bob,alice,sid_17409447),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409448),dhexp(key_e(bob,alice,sid_17409447),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),msg_a(alice,charlie,sid_17409448))),dhexp(key_e(bob,alice,sid_17409447),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409448),dhexp(key_e(bob,alice,sid_17409447),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),msg_a(alice,charlie,sid_17409448))),dhexp(key_e(bob,alice,sid_17409447),g)),msg_b(bob,alice,sid_17409447)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,charlie,sid_17409448),g),key_e(alice,charlie,sid_17409448)),empty,dhexp(key_e(bob,alice,sid_17409447),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409448),dhexp(key_e(bob,alice,sid_17409447),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409448),dhexp(key_e(bob,alice,sid_17409447),g))),zero),minnonce))) may be inserted in a table at insert {190}.
table(statestore(alice,charlie,sid_17409448,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409448),dhexp(key_e(bob,alice,sid_17409447),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409448),dhexp(key_e(bob,alice,sid_17409447),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),msg_a(alice,charlie,sid_17409448))),dhexp(key_e(bob,alice,sid_17409447),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409448),dhexp(key_e(bob,alice,sid_17409447),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),msg_a(alice,charlie,sid_17409448))),dhexp(key_e(bob,alice,sid_17409447),g)),msg_b(bob,alice,sid_17409447)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,charlie,sid_17409448),g),key_e(alice,charlie,sid_17409448)),empty,dhexp(key_e(bob,alice,sid_17409447),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409448),dhexp(key_e(bob,alice,sid_17409447),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409448),dhexp(key_e(bob,alice,sid_17409447),g))),zero),minnonce)))).

9. The entry statestore(alice,charlie,sid_17409448,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409448),dhexp(key_e(bob,alice,sid_17409447),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409448),dhexp(key_e(bob,alice,sid_17409447),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),msg_a(alice,charlie,sid_17409448))),dhexp(key_e(bob,alice,sid_17409447),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409448),dhexp(key_e(bob,alice,sid_17409447),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),msg_a(alice,charlie,sid_17409448))),dhexp(key_e(bob,alice,sid_17409447),g)),msg_b(bob,alice,sid_17409447)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,charlie,sid_17409448),g),key_e(alice,charlie,sid_17409448)),empty,dhexp(key_e(bob,alice,sid_17409447),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409448),dhexp(key_e(bob,alice,sid_17409447),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409448),dhexp(key_e(bob,alice,sid_17409447),g))),zero),minnonce))) that may be in a table by 8 may be read at get {211}.
The event SendMsg(alice,charlie,stagepack_c(sid_17409448),msg_c(alice,charlie,sid_17409448)) may be executed at {208}.
So the message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409448),dhexp(key_e(bob,alice,sid_17409447),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),msg_a(alice,charlie,sid_17409448))),dhexp(key_e(bob,alice,sid_17409447),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409448),dhexp(key_e(bob,alice,sid_17409447),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),msg_a(alice,charlie,sid_17409448))),dhexp(key_e(bob,alice,sid_17409447),g)),msg_b(bob,alice,sid_17409447))),msg_c(alice,charlie,sid_17409448))) may be sent on channel pub at output {210}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409448),dhexp(key_e(bob,alice,sid_17409447),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),msg_a(alice,charlie,sid_17409448))),dhexp(key_e(bob,alice,sid_17409447),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409448),dhexp(key_e(bob,alice,sid_17409447),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),msg_a(alice,charlie,sid_17409448))),dhexp(key_e(bob,alice,sid_17409447),g)),msg_b(bob,alice,sid_17409447))),msg_c(alice,charlie,sid_17409448)))).

10. The entry statestore(bob,alice,sid_17409447,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409448),dhexp(key_e(bob,alice,sid_17409447),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409448),dhexp(key_e(bob,alice,sid_17409447),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),msg_a(alice,charlie,sid_17409448))),dhexp(key_e(bob,alice,sid_17409447),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409448),dhexp(key_e(bob,alice,sid_17409447),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),msg_a(alice,charlie,sid_17409448))),dhexp(key_e(bob,alice,sid_17409447),g)),msg_b(bob,alice,sid_17409447)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(bob,alice,sid_17409447),g),key_e(bob,alice,sid_17409447)),empty,dhexp(key_e(alice,charlie,sid_17409448),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409448),dhexp(key_e(bob,alice,sid_17409447),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409448),dhexp(key_e(bob,alice,sid_17409447),g))),zero),minnonce))) that may be in a table by 5 may be read at get {329}.
The message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409448),dhexp(key_e(bob,alice,sid_17409447),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),msg_a(alice,charlie,sid_17409448))),dhexp(key_e(bob,alice,sid_17409447),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,charlie,sid_17409448),dhexp(key_e(bob,alice,sid_17409447),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_17409448),g)),msg_a(alice,charlie,sid_17409448))),dhexp(key_e(bob,alice,sid_17409447),g)),msg_b(bob,alice,sid_17409447))),msg_c(alice,charlie,sid_17409448))) that may be sent on channel pub by 9 may be received at input {311}.
So event RecvMsg(bob,alice,stagepack_c(sid_17409447),msg_c(alice,charlie,sid_17409448)) may be executed at {327}.
end(RecvMsg(bob,alice,stagepack_c(sid_17409447),msg_c(alice,charlie,sid_17409448))).


RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) cannot be proved.
Starting query not attacker_p1(msg_c(alice,bob,sid_a))
RESULT not attacker_p1(msg_c(alice,bob,sid_a)) is true.
Starting query attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob))
RESULT attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob)) is true.
Starting query attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice)))
RESULT attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice))) is true.
Starting query attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob))
RESULT attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m))
goal reachable: begin(SendMsg(bob,charlie,stagepack_d(sid[!1 = @sid_17409464]),msg_d(bob,charlie,sid[!1 = @sid_17409464]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_17409465]),msg_c(alice,bob,sid[!1 = @sid_17409465]))) && begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_17409464]),msg_b(bob,charlie,sid[!1 = @sid_17409464]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_17409465]),msg_a(alice,bob,sid[!1 = @sid_17409465]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_17409465]),msg_d(bob,charlie,sid[!1 = @sid_17409464])))
Abbreviations:
sid_17409716 = sid[!1 = @sid_17409703]
sid_17409717 = sid[!1 = @sid_17409647]

1. The entry statestore(alice,bob,sid_17409716,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {14}.
table(statestore(alice,bob,sid_17409716,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

2. The entry statestore(alice,bob,sid_17409716,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 1 may be read at get {37}.
The event SendMsg(alice,bob,stagepack_a(sid_17409716),msg_a(alice,bob,sid_17409716)) may be executed at {34}.
So the entry statestore(alice,bob,sid_17409716,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17409716),g),key_e(alice,bob,sid_17409716)),empty,empty,empty,true))) may be inserted in a table at insert {35}.
table(statestore(alice,bob,sid_17409716,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17409716),g),key_e(alice,bob,sid_17409716)),empty,empty,empty,true)))).

3. The entry statestore(bob,charlie,sid_17409717,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {364}.
table(statestore(bob,charlie,sid_17409717,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

4. The entry statestore(alice,bob,sid_17409716,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 1 may be read at get {37}.
The event SendMsg(alice,bob,stagepack_a(sid_17409716),msg_a(alice,bob,sid_17409716)) may be executed at {34}.
So the message concat3(dhexp(key_e(alice,bob,sid_17409716),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))) may be sent on channel pub at output {36}.
mess(pub,concat3(dhexp(key_e(alice,bob,sid_17409716),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716)))).

5. The entry statestore(bob,charlie,sid_17409717,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 3 may be read at get {386}.
The message concat3(dhexp(key_e(alice,bob,sid_17409716),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))) that may be sent on channel pub by 4 may be received at input {365}.
We have dhexp(key_e(alice,bob,sid_17409716),g) <> caught-fail.
So the entry statestore(bob,charlie,sid_17409717,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_17409716),g),empty,false))) may be inserted in a table at insert {385}.
table(statestore(bob,charlie,sid_17409717,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_17409716),g),empty,false)))).

6. The entry statestore(bob,charlie,sid_17409717,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_17409716),g),empty,false))) that may be in a table by 5 may be read at get {424}.
The event SendMsg(bob,charlie,stagepack_b(sid_17409717),msg_b(bob,charlie,sid_17409717)) may be executed at {421}.
So the message concat3(dhexp(key_e(bob,charlie,sid_17409717),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),msg_b(bob,charlie,sid_17409717))) may be sent on channel pub at output {423}.
mess(pub,concat3(dhexp(key_e(bob,charlie,sid_17409717),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),msg_b(bob,charlie,sid_17409717)))).

7. The entry statestore(alice,bob,sid_17409716,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17409716),g),key_e(alice,bob,sid_17409716)),empty,empty,empty,true))) that may be in a table by 2 may be read at get {74}.
The message concat3(dhexp(key_e(bob,charlie,sid_17409717),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),msg_b(bob,charlie,sid_17409717))) that may be sent on channel pub by 6 may be received at input {38}.
We have dhexp(key_e(bob,charlie,sid_17409717),g) <> caught-fail.
So the entry statestore(alice,bob,sid_17409716,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),msg_b(bob,charlie,sid_17409717)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17409716),g),key_e(alice,bob,sid_17409716)),empty,dhexp(key_e(bob,charlie,sid_17409717),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),minnonce))) may be inserted in a table at insert {73}.
table(statestore(alice,bob,sid_17409716,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),msg_b(bob,charlie,sid_17409717)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17409716),g),key_e(alice,bob,sid_17409716)),empty,dhexp(key_e(bob,charlie,sid_17409717),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),minnonce)))).

8. The entry statestore(alice,bob,sid_17409716,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),msg_b(bob,charlie,sid_17409717)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17409716),g),key_e(alice,bob,sid_17409716)),empty,dhexp(key_e(bob,charlie,sid_17409717),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),minnonce))) that may be in a table by 7 may be read at get {94}.
The event SendMsg(alice,bob,stagepack_c(sid_17409716),msg_c(alice,bob,sid_17409716)) may be executed at {91}.
So the entry statestore(alice,bob,sid_17409716,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),msg_b(bob,charlie,sid_17409717))),encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),msg_b(bob,charlie,sid_17409717))),msg_c(alice,bob,sid_17409716)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17409716),g),key_e(alice,bob,sid_17409716)),empty,dhexp(key_e(bob,charlie,sid_17409717),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),minnonce))) may be inserted in a table at insert {92}.
table(statestore(alice,bob,sid_17409716,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),msg_b(bob,charlie,sid_17409717))),encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),msg_b(bob,charlie,sid_17409717))),msg_c(alice,bob,sid_17409716)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17409716),g),key_e(alice,bob,sid_17409716)),empty,dhexp(key_e(bob,charlie,sid_17409717),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),minnonce)))).

9. The entry statestore(bob,charlie,sid_17409717,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_17409716),g),empty,false))) that may be in a table by 5 may be read at get {424}.
The event SendMsg(bob,charlie,stagepack_b(sid_17409717),msg_b(bob,charlie,sid_17409717)) may be executed at {421}.
So the entry statestore(bob,charlie,sid_17409717,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),msg_b(bob,charlie,sid_17409717)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(bob,charlie,sid_17409717),g),key_e(bob,charlie,sid_17409717)),empty,dhexp(key_e(alice,bob,sid_17409716),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),minnonce))) may be inserted in a table at insert {422}.
table(statestore(bob,charlie,sid_17409717,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),msg_b(bob,charlie,sid_17409717)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(bob,charlie,sid_17409717),g),key_e(bob,charlie,sid_17409717)),empty,dhexp(key_e(alice,bob,sid_17409716),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),minnonce)))).

10. The entry statestore(alice,bob,sid_17409716,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),msg_b(bob,charlie,sid_17409717)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17409716),g),key_e(alice,bob,sid_17409716)),empty,dhexp(key_e(bob,charlie,sid_17409717),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),minnonce))) that may be in a table by 7 may be read at get {94}.
The event SendMsg(alice,bob,stagepack_c(sid_17409716),msg_c(alice,bob,sid_17409716)) may be executed at {91}.
So the message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),msg_b(bob,charlie,sid_17409717))),msg_c(alice,bob,sid_17409716))) may be sent on channel pub at output {93}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),msg_b(bob,charlie,sid_17409717))),msg_c(alice,bob,sid_17409716)))).

11. The entry statestore(bob,charlie,sid_17409717,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),msg_b(bob,charlie,sid_17409717)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(bob,charlie,sid_17409717),g),key_e(bob,charlie,sid_17409717)),empty,dhexp(key_e(alice,bob,sid_17409716),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),minnonce))) that may be in a table by 9 may be read at get {445}.
The message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),msg_b(bob,charlie,sid_17409717))),msg_c(alice,bob,sid_17409716))) that may be sent on channel pub by 10 may be received at input {427}.
So the entry statestore(bob,charlie,sid_17409717,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),msg_b(bob,charlie,sid_17409717))),encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),msg_b(bob,charlie,sid_17409717))),msg_c(alice,bob,sid_17409716)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(bob,charlie,sid_17409717),g),key_e(bob,charlie,sid_17409717)),empty,dhexp(key_e(alice,bob,sid_17409716),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),minnonce))) may be inserted in a table at insert {444}.
table(statestore(bob,charlie,sid_17409717,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),msg_b(bob,charlie,sid_17409717))),encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),msg_b(bob,charlie,sid_17409717))),msg_c(alice,bob,sid_17409716)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(bob,charlie,sid_17409717),g),key_e(bob,charlie,sid_17409717)),empty,dhexp(key_e(alice,bob,sid_17409716),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),minnonce)))).

12. The entry statestore(bob,charlie,sid_17409717,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),msg_b(bob,charlie,sid_17409717))),encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),msg_b(bob,charlie,sid_17409717))),msg_c(alice,bob,sid_17409716)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(bob,charlie,sid_17409717),g),key_e(bob,charlie,sid_17409717)),empty,dhexp(key_e(alice,bob,sid_17409716),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),minnonce))) that may be in a table by 11 may be read at get {464}.
The event SendMsg(bob,charlie,stagepack_d(sid_17409717),msg_d(bob,charlie,sid_17409717)) may be executed at {462}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),msg_b(bob,charlie,sid_17409717))),encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),msg_b(bob,charlie,sid_17409717))),msg_c(alice,bob,sid_17409716))),msg_d(bob,charlie,sid_17409717))) may be sent on channel pub at output {463}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),msg_b(bob,charlie,sid_17409717))),encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),msg_b(bob,charlie,sid_17409717))),msg_c(alice,bob,sid_17409716))),msg_d(bob,charlie,sid_17409717)))).

13. The entry statestore(alice,bob,sid_17409716,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),msg_b(bob,charlie,sid_17409717))),encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),msg_b(bob,charlie,sid_17409717))),msg_c(alice,bob,sid_17409716)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17409716),g),key_e(alice,bob,sid_17409716)),empty,dhexp(key_e(bob,charlie,sid_17409717),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),minnonce))) that may be in a table by 8 may be read at get {115}.
The message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),msg_b(bob,charlie,sid_17409717))),encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17409716),dhexp(key_e(bob,charlie,sid_17409717),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17409716),g)),msg_a(alice,bob,sid_17409716))),dhexp(key_e(bob,charlie,sid_17409717),g)),msg_b(bob,charlie,sid_17409717))),msg_c(alice,bob,sid_17409716))),msg_d(bob,charlie,sid_17409717))) that may be sent on channel pub by 12 may be received at input {97}.
So event RecvMsg(alice,bob,stagepack_d(sid_17409716),msg_d(bob,charlie,sid_17409717)) may be executed at {113}.
end(RecvMsg(alice,bob,stagepack_d(sid_17409716),msg_d(bob,charlie,sid_17409717))).


RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_983,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(bob,charlie,stagepack_d(sid[!1 = @sid_17409720]),msg_d(bob,charlie,sid[!1 = @sid_17409720]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_17409721]),msg_c(alice,bob,sid[!1 = @sid_17409721]))) && begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_17409720]),msg_b(bob,charlie,sid[!1 = @sid_17409720]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_17409721]),msg_a(alice,bob,sid[!1 = @sid_17409721]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_17409721]),msg_d(bob,charlie,sid[!1 = @sid_17409720])))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_17409724]),msg_d(bob,alice,sid[!1 = @sid_17409724]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_17409725]),msg_c(alice,bob,sid[!1 = @sid_17409725]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_17409724]),msg_b(bob,alice,sid[!1 = @sid_17409724]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_17409725]),msg_a(alice,bob,sid[!1 = @sid_17409725]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_17409725]),msg_d(bob,alice,sid[!1 = @sid_17409724])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_983,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_983,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(bob,charlie,stagepack_d(sid[!1 = @sid_17409734]),msg_d(bob,charlie,sid[!1 = @sid_17409734]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_17409735]),msg_c(alice,bob,sid[!1 = @sid_17409735]))) && begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_17409734]),msg_b(bob,charlie,sid[!1 = @sid_17409734]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_17409735]),msg_a(alice,bob,sid[!1 = @sid_17409735]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_17409735]),msg_d(bob,charlie,sid[!1 = @sid_17409734])))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_17409738]),msg_d(bob,alice,sid[!1 = @sid_17409738]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_17409739]),msg_c(alice,bob,sid[!1 = @sid_17409739]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_17409738]),msg_b(bob,alice,sid[!1 = @sid_17409738]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_17409739]),msg_a(alice,bob,sid[!1 = @sid_17409739]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_17409739]),msg_d(bob,alice,sid[!1 = @sid_17409738])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_983,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(bob,charlie,stagepack_d(sid[!1 = @sid_17409748]),msg_d(bob,charlie,sid[!1 = @sid_17409748]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_17409749]),msg_c(alice,bob,sid[!1 = @sid_17409749]))) && begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_17409748]),msg_b(bob,charlie,sid[!1 = @sid_17409748]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_17409749]),msg_a(alice,bob,sid[!1 = @sid_17409749]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_17409749]),msg_d(bob,charlie,sid[!1 = @sid_17409748])))
Abbreviations:
sid_17410000 = sid[!1 = @sid_17409987]
sid_17410001 = sid[!1 = @sid_17409931]

1. The entry statestore(alice,bob,sid_17410000,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {14}.
table(statestore(alice,bob,sid_17410000,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

2. The entry statestore(alice,bob,sid_17410000,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 1 may be read at get {37}.
The event SendMsg(alice,bob,stagepack_a(sid_17410000),msg_a(alice,bob,sid_17410000)) may be executed at {34}.
So the entry statestore(alice,bob,sid_17410000,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17410000),g),key_e(alice,bob,sid_17410000)),empty,empty,empty,true))) may be inserted in a table at insert {35}.
table(statestore(alice,bob,sid_17410000,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17410000),g),key_e(alice,bob,sid_17410000)),empty,empty,empty,true)))).

3. The entry statestore(bob,charlie,sid_17410001,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {364}.
table(statestore(bob,charlie,sid_17410001,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

4. The entry statestore(alice,bob,sid_17410000,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 1 may be read at get {37}.
The event SendMsg(alice,bob,stagepack_a(sid_17410000),msg_a(alice,bob,sid_17410000)) may be executed at {34}.
So the message concat3(dhexp(key_e(alice,bob,sid_17410000),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))) may be sent on channel pub at output {36}.
mess(pub,concat3(dhexp(key_e(alice,bob,sid_17410000),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000)))).

5. The entry statestore(bob,charlie,sid_17410001,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 3 may be read at get {386}.
The message concat3(dhexp(key_e(alice,bob,sid_17410000),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))) that may be sent on channel pub by 4 may be received at input {365}.
We have dhexp(key_e(alice,bob,sid_17410000),g) <> caught-fail.
So the entry statestore(bob,charlie,sid_17410001,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_17410000),g),empty,false))) may be inserted in a table at insert {385}.
table(statestore(bob,charlie,sid_17410001,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_17410000),g),empty,false)))).

6. The entry statestore(bob,charlie,sid_17410001,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_17410000),g),empty,false))) that may be in a table by 5 may be read at get {424}.
The event SendMsg(bob,charlie,stagepack_b(sid_17410001),msg_b(bob,charlie,sid_17410001)) may be executed at {421}.
So the message concat3(dhexp(key_e(bob,charlie,sid_17410001),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),msg_b(bob,charlie,sid_17410001))) may be sent on channel pub at output {423}.
mess(pub,concat3(dhexp(key_e(bob,charlie,sid_17410001),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),msg_b(bob,charlie,sid_17410001)))).

7. The entry statestore(alice,bob,sid_17410000,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17410000),g),key_e(alice,bob,sid_17410000)),empty,empty,empty,true))) that may be in a table by 2 may be read at get {74}.
The message concat3(dhexp(key_e(bob,charlie,sid_17410001),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),msg_b(bob,charlie,sid_17410001))) that may be sent on channel pub by 6 may be received at input {38}.
We have dhexp(key_e(bob,charlie,sid_17410001),g) <> caught-fail.
So the entry statestore(alice,bob,sid_17410000,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),msg_b(bob,charlie,sid_17410001)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17410000),g),key_e(alice,bob,sid_17410000)),empty,dhexp(key_e(bob,charlie,sid_17410001),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),minnonce))) may be inserted in a table at insert {73}.
table(statestore(alice,bob,sid_17410000,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),msg_b(bob,charlie,sid_17410001)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17410000),g),key_e(alice,bob,sid_17410000)),empty,dhexp(key_e(bob,charlie,sid_17410001),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),minnonce)))).

8. The entry statestore(alice,bob,sid_17410000,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),msg_b(bob,charlie,sid_17410001)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17410000),g),key_e(alice,bob,sid_17410000)),empty,dhexp(key_e(bob,charlie,sid_17410001),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),minnonce))) that may be in a table by 7 may be read at get {94}.
The event SendMsg(alice,bob,stagepack_c(sid_17410000),msg_c(alice,bob,sid_17410000)) may be executed at {91}.
So the entry statestore(alice,bob,sid_17410000,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),msg_b(bob,charlie,sid_17410001))),encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),msg_b(bob,charlie,sid_17410001))),msg_c(alice,bob,sid_17410000)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17410000),g),key_e(alice,bob,sid_17410000)),empty,dhexp(key_e(bob,charlie,sid_17410001),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),minnonce))) may be inserted in a table at insert {92}.
table(statestore(alice,bob,sid_17410000,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),msg_b(bob,charlie,sid_17410001))),encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),msg_b(bob,charlie,sid_17410001))),msg_c(alice,bob,sid_17410000)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17410000),g),key_e(alice,bob,sid_17410000)),empty,dhexp(key_e(bob,charlie,sid_17410001),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),minnonce)))).

9. The entry statestore(bob,charlie,sid_17410001,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_17410000),g),empty,false))) that may be in a table by 5 may be read at get {424}.
The event SendMsg(bob,charlie,stagepack_b(sid_17410001),msg_b(bob,charlie,sid_17410001)) may be executed at {421}.
So the entry statestore(bob,charlie,sid_17410001,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),msg_b(bob,charlie,sid_17410001)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(bob,charlie,sid_17410001),g),key_e(bob,charlie,sid_17410001)),empty,dhexp(key_e(alice,bob,sid_17410000),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),minnonce))) may be inserted in a table at insert {422}.
table(statestore(bob,charlie,sid_17410001,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),msg_b(bob,charlie,sid_17410001)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(bob,charlie,sid_17410001),g),key_e(bob,charlie,sid_17410001)),empty,dhexp(key_e(alice,bob,sid_17410000),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),minnonce)))).

10. The entry statestore(alice,bob,sid_17410000,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),msg_b(bob,charlie,sid_17410001)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17410000),g),key_e(alice,bob,sid_17410000)),empty,dhexp(key_e(bob,charlie,sid_17410001),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),minnonce))) that may be in a table by 7 may be read at get {94}.
The event SendMsg(alice,bob,stagepack_c(sid_17410000),msg_c(alice,bob,sid_17410000)) may be executed at {91}.
So the message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),msg_b(bob,charlie,sid_17410001))),msg_c(alice,bob,sid_17410000))) may be sent on channel pub at output {93}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),msg_b(bob,charlie,sid_17410001))),msg_c(alice,bob,sid_17410000)))).

11. The entry statestore(bob,charlie,sid_17410001,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),msg_b(bob,charlie,sid_17410001)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(bob,charlie,sid_17410001),g),key_e(bob,charlie,sid_17410001)),empty,dhexp(key_e(alice,bob,sid_17410000),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),minnonce))) that may be in a table by 9 may be read at get {445}.
The message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),msg_b(bob,charlie,sid_17410001))),msg_c(alice,bob,sid_17410000))) that may be sent on channel pub by 10 may be received at input {427}.
So the entry statestore(bob,charlie,sid_17410001,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),msg_b(bob,charlie,sid_17410001))),encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),msg_b(bob,charlie,sid_17410001))),msg_c(alice,bob,sid_17410000)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(bob,charlie,sid_17410001),g),key_e(bob,charlie,sid_17410001)),empty,dhexp(key_e(alice,bob,sid_17410000),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),minnonce))) may be inserted in a table at insert {444}.
table(statestore(bob,charlie,sid_17410001,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),msg_b(bob,charlie,sid_17410001))),encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),msg_b(bob,charlie,sid_17410001))),msg_c(alice,bob,sid_17410000)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(bob,charlie,sid_17410001),g),key_e(bob,charlie,sid_17410001)),empty,dhexp(key_e(alice,bob,sid_17410000),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),minnonce)))).

12. The entry statestore(bob,charlie,sid_17410001,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),msg_b(bob,charlie,sid_17410001))),encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),msg_b(bob,charlie,sid_17410001))),msg_c(alice,bob,sid_17410000)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(bob,charlie,sid_17410001),g),key_e(bob,charlie,sid_17410001)),empty,dhexp(key_e(alice,bob,sid_17410000),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),minnonce))) that may be in a table by 11 may be read at get {464}.
The event SendMsg(bob,charlie,stagepack_d(sid_17410001),msg_d(bob,charlie,sid_17410001)) may be executed at {462}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),msg_b(bob,charlie,sid_17410001))),encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),msg_b(bob,charlie,sid_17410001))),msg_c(alice,bob,sid_17410000))),msg_d(bob,charlie,sid_17410001))) may be sent on channel pub at output {463}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),msg_b(bob,charlie,sid_17410001))),encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),msg_b(bob,charlie,sid_17410001))),msg_c(alice,bob,sid_17410000))),msg_d(bob,charlie,sid_17410001)))).

13. The entry statestore(alice,bob,sid_17410000,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),msg_b(bob,charlie,sid_17410001))),encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),msg_b(bob,charlie,sid_17410001))),msg_c(alice,bob,sid_17410000)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17410000),g),key_e(alice,bob,sid_17410000)),empty,dhexp(key_e(bob,charlie,sid_17410001),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),minnonce))) that may be in a table by 8 may be read at get {115}.
The message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),msg_b(bob,charlie,sid_17410001))),encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410000),dhexp(key_e(bob,charlie,sid_17410001),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410000),g)),msg_a(alice,bob,sid_17410000))),dhexp(key_e(bob,charlie,sid_17410001),g)),msg_b(bob,charlie,sid_17410001))),msg_c(alice,bob,sid_17410000))),msg_d(bob,charlie,sid_17410001))) that may be sent on channel pub by 12 may be received at input {97}.
So event RecvMsg(alice,bob,stagepack_d(sid_17410000),msg_d(bob,charlie,sid_17410001)) may be executed at {113}.
end(RecvMsg(alice,bob,stagepack_d(sid_17410000),msg_d(bob,charlie,sid_17410001))).


RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(bob,charlie,stagepack_d(sid[!1 = @sid_17410004]),msg_d(bob,charlie,sid[!1 = @sid_17410004]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_17410005]),msg_c(alice,bob,sid[!1 = @sid_17410005]))) && begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_17410004]),msg_b(bob,charlie,sid[!1 = @sid_17410004]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_17410005]),msg_a(alice,bob,sid[!1 = @sid_17410005]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_17410005]),msg_d(bob,charlie,sid[!1 = @sid_17410004])))
Abbreviations:
sid_17410256 = sid[!1 = @sid_17410243]
sid_17410257 = sid[!1 = @sid_17410187]

1. The entry statestore(alice,bob,sid_17410256,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {14}.
table(statestore(alice,bob,sid_17410256,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

2. The entry statestore(alice,bob,sid_17410256,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 1 may be read at get {37}.
The event SendMsg(alice,bob,stagepack_a(sid_17410256),msg_a(alice,bob,sid_17410256)) may be executed at {34}.
So the entry statestore(alice,bob,sid_17410256,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17410256),g),key_e(alice,bob,sid_17410256)),empty,empty,empty,true))) may be inserted in a table at insert {35}.
table(statestore(alice,bob,sid_17410256,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17410256),g),key_e(alice,bob,sid_17410256)),empty,empty,empty,true)))).

3. The entry statestore(bob,charlie,sid_17410257,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {364}.
table(statestore(bob,charlie,sid_17410257,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

4. The entry statestore(alice,bob,sid_17410256,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 1 may be read at get {37}.
The event SendMsg(alice,bob,stagepack_a(sid_17410256),msg_a(alice,bob,sid_17410256)) may be executed at {34}.
So the message concat3(dhexp(key_e(alice,bob,sid_17410256),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))) may be sent on channel pub at output {36}.
mess(pub,concat3(dhexp(key_e(alice,bob,sid_17410256),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256)))).

5. The entry statestore(bob,charlie,sid_17410257,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 3 may be read at get {386}.
The message concat3(dhexp(key_e(alice,bob,sid_17410256),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))) that may be sent on channel pub by 4 may be received at input {365}.
We have dhexp(key_e(alice,bob,sid_17410256),g) <> caught-fail.
So the entry statestore(bob,charlie,sid_17410257,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_17410256),g),empty,false))) may be inserted in a table at insert {385}.
table(statestore(bob,charlie,sid_17410257,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_17410256),g),empty,false)))).

6. The entry statestore(bob,charlie,sid_17410257,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_17410256),g),empty,false))) that may be in a table by 5 may be read at get {424}.
The event SendMsg(bob,charlie,stagepack_b(sid_17410257),msg_b(bob,charlie,sid_17410257)) may be executed at {421}.
So the message concat3(dhexp(key_e(bob,charlie,sid_17410257),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),msg_b(bob,charlie,sid_17410257))) may be sent on channel pub at output {423}.
mess(pub,concat3(dhexp(key_e(bob,charlie,sid_17410257),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),msg_b(bob,charlie,sid_17410257)))).

7. The entry statestore(alice,bob,sid_17410256,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17410256),g),key_e(alice,bob,sid_17410256)),empty,empty,empty,true))) that may be in a table by 2 may be read at get {74}.
The message concat3(dhexp(key_e(bob,charlie,sid_17410257),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),msg_b(bob,charlie,sid_17410257))) that may be sent on channel pub by 6 may be received at input {38}.
We have dhexp(key_e(bob,charlie,sid_17410257),g) <> caught-fail.
So the entry statestore(alice,bob,sid_17410256,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),msg_b(bob,charlie,sid_17410257)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17410256),g),key_e(alice,bob,sid_17410256)),empty,dhexp(key_e(bob,charlie,sid_17410257),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),minnonce))) may be inserted in a table at insert {73}.
table(statestore(alice,bob,sid_17410256,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),msg_b(bob,charlie,sid_17410257)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17410256),g),key_e(alice,bob,sid_17410256)),empty,dhexp(key_e(bob,charlie,sid_17410257),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),minnonce)))).

8. The entry statestore(alice,bob,sid_17410256,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),msg_b(bob,charlie,sid_17410257)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17410256),g),key_e(alice,bob,sid_17410256)),empty,dhexp(key_e(bob,charlie,sid_17410257),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),minnonce))) that may be in a table by 7 may be read at get {94}.
The event SendMsg(alice,bob,stagepack_c(sid_17410256),msg_c(alice,bob,sid_17410256)) may be executed at {91}.
So the entry statestore(alice,bob,sid_17410256,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),msg_b(bob,charlie,sid_17410257))),encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),msg_b(bob,charlie,sid_17410257))),msg_c(alice,bob,sid_17410256)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17410256),g),key_e(alice,bob,sid_17410256)),empty,dhexp(key_e(bob,charlie,sid_17410257),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),minnonce))) may be inserted in a table at insert {92}.
table(statestore(alice,bob,sid_17410256,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),msg_b(bob,charlie,sid_17410257))),encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),msg_b(bob,charlie,sid_17410257))),msg_c(alice,bob,sid_17410256)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17410256),g),key_e(alice,bob,sid_17410256)),empty,dhexp(key_e(bob,charlie,sid_17410257),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),minnonce)))).

9. The entry statestore(bob,charlie,sid_17410257,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_17410256),g),empty,false))) that may be in a table by 5 may be read at get {424}.
The event SendMsg(bob,charlie,stagepack_b(sid_17410257),msg_b(bob,charlie,sid_17410257)) may be executed at {421}.
So the entry statestore(bob,charlie,sid_17410257,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),msg_b(bob,charlie,sid_17410257)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(bob,charlie,sid_17410257),g),key_e(bob,charlie,sid_17410257)),empty,dhexp(key_e(alice,bob,sid_17410256),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),minnonce))) may be inserted in a table at insert {422}.
table(statestore(bob,charlie,sid_17410257,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),msg_b(bob,charlie,sid_17410257)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(bob,charlie,sid_17410257),g),key_e(bob,charlie,sid_17410257)),empty,dhexp(key_e(alice,bob,sid_17410256),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),minnonce)))).

10. The entry statestore(alice,bob,sid_17410256,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),msg_b(bob,charlie,sid_17410257)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17410256),g),key_e(alice,bob,sid_17410256)),empty,dhexp(key_e(bob,charlie,sid_17410257),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),minnonce))) that may be in a table by 7 may be read at get {94}.
The event SendMsg(alice,bob,stagepack_c(sid_17410256),msg_c(alice,bob,sid_17410256)) may be executed at {91}.
So the message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),msg_b(bob,charlie,sid_17410257))),msg_c(alice,bob,sid_17410256))) may be sent on channel pub at output {93}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),msg_b(bob,charlie,sid_17410257))),msg_c(alice,bob,sid_17410256)))).

11. The entry statestore(bob,charlie,sid_17410257,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),msg_b(bob,charlie,sid_17410257)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(bob,charlie,sid_17410257),g),key_e(bob,charlie,sid_17410257)),empty,dhexp(key_e(alice,bob,sid_17410256),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),minnonce))) that may be in a table by 9 may be read at get {445}.
The message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),msg_b(bob,charlie,sid_17410257))),msg_c(alice,bob,sid_17410256))) that may be sent on channel pub by 10 may be received at input {427}.
So the entry statestore(bob,charlie,sid_17410257,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),msg_b(bob,charlie,sid_17410257))),encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),msg_b(bob,charlie,sid_17410257))),msg_c(alice,bob,sid_17410256)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(bob,charlie,sid_17410257),g),key_e(bob,charlie,sid_17410257)),empty,dhexp(key_e(alice,bob,sid_17410256),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),minnonce))) may be inserted in a table at insert {444}.
table(statestore(bob,charlie,sid_17410257,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),msg_b(bob,charlie,sid_17410257))),encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),msg_b(bob,charlie,sid_17410257))),msg_c(alice,bob,sid_17410256)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(bob,charlie,sid_17410257),g),key_e(bob,charlie,sid_17410257)),empty,dhexp(key_e(alice,bob,sid_17410256),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),minnonce)))).

12. The entry statestore(bob,charlie,sid_17410257,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),msg_b(bob,charlie,sid_17410257))),encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),msg_b(bob,charlie,sid_17410257))),msg_c(alice,bob,sid_17410256)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(bob,charlie,sid_17410257),g),key_e(bob,charlie,sid_17410257)),empty,dhexp(key_e(alice,bob,sid_17410256),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),minnonce))) that may be in a table by 11 may be read at get {464}.
The event SendMsg(bob,charlie,stagepack_d(sid_17410257),msg_d(bob,charlie,sid_17410257)) may be executed at {462}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),msg_b(bob,charlie,sid_17410257))),encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),msg_b(bob,charlie,sid_17410257))),msg_c(alice,bob,sid_17410256))),msg_d(bob,charlie,sid_17410257))) may be sent on channel pub at output {463}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),msg_b(bob,charlie,sid_17410257))),encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),msg_b(bob,charlie,sid_17410257))),msg_c(alice,bob,sid_17410256))),msg_d(bob,charlie,sid_17410257)))).

13. The entry statestore(alice,bob,sid_17410256,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),msg_b(bob,charlie,sid_17410257))),encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),msg_b(bob,charlie,sid_17410257))),msg_c(alice,bob,sid_17410256)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17410256),g),key_e(alice,bob,sid_17410256)),empty,dhexp(key_e(bob,charlie,sid_17410257),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),minnonce))) that may be in a table by 8 may be read at get {115}.
The message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),msg_b(bob,charlie,sid_17410257))),encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410256),dhexp(key_e(bob,charlie,sid_17410257),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410256),g)),msg_a(alice,bob,sid_17410256))),dhexp(key_e(bob,charlie,sid_17410257),g)),msg_b(bob,charlie,sid_17410257))),msg_c(alice,bob,sid_17410256))),msg_d(bob,charlie,sid_17410257))) that may be sent on channel pub by 12 may be received at input {97}.
So event RecvMsg(alice,bob,stagepack_d(sid_17410256),msg_d(bob,charlie,sid_17410257)) may be executed at {113}.
end(RecvMsg(alice,bob,stagepack_d(sid_17410256),msg_d(bob,charlie,sid_17410257))).


RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) cannot be proved.
Starting query not attacker_p1(msg_d(bob,alice,sid_b))
RESULT not attacker_p1(msg_d(bob,alice,sid_b)) is true.
Starting query attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice))
RESULT attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice)) is true.
Starting query attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob)))
RESULT attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob))) is true.
Starting query attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice))
RESULT attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) is true.
Starting query not event(RecvEnd(true))
goal reachable: begin(SendMsg(bob,charlie,stagepack_d(sid[!1 = @sid_17410271]),msg_d(bob,charlie,sid[!1 = @sid_17410271]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_17410272]),msg_c(alice,bob,sid[!1 = @sid_17410272]))) && begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_17410271]),msg_b(bob,charlie,sid[!1 = @sid_17410271]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_17410272]),msg_a(alice,bob,sid[!1 = @sid_17410272]))) -> end(RecvEnd(true))
Abbreviations:
sid_17410550 = sid[!1 = @sid_17410539]
sid_17410551 = sid[!1 = @sid_17410483]

1. The entry statestore(alice,bob,sid_17410550,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {14}.
table(statestore(alice,bob,sid_17410550,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

2. The entry statestore(alice,bob,sid_17410550,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 1 may be read at get {37}.
The event SendMsg(alice,bob,stagepack_a(sid_17410550),msg_a(alice,bob,sid_17410550)) may be executed at {34}.
So the entry statestore(alice,bob,sid_17410550,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17410550),g),key_e(alice,bob,sid_17410550)),empty,empty,empty,true))) may be inserted in a table at insert {35}.
table(statestore(alice,bob,sid_17410550,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17410550),g),key_e(alice,bob,sid_17410550)),empty,empty,empty,true)))).

3. The entry statestore(bob,charlie,sid_17410551,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {364}.
table(statestore(bob,charlie,sid_17410551,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

4. The entry statestore(alice,bob,sid_17410550,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 1 may be read at get {37}.
The event SendMsg(alice,bob,stagepack_a(sid_17410550),msg_a(alice,bob,sid_17410550)) may be executed at {34}.
So the message concat3(dhexp(key_e(alice,bob,sid_17410550),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))) may be sent on channel pub at output {36}.
mess(pub,concat3(dhexp(key_e(alice,bob,sid_17410550),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550)))).

5. The entry statestore(bob,charlie,sid_17410551,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 3 may be read at get {386}.
The message concat3(dhexp(key_e(alice,bob,sid_17410550),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))) that may be sent on channel pub by 4 may be received at input {365}.
We have dhexp(key_e(alice,bob,sid_17410550),g) <> caught-fail.
So the entry statestore(bob,charlie,sid_17410551,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_17410550),g),empty,false))) may be inserted in a table at insert {385}.
table(statestore(bob,charlie,sid_17410551,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_17410550),g),empty,false)))).

6. The entry statestore(bob,charlie,sid_17410551,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_17410550),g),empty,false))) that may be in a table by 5 may be read at get {424}.
The event SendMsg(bob,charlie,stagepack_b(sid_17410551),msg_b(bob,charlie,sid_17410551)) may be executed at {421}.
So the message concat3(dhexp(key_e(bob,charlie,sid_17410551),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),msg_b(bob,charlie,sid_17410551))) may be sent on channel pub at output {423}.
mess(pub,concat3(dhexp(key_e(bob,charlie,sid_17410551),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),msg_b(bob,charlie,sid_17410551)))).

7. The entry statestore(alice,bob,sid_17410550,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17410550),g),key_e(alice,bob,sid_17410550)),empty,empty,empty,true))) that may be in a table by 2 may be read at get {74}.
The message concat3(dhexp(key_e(bob,charlie,sid_17410551),g),empty,encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),msg_b(bob,charlie,sid_17410551))) that may be sent on channel pub by 6 may be received at input {38}.
We have dhexp(key_e(bob,charlie,sid_17410551),g) <> caught-fail.
So the entry statestore(alice,bob,sid_17410550,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),msg_b(bob,charlie,sid_17410551)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17410550),g),key_e(alice,bob,sid_17410550)),empty,dhexp(key_e(bob,charlie,sid_17410551),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),minnonce))) may be inserted in a table at insert {73}.
table(statestore(alice,bob,sid_17410550,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),msg_b(bob,charlie,sid_17410551)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17410550),g),key_e(alice,bob,sid_17410550)),empty,dhexp(key_e(bob,charlie,sid_17410551),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),minnonce)))).

8. The entry statestore(alice,bob,sid_17410550,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),msg_b(bob,charlie,sid_17410551)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17410550),g),key_e(alice,bob,sid_17410550)),empty,dhexp(key_e(bob,charlie,sid_17410551),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),minnonce))) that may be in a table by 7 may be read at get {94}.
The event SendMsg(alice,bob,stagepack_c(sid_17410550),msg_c(alice,bob,sid_17410550)) may be executed at {91}.
So the entry statestore(alice,bob,sid_17410550,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),msg_b(bob,charlie,sid_17410551))),encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),msg_b(bob,charlie,sid_17410551))),msg_c(alice,bob,sid_17410550)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17410550),g),key_e(alice,bob,sid_17410550)),empty,dhexp(key_e(bob,charlie,sid_17410551),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),minnonce))) may be inserted in a table at insert {92}.
table(statestore(alice,bob,sid_17410550,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),msg_b(bob,charlie,sid_17410551))),encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),msg_b(bob,charlie,sid_17410551))),msg_c(alice,bob,sid_17410550)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17410550),g),key_e(alice,bob,sid_17410550)),empty,dhexp(key_e(bob,charlie,sid_17410551),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),minnonce)))).

9. The entry statestore(bob,charlie,sid_17410551,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_17410550),g),empty,false))) that may be in a table by 5 may be read at get {424}.
The event SendMsg(bob,charlie,stagepack_b(sid_17410551),msg_b(bob,charlie,sid_17410551)) may be executed at {421}.
So the entry statestore(bob,charlie,sid_17410551,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),msg_b(bob,charlie,sid_17410551)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(bob,charlie,sid_17410551),g),key_e(bob,charlie,sid_17410551)),empty,dhexp(key_e(alice,bob,sid_17410550),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),minnonce))) may be inserted in a table at insert {422}.
table(statestore(bob,charlie,sid_17410551,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),msg_b(bob,charlie,sid_17410551)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(bob,charlie,sid_17410551),g),key_e(bob,charlie,sid_17410551)),empty,dhexp(key_e(alice,bob,sid_17410550),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),minnonce)))).

10. The entry statestore(alice,bob,sid_17410550,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),msg_b(bob,charlie,sid_17410551)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17410550),g),key_e(alice,bob,sid_17410550)),empty,dhexp(key_e(bob,charlie,sid_17410551),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),minnonce))) that may be in a table by 7 may be read at get {94}.
The event SendMsg(alice,bob,stagepack_c(sid_17410550),msg_c(alice,bob,sid_17410550)) may be executed at {91}.
So the message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),msg_b(bob,charlie,sid_17410551))),msg_c(alice,bob,sid_17410550))) may be sent on channel pub at output {93}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),msg_b(bob,charlie,sid_17410551))),msg_c(alice,bob,sid_17410550)))).

11. The entry statestore(bob,charlie,sid_17410551,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),msg_b(bob,charlie,sid_17410551)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(bob,charlie,sid_17410551),g),key_e(bob,charlie,sid_17410551)),empty,dhexp(key_e(alice,bob,sid_17410550),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),minnonce))) that may be in a table by 9 may be read at get {445}.
The message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),msg_b(bob,charlie,sid_17410551))),msg_c(alice,bob,sid_17410550))) that may be sent on channel pub by 10 may be received at input {427}.
So the entry statestore(bob,charlie,sid_17410551,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),msg_b(bob,charlie,sid_17410551))),encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),msg_b(bob,charlie,sid_17410551))),msg_c(alice,bob,sid_17410550)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(bob,charlie,sid_17410551),g),key_e(bob,charlie,sid_17410551)),empty,dhexp(key_e(alice,bob,sid_17410550),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),minnonce))) may be inserted in a table at insert {444}.
table(statestore(bob,charlie,sid_17410551,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),msg_b(bob,charlie,sid_17410551))),encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),msg_b(bob,charlie,sid_17410551))),msg_c(alice,bob,sid_17410550)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(bob,charlie,sid_17410551),g),key_e(bob,charlie,sid_17410551)),empty,dhexp(key_e(alice,bob,sid_17410550),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),minnonce)))).

12. The entry statestore(bob,charlie,sid_17410551,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),msg_b(bob,charlie,sid_17410551))),encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),msg_b(bob,charlie,sid_17410551))),msg_c(alice,bob,sid_17410550)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(bob,charlie,sid_17410551),g),key_e(bob,charlie,sid_17410551)),empty,dhexp(key_e(alice,bob,sid_17410550),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),minnonce))) that may be in a table by 11 may be read at get {464}.
The event SendMsg(bob,charlie,stagepack_d(sid_17410551),msg_d(bob,charlie,sid_17410551)) may be executed at {462}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),msg_b(bob,charlie,sid_17410551))),encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),msg_b(bob,charlie,sid_17410551))),msg_c(alice,bob,sid_17410550))),msg_d(bob,charlie,sid_17410551))) may be sent on channel pub at output {463}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),msg_b(bob,charlie,sid_17410551))),encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),msg_b(bob,charlie,sid_17410551))),msg_c(alice,bob,sid_17410550))),msg_d(bob,charlie,sid_17410551)))).

13. The entry statestore(alice,bob,sid_17410550,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),increment_nonce(minnonce)),hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),msg_b(bob,charlie,sid_17410551))),encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),msg_b(bob,charlie,sid_17410551))),msg_c(alice,bob,sid_17410550)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_17410550),g),key_e(alice,bob,sid_17410550)),empty,dhexp(key_e(bob,charlie,sid_17410551),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),increment_nonce(minnonce)),cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),minnonce))) that may be in a table by 8 may be read at get {115}.
The message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),msg_b(bob,charlie,sid_17410551))),encrypt(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_17410550),dhexp(key_e(bob,charlie,sid_17410551),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_17410550),g)),msg_a(alice,bob,sid_17410550))),dhexp(key_e(bob,charlie,sid_17410551),g)),msg_b(bob,charlie,sid_17410551))),msg_c(alice,bob,sid_17410550))),msg_d(bob,charlie,sid_17410551))) that may be sent on channel pub by 12 may be received at input {97}.
So event RecvEnd(true) may be executed at {114}.
end(RecvEnd(true)).


RESULT not event(RecvEnd(true)) cannot be proved.
