File "NX1.noise.passive.pv", line 225, characters 7-8:
Warning: identifier ck rebound.
File "NX1.noise.passive.pv", line 234, characters 7-8:
Warning: identifier ck rebound.
File "NX1.noise.passive.pv", line 235, characters 7-8:
Warning: identifier cs rebound.
File "NX1.noise.passive.pv", line 235, character 36:
Warning: identifier h rebound.
File "NX1.noise.passive.pv", line 244, characters 7-8:
Warning: identifier cs rebound.
File "NX1.noise.passive.pv", line 245, characters 6-7:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 250, characters 7-8:
Warning: identifier cs rebound.
File "NX1.noise.passive.pv", line 251, characters 6-7:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 274, character 6:
Warning: identifier e rebound.
File "NX1.noise.passive.pv", line 275, characters 6-7:
Warning: identifier ne rebound.
File "NX1.noise.passive.pv", line 276, characters 6-7:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 278, characters 7-8:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 278, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NX1.noise.passive.pv", line 279, characters 6-7:
Warning: identifier hs rebound.
File "NX1.noise.passive.pv", line 286, character 6:
Warning: identifier e rebound.
File "NX1.noise.passive.pv", line 287, characters 6-7:
Warning: identifier ne rebound.
File "NX1.noise.passive.pv", line 288, characters 6-7:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 290, characters 6-7:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 291, character 6:
Warning: identifier s rebound.
File "NX1.noise.passive.pv", line 292, characters 7-8:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 292, characters 26-36:
Warning: identifier ciphertext1 rebound.
File "NX1.noise.passive.pv", line 293, characters 7-8:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 293, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NX1.noise.passive.pv", line 294, characters 6-7:
Warning: identifier hs rebound.
File "NX1.noise.passive.pv", line 301, characters 6-7:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 302, characters 7-8:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 302, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NX1.noise.passive.pv", line 303, characters 6-7:
Warning: identifier hs rebound.
File "NX1.noise.passive.pv", line 311, characters 7-8:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 311, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NX1.noise.passive.pv", line 312, characters 6-7:
Warning: identifier hs rebound.
File "NX1.noise.passive.pv", line 319, characters 7-8:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 319, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NX1.noise.passive.pv", line 320, characters 6-7:
Warning: identifier hs rebound.
File "NX1.noise.passive.pv", line 328, characters 6-7:
Warning: identifier re rebound.
File "NX1.noise.passive.pv", line 329, characters 6-7:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 331, characters 7-8:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 333, characters 7-8:
Warning: identifier hs rebound.
File "NX1.noise.passive.pv", line 341, characters 6-7:
Warning: identifier re rebound.
File "NX1.noise.passive.pv", line 342, characters 6-7:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 344, characters 6-7:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 345, characters 7-8:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 345, characters 48-53:
Warning: identifier valid1 rebound.
File "NX1.noise.passive.pv", line 346, characters 6-7:
Warning: identifier rs rebound.
File "NX1.noise.passive.pv", line 347, characters 7-8:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 349, characters 7-8:
Warning: identifier hs rebound.
File "NX1.noise.passive.pv", line 357, characters 6-7:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 358, characters 7-8:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 360, characters 7-8:
Warning: identifier hs rebound.
File "NX1.noise.passive.pv", line 369, characters 7-8:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 371, characters 7-8:
Warning: identifier hs rebound.
File "NX1.noise.passive.pv", line 379, characters 7-8:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 381, characters 7-8:
Warning: identifier hs rebound.
File "NX1.noise.passive.pv", line 553, characters 7-8:
Warning: identifier hs rebound.
File "NX1.noise.passive.pv", line 554, characters 8-9:
Warning: identifier hs rebound.
File "NX1.noise.passive.pv", line 319, characters 7-8:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 319, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NX1.noise.passive.pv", line 320, characters 6-7:
Warning: identifier hs rebound.
File "NX1.noise.passive.pv", line 244, characters 7-8:
Warning: identifier cs rebound.
File "NX1.noise.passive.pv", line 245, characters 6-7:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 544, characters 7-8:
Warning: identifier hs rebound.
File "NX1.noise.passive.pv", line 546, characters 8-9:
Warning: identifier hs rebound.
File "NX1.noise.passive.pv", line 369, characters 7-8:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 371, characters 7-8:
Warning: identifier hs rebound.
File "NX1.noise.passive.pv", line 250, characters 7-8:
Warning: identifier cs rebound.
File "NX1.noise.passive.pv", line 251, characters 6-7:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 537, characters 8-9:
Warning: identifier hs rebound.
File "NX1.noise.passive.pv", line 301, characters 6-7:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 302, characters 7-8:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 302, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NX1.noise.passive.pv", line 303, characters 6-7:
Warning: identifier hs rebound.
File "NX1.noise.passive.pv", line 225, characters 7-8:
Warning: identifier ck rebound.
File "NX1.noise.passive.pv", line 244, characters 7-8:
Warning: identifier cs rebound.
File "NX1.noise.passive.pv", line 245, characters 6-7:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 530, characters 8-9:
Warning: identifier hs rebound.
File "NX1.noise.passive.pv", line 341, characters 6-7:
Warning: identifier re rebound.
File "NX1.noise.passive.pv", line 342, characters 6-7:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 344, characters 6-7:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 345, characters 7-8:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 345, characters 48-53:
Warning: identifier valid1 rebound.
File "NX1.noise.passive.pv", line 346, characters 6-7:
Warning: identifier rs rebound.
File "NX1.noise.passive.pv", line 347, characters 7-8:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 349, characters 7-8:
Warning: identifier hs rebound.
File "NX1.noise.passive.pv", line 225, characters 7-8:
Warning: identifier ck rebound.
File "NX1.noise.passive.pv", line 250, characters 7-8:
Warning: identifier cs rebound.
File "NX1.noise.passive.pv", line 251, characters 6-7:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 250, characters 7-8:
Warning: identifier cs rebound.
File "NX1.noise.passive.pv", line 251, characters 6-7:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 522, characters 8-9:
Warning: identifier hs rebound.
File "NX1.noise.passive.pv", line 274, character 6:
Warning: identifier e rebound.
File "NX1.noise.passive.pv", line 275, characters 6-7:
Warning: identifier ne rebound.
File "NX1.noise.passive.pv", line 276, characters 6-7:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 278, characters 7-8:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 278, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NX1.noise.passive.pv", line 279, characters 6-7:
Warning: identifier hs rebound.
File "NX1.noise.passive.pv", line 244, characters 7-8:
Warning: identifier cs rebound.
File "NX1.noise.passive.pv", line 245, characters 6-7:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 612, characters 7-8:
Warning: identifier hs rebound.
File "NX1.noise.passive.pv", line 614, characters 8-9:
Warning: identifier hs rebound.
File "NX1.noise.passive.pv", line 379, characters 7-8:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 381, characters 7-8:
Warning: identifier hs rebound.
File "NX1.noise.passive.pv", line 250, characters 7-8:
Warning: identifier cs rebound.
File "NX1.noise.passive.pv", line 251, characters 6-7:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 604, characters 7-8:
Warning: identifier hs rebound.
File "NX1.noise.passive.pv", line 605, characters 8-9:
Warning: identifier hs rebound.
File "NX1.noise.passive.pv", line 311, characters 7-8:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 311, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NX1.noise.passive.pv", line 312, characters 6-7:
Warning: identifier hs rebound.
File "NX1.noise.passive.pv", line 244, characters 7-8:
Warning: identifier cs rebound.
File "NX1.noise.passive.pv", line 245, characters 6-7:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 597, characters 8-9:
Warning: identifier hs rebound.
File "NX1.noise.passive.pv", line 357, characters 6-7:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 358, characters 7-8:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 360, characters 7-8:
Warning: identifier hs rebound.
File "NX1.noise.passive.pv", line 225, characters 7-8:
Warning: identifier ck rebound.
File "NX1.noise.passive.pv", line 250, characters 7-8:
Warning: identifier cs rebound.
File "NX1.noise.passive.pv", line 251, characters 6-7:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 589, characters 8-9:
Warning: identifier hs rebound.
File "NX1.noise.passive.pv", line 286, character 6:
Warning: identifier e rebound.
File "NX1.noise.passive.pv", line 287, characters 6-7:
Warning: identifier ne rebound.
File "NX1.noise.passive.pv", line 288, characters 6-7:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 290, characters 6-7:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 291, character 6:
Warning: identifier s rebound.
File "NX1.noise.passive.pv", line 292, characters 7-8:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 292, characters 26-36:
Warning: identifier ciphertext1 rebound.
File "NX1.noise.passive.pv", line 293, characters 7-8:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 293, characters 26-36:
Warning: identifier ciphertext2 rebound.
File "NX1.noise.passive.pv", line 294, characters 6-7:
Warning: identifier hs rebound.
File "NX1.noise.passive.pv", line 225, characters 7-8:
Warning: identifier ck rebound.
File "NX1.noise.passive.pv", line 244, characters 7-8:
Warning: identifier cs rebound.
File "NX1.noise.passive.pv", line 245, characters 6-7:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 244, characters 7-8:
Warning: identifier cs rebound.
File "NX1.noise.passive.pv", line 245, characters 6-7:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 582, characters 8-9:
Warning: identifier hs rebound.
File "NX1.noise.passive.pv", line 328, characters 6-7:
Warning: identifier re rebound.
File "NX1.noise.passive.pv", line 329, characters 6-7:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 331, characters 7-8:
Warning: identifier ss rebound.
File "NX1.noise.passive.pv", line 333, characters 7-8:
Warning: identifier hs rebound.
File "NX1.noise.passive.pv", line 250, characters 7-8:
Warning: identifier cs rebound.
File "NX1.noise.passive.pv", line 251, characters 6-7:
Warning: identifier ss rebound.
Linear part:
dhexp(b_76,dhexp(a_75,g)) = dhexp(a_75,dhexp(b_76,g))
Completing equations...
Completed equations:
dhexp(b_76,dhexp(a_75,g)) = dhexp(a_75,dhexp(b_76,g))
Convergent part:
Completing equations...
Completed equations:
Process:
{1}out(pub, key_s(charlie));
{2}!
{3}new sid: sessionid;
(
    {4}let s_532: keypair = keypairpack(empty,empty) in
    (
        {5}let e_533: keypair = keypairpack(empty,empty) in
        {6}let rs_534: key = empty in
        {7}let re_535: key = empty in
        {8}let v_536: bitstring = catch-fail(hash(somename,empty)) in
        {9}let v_537: key = catch-fail(v_536) in
        {10}let v_538: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {11}let v_539: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_536) then (if not-caught-fail(v_537) then (if not-caught-fail(v_538) then symmetricstatepack(v_538,v_537,v_536) else fail-any) else fail-any) else fail-any))) in
        {12}let v_540: symmetricstate = catch-fail((if success?((if not-caught-fail(v_536) then (if not-caught-fail(v_537) then (if not-caught-fail(v_538) then symmetricstatepack(v_538,v_537,v_536) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_539) && success?(is-true(success?(1-proj-3-tuple(v_539))))) then symmetricstatepack(1-proj-3-tuple(v_539),2-proj-3-tuple(v_539),hash(3-proj-3-tuple(v_539),empty)) else fail-any) else fail-any)) in
        {13}let hs: handshakestate = (if not-caught-fail(v_540) then handshakestatepack(v_540,s_532,e_533,rs_534,re_535,empty,true) else fail-any) in
        {14}insert statestore(alice,bob,sid,statepack_a(hs))
    ) | (
        {37}get statestore(=alice,=bob,=sid,statepack_a(hs_541: handshakestate)) in
        {15}let v_542: bitstring = catch-fail(handshakestateunpack(hs_541)) in
        {16}let v_543: bitstring = catch-fail((empty,empty,empty)) in
        {17}let v_544: key = catch-fail(dhexp(key_e(alice,bob,sid),g)) in
        {18}let v_545: keypair = catch-fail((if not-caught-fail(v_544) then keypairpack(v_544,key_e(alice,bob,sid)) else fail-any)) in
        {19}let v_546: bitstring = catch-fail(getpublickey(v_545)) in
        {20}let v_547: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_542))) in
        {21}let v_548: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_542)) then (if (not-caught-fail(v_547) && success?(is-true(success?(1-proj-3-tuple(v_547))))) then symmetricstatepack(1-proj-3-tuple(v_547),2-proj-3-tuple(v_547),hash(3-proj-3-tuple(v_547),v_546)) else fail-any) else fail-any)) in
        {22}let v_549: bitstring = catch-fail(symmetricstateunpack(v_548)) in
        {23}let v_550: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_549))) in
        {24}let v_551: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_550),2-proj-2-tuple(v_550),3-proj-3-tuple(v_549),msg_a(alice,bob,sid))) in
        {25}let v_552: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_549))) in
        {26}let v_553: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_550))) && success?(1-proj-3-tuple(v_549))) then (if (not-caught-fail(v_552) && success?(is-true(success?(1-proj-2-tuple(v_552))))) then cipherstatepack(1-proj-2-tuple(v_552),increment_nonce(2-proj-2-tuple(v_550))) else fail-any) else fail-any)) in
        {27}let v_554: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_549)) && success?(1-proj-3-tuple(v_549))) then (if (not-caught-fail(v_550) && success?(is-true(success?(1-proj-2-tuple(v_550))))) then (if not-caught-fail(v_551) then (if not-caught-fail(v_553) then (v_553,v_551) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {28}let v_555: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_554),2-proj-3-tuple(v_549),3-proj-3-tuple(v_549)))) in
        {29}let v_556: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_554)) && success?(symmetricstatepack(1-proj-2-tuple(v_554),2-proj-3-tuple(v_549),3-proj-3-tuple(v_549)))) then (if (not-caught-fail(v_555) && success?(is-true(success?(1-proj-3-tuple(v_555))))) then symmetricstatepack(1-proj-3-tuple(v_555),2-proj-3-tuple(v_555),hash(3-proj-3-tuple(v_555),2-proj-2-tuple(v_554))) else fail-any) else fail-any)) in
        {30}let v_557: bitstring = catch-fail((if (not-caught-fail(v_549) && success?(is-true(success?(1-proj-3-tuple(v_549))))) then (if (not-caught-fail(v_554) && success?(is-true(success?(1-proj-2-tuple(v_554))))) then (if not-caught-fail(v_556) then (v_556,2-proj-2-tuple(v_554)) else fail-any) else fail-any) else fail-any)) in
        {31}let v_558: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_557),2-proj-7-tuple(v_542),v_545,4-proj-7-tuple(v_542),5-proj-7-tuple(v_542),6-proj-7-tuple(v_542),7-proj-7-tuple(v_542))) in
        {32}let v_559: bitstring = catch-fail(concat3(v_546,2-proj-3-tuple(v_543),2-proj-2-tuple(v_557))) in
        {33}let (hs_560: handshakestate,message_a: bitstring) = (if (not-caught-fail(v_542) && success?(is-true(success?(1-proj-7-tuple(v_542))))) then (if (not-caught-fail(v_543) && success?(is-true(success?(1-proj-3-tuple(v_543))))) then (if not-caught-fail(v_545) then (if not-caught-fail(v_546) then (if not-caught-fail(v_548) then (if (not-caught-fail(v_557) && success?(is-true(success?(1-proj-2-tuple(v_557))))) then (if not-caught-fail(v_558) then (if not-caught-fail(v_559) then (v_558,v_559) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {34}event SendMsg(alice,bob,stagepack_a(sid),msg_a(alice,bob,sid));
        {35}insert statestore(alice,bob,sid,statepack_b(hs_560));
        {36}out(pub, message_a)
    ) | (
        {78}get statestore(=alice,=bob,=sid,statepack_b(hs_561: handshakestate)) in
        {38}in(pub, message_b: bitstring);
        {39}let v_562: bitstring = catch-fail(handshakestateunpack(hs_561)) in
        {40}let v_563: bitstring = catch-fail(deconcat3(message_b)) in
        {41}let v_564: bool = catch-fail(true) in
        {42}let v_565: key = catch-fail(1-proj-3-tuple(v_563)) in
        {43}let v_566: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_562))) in
        {44}let v_567: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_562)) then (if (not-caught-fail(v_566) && success?(is-true(success?(1-proj-3-tuple(v_566))))) then symmetricstatepack(1-proj-3-tuple(v_566),2-proj-3-tuple(v_566),hash(3-proj-3-tuple(v_566),v_565)) else fail-any) else fail-any)) in
        {45}let v_568: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_562))) in
        {46}let v_569: bitstring = catch-fail(symmetricstateunpack(v_567)) in
        {47}let v_570: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_569),(if success?(3-proj-7-tuple(v_562)) then (if (not-caught-fail(v_568) && success?(is-true(success?(1-proj-2-tuple(v_568))))) then dhexp(2-proj-2-tuple(v_568),v_565) else fail-any) else fail-any))) in
        {48}let v_571: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_569),(if success?(3-proj-7-tuple(v_562)) then (if (not-caught-fail(v_568) && success?(is-true(success?(1-proj-2-tuple(v_568))))) then dhexp(2-proj-2-tuple(v_568),v_565) else fail-any) else fail-any))) in
        {49}let v_572: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_569),(if success?(3-proj-7-tuple(v_562)) then (if (not-caught-fail(v_568) && success?(is-true(success?(1-proj-2-tuple(v_568))))) then dhexp(2-proj-2-tuple(v_568),v_565) else fail-any) else fail-any))) in
        {50}let v_573: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_562)) then (if (not-caught-fail(v_568) && success?(is-true(success?(1-proj-2-tuple(v_568))))) then dhexp(2-proj-2-tuple(v_568),v_565) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_569))) then (if not-caught-fail(v_570) then (if not-caught-fail(v_571) then (if not-caught-fail(v_572) then (v_570,v_571,v_572) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {51}let v_574: symmetricstate = catch-fail((if success?((if success?(3-proj-7-tuple(v_562)) then (if (not-caught-fail(v_568) && success?(is-true(success?(1-proj-2-tuple(v_568))))) then dhexp(2-proj-2-tuple(v_568),v_565) else fail-any) else fail-any)) then (if (not-caught-fail(v_569) && success?(is-true(success?(1-proj-3-tuple(v_569))))) then (if (not-caught-fail(v_573) && success?(is-true(success?(1-proj-3-tuple(v_573))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_573)) then cipherstatepack(2-proj-3-tuple(v_573),minnonce) else fail-any),1-proj-3-tuple(v_573),3-proj-3-tuple(v_569)) else fail-any) else fail-any) else fail-any)) in
        {52}let v_575: bitstring = catch-fail(symmetricstateunpack(v_574)) in
        {53}let v_576: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_575))) in
        {54}let v_577: aead = catch-fail(decrypt(1-proj-2-tuple(v_576),2-proj-2-tuple(v_576),3-proj-3-tuple(v_575),2-proj-3-tuple(v_563))) in
        {55}let v_578: bitstring = catch-fail(aeadunpack(v_577)) in
        {56}let v_579: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_575))) in
        {57}let v_580: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_576))) && success?(1-proj-3-tuple(v_575))) then (if (not-caught-fail(v_579) && success?(is-true(success?(1-proj-2-tuple(v_579))))) then cipherstatepack(1-proj-2-tuple(v_579),increment_nonce(2-proj-2-tuple(v_576))) else fail-any) else fail-any)) in
        {58}let v_581: bitstring = catch-fail((if (success?(2-proj-3-tuple(v_563)) && (success?(3-proj-3-tuple(v_575)) && success?(1-proj-3-tuple(v_575)))) then (if (not-caught-fail(v_576) && success?(is-true(success?(1-proj-2-tuple(v_576))))) then (if not-caught-fail(v_577) then (if (not-caught-fail(v_578) && success?(is-true(success?(1-proj-3-tuple(v_578))))) then (if not-caught-fail(v_580) then (v_580,3-proj-3-tuple(v_578),1-proj-3-tuple(v_578)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {59}let v_582: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_581),2-proj-3-tuple(v_575),3-proj-3-tuple(v_575)))) in
        {60}let v_583: symmetricstate = catch-fail((if (success?(2-proj-3-tuple(v_563)) && success?(symmetricstatepack(1-proj-3-tuple(v_581),2-proj-3-tuple(v_575),3-proj-3-tuple(v_575)))) then (if (not-caught-fail(v_582) && success?(is-true(success?(1-proj-3-tuple(v_582))))) then symmetricstatepack(1-proj-3-tuple(v_582),2-proj-3-tuple(v_582),hash(3-proj-3-tuple(v_582),2-proj-3-tuple(v_563))) else fail-any) else fail-any)) in
        {61}let v_584: bitstring = catch-fail((if success?(2-proj-3-tuple(v_563)) then (if (not-caught-fail(v_575) && success?(is-true(success?(1-proj-3-tuple(v_575))))) then (if (not-caught-fail(v_581) && success?(is-true(success?(1-proj-3-tuple(v_581))))) then (if not-caught-fail(v_583) then (v_583,2-proj-3-tuple(v_581),3-proj-3-tuple(v_581)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {62}let v_585: key = catch-fail(2-proj-3-tuple(v_584)) in
        {63}let v_586: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_584))) in
        {64}let v_587: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_586))) in
        {65}let v_588: aead = catch-fail(decrypt(1-proj-2-tuple(v_587),2-proj-2-tuple(v_587),3-proj-3-tuple(v_586),3-proj-3-tuple(v_563))) in
        {66}let v_589: bitstring = catch-fail(aeadunpack(v_588)) in
        {67}let v_590: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_586))) in
        {68}let v_591: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_587))) && success?(1-proj-3-tuple(v_586))) then (if (not-caught-fail(v_590) && success?(is-true(success?(1-proj-2-tuple(v_590))))) then cipherstatepack(1-proj-2-tuple(v_590),increment_nonce(2-proj-2-tuple(v_587))) else fail-any) else fail-any)) in
        {69}let v_592: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_563)) && (success?(3-proj-3-tuple(v_586)) && success?(1-proj-3-tuple(v_586)))) then (if (not-caught-fail(v_587) && success?(is-true(success?(1-proj-2-tuple(v_587))))) then (if not-caught-fail(v_588) then (if (not-caught-fail(v_589) && success?(is-true(success?(1-proj-3-tuple(v_589))))) then (if not-caught-fail(v_591) then (v_591,3-proj-3-tuple(v_589),1-proj-3-tuple(v_589)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {70}let v_593: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_592),2-proj-3-tuple(v_586),3-proj-3-tuple(v_586)))) in
        {71}let v_594: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_563)) && success?(symmetricstatepack(1-proj-3-tuple(v_592),2-proj-3-tuple(v_586),3-proj-3-tuple(v_586)))) then (if (not-caught-fail(v_593) && success?(is-true(success?(1-proj-3-tuple(v_593))))) then symmetricstatepack(1-proj-3-tuple(v_593),2-proj-3-tuple(v_593),hash(3-proj-3-tuple(v_593),3-proj-3-tuple(v_563))) else fail-any) else fail-any)) in
        {72}let v_595: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_563)) && success?(1-proj-3-tuple(v_584))) then (if (not-caught-fail(v_586) && success?(is-true(success?(1-proj-3-tuple(v_586))))) then (if (not-caught-fail(v_592) && success?(is-true(success?(1-proj-3-tuple(v_592))))) then (if not-caught-fail(v_594) then (v_594,2-proj-3-tuple(v_592),3-proj-3-tuple(v_592)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {73}let v_596: key = catch-fail(dhexp(key_s(bob),g)) in
        {74}let v_597: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_595),2-proj-7-tuple(v_562),3-proj-7-tuple(v_562),v_585,v_565,6-proj-7-tuple(v_562),7-proj-7-tuple(v_562))) in
        {75}let (hs_598: handshakestate,plaintext_b: bitstring,valid: bool) = (if (not-caught-fail(v_562) && success?(is-true(success?(1-proj-7-tuple(v_562))))) then (if (not-caught-fail(v_563) && success?(is-true(success?(1-proj-3-tuple(v_563))))) then (if not-caught-fail(v_564) then (if not-caught-fail(v_565) then (if not-caught-fail(v_567) then (if not-caught-fail(v_574) then (if (not-caught-fail(v_584) && success?(is-true(success?(1-proj-3-tuple(v_584))))) then (if not-caught-fail(v_585) then (if (not-caught-fail(v_595) && success?(is-true(success?(1-proj-3-tuple(v_595))))) then (if ((3-proj-3-tuple(v_584) && 3-proj-3-tuple(v_595)) && (v_585 = getpublickey((if not-caught-fail(v_596) then keypairpack(v_596,key_s(bob)) else fail-any)))) then (if not-caught-fail(v_597) then (v_597,2-proj-3-tuple(v_595),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {76}event RecvMsg(alice,bob,stagepack_b(sid),plaintext_b);
        {77}insert statestore(alice,bob,sid,statepack_c(hs_598))
    ) | (
        {111}get statestore(=alice,=bob,=sid,statepack_c(hs_599: handshakestate)) in
        {79}let v_600: bitstring = catch-fail(handshakestateunpack(hs_599)) in
        {80}let v_601: bitstring = catch-fail((empty,empty,empty)) in
        {81}let v_602: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_600))) in
        {82}let v_603: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_600))) in
        {83}let v_604: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_603),(if (success?(4-proj-7-tuple(v_600)) && success?(3-proj-7-tuple(v_600))) then (if (not-caught-fail(v_602) && success?(is-true(success?(1-proj-2-tuple(v_602))))) then dhexp(2-proj-2-tuple(v_602),4-proj-7-tuple(v_600)) else fail-any) else fail-any))) in
        {84}let v_605: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_603),(if (success?(4-proj-7-tuple(v_600)) && success?(3-proj-7-tuple(v_600))) then (if (not-caught-fail(v_602) && success?(is-true(success?(1-proj-2-tuple(v_602))))) then dhexp(2-proj-2-tuple(v_602),4-proj-7-tuple(v_600)) else fail-any) else fail-any))) in
        {85}let v_606: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_603),(if (success?(4-proj-7-tuple(v_600)) && success?(3-proj-7-tuple(v_600))) then (if (not-caught-fail(v_602) && success?(is-true(success?(1-proj-2-tuple(v_602))))) then dhexp(2-proj-2-tuple(v_602),4-proj-7-tuple(v_600)) else fail-any) else fail-any))) in
        {86}let v_607: bitstring = catch-fail((if (success?((if (success?(4-proj-7-tuple(v_600)) && success?(3-proj-7-tuple(v_600))) then (if (not-caught-fail(v_602) && success?(is-true(success?(1-proj-2-tuple(v_602))))) then dhexp(2-proj-2-tuple(v_602),4-proj-7-tuple(v_600)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_603))) then (if not-caught-fail(v_604) then (if not-caught-fail(v_605) then (if not-caught-fail(v_606) then (v_604,v_605,v_606) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {87}let v_608: symmetricstate = catch-fail((if (success?((if (success?(4-proj-7-tuple(v_600)) && success?(3-proj-7-tuple(v_600))) then (if (not-caught-fail(v_602) && success?(is-true(success?(1-proj-2-tuple(v_602))))) then dhexp(2-proj-2-tuple(v_602),4-proj-7-tuple(v_600)) else fail-any) else fail-any)) && success?(1-proj-7-tuple(v_600))) then (if (not-caught-fail(v_603) && success?(is-true(success?(1-proj-3-tuple(v_603))))) then (if (not-caught-fail(v_607) && success?(is-true(success?(1-proj-3-tuple(v_607))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_607)) then cipherstatepack(2-proj-3-tuple(v_607),minnonce) else fail-any),1-proj-3-tuple(v_607),3-proj-3-tuple(v_603)) else fail-any) else fail-any) else fail-any)) in
        {88}let v_609: bitstring = catch-fail(symmetricstateunpack(v_608)) in
        {89}let v_610: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_609))) in
        {90}let v_611: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_610),2-proj-2-tuple(v_610),3-proj-3-tuple(v_609),msg_c(alice,bob,sid))) in
        {91}let v_612: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_609))) in
        {92}let v_613: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_610))) && success?(1-proj-3-tuple(v_609))) then (if (not-caught-fail(v_612) && success?(is-true(success?(1-proj-2-tuple(v_612))))) then cipherstatepack(1-proj-2-tuple(v_612),increment_nonce(2-proj-2-tuple(v_610))) else fail-any) else fail-any)) in
        {93}let v_614: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_609)) && success?(1-proj-3-tuple(v_609))) then (if (not-caught-fail(v_610) && success?(is-true(success?(1-proj-2-tuple(v_610))))) then (if not-caught-fail(v_611) then (if not-caught-fail(v_613) then (v_613,v_611) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {94}let v_615: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_614),2-proj-3-tuple(v_609),3-proj-3-tuple(v_609)))) in
        {95}let v_616: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_614)) && success?(symmetricstatepack(1-proj-2-tuple(v_614),2-proj-3-tuple(v_609),3-proj-3-tuple(v_609)))) then (if (not-caught-fail(v_615) && success?(is-true(success?(1-proj-3-tuple(v_615))))) then symmetricstatepack(1-proj-3-tuple(v_615),2-proj-3-tuple(v_615),hash(3-proj-3-tuple(v_615),2-proj-2-tuple(v_614))) else fail-any) else fail-any)) in
        {96}let v_617: bitstring = catch-fail((if (not-caught-fail(v_609) && success?(is-true(success?(1-proj-3-tuple(v_609))))) then (if (not-caught-fail(v_614) && success?(is-true(success?(1-proj-2-tuple(v_614))))) then (if not-caught-fail(v_616) then (v_616,2-proj-2-tuple(v_614)) else fail-any) else fail-any) else fail-any)) in
        {97}let v_618: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_617),2-proj-7-tuple(v_600),3-proj-7-tuple(v_600),4-proj-7-tuple(v_600),5-proj-7-tuple(v_600),6-proj-7-tuple(v_600),7-proj-7-tuple(v_600))) in
        {98}let v_619: bitstring = catch-fail(concat3(1-proj-3-tuple(v_601),2-proj-3-tuple(v_601),2-proj-2-tuple(v_617))) in
        {99}let v_620: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_617))) in
        {100}let v_621: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_620),zero)) in
        {101}let v_622: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_620),zero)) in
        {102}let v_623: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_620),zero)) in
        {103}let v_624: bitstring = catch-fail((if success?(2-proj-3-tuple(v_620)) then (if not-caught-fail(v_621) then (if not-caught-fail(v_622) then (if not-caught-fail(v_623) then (v_621,v_622,v_623) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {104}let v_625: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_624)) then cipherstatepack(1-proj-3-tuple(v_624),minnonce) else fail-any)) in
        {105}let v_626: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_624)) then cipherstatepack(2-proj-3-tuple(v_624),minnonce) else fail-any)) in
        {106}let v_627: bitstring = catch-fail((if success?(1-proj-2-tuple(v_617)) then (if (not-caught-fail(v_620) && success?(is-true(success?(1-proj-3-tuple(v_620))))) then (if (not-caught-fail(v_624) && success?(is-true(success?(1-proj-3-tuple(v_624))))) then (if not-caught-fail(v_625) then (if not-caught-fail(v_626) then (1-proj-2-tuple(v_617),v_625,v_626) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {107}let (hs_628: handshakestate,message_c: bitstring,cs1: cipherstate,cs2: cipherstate) = (if (not-caught-fail(v_600) && success?(is-true(success?(1-proj-7-tuple(v_600))))) then (if (not-caught-fail(v_601) && success?(is-true(success?(1-proj-3-tuple(v_601))))) then (if not-caught-fail(v_608) then (if (not-caught-fail(v_617) && success?(is-true(success?(1-proj-2-tuple(v_617))))) then (if not-caught-fail(v_618) then (if not-caught-fail(v_619) then (if (not-caught-fail(v_627) && success?(is-true(success?(1-proj-3-tuple(v_627))))) then (v_618,v_619,2-proj-3-tuple(v_627),3-proj-3-tuple(v_627)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {108}event SendMsg(alice,bob,stagepack_c(sid),msg_c(alice,bob,sid));
        {109}insert statestore(alice,bob,sid,statepack_d(hs_628,cs1,cs2));
        {110}out(pub, message_c)
    ) | (
        {112}!
        {132}get statestore(=alice,=bob,=sid,statepack_d(hs_629: handshakestate,cs1_630: cipherstate,cs2_631: cipherstate)) in
        {113}let hs_632: handshakestate = handshakestatesetcs(hs_629,cs2_631) in
        {114}in(pub, message_d: bitstring);
        {115}let v_633: bitstring = catch-fail(handshakestateunpack(hs_632)) in
        {116}let v_634: bitstring = catch-fail(deconcat3(message_d)) in
        {117}let v_635: bool = catch-fail(true) in
        {118}let v_636: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_633))) in
        {119}let v_637: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_636))) in
        {120}let v_638: aead = catch-fail(decrypt(1-proj-2-tuple(v_637),2-proj-2-tuple(v_637),3-proj-3-tuple(v_636),3-proj-3-tuple(v_634))) in
        {121}let v_639: bitstring = catch-fail(aeadunpack(v_638)) in
        {122}let v_640: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_636))) in
        {123}let v_641: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_637))) && success?(1-proj-3-tuple(v_636))) then (if (not-caught-fail(v_640) && success?(is-true(success?(1-proj-2-tuple(v_640))))) then cipherstatepack(1-proj-2-tuple(v_640),increment_nonce(2-proj-2-tuple(v_637))) else fail-any) else fail-any)) in
        {124}let v_642: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_634)) && (success?(3-proj-3-tuple(v_636)) && success?(1-proj-3-tuple(v_636)))) then (if (not-caught-fail(v_637) && success?(is-true(success?(1-proj-2-tuple(v_637))))) then (if not-caught-fail(v_638) then (if (not-caught-fail(v_639) && success?(is-true(success?(1-proj-3-tuple(v_639))))) then (if not-caught-fail(v_641) then (v_641,3-proj-3-tuple(v_639),1-proj-3-tuple(v_639)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {125}let v_643: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_642),2-proj-3-tuple(v_636),3-proj-3-tuple(v_636)))) in
        {126}let v_644: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_634)) && success?(symmetricstatepack(1-proj-3-tuple(v_642),2-proj-3-tuple(v_636),3-proj-3-tuple(v_636)))) then (if (not-caught-fail(v_643) && success?(is-true(success?(1-proj-3-tuple(v_643))))) then symmetricstatepack(1-proj-3-tuple(v_643),2-proj-3-tuple(v_643),hash(3-proj-3-tuple(v_643),3-proj-3-tuple(v_634))) else fail-any) else fail-any)) in
        {127}let v_645: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_634)) && success?(1-proj-7-tuple(v_633))) then (if (not-caught-fail(v_636) && success?(is-true(success?(1-proj-3-tuple(v_636))))) then (if (not-caught-fail(v_642) && success?(is-true(success?(1-proj-3-tuple(v_642))))) then (if not-caught-fail(v_644) then (v_644,2-proj-3-tuple(v_642),3-proj-3-tuple(v_642)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {128}let v_646: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_645),2-proj-7-tuple(v_633),3-proj-7-tuple(v_633),4-proj-7-tuple(v_633),5-proj-7-tuple(v_633),6-proj-7-tuple(v_633),7-proj-7-tuple(v_633))) in
        {129}let (hs_647: handshakestate,plaintext_d: bitstring,valid_648: bool) = (if (not-caught-fail(v_633) && success?(is-true(success?(1-proj-7-tuple(v_633))))) then (if (not-caught-fail(v_634) && success?(is-true(success?(1-proj-3-tuple(v_634))))) then (if not-caught-fail(v_635) then (if (not-caught-fail(v_645) && success?(is-true(success?(1-proj-3-tuple(v_645))))) then (if (v_635 && 3-proj-3-tuple(v_645)) then (if not-caught-fail(v_646) then (v_646,2-proj-3-tuple(v_645),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {130}event RecvMsg(alice,bob,stagepack_d(sid),plaintext_d);
        {131}insert statestore(alice,bob,sid,statepack_e(hs_647,cs1_630,handshakestategetcs(hs_647)))
    ) | (
        {133}!
        {151}get statestore(=alice,=bob,=sid,statepack_e(hs_649: handshakestate,cs1_650: cipherstate,cs2_651: cipherstate)) in
        {134}let hs_652: handshakestate = handshakestatesetcs(hs_649,cs1_650) in
        {135}let v_653: bitstring = catch-fail(handshakestateunpack(hs_652)) in
        {136}let v_654: bitstring = catch-fail((empty,empty,empty)) in
        {137}let v_655: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_653))) in
        {138}let v_656: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_655))) in
        {139}let v_657: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_656),2-proj-2-tuple(v_656),3-proj-3-tuple(v_655),msg_e(alice,bob,sid))) in
        {140}let v_658: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_655))) in
        {141}let v_659: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_656))) && success?(1-proj-3-tuple(v_655))) then (if (not-caught-fail(v_658) && success?(is-true(success?(1-proj-2-tuple(v_658))))) then cipherstatepack(1-proj-2-tuple(v_658),increment_nonce(2-proj-2-tuple(v_656))) else fail-any) else fail-any)) in
        {142}let v_660: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_655)) && success?(1-proj-3-tuple(v_655))) then (if (not-caught-fail(v_656) && success?(is-true(success?(1-proj-2-tuple(v_656))))) then (if not-caught-fail(v_657) then (if not-caught-fail(v_659) then (v_659,v_657) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {143}let v_661: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_660),2-proj-3-tuple(v_655),3-proj-3-tuple(v_655)))) in
        {144}let v_662: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_660)) && success?(symmetricstatepack(1-proj-2-tuple(v_660),2-proj-3-tuple(v_655),3-proj-3-tuple(v_655)))) then (if (not-caught-fail(v_661) && success?(is-true(success?(1-proj-3-tuple(v_661))))) then symmetricstatepack(1-proj-3-tuple(v_661),2-proj-3-tuple(v_661),hash(3-proj-3-tuple(v_661),2-proj-2-tuple(v_660))) else fail-any) else fail-any)) in
        {145}let v_663: bitstring = catch-fail((if success?(1-proj-7-tuple(v_653)) then (if (not-caught-fail(v_655) && success?(is-true(success?(1-proj-3-tuple(v_655))))) then (if (not-caught-fail(v_660) && success?(is-true(success?(1-proj-2-tuple(v_660))))) then (if not-caught-fail(v_662) then (v_662,2-proj-2-tuple(v_660)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {146}let v_664: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_663),2-proj-7-tuple(v_653),3-proj-7-tuple(v_653),4-proj-7-tuple(v_653),5-proj-7-tuple(v_653),6-proj-7-tuple(v_653),7-proj-7-tuple(v_653))) in
        {147}let v_665: bitstring = catch-fail(concat3(1-proj-3-tuple(v_654),2-proj-3-tuple(v_654),2-proj-2-tuple(v_663))) in
        {148}let (hs_666: handshakestate,message_e: bitstring) = (if (not-caught-fail(v_653) && success?(is-true(success?(1-proj-7-tuple(v_653))))) then (if (not-caught-fail(v_654) && success?(is-true(success?(1-proj-3-tuple(v_654))))) then (if (not-caught-fail(v_663) && success?(is-true(success?(1-proj-2-tuple(v_663))))) then (if not-caught-fail(v_664) then (if not-caught-fail(v_665) then (v_664,v_665) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {149}event SendMsg(alice,bob,stagepack_e(sid),msg_e(alice,bob,sid));
        {150}out(pub, message_e)
    ) | (
        {152}event LeakS(phase0,alice);
        {153}out(pub, key_s(alice))
    ) | (
        {154}phase 1;
        {155}event LeakS(phase1,alice);
        {156}out(pub, key_s(alice))
    )
) | (
    {157}let s_667: keypair = keypairpack(empty,empty) in
    (
        {158}let e_668: keypair = keypairpack(empty,empty) in
        {159}let rs_669: key = empty in
        {160}let re_670: key = empty in
        {161}let v_671: bitstring = catch-fail(hash(somename,empty)) in
        {162}let v_672: key = catch-fail(v_671) in
        {163}let v_673: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {164}let v_674: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_671) then (if not-caught-fail(v_672) then (if not-caught-fail(v_673) then symmetricstatepack(v_673,v_672,v_671) else fail-any) else fail-any) else fail-any))) in
        {165}let v_675: symmetricstate = catch-fail((if success?((if not-caught-fail(v_671) then (if not-caught-fail(v_672) then (if not-caught-fail(v_673) then symmetricstatepack(v_673,v_672,v_671) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_674) && success?(is-true(success?(1-proj-3-tuple(v_674))))) then symmetricstatepack(1-proj-3-tuple(v_674),2-proj-3-tuple(v_674),hash(3-proj-3-tuple(v_674),empty)) else fail-any) else fail-any)) in
        {166}let hs_676: handshakestate = (if not-caught-fail(v_675) then handshakestatepack(v_675,s_667,e_668,rs_669,re_670,empty,true) else fail-any) in
        {167}insert statestore(alice,charlie,sid,statepack_a(hs_676))
    ) | (
        {190}get statestore(=alice,=charlie,=sid,statepack_a(hs_677: handshakestate)) in
        {168}let v_678: bitstring = catch-fail(handshakestateunpack(hs_677)) in
        {169}let v_679: bitstring = catch-fail((empty,empty,empty)) in
        {170}let v_680: key = catch-fail(dhexp(key_e(alice,charlie,sid),g)) in
        {171}let v_681: keypair = catch-fail((if not-caught-fail(v_680) then keypairpack(v_680,key_e(alice,charlie,sid)) else fail-any)) in
        {172}let v_682: bitstring = catch-fail(getpublickey(v_681)) in
        {173}let v_683: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_678))) in
        {174}let v_684: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_678)) then (if (not-caught-fail(v_683) && success?(is-true(success?(1-proj-3-tuple(v_683))))) then symmetricstatepack(1-proj-3-tuple(v_683),2-proj-3-tuple(v_683),hash(3-proj-3-tuple(v_683),v_682)) else fail-any) else fail-any)) in
        {175}let v_685: bitstring = catch-fail(symmetricstateunpack(v_684)) in
        {176}let v_686: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_685))) in
        {177}let v_687: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_686),2-proj-2-tuple(v_686),3-proj-3-tuple(v_685),msg_a(alice,charlie,sid))) in
        {178}let v_688: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_685))) in
        {179}let v_689: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_686))) && success?(1-proj-3-tuple(v_685))) then (if (not-caught-fail(v_688) && success?(is-true(success?(1-proj-2-tuple(v_688))))) then cipherstatepack(1-proj-2-tuple(v_688),increment_nonce(2-proj-2-tuple(v_686))) else fail-any) else fail-any)) in
        {180}let v_690: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_685)) && success?(1-proj-3-tuple(v_685))) then (if (not-caught-fail(v_686) && success?(is-true(success?(1-proj-2-tuple(v_686))))) then (if not-caught-fail(v_687) then (if not-caught-fail(v_689) then (v_689,v_687) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {181}let v_691: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_690),2-proj-3-tuple(v_685),3-proj-3-tuple(v_685)))) in
        {182}let v_692: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_690)) && success?(symmetricstatepack(1-proj-2-tuple(v_690),2-proj-3-tuple(v_685),3-proj-3-tuple(v_685)))) then (if (not-caught-fail(v_691) && success?(is-true(success?(1-proj-3-tuple(v_691))))) then symmetricstatepack(1-proj-3-tuple(v_691),2-proj-3-tuple(v_691),hash(3-proj-3-tuple(v_691),2-proj-2-tuple(v_690))) else fail-any) else fail-any)) in
        {183}let v_693: bitstring = catch-fail((if (not-caught-fail(v_685) && success?(is-true(success?(1-proj-3-tuple(v_685))))) then (if (not-caught-fail(v_690) && success?(is-true(success?(1-proj-2-tuple(v_690))))) then (if not-caught-fail(v_692) then (v_692,2-proj-2-tuple(v_690)) else fail-any) else fail-any) else fail-any)) in
        {184}let v_694: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_693),2-proj-7-tuple(v_678),v_681,4-proj-7-tuple(v_678),5-proj-7-tuple(v_678),6-proj-7-tuple(v_678),7-proj-7-tuple(v_678))) in
        {185}let v_695: bitstring = catch-fail(concat3(v_682,2-proj-3-tuple(v_679),2-proj-2-tuple(v_693))) in
        {186}let (hs_696: handshakestate,message_a_697: bitstring) = (if (not-caught-fail(v_678) && success?(is-true(success?(1-proj-7-tuple(v_678))))) then (if (not-caught-fail(v_679) && success?(is-true(success?(1-proj-3-tuple(v_679))))) then (if not-caught-fail(v_681) then (if not-caught-fail(v_682) then (if not-caught-fail(v_684) then (if (not-caught-fail(v_693) && success?(is-true(success?(1-proj-2-tuple(v_693))))) then (if not-caught-fail(v_694) then (if not-caught-fail(v_695) then (v_694,v_695) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {187}event SendMsg(alice,charlie,stagepack_a(sid),msg_a(alice,charlie,sid));
        {188}insert statestore(alice,charlie,sid,statepack_b(hs_696));
        {189}out(pub, message_a_697)
    ) | (
        {231}get statestore(=alice,=charlie,=sid,statepack_b(hs_698: handshakestate)) in
        {191}in(pub, message_b_699: bitstring);
        {192}let v_700: bitstring = catch-fail(handshakestateunpack(hs_698)) in
        {193}let v_701: bitstring = catch-fail(deconcat3(message_b_699)) in
        {194}let v_702: bool = catch-fail(true) in
        {195}let v_703: key = catch-fail(1-proj-3-tuple(v_701)) in
        {196}let v_704: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_700))) in
        {197}let v_705: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_700)) then (if (not-caught-fail(v_704) && success?(is-true(success?(1-proj-3-tuple(v_704))))) then symmetricstatepack(1-proj-3-tuple(v_704),2-proj-3-tuple(v_704),hash(3-proj-3-tuple(v_704),v_703)) else fail-any) else fail-any)) in
        {198}let v_706: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_700))) in
        {199}let v_707: bitstring = catch-fail(symmetricstateunpack(v_705)) in
        {200}let v_708: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_707),(if success?(3-proj-7-tuple(v_700)) then (if (not-caught-fail(v_706) && success?(is-true(success?(1-proj-2-tuple(v_706))))) then dhexp(2-proj-2-tuple(v_706),v_703) else fail-any) else fail-any))) in
        {201}let v_709: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_707),(if success?(3-proj-7-tuple(v_700)) then (if (not-caught-fail(v_706) && success?(is-true(success?(1-proj-2-tuple(v_706))))) then dhexp(2-proj-2-tuple(v_706),v_703) else fail-any) else fail-any))) in
        {202}let v_710: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_707),(if success?(3-proj-7-tuple(v_700)) then (if (not-caught-fail(v_706) && success?(is-true(success?(1-proj-2-tuple(v_706))))) then dhexp(2-proj-2-tuple(v_706),v_703) else fail-any) else fail-any))) in
        {203}let v_711: bitstring = catch-fail((if (success?((if success?(3-proj-7-tuple(v_700)) then (if (not-caught-fail(v_706) && success?(is-true(success?(1-proj-2-tuple(v_706))))) then dhexp(2-proj-2-tuple(v_706),v_703) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_707))) then (if not-caught-fail(v_708) then (if not-caught-fail(v_709) then (if not-caught-fail(v_710) then (v_708,v_709,v_710) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {204}let v_712: symmetricstate = catch-fail((if success?((if success?(3-proj-7-tuple(v_700)) then (if (not-caught-fail(v_706) && success?(is-true(success?(1-proj-2-tuple(v_706))))) then dhexp(2-proj-2-tuple(v_706),v_703) else fail-any) else fail-any)) then (if (not-caught-fail(v_707) && success?(is-true(success?(1-proj-3-tuple(v_707))))) then (if (not-caught-fail(v_711) && success?(is-true(success?(1-proj-3-tuple(v_711))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_711)) then cipherstatepack(2-proj-3-tuple(v_711),minnonce) else fail-any),1-proj-3-tuple(v_711),3-proj-3-tuple(v_707)) else fail-any) else fail-any) else fail-any)) in
        {205}let v_713: bitstring = catch-fail(symmetricstateunpack(v_712)) in
        {206}let v_714: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_713))) in
        {207}let v_715: aead = catch-fail(decrypt(1-proj-2-tuple(v_714),2-proj-2-tuple(v_714),3-proj-3-tuple(v_713),2-proj-3-tuple(v_701))) in
        {208}let v_716: bitstring = catch-fail(aeadunpack(v_715)) in
        {209}let v_717: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_713))) in
        {210}let v_718: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_714))) && success?(1-proj-3-tuple(v_713))) then (if (not-caught-fail(v_717) && success?(is-true(success?(1-proj-2-tuple(v_717))))) then cipherstatepack(1-proj-2-tuple(v_717),increment_nonce(2-proj-2-tuple(v_714))) else fail-any) else fail-any)) in
        {211}let v_719: bitstring = catch-fail((if (success?(2-proj-3-tuple(v_701)) && (success?(3-proj-3-tuple(v_713)) && success?(1-proj-3-tuple(v_713)))) then (if (not-caught-fail(v_714) && success?(is-true(success?(1-proj-2-tuple(v_714))))) then (if not-caught-fail(v_715) then (if (not-caught-fail(v_716) && success?(is-true(success?(1-proj-3-tuple(v_716))))) then (if not-caught-fail(v_718) then (v_718,3-proj-3-tuple(v_716),1-proj-3-tuple(v_716)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {212}let v_720: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_719),2-proj-3-tuple(v_713),3-proj-3-tuple(v_713)))) in
        {213}let v_721: symmetricstate = catch-fail((if (success?(2-proj-3-tuple(v_701)) && success?(symmetricstatepack(1-proj-3-tuple(v_719),2-proj-3-tuple(v_713),3-proj-3-tuple(v_713)))) then (if (not-caught-fail(v_720) && success?(is-true(success?(1-proj-3-tuple(v_720))))) then symmetricstatepack(1-proj-3-tuple(v_720),2-proj-3-tuple(v_720),hash(3-proj-3-tuple(v_720),2-proj-3-tuple(v_701))) else fail-any) else fail-any)) in
        {214}let v_722: bitstring = catch-fail((if success?(2-proj-3-tuple(v_701)) then (if (not-caught-fail(v_713) && success?(is-true(success?(1-proj-3-tuple(v_713))))) then (if (not-caught-fail(v_719) && success?(is-true(success?(1-proj-3-tuple(v_719))))) then (if not-caught-fail(v_721) then (v_721,2-proj-3-tuple(v_719),3-proj-3-tuple(v_719)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {215}let v_723: key = catch-fail(2-proj-3-tuple(v_722)) in
        {216}let v_724: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_722))) in
        {217}let v_725: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_724))) in
        {218}let v_726: aead = catch-fail(decrypt(1-proj-2-tuple(v_725),2-proj-2-tuple(v_725),3-proj-3-tuple(v_724),3-proj-3-tuple(v_701))) in
        {219}let v_727: bitstring = catch-fail(aeadunpack(v_726)) in
        {220}let v_728: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_724))) in
        {221}let v_729: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_725))) && success?(1-proj-3-tuple(v_724))) then (if (not-caught-fail(v_728) && success?(is-true(success?(1-proj-2-tuple(v_728))))) then cipherstatepack(1-proj-2-tuple(v_728),increment_nonce(2-proj-2-tuple(v_725))) else fail-any) else fail-any)) in
        {222}let v_730: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_701)) && (success?(3-proj-3-tuple(v_724)) && success?(1-proj-3-tuple(v_724)))) then (if (not-caught-fail(v_725) && success?(is-true(success?(1-proj-2-tuple(v_725))))) then (if not-caught-fail(v_726) then (if (not-caught-fail(v_727) && success?(is-true(success?(1-proj-3-tuple(v_727))))) then (if not-caught-fail(v_729) then (v_729,3-proj-3-tuple(v_727),1-proj-3-tuple(v_727)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {223}let v_731: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_730),2-proj-3-tuple(v_724),3-proj-3-tuple(v_724)))) in
        {224}let v_732: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_701)) && success?(symmetricstatepack(1-proj-3-tuple(v_730),2-proj-3-tuple(v_724),3-proj-3-tuple(v_724)))) then (if (not-caught-fail(v_731) && success?(is-true(success?(1-proj-3-tuple(v_731))))) then symmetricstatepack(1-proj-3-tuple(v_731),2-proj-3-tuple(v_731),hash(3-proj-3-tuple(v_731),3-proj-3-tuple(v_701))) else fail-any) else fail-any)) in
        {225}let v_733: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_701)) && success?(1-proj-3-tuple(v_722))) then (if (not-caught-fail(v_724) && success?(is-true(success?(1-proj-3-tuple(v_724))))) then (if (not-caught-fail(v_730) && success?(is-true(success?(1-proj-3-tuple(v_730))))) then (if not-caught-fail(v_732) then (v_732,2-proj-3-tuple(v_730),3-proj-3-tuple(v_730)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {226}let v_734: key = catch-fail(dhexp(key_s(charlie),g)) in
        {227}let v_735: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_733),2-proj-7-tuple(v_700),3-proj-7-tuple(v_700),v_723,v_703,6-proj-7-tuple(v_700),7-proj-7-tuple(v_700))) in
        {228}let (hs_736: handshakestate,plaintext_b_737: bitstring,valid_738: bool) = (if (not-caught-fail(v_700) && success?(is-true(success?(1-proj-7-tuple(v_700))))) then (if (not-caught-fail(v_701) && success?(is-true(success?(1-proj-3-tuple(v_701))))) then (if not-caught-fail(v_702) then (if not-caught-fail(v_703) then (if not-caught-fail(v_705) then (if not-caught-fail(v_712) then (if (not-caught-fail(v_722) && success?(is-true(success?(1-proj-3-tuple(v_722))))) then (if not-caught-fail(v_723) then (if (not-caught-fail(v_733) && success?(is-true(success?(1-proj-3-tuple(v_733))))) then (if ((3-proj-3-tuple(v_722) && 3-proj-3-tuple(v_733)) && (v_723 = getpublickey((if not-caught-fail(v_734) then keypairpack(v_734,key_s(charlie)) else fail-any)))) then (if not-caught-fail(v_735) then (v_735,2-proj-3-tuple(v_733),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {229}event RecvMsg(alice,charlie,stagepack_b(sid),plaintext_b_737);
        {230}insert statestore(alice,charlie,sid,statepack_c(hs_736))
    ) | (
        {264}get statestore(=alice,=charlie,=sid,statepack_c(hs_739: handshakestate)) in
        {232}let v_740: bitstring = catch-fail(handshakestateunpack(hs_739)) in
        {233}let v_741: bitstring = catch-fail((empty,empty,empty)) in
        {234}let v_742: bitstring = catch-fail(keypairunpack(3-proj-7-tuple(v_740))) in
        {235}let v_743: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_740))) in
        {236}let v_744: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_743),(if (success?(4-proj-7-tuple(v_740)) && success?(3-proj-7-tuple(v_740))) then (if (not-caught-fail(v_742) && success?(is-true(success?(1-proj-2-tuple(v_742))))) then dhexp(2-proj-2-tuple(v_742),4-proj-7-tuple(v_740)) else fail-any) else fail-any))) in
        {237}let v_745: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_743),(if (success?(4-proj-7-tuple(v_740)) && success?(3-proj-7-tuple(v_740))) then (if (not-caught-fail(v_742) && success?(is-true(success?(1-proj-2-tuple(v_742))))) then dhexp(2-proj-2-tuple(v_742),4-proj-7-tuple(v_740)) else fail-any) else fail-any))) in
        {238}let v_746: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_743),(if (success?(4-proj-7-tuple(v_740)) && success?(3-proj-7-tuple(v_740))) then (if (not-caught-fail(v_742) && success?(is-true(success?(1-proj-2-tuple(v_742))))) then dhexp(2-proj-2-tuple(v_742),4-proj-7-tuple(v_740)) else fail-any) else fail-any))) in
        {239}let v_747: bitstring = catch-fail((if (success?((if (success?(4-proj-7-tuple(v_740)) && success?(3-proj-7-tuple(v_740))) then (if (not-caught-fail(v_742) && success?(is-true(success?(1-proj-2-tuple(v_742))))) then dhexp(2-proj-2-tuple(v_742),4-proj-7-tuple(v_740)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_743))) then (if not-caught-fail(v_744) then (if not-caught-fail(v_745) then (if not-caught-fail(v_746) then (v_744,v_745,v_746) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {240}let v_748: symmetricstate = catch-fail((if (success?((if (success?(4-proj-7-tuple(v_740)) && success?(3-proj-7-tuple(v_740))) then (if (not-caught-fail(v_742) && success?(is-true(success?(1-proj-2-tuple(v_742))))) then dhexp(2-proj-2-tuple(v_742),4-proj-7-tuple(v_740)) else fail-any) else fail-any)) && success?(1-proj-7-tuple(v_740))) then (if (not-caught-fail(v_743) && success?(is-true(success?(1-proj-3-tuple(v_743))))) then (if (not-caught-fail(v_747) && success?(is-true(success?(1-proj-3-tuple(v_747))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_747)) then cipherstatepack(2-proj-3-tuple(v_747),minnonce) else fail-any),1-proj-3-tuple(v_747),3-proj-3-tuple(v_743)) else fail-any) else fail-any) else fail-any)) in
        {241}let v_749: bitstring = catch-fail(symmetricstateunpack(v_748)) in
        {242}let v_750: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_749))) in
        {243}let v_751: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_750),2-proj-2-tuple(v_750),3-proj-3-tuple(v_749),msg_c(alice,charlie,sid))) in
        {244}let v_752: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_749))) in
        {245}let v_753: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_750))) && success?(1-proj-3-tuple(v_749))) then (if (not-caught-fail(v_752) && success?(is-true(success?(1-proj-2-tuple(v_752))))) then cipherstatepack(1-proj-2-tuple(v_752),increment_nonce(2-proj-2-tuple(v_750))) else fail-any) else fail-any)) in
        {246}let v_754: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_749)) && success?(1-proj-3-tuple(v_749))) then (if (not-caught-fail(v_750) && success?(is-true(success?(1-proj-2-tuple(v_750))))) then (if not-caught-fail(v_751) then (if not-caught-fail(v_753) then (v_753,v_751) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {247}let v_755: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_754),2-proj-3-tuple(v_749),3-proj-3-tuple(v_749)))) in
        {248}let v_756: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_754)) && success?(symmetricstatepack(1-proj-2-tuple(v_754),2-proj-3-tuple(v_749),3-proj-3-tuple(v_749)))) then (if (not-caught-fail(v_755) && success?(is-true(success?(1-proj-3-tuple(v_755))))) then symmetricstatepack(1-proj-3-tuple(v_755),2-proj-3-tuple(v_755),hash(3-proj-3-tuple(v_755),2-proj-2-tuple(v_754))) else fail-any) else fail-any)) in
        {249}let v_757: bitstring = catch-fail((if (not-caught-fail(v_749) && success?(is-true(success?(1-proj-3-tuple(v_749))))) then (if (not-caught-fail(v_754) && success?(is-true(success?(1-proj-2-tuple(v_754))))) then (if not-caught-fail(v_756) then (v_756,2-proj-2-tuple(v_754)) else fail-any) else fail-any) else fail-any)) in
        {250}let v_758: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_757),2-proj-7-tuple(v_740),3-proj-7-tuple(v_740),4-proj-7-tuple(v_740),5-proj-7-tuple(v_740),6-proj-7-tuple(v_740),7-proj-7-tuple(v_740))) in
        {251}let v_759: bitstring = catch-fail(concat3(1-proj-3-tuple(v_741),2-proj-3-tuple(v_741),2-proj-2-tuple(v_757))) in
        {252}let v_760: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_757))) in
        {253}let v_761: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_760),zero)) in
        {254}let v_762: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_760),zero)) in
        {255}let v_763: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_760),zero)) in
        {256}let v_764: bitstring = catch-fail((if success?(2-proj-3-tuple(v_760)) then (if not-caught-fail(v_761) then (if not-caught-fail(v_762) then (if not-caught-fail(v_763) then (v_761,v_762,v_763) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {257}let v_765: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_764)) then cipherstatepack(1-proj-3-tuple(v_764),minnonce) else fail-any)) in
        {258}let v_766: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_764)) then cipherstatepack(2-proj-3-tuple(v_764),minnonce) else fail-any)) in
        {259}let v_767: bitstring = catch-fail((if success?(1-proj-2-tuple(v_757)) then (if (not-caught-fail(v_760) && success?(is-true(success?(1-proj-3-tuple(v_760))))) then (if (not-caught-fail(v_764) && success?(is-true(success?(1-proj-3-tuple(v_764))))) then (if not-caught-fail(v_765) then (if not-caught-fail(v_766) then (1-proj-2-tuple(v_757),v_765,v_766) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {260}let (hs_768: handshakestate,message_c_769: bitstring,cs1_770: cipherstate,cs2_771: cipherstate) = (if (not-caught-fail(v_740) && success?(is-true(success?(1-proj-7-tuple(v_740))))) then (if (not-caught-fail(v_741) && success?(is-true(success?(1-proj-3-tuple(v_741))))) then (if not-caught-fail(v_748) then (if (not-caught-fail(v_757) && success?(is-true(success?(1-proj-2-tuple(v_757))))) then (if not-caught-fail(v_758) then (if not-caught-fail(v_759) then (if (not-caught-fail(v_767) && success?(is-true(success?(1-proj-3-tuple(v_767))))) then (v_758,v_759,2-proj-3-tuple(v_767),3-proj-3-tuple(v_767)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {261}event SendMsg(alice,charlie,stagepack_c(sid),msg_c(alice,charlie,sid));
        {262}insert statestore(alice,charlie,sid,statepack_d(hs_768,cs1_770,cs2_771));
        {263}out(pub, message_c_769)
    ) | (
        {265}!
        {285}get statestore(=alice,=charlie,=sid,statepack_d(hs_772: handshakestate,cs1_773: cipherstate,cs2_774: cipherstate)) in
        {266}let hs_775: handshakestate = handshakestatesetcs(hs_772,cs2_774) in
        {267}in(pub, message_d_776: bitstring);
        {268}let v_777: bitstring = catch-fail(handshakestateunpack(hs_775)) in
        {269}let v_778: bitstring = catch-fail(deconcat3(message_d_776)) in
        {270}let v_779: bool = catch-fail(true) in
        {271}let v_780: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_777))) in
        {272}let v_781: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_780))) in
        {273}let v_782: aead = catch-fail(decrypt(1-proj-2-tuple(v_781),2-proj-2-tuple(v_781),3-proj-3-tuple(v_780),3-proj-3-tuple(v_778))) in
        {274}let v_783: bitstring = catch-fail(aeadunpack(v_782)) in
        {275}let v_784: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_780))) in
        {276}let v_785: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_781))) && success?(1-proj-3-tuple(v_780))) then (if (not-caught-fail(v_784) && success?(is-true(success?(1-proj-2-tuple(v_784))))) then cipherstatepack(1-proj-2-tuple(v_784),increment_nonce(2-proj-2-tuple(v_781))) else fail-any) else fail-any)) in
        {277}let v_786: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_778)) && (success?(3-proj-3-tuple(v_780)) && success?(1-proj-3-tuple(v_780)))) then (if (not-caught-fail(v_781) && success?(is-true(success?(1-proj-2-tuple(v_781))))) then (if not-caught-fail(v_782) then (if (not-caught-fail(v_783) && success?(is-true(success?(1-proj-3-tuple(v_783))))) then (if not-caught-fail(v_785) then (v_785,3-proj-3-tuple(v_783),1-proj-3-tuple(v_783)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {278}let v_787: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_786),2-proj-3-tuple(v_780),3-proj-3-tuple(v_780)))) in
        {279}let v_788: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_778)) && success?(symmetricstatepack(1-proj-3-tuple(v_786),2-proj-3-tuple(v_780),3-proj-3-tuple(v_780)))) then (if (not-caught-fail(v_787) && success?(is-true(success?(1-proj-3-tuple(v_787))))) then symmetricstatepack(1-proj-3-tuple(v_787),2-proj-3-tuple(v_787),hash(3-proj-3-tuple(v_787),3-proj-3-tuple(v_778))) else fail-any) else fail-any)) in
        {280}let v_789: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_778)) && success?(1-proj-7-tuple(v_777))) then (if (not-caught-fail(v_780) && success?(is-true(success?(1-proj-3-tuple(v_780))))) then (if (not-caught-fail(v_786) && success?(is-true(success?(1-proj-3-tuple(v_786))))) then (if not-caught-fail(v_788) then (v_788,2-proj-3-tuple(v_786),3-proj-3-tuple(v_786)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {281}let v_790: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_789),2-proj-7-tuple(v_777),3-proj-7-tuple(v_777),4-proj-7-tuple(v_777),5-proj-7-tuple(v_777),6-proj-7-tuple(v_777),7-proj-7-tuple(v_777))) in
        {282}let (hs_791: handshakestate,plaintext_d_792: bitstring,valid_793: bool) = (if (not-caught-fail(v_777) && success?(is-true(success?(1-proj-7-tuple(v_777))))) then (if (not-caught-fail(v_778) && success?(is-true(success?(1-proj-3-tuple(v_778))))) then (if not-caught-fail(v_779) then (if (not-caught-fail(v_789) && success?(is-true(success?(1-proj-3-tuple(v_789))))) then (if (v_779 && 3-proj-3-tuple(v_789)) then (if not-caught-fail(v_790) then (v_790,2-proj-3-tuple(v_789),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {283}event RecvMsg(alice,charlie,stagepack_d(sid),plaintext_d_792);
        {284}insert statestore(alice,charlie,sid,statepack_e(hs_791,cs1_773,handshakestategetcs(hs_791)))
    ) | (
        {286}!
        {304}get statestore(=alice,=charlie,=sid,statepack_e(hs_794: handshakestate,cs1_795: cipherstate,cs2_796: cipherstate)) in
        {287}let hs_797: handshakestate = handshakestatesetcs(hs_794,cs1_795) in
        {288}let v_798: bitstring = catch-fail(handshakestateunpack(hs_797)) in
        {289}let v_799: bitstring = catch-fail((empty,empty,empty)) in
        {290}let v_800: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_798))) in
        {291}let v_801: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_800))) in
        {292}let v_802: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_801),2-proj-2-tuple(v_801),3-proj-3-tuple(v_800),msg_e(alice,charlie,sid))) in
        {293}let v_803: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_800))) in
        {294}let v_804: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_801))) && success?(1-proj-3-tuple(v_800))) then (if (not-caught-fail(v_803) && success?(is-true(success?(1-proj-2-tuple(v_803))))) then cipherstatepack(1-proj-2-tuple(v_803),increment_nonce(2-proj-2-tuple(v_801))) else fail-any) else fail-any)) in
        {295}let v_805: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_800)) && success?(1-proj-3-tuple(v_800))) then (if (not-caught-fail(v_801) && success?(is-true(success?(1-proj-2-tuple(v_801))))) then (if not-caught-fail(v_802) then (if not-caught-fail(v_804) then (v_804,v_802) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {296}let v_806: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_805),2-proj-3-tuple(v_800),3-proj-3-tuple(v_800)))) in
        {297}let v_807: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_805)) && success?(symmetricstatepack(1-proj-2-tuple(v_805),2-proj-3-tuple(v_800),3-proj-3-tuple(v_800)))) then (if (not-caught-fail(v_806) && success?(is-true(success?(1-proj-3-tuple(v_806))))) then symmetricstatepack(1-proj-3-tuple(v_806),2-proj-3-tuple(v_806),hash(3-proj-3-tuple(v_806),2-proj-2-tuple(v_805))) else fail-any) else fail-any)) in
        {298}let v_808: bitstring = catch-fail((if success?(1-proj-7-tuple(v_798)) then (if (not-caught-fail(v_800) && success?(is-true(success?(1-proj-3-tuple(v_800))))) then (if (not-caught-fail(v_805) && success?(is-true(success?(1-proj-2-tuple(v_805))))) then (if not-caught-fail(v_807) then (v_807,2-proj-2-tuple(v_805)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {299}let v_809: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_808),2-proj-7-tuple(v_798),3-proj-7-tuple(v_798),4-proj-7-tuple(v_798),5-proj-7-tuple(v_798),6-proj-7-tuple(v_798),7-proj-7-tuple(v_798))) in
        {300}let v_810: bitstring = catch-fail(concat3(1-proj-3-tuple(v_799),2-proj-3-tuple(v_799),2-proj-2-tuple(v_808))) in
        {301}let (hs_811: handshakestate,message_e_812: bitstring) = (if (not-caught-fail(v_798) && success?(is-true(success?(1-proj-7-tuple(v_798))))) then (if (not-caught-fail(v_799) && success?(is-true(success?(1-proj-3-tuple(v_799))))) then (if (not-caught-fail(v_808) && success?(is-true(success?(1-proj-2-tuple(v_808))))) then (if not-caught-fail(v_809) then (if not-caught-fail(v_810) then (v_809,v_810) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {302}event SendMsg(alice,charlie,stagepack_e(sid),msg_e(alice,charlie,sid));
        {303}out(pub, message_e_812)
    ) | (
        {305}event LeakS(phase0,alice);
        {306}out(pub, key_s(alice))
    ) | (
        {307}phase 1;
        {308}event LeakS(phase1,alice);
        {309}out(pub, key_s(alice))
    )
) | (
    {310}let s_813: keypair = keypairpack(empty,empty) in
    {311}out(pub, getpublickey(s_813));
    (
        {312}let e_814: keypair = keypairpack(empty,empty) in
        {313}let rs_815: key = empty in
        {314}let re_816: key = empty in
        {315}let v_817: bitstring = catch-fail(hash(somename,empty)) in
        {316}let v_818: key = catch-fail(v_817) in
        {317}let v_819: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {318}let v_820: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_817) then (if not-caught-fail(v_818) then (if not-caught-fail(v_819) then symmetricstatepack(v_819,v_818,v_817) else fail-any) else fail-any) else fail-any))) in
        {319}let v_821: symmetricstate = catch-fail((if success?((if not-caught-fail(v_817) then (if not-caught-fail(v_818) then (if not-caught-fail(v_819) then symmetricstatepack(v_819,v_818,v_817) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_820) && success?(is-true(success?(1-proj-3-tuple(v_820))))) then symmetricstatepack(1-proj-3-tuple(v_820),2-proj-3-tuple(v_820),hash(3-proj-3-tuple(v_820),empty)) else fail-any) else fail-any)) in
        {320}let hs_822: handshakestate = (if not-caught-fail(v_821) then handshakestatepack(v_821,s_813,e_814,rs_815,re_816,empty,false) else fail-any) in
        {321}insert statestore(bob,alice,sid,statepack_a(hs_822))
    ) | (
        {343}get statestore(=bob,=alice,=sid,statepack_a(hs_823: handshakestate)) in
        {322}in(pub, message_a_824: bitstring);
        {323}let v_825: bitstring = catch-fail(handshakestateunpack(hs_823)) in
        {324}let v_826: bitstring = catch-fail(deconcat3(message_a_824)) in
        {325}let v_827: bool = catch-fail(true) in
        {326}let v_828: key = catch-fail(1-proj-3-tuple(v_826)) in
        {327}let v_829: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_825))) in
        {328}let v_830: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_825)) then (if (not-caught-fail(v_829) && success?(is-true(success?(1-proj-3-tuple(v_829))))) then symmetricstatepack(1-proj-3-tuple(v_829),2-proj-3-tuple(v_829),hash(3-proj-3-tuple(v_829),v_828)) else fail-any) else fail-any)) in
        {329}let v_831: bitstring = catch-fail(symmetricstateunpack(v_830)) in
        {330}let v_832: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_831))) in
        {331}let v_833: aead = catch-fail(decrypt(1-proj-2-tuple(v_832),2-proj-2-tuple(v_832),3-proj-3-tuple(v_831),3-proj-3-tuple(v_826))) in
        {332}let v_834: bitstring = catch-fail(aeadunpack(v_833)) in
        {333}let v_835: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_831))) in
        {334}let v_836: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_832))) && success?(1-proj-3-tuple(v_831))) then (if (not-caught-fail(v_835) && success?(is-true(success?(1-proj-2-tuple(v_835))))) then cipherstatepack(1-proj-2-tuple(v_835),increment_nonce(2-proj-2-tuple(v_832))) else fail-any) else fail-any)) in
        {335}let v_837: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_826)) && (success?(3-proj-3-tuple(v_831)) && success?(1-proj-3-tuple(v_831)))) then (if (not-caught-fail(v_832) && success?(is-true(success?(1-proj-2-tuple(v_832))))) then (if not-caught-fail(v_833) then (if (not-caught-fail(v_834) && success?(is-true(success?(1-proj-3-tuple(v_834))))) then (if not-caught-fail(v_836) then (v_836,3-proj-3-tuple(v_834),1-proj-3-tuple(v_834)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {336}let v_838: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_837),2-proj-3-tuple(v_831),3-proj-3-tuple(v_831)))) in
        {337}let v_839: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_826)) && success?(symmetricstatepack(1-proj-3-tuple(v_837),2-proj-3-tuple(v_831),3-proj-3-tuple(v_831)))) then (if (not-caught-fail(v_838) && success?(is-true(success?(1-proj-3-tuple(v_838))))) then symmetricstatepack(1-proj-3-tuple(v_838),2-proj-3-tuple(v_838),hash(3-proj-3-tuple(v_838),3-proj-3-tuple(v_826))) else fail-any) else fail-any)) in
        {338}let v_840: bitstring = catch-fail((if success?(3-proj-3-tuple(v_826)) then (if (not-caught-fail(v_831) && success?(is-true(success?(1-proj-3-tuple(v_831))))) then (if (not-caught-fail(v_837) && success?(is-true(success?(1-proj-3-tuple(v_837))))) then (if not-caught-fail(v_839) then (v_839,2-proj-3-tuple(v_837),3-proj-3-tuple(v_837)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {339}let v_841: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_840),2-proj-7-tuple(v_825),3-proj-7-tuple(v_825),4-proj-7-tuple(v_825),v_828,6-proj-7-tuple(v_825),7-proj-7-tuple(v_825))) in
        {340}let (hs_842: handshakestate,plaintext_a: bitstring,valid_843: bool) = (if (not-caught-fail(v_825) && success?(is-true(success?(1-proj-7-tuple(v_825))))) then (if (not-caught-fail(v_826) && success?(is-true(success?(1-proj-3-tuple(v_826))))) then (if not-caught-fail(v_827) then (if not-caught-fail(v_828) then (if not-caught-fail(v_830) then (if (not-caught-fail(v_840) && success?(is-true(success?(1-proj-3-tuple(v_840))))) then (if (v_827 && 3-proj-3-tuple(v_840)) then (if not-caught-fail(v_841) then (v_841,2-proj-3-tuple(v_840),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {341}event RecvMsg(bob,alice,stagepack_a(sid),plaintext_a);
        {342}insert statestore(bob,alice,sid,statepack_b(hs_842))
    ) | (
        {384}get statestore(=bob,=alice,=sid,statepack_b(hs_844: handshakestate)) in
        {344}let v_845: bitstring = catch-fail(handshakestateunpack(hs_844)) in
        {345}let v_846: bitstring = catch-fail((empty,empty,empty)) in
        {346}let v_847: key = catch-fail(dhexp(key_e(bob,alice,sid),g)) in
        {347}let v_848: keypair = catch-fail((if not-caught-fail(v_847) then keypairpack(v_847,key_e(bob,alice,sid)) else fail-any)) in
        {348}let v_849: bitstring = catch-fail(getpublickey(v_848)) in
        {349}let v_850: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_845))) in
        {350}let v_851: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_845)) then (if (not-caught-fail(v_850) && success?(is-true(success?(1-proj-3-tuple(v_850))))) then symmetricstatepack(1-proj-3-tuple(v_850),2-proj-3-tuple(v_850),hash(3-proj-3-tuple(v_850),v_849)) else fail-any) else fail-any)) in
        {351}let v_852: bitstring = catch-fail(keypairunpack(v_848)) in
        {352}let v_853: bitstring = catch-fail(symmetricstateunpack(v_851)) in
        {353}let v_854: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_853),(if success?(5-proj-7-tuple(v_845)) then (if (not-caught-fail(v_852) && success?(is-true(success?(1-proj-2-tuple(v_852))))) then dhexp(2-proj-2-tuple(v_852),5-proj-7-tuple(v_845)) else fail-any) else fail-any))) in
        {354}let v_855: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_853),(if success?(5-proj-7-tuple(v_845)) then (if (not-caught-fail(v_852) && success?(is-true(success?(1-proj-2-tuple(v_852))))) then dhexp(2-proj-2-tuple(v_852),5-proj-7-tuple(v_845)) else fail-any) else fail-any))) in
        {355}let v_856: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_853),(if success?(5-proj-7-tuple(v_845)) then (if (not-caught-fail(v_852) && success?(is-true(success?(1-proj-2-tuple(v_852))))) then dhexp(2-proj-2-tuple(v_852),5-proj-7-tuple(v_845)) else fail-any) else fail-any))) in
        {356}let v_857: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_845)) then (if (not-caught-fail(v_852) && success?(is-true(success?(1-proj-2-tuple(v_852))))) then dhexp(2-proj-2-tuple(v_852),5-proj-7-tuple(v_845)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_853))) then (if not-caught-fail(v_854) then (if not-caught-fail(v_855) then (if not-caught-fail(v_856) then (v_854,v_855,v_856) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {357}let v_858: symmetricstate = catch-fail((if success?((if success?(5-proj-7-tuple(v_845)) then (if (not-caught-fail(v_852) && success?(is-true(success?(1-proj-2-tuple(v_852))))) then dhexp(2-proj-2-tuple(v_852),5-proj-7-tuple(v_845)) else fail-any) else fail-any)) then (if (not-caught-fail(v_853) && success?(is-true(success?(1-proj-3-tuple(v_853))))) then (if (not-caught-fail(v_857) && success?(is-true(success?(1-proj-3-tuple(v_857))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_857)) then cipherstatepack(2-proj-3-tuple(v_857),minnonce) else fail-any),1-proj-3-tuple(v_857),3-proj-3-tuple(v_853)) else fail-any) else fail-any) else fail-any)) in
        {358}let v_859: key = catch-fail(dhexp(key_s(bob),g)) in
        {359}let v_860: keypair = catch-fail((if not-caught-fail(v_859) then keypairpack(v_859,key_s(bob)) else fail-any)) in
        {360}let v_861: bitstring = catch-fail(symmetricstateunpack(v_858)) in
        {361}let v_862: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_861))) in
        {362}let v_863: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_862),2-proj-2-tuple(v_862),3-proj-3-tuple(v_861),getpublickey(v_860))) in
        {363}let v_864: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_861))) in
        {364}let v_865: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_862))) && success?(1-proj-3-tuple(v_861))) then (if (not-caught-fail(v_864) && success?(is-true(success?(1-proj-2-tuple(v_864))))) then cipherstatepack(1-proj-2-tuple(v_864),increment_nonce(2-proj-2-tuple(v_862))) else fail-any) else fail-any)) in
        {365}let v_866: bitstring = catch-fail((if (success?(getpublickey(v_860)) && (success?(3-proj-3-tuple(v_861)) && success?(1-proj-3-tuple(v_861)))) then (if (not-caught-fail(v_862) && success?(is-true(success?(1-proj-2-tuple(v_862))))) then (if not-caught-fail(v_863) then (if not-caught-fail(v_865) then (v_865,v_863) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {366}let v_867: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_866),2-proj-3-tuple(v_861),3-proj-3-tuple(v_861)))) in
        {367}let v_868: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_866)) && success?(symmetricstatepack(1-proj-2-tuple(v_866),2-proj-3-tuple(v_861),3-proj-3-tuple(v_861)))) then (if (not-caught-fail(v_867) && success?(is-true(success?(1-proj-3-tuple(v_867))))) then symmetricstatepack(1-proj-3-tuple(v_867),2-proj-3-tuple(v_867),hash(3-proj-3-tuple(v_867),2-proj-2-tuple(v_866))) else fail-any) else fail-any)) in
        {368}let v_869: bitstring = catch-fail((if success?(getpublickey(v_860)) then (if (not-caught-fail(v_861) && success?(is-true(success?(1-proj-3-tuple(v_861))))) then (if (not-caught-fail(v_866) && success?(is-true(success?(1-proj-2-tuple(v_866))))) then (if not-caught-fail(v_868) then (v_868,2-proj-2-tuple(v_866)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {369}let v_870: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_869))) in
        {370}let v_871: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_870))) in
        {371}let v_872: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_871),2-proj-2-tuple(v_871),3-proj-3-tuple(v_870),msg_b(bob,alice,sid))) in
        {372}let v_873: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_870))) in
        {373}let v_874: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_871))) && success?(1-proj-3-tuple(v_870))) then (if (not-caught-fail(v_873) && success?(is-true(success?(1-proj-2-tuple(v_873))))) then cipherstatepack(1-proj-2-tuple(v_873),increment_nonce(2-proj-2-tuple(v_871))) else fail-any) else fail-any)) in
        {374}let v_875: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_870)) && success?(1-proj-3-tuple(v_870))) then (if (not-caught-fail(v_871) && success?(is-true(success?(1-proj-2-tuple(v_871))))) then (if not-caught-fail(v_872) then (if not-caught-fail(v_874) then (v_874,v_872) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {375}let v_876: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_875),2-proj-3-tuple(v_870),3-proj-3-tuple(v_870)))) in
        {376}let v_877: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_875)) && success?(symmetricstatepack(1-proj-2-tuple(v_875),2-proj-3-tuple(v_870),3-proj-3-tuple(v_870)))) then (if (not-caught-fail(v_876) && success?(is-true(success?(1-proj-3-tuple(v_876))))) then symmetricstatepack(1-proj-3-tuple(v_876),2-proj-3-tuple(v_876),hash(3-proj-3-tuple(v_876),2-proj-2-tuple(v_875))) else fail-any) else fail-any)) in
        {377}let v_878: bitstring = catch-fail((if success?(1-proj-2-tuple(v_869)) then (if (not-caught-fail(v_870) && success?(is-true(success?(1-proj-3-tuple(v_870))))) then (if (not-caught-fail(v_875) && success?(is-true(success?(1-proj-2-tuple(v_875))))) then (if not-caught-fail(v_877) then (v_877,2-proj-2-tuple(v_875)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {378}let v_879: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_878),v_860,v_848,4-proj-7-tuple(v_845),5-proj-7-tuple(v_845),6-proj-7-tuple(v_845),7-proj-7-tuple(v_845))) in
        {379}let v_880: bitstring = catch-fail(concat3(v_849,2-proj-2-tuple(v_869),2-proj-2-tuple(v_878))) in
        {380}let (hs_881: handshakestate,message_b_882: bitstring) = (if (not-caught-fail(v_845) && success?(is-true(success?(1-proj-7-tuple(v_845))))) then (if (not-caught-fail(v_846) && success?(is-true(success?(1-proj-3-tuple(v_846))))) then (if not-caught-fail(v_848) then (if not-caught-fail(v_849) then (if not-caught-fail(v_851) then (if not-caught-fail(v_858) then (if not-caught-fail(v_860) then (if (not-caught-fail(v_869) && success?(is-true(success?(1-proj-2-tuple(v_869))))) then (if (not-caught-fail(v_878) && success?(is-true(success?(1-proj-2-tuple(v_878))))) then (if not-caught-fail(v_879) then (if not-caught-fail(v_880) then (v_879,v_880) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {381}event SendMsg(bob,alice,stagepack_b(sid),msg_b(bob,alice,sid));
        {382}insert statestore(bob,alice,sid,statepack_c(hs_881));
        {383}out(pub, message_b_882)
    ) | (
        {418}get statestore(=bob,=alice,=sid,statepack_c(hs_883: handshakestate)) in
        {385}in(pub, message_c_884: bitstring);
        {386}let v_885: bitstring = catch-fail(handshakestateunpack(hs_883)) in
        {387}let v_886: bitstring = catch-fail(deconcat3(message_c_884)) in
        {388}let v_887: bool = catch-fail(true) in
        {389}let v_888: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_885))) in
        {390}let v_889: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_885))) in
        {391}let v_890: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_889),(if (success?(5-proj-7-tuple(v_885)) && success?(2-proj-7-tuple(v_885))) then (if (not-caught-fail(v_888) && success?(is-true(success?(1-proj-2-tuple(v_888))))) then dhexp(2-proj-2-tuple(v_888),5-proj-7-tuple(v_885)) else fail-any) else fail-any))) in
        {392}let v_891: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_889),(if (success?(5-proj-7-tuple(v_885)) && success?(2-proj-7-tuple(v_885))) then (if (not-caught-fail(v_888) && success?(is-true(success?(1-proj-2-tuple(v_888))))) then dhexp(2-proj-2-tuple(v_888),5-proj-7-tuple(v_885)) else fail-any) else fail-any))) in
        {393}let v_892: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_889),(if (success?(5-proj-7-tuple(v_885)) && success?(2-proj-7-tuple(v_885))) then (if (not-caught-fail(v_888) && success?(is-true(success?(1-proj-2-tuple(v_888))))) then dhexp(2-proj-2-tuple(v_888),5-proj-7-tuple(v_885)) else fail-any) else fail-any))) in
        {394}let v_893: bitstring = catch-fail((if (success?((if (success?(5-proj-7-tuple(v_885)) && success?(2-proj-7-tuple(v_885))) then (if (not-caught-fail(v_888) && success?(is-true(success?(1-proj-2-tuple(v_888))))) then dhexp(2-proj-2-tuple(v_888),5-proj-7-tuple(v_885)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_889))) then (if not-caught-fail(v_890) then (if not-caught-fail(v_891) then (if not-caught-fail(v_892) then (v_890,v_891,v_892) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {395}let v_894: symmetricstate = catch-fail((if (success?((if (success?(5-proj-7-tuple(v_885)) && success?(2-proj-7-tuple(v_885))) then (if (not-caught-fail(v_888) && success?(is-true(success?(1-proj-2-tuple(v_888))))) then dhexp(2-proj-2-tuple(v_888),5-proj-7-tuple(v_885)) else fail-any) else fail-any)) && success?(1-proj-7-tuple(v_885))) then (if (not-caught-fail(v_889) && success?(is-true(success?(1-proj-3-tuple(v_889))))) then (if (not-caught-fail(v_893) && success?(is-true(success?(1-proj-3-tuple(v_893))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_893)) then cipherstatepack(2-proj-3-tuple(v_893),minnonce) else fail-any),1-proj-3-tuple(v_893),3-proj-3-tuple(v_889)) else fail-any) else fail-any) else fail-any)) in
        {396}let v_895: bitstring = catch-fail(symmetricstateunpack(v_894)) in
        {397}let v_896: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_895))) in
        {398}let v_897: aead = catch-fail(decrypt(1-proj-2-tuple(v_896),2-proj-2-tuple(v_896),3-proj-3-tuple(v_895),3-proj-3-tuple(v_886))) in
        {399}let v_898: bitstring = catch-fail(aeadunpack(v_897)) in
        {400}let v_899: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_895))) in
        {401}let v_900: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_896))) && success?(1-proj-3-tuple(v_895))) then (if (not-caught-fail(v_899) && success?(is-true(success?(1-proj-2-tuple(v_899))))) then cipherstatepack(1-proj-2-tuple(v_899),increment_nonce(2-proj-2-tuple(v_896))) else fail-any) else fail-any)) in
        {402}let v_901: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_886)) && (success?(3-proj-3-tuple(v_895)) && success?(1-proj-3-tuple(v_895)))) then (if (not-caught-fail(v_896) && success?(is-true(success?(1-proj-2-tuple(v_896))))) then (if not-caught-fail(v_897) then (if (not-caught-fail(v_898) && success?(is-true(success?(1-proj-3-tuple(v_898))))) then (if not-caught-fail(v_900) then (v_900,3-proj-3-tuple(v_898),1-proj-3-tuple(v_898)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {403}let v_902: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_901),2-proj-3-tuple(v_895),3-proj-3-tuple(v_895)))) in
        {404}let v_903: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_886)) && success?(symmetricstatepack(1-proj-3-tuple(v_901),2-proj-3-tuple(v_895),3-proj-3-tuple(v_895)))) then (if (not-caught-fail(v_902) && success?(is-true(success?(1-proj-3-tuple(v_902))))) then symmetricstatepack(1-proj-3-tuple(v_902),2-proj-3-tuple(v_902),hash(3-proj-3-tuple(v_902),3-proj-3-tuple(v_886))) else fail-any) else fail-any)) in
        {405}let v_904: bitstring = catch-fail((if success?(3-proj-3-tuple(v_886)) then (if (not-caught-fail(v_895) && success?(is-true(success?(1-proj-3-tuple(v_895))))) then (if (not-caught-fail(v_901) && success?(is-true(success?(1-proj-3-tuple(v_901))))) then (if not-caught-fail(v_903) then (v_903,2-proj-3-tuple(v_901),3-proj-3-tuple(v_901)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {406}let v_905: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_904),2-proj-7-tuple(v_885),3-proj-7-tuple(v_885),4-proj-7-tuple(v_885),5-proj-7-tuple(v_885),6-proj-7-tuple(v_885),7-proj-7-tuple(v_885))) in
        {407}let v_906: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_904))) in
        {408}let v_907: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_906),zero)) in
        {409}let v_908: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_906),zero)) in
        {410}let v_909: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_906),zero)) in
        {411}let v_910: bitstring = catch-fail((if success?(2-proj-3-tuple(v_906)) then (if not-caught-fail(v_907) then (if not-caught-fail(v_908) then (if not-caught-fail(v_909) then (v_907,v_908,v_909) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {412}let v_911: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_910)) then cipherstatepack(1-proj-3-tuple(v_910),minnonce) else fail-any)) in
        {413}let v_912: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_910)) then cipherstatepack(2-proj-3-tuple(v_910),minnonce) else fail-any)) in
        {414}let v_913: bitstring = catch-fail((if success?(1-proj-3-tuple(v_904)) then (if (not-caught-fail(v_906) && success?(is-true(success?(1-proj-3-tuple(v_906))))) then (if (not-caught-fail(v_910) && success?(is-true(success?(1-proj-3-tuple(v_910))))) then (if not-caught-fail(v_911) then (if not-caught-fail(v_912) then (1-proj-3-tuple(v_904),v_911,v_912) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {415}let (hs_914: handshakestate,plaintext_c: bitstring,valid_915: bool,cs1_916: cipherstate,cs2_917: cipherstate) = (if (not-caught-fail(v_885) && success?(is-true(success?(1-proj-7-tuple(v_885))))) then (if (not-caught-fail(v_886) && success?(is-true(success?(1-proj-3-tuple(v_886))))) then (if not-caught-fail(v_887) then (if not-caught-fail(v_894) then (if (not-caught-fail(v_904) && success?(is-true(success?(1-proj-3-tuple(v_904))))) then (if (v_887 && 3-proj-3-tuple(v_904)) then (if not-caught-fail(v_905) then (if (not-caught-fail(v_913) && success?(is-true(success?(1-proj-3-tuple(v_913))))) then (v_905,2-proj-3-tuple(v_904),true,2-proj-3-tuple(v_913),3-proj-3-tuple(v_913)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {416}event RecvMsg(bob,alice,stagepack_c(sid),plaintext_c);
        {417}insert statestore(bob,alice,sid,statepack_d(hs_914,cs1_916,cs2_917))
    ) | (
        {419}!
        {438}get statestore(=bob,=alice,=sid,statepack_d(hs_918: handshakestate,cs1_919: cipherstate,cs2_920: cipherstate)) in
        {420}let hs_921: handshakestate = handshakestatesetcs(hs_918,cs2_920) in
        {421}let v_922: bitstring = catch-fail(handshakestateunpack(hs_921)) in
        {422}let v_923: bitstring = catch-fail((empty,empty,empty)) in
        {423}let v_924: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_922))) in
        {424}let v_925: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_924))) in
        {425}let v_926: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_925),2-proj-2-tuple(v_925),3-proj-3-tuple(v_924),msg_d(bob,alice,sid))) in
        {426}let v_927: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_924))) in
        {427}let v_928: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_925))) && success?(1-proj-3-tuple(v_924))) then (if (not-caught-fail(v_927) && success?(is-true(success?(1-proj-2-tuple(v_927))))) then cipherstatepack(1-proj-2-tuple(v_927),increment_nonce(2-proj-2-tuple(v_925))) else fail-any) else fail-any)) in
        {428}let v_929: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_924)) && success?(1-proj-3-tuple(v_924))) then (if (not-caught-fail(v_925) && success?(is-true(success?(1-proj-2-tuple(v_925))))) then (if not-caught-fail(v_926) then (if not-caught-fail(v_928) then (v_928,v_926) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {429}let v_930: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_929),2-proj-3-tuple(v_924),3-proj-3-tuple(v_924)))) in
        {430}let v_931: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_929)) && success?(symmetricstatepack(1-proj-2-tuple(v_929),2-proj-3-tuple(v_924),3-proj-3-tuple(v_924)))) then (if (not-caught-fail(v_930) && success?(is-true(success?(1-proj-3-tuple(v_930))))) then symmetricstatepack(1-proj-3-tuple(v_930),2-proj-3-tuple(v_930),hash(3-proj-3-tuple(v_930),2-proj-2-tuple(v_929))) else fail-any) else fail-any)) in
        {431}let v_932: bitstring = catch-fail((if success?(1-proj-7-tuple(v_922)) then (if (not-caught-fail(v_924) && success?(is-true(success?(1-proj-3-tuple(v_924))))) then (if (not-caught-fail(v_929) && success?(is-true(success?(1-proj-2-tuple(v_929))))) then (if not-caught-fail(v_931) then (v_931,2-proj-2-tuple(v_929)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {432}let v_933: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_932),2-proj-7-tuple(v_922),3-proj-7-tuple(v_922),4-proj-7-tuple(v_922),5-proj-7-tuple(v_922),6-proj-7-tuple(v_922),7-proj-7-tuple(v_922))) in
        {433}let v_934: bitstring = catch-fail(concat3(1-proj-3-tuple(v_923),2-proj-3-tuple(v_923),2-proj-2-tuple(v_932))) in
        {434}let (hs_935: handshakestate,message_d_936: bitstring) = (if (not-caught-fail(v_922) && success?(is-true(success?(1-proj-7-tuple(v_922))))) then (if (not-caught-fail(v_923) && success?(is-true(success?(1-proj-3-tuple(v_923))))) then (if (not-caught-fail(v_932) && success?(is-true(success?(1-proj-2-tuple(v_932))))) then (if not-caught-fail(v_933) then (if not-caught-fail(v_934) then (v_933,v_934) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {435}event SendMsg(bob,alice,stagepack_d(sid),msg_d(bob,alice,sid));
        {436}insert statestore(bob,alice,sid,statepack_e(hs_935,cs1_919,handshakestategetcs(hs_935)));
        {437}out(pub, message_d_936)
    ) | (
        {439}!
        {459}get statestore(=bob,=alice,=sid,statepack_e(hs_937: handshakestate,cs1_938: cipherstate,cs2_939: cipherstate)) in
        {440}let hs_940: handshakestate = handshakestatesetcs(hs_937,cs1_938) in
        {441}in(pub, message_e_941: bitstring);
        {442}let v_942: bitstring = catch-fail(handshakestateunpack(hs_940)) in
        {443}let v_943: bitstring = catch-fail(deconcat3(message_e_941)) in
        {444}let v_944: bool = catch-fail(true) in
        {445}let v_945: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_942))) in
        {446}let v_946: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_945))) in
        {447}let v_947: aead = catch-fail(decrypt(1-proj-2-tuple(v_946),2-proj-2-tuple(v_946),3-proj-3-tuple(v_945),3-proj-3-tuple(v_943))) in
        {448}let v_948: bitstring = catch-fail(aeadunpack(v_947)) in
        {449}let v_949: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_945))) in
        {450}let v_950: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_946))) && success?(1-proj-3-tuple(v_945))) then (if (not-caught-fail(v_949) && success?(is-true(success?(1-proj-2-tuple(v_949))))) then cipherstatepack(1-proj-2-tuple(v_949),increment_nonce(2-proj-2-tuple(v_946))) else fail-any) else fail-any)) in
        {451}let v_951: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_943)) && (success?(3-proj-3-tuple(v_945)) && success?(1-proj-3-tuple(v_945)))) then (if (not-caught-fail(v_946) && success?(is-true(success?(1-proj-2-tuple(v_946))))) then (if not-caught-fail(v_947) then (if (not-caught-fail(v_948) && success?(is-true(success?(1-proj-3-tuple(v_948))))) then (if not-caught-fail(v_950) then (v_950,3-proj-3-tuple(v_948),1-proj-3-tuple(v_948)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {452}let v_952: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_951),2-proj-3-tuple(v_945),3-proj-3-tuple(v_945)))) in
        {453}let v_953: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_943)) && success?(symmetricstatepack(1-proj-3-tuple(v_951),2-proj-3-tuple(v_945),3-proj-3-tuple(v_945)))) then (if (not-caught-fail(v_952) && success?(is-true(success?(1-proj-3-tuple(v_952))))) then symmetricstatepack(1-proj-3-tuple(v_952),2-proj-3-tuple(v_952),hash(3-proj-3-tuple(v_952),3-proj-3-tuple(v_943))) else fail-any) else fail-any)) in
        {454}let v_954: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_943)) && success?(1-proj-7-tuple(v_942))) then (if (not-caught-fail(v_945) && success?(is-true(success?(1-proj-3-tuple(v_945))))) then (if (not-caught-fail(v_951) && success?(is-true(success?(1-proj-3-tuple(v_951))))) then (if not-caught-fail(v_953) then (v_953,2-proj-3-tuple(v_951),3-proj-3-tuple(v_951)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {455}let v_955: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_954),2-proj-7-tuple(v_942),3-proj-7-tuple(v_942),4-proj-7-tuple(v_942),5-proj-7-tuple(v_942),6-proj-7-tuple(v_942),7-proj-7-tuple(v_942))) in
        {456}let (hs_956: handshakestate,plaintext_e: bitstring,valid_957: bool) = (if (not-caught-fail(v_942) && success?(is-true(success?(1-proj-7-tuple(v_942))))) then (if (not-caught-fail(v_943) && success?(is-true(success?(1-proj-3-tuple(v_943))))) then (if not-caught-fail(v_944) then (if (not-caught-fail(v_954) && success?(is-true(success?(1-proj-3-tuple(v_954))))) then (if (v_944 && 3-proj-3-tuple(v_954)) then (if not-caught-fail(v_955) then (v_955,2-proj-3-tuple(v_954),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {457}event RecvMsg(bob,alice,stagepack_e(sid),plaintext_e);
        {458}event RecvEnd(valid_957)
    ) | (
        {460}event LeakS(phase0,bob);
        {461}out(pub, key_s(bob))
    ) | (
        {462}phase 1;
        {463}event LeakS(phase1,bob);
        {464}out(pub, key_s(bob))
    )
) | (
    {465}let s_958: keypair = keypairpack(empty,empty) in
    {466}out(pub, getpublickey(s_958));
    (
        {467}let e_959: keypair = keypairpack(empty,empty) in
        {468}let rs_960: key = empty in
        {469}let re_961: key = empty in
        {470}let v_962: bitstring = catch-fail(hash(somename,empty)) in
        {471}let v_963: key = catch-fail(v_962) in
        {472}let v_964: cipherstate = catch-fail(cipherstatepack(empty,minnonce)) in
        {473}let v_965: bitstring = catch-fail(symmetricstateunpack((if not-caught-fail(v_962) then (if not-caught-fail(v_963) then (if not-caught-fail(v_964) then symmetricstatepack(v_964,v_963,v_962) else fail-any) else fail-any) else fail-any))) in
        {474}let v_966: symmetricstate = catch-fail((if success?((if not-caught-fail(v_962) then (if not-caught-fail(v_963) then (if not-caught-fail(v_964) then symmetricstatepack(v_964,v_963,v_962) else fail-any) else fail-any) else fail-any)) then (if (not-caught-fail(v_965) && success?(is-true(success?(1-proj-3-tuple(v_965))))) then symmetricstatepack(1-proj-3-tuple(v_965),2-proj-3-tuple(v_965),hash(3-proj-3-tuple(v_965),empty)) else fail-any) else fail-any)) in
        {475}let hs_967: handshakestate = (if not-caught-fail(v_966) then handshakestatepack(v_966,s_958,e_959,rs_960,re_961,empty,false) else fail-any) in
        {476}insert statestore(bob,charlie,sid,statepack_a(hs_967))
    ) | (
        {498}get statestore(=bob,=charlie,=sid,statepack_a(hs_968: handshakestate)) in
        {477}in(pub, message_a_969: bitstring);
        {478}let v_970: bitstring = catch-fail(handshakestateunpack(hs_968)) in
        {479}let v_971: bitstring = catch-fail(deconcat3(message_a_969)) in
        {480}let v_972: bool = catch-fail(true) in
        {481}let v_973: key = catch-fail(1-proj-3-tuple(v_971)) in
        {482}let v_974: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_970))) in
        {483}let v_975: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_970)) then (if (not-caught-fail(v_974) && success?(is-true(success?(1-proj-3-tuple(v_974))))) then symmetricstatepack(1-proj-3-tuple(v_974),2-proj-3-tuple(v_974),hash(3-proj-3-tuple(v_974),v_973)) else fail-any) else fail-any)) in
        {484}let v_976: bitstring = catch-fail(symmetricstateunpack(v_975)) in
        {485}let v_977: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_976))) in
        {486}let v_978: aead = catch-fail(decrypt(1-proj-2-tuple(v_977),2-proj-2-tuple(v_977),3-proj-3-tuple(v_976),3-proj-3-tuple(v_971))) in
        {487}let v_979: bitstring = catch-fail(aeadunpack(v_978)) in
        {488}let v_980: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_976))) in
        {489}let v_981: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_977))) && success?(1-proj-3-tuple(v_976))) then (if (not-caught-fail(v_980) && success?(is-true(success?(1-proj-2-tuple(v_980))))) then cipherstatepack(1-proj-2-tuple(v_980),increment_nonce(2-proj-2-tuple(v_977))) else fail-any) else fail-any)) in
        {490}let v_982: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_971)) && (success?(3-proj-3-tuple(v_976)) && success?(1-proj-3-tuple(v_976)))) then (if (not-caught-fail(v_977) && success?(is-true(success?(1-proj-2-tuple(v_977))))) then (if not-caught-fail(v_978) then (if (not-caught-fail(v_979) && success?(is-true(success?(1-proj-3-tuple(v_979))))) then (if not-caught-fail(v_981) then (v_981,3-proj-3-tuple(v_979),1-proj-3-tuple(v_979)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {491}let v_983: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_982),2-proj-3-tuple(v_976),3-proj-3-tuple(v_976)))) in
        {492}let v_984: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_971)) && success?(symmetricstatepack(1-proj-3-tuple(v_982),2-proj-3-tuple(v_976),3-proj-3-tuple(v_976)))) then (if (not-caught-fail(v_983) && success?(is-true(success?(1-proj-3-tuple(v_983))))) then symmetricstatepack(1-proj-3-tuple(v_983),2-proj-3-tuple(v_983),hash(3-proj-3-tuple(v_983),3-proj-3-tuple(v_971))) else fail-any) else fail-any)) in
        {493}let v_985: bitstring = catch-fail((if success?(3-proj-3-tuple(v_971)) then (if (not-caught-fail(v_976) && success?(is-true(success?(1-proj-3-tuple(v_976))))) then (if (not-caught-fail(v_982) && success?(is-true(success?(1-proj-3-tuple(v_982))))) then (if not-caught-fail(v_984) then (v_984,2-proj-3-tuple(v_982),3-proj-3-tuple(v_982)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {494}let v_986: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_985),2-proj-7-tuple(v_970),3-proj-7-tuple(v_970),4-proj-7-tuple(v_970),v_973,6-proj-7-tuple(v_970),7-proj-7-tuple(v_970))) in
        {495}let (hs_987: handshakestate,plaintext_a_988: bitstring,valid_989: bool) = (if (not-caught-fail(v_970) && success?(is-true(success?(1-proj-7-tuple(v_970))))) then (if (not-caught-fail(v_971) && success?(is-true(success?(1-proj-3-tuple(v_971))))) then (if not-caught-fail(v_972) then (if not-caught-fail(v_973) then (if not-caught-fail(v_975) then (if (not-caught-fail(v_985) && success?(is-true(success?(1-proj-3-tuple(v_985))))) then (if (v_972 && 3-proj-3-tuple(v_985)) then (if not-caught-fail(v_986) then (v_986,2-proj-3-tuple(v_985),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {496}event RecvMsg(bob,charlie,stagepack_a(sid),plaintext_a_988);
        {497}insert statestore(bob,charlie,sid,statepack_b(hs_987))
    ) | (
        {539}get statestore(=bob,=charlie,=sid,statepack_b(hs_990: handshakestate)) in
        {499}let v_991: bitstring = catch-fail(handshakestateunpack(hs_990)) in
        {500}let v_992: bitstring = catch-fail((empty,empty,empty)) in
        {501}let v_993: key = catch-fail(dhexp(key_e(bob,charlie,sid),g)) in
        {502}let v_994: keypair = catch-fail((if not-caught-fail(v_993) then keypairpack(v_993,key_e(bob,charlie,sid)) else fail-any)) in
        {503}let v_995: bitstring = catch-fail(getpublickey(v_994)) in
        {504}let v_996: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_991))) in
        {505}let v_997: symmetricstate = catch-fail((if success?(1-proj-7-tuple(v_991)) then (if (not-caught-fail(v_996) && success?(is-true(success?(1-proj-3-tuple(v_996))))) then symmetricstatepack(1-proj-3-tuple(v_996),2-proj-3-tuple(v_996),hash(3-proj-3-tuple(v_996),v_995)) else fail-any) else fail-any)) in
        {506}let v_998: bitstring = catch-fail(keypairunpack(v_994)) in
        {507}let v_999: bitstring = catch-fail(symmetricstateunpack(v_997)) in
        {508}let v_1000: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_999),(if success?(5-proj-7-tuple(v_991)) then (if (not-caught-fail(v_998) && success?(is-true(success?(1-proj-2-tuple(v_998))))) then dhexp(2-proj-2-tuple(v_998),5-proj-7-tuple(v_991)) else fail-any) else fail-any))) in
        {509}let v_1001: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_999),(if success?(5-proj-7-tuple(v_991)) then (if (not-caught-fail(v_998) && success?(is-true(success?(1-proj-2-tuple(v_998))))) then dhexp(2-proj-2-tuple(v_998),5-proj-7-tuple(v_991)) else fail-any) else fail-any))) in
        {510}let v_1002: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_999),(if success?(5-proj-7-tuple(v_991)) then (if (not-caught-fail(v_998) && success?(is-true(success?(1-proj-2-tuple(v_998))))) then dhexp(2-proj-2-tuple(v_998),5-proj-7-tuple(v_991)) else fail-any) else fail-any))) in
        {511}let v_1003: bitstring = catch-fail((if (success?((if success?(5-proj-7-tuple(v_991)) then (if (not-caught-fail(v_998) && success?(is-true(success?(1-proj-2-tuple(v_998))))) then dhexp(2-proj-2-tuple(v_998),5-proj-7-tuple(v_991)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_999))) then (if not-caught-fail(v_1000) then (if not-caught-fail(v_1001) then (if not-caught-fail(v_1002) then (v_1000,v_1001,v_1002) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {512}let v_1004: symmetricstate = catch-fail((if success?((if success?(5-proj-7-tuple(v_991)) then (if (not-caught-fail(v_998) && success?(is-true(success?(1-proj-2-tuple(v_998))))) then dhexp(2-proj-2-tuple(v_998),5-proj-7-tuple(v_991)) else fail-any) else fail-any)) then (if (not-caught-fail(v_999) && success?(is-true(success?(1-proj-3-tuple(v_999))))) then (if (not-caught-fail(v_1003) && success?(is-true(success?(1-proj-3-tuple(v_1003))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1003)) then cipherstatepack(2-proj-3-tuple(v_1003),minnonce) else fail-any),1-proj-3-tuple(v_1003),3-proj-3-tuple(v_999)) else fail-any) else fail-any) else fail-any)) in
        {513}let v_1005: key = catch-fail(dhexp(key_s(bob),g)) in
        {514}let v_1006: keypair = catch-fail((if not-caught-fail(v_1005) then keypairpack(v_1005,key_s(bob)) else fail-any)) in
        {515}let v_1007: bitstring = catch-fail(symmetricstateunpack(v_1004)) in
        {516}let v_1008: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1007))) in
        {517}let v_1009: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_1008),2-proj-2-tuple(v_1008),3-proj-3-tuple(v_1007),getpublickey(v_1006))) in
        {518}let v_1010: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1007))) in
        {519}let v_1011: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1008))) && success?(1-proj-3-tuple(v_1007))) then (if (not-caught-fail(v_1010) && success?(is-true(success?(1-proj-2-tuple(v_1010))))) then cipherstatepack(1-proj-2-tuple(v_1010),increment_nonce(2-proj-2-tuple(v_1008))) else fail-any) else fail-any)) in
        {520}let v_1012: bitstring = catch-fail((if (success?(getpublickey(v_1006)) && (success?(3-proj-3-tuple(v_1007)) && success?(1-proj-3-tuple(v_1007)))) then (if (not-caught-fail(v_1008) && success?(is-true(success?(1-proj-2-tuple(v_1008))))) then (if not-caught-fail(v_1009) then (if not-caught-fail(v_1011) then (v_1011,v_1009) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {521}let v_1013: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_1012),2-proj-3-tuple(v_1007),3-proj-3-tuple(v_1007)))) in
        {522}let v_1014: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_1012)) && success?(symmetricstatepack(1-proj-2-tuple(v_1012),2-proj-3-tuple(v_1007),3-proj-3-tuple(v_1007)))) then (if (not-caught-fail(v_1013) && success?(is-true(success?(1-proj-3-tuple(v_1013))))) then symmetricstatepack(1-proj-3-tuple(v_1013),2-proj-3-tuple(v_1013),hash(3-proj-3-tuple(v_1013),2-proj-2-tuple(v_1012))) else fail-any) else fail-any)) in
        {523}let v_1015: bitstring = catch-fail((if success?(getpublickey(v_1006)) then (if (not-caught-fail(v_1007) && success?(is-true(success?(1-proj-3-tuple(v_1007))))) then (if (not-caught-fail(v_1012) && success?(is-true(success?(1-proj-2-tuple(v_1012))))) then (if not-caught-fail(v_1014) then (v_1014,2-proj-2-tuple(v_1012)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {524}let v_1016: bitstring = catch-fail(symmetricstateunpack(1-proj-2-tuple(v_1015))) in
        {525}let v_1017: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1016))) in
        {526}let v_1018: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_1017),2-proj-2-tuple(v_1017),3-proj-3-tuple(v_1016),msg_b(bob,charlie,sid))) in
        {527}let v_1019: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1016))) in
        {528}let v_1020: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1017))) && success?(1-proj-3-tuple(v_1016))) then (if (not-caught-fail(v_1019) && success?(is-true(success?(1-proj-2-tuple(v_1019))))) then cipherstatepack(1-proj-2-tuple(v_1019),increment_nonce(2-proj-2-tuple(v_1017))) else fail-any) else fail-any)) in
        {529}let v_1021: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1016)) && success?(1-proj-3-tuple(v_1016))) then (if (not-caught-fail(v_1017) && success?(is-true(success?(1-proj-2-tuple(v_1017))))) then (if not-caught-fail(v_1018) then (if not-caught-fail(v_1020) then (v_1020,v_1018) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {530}let v_1022: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_1021),2-proj-3-tuple(v_1016),3-proj-3-tuple(v_1016)))) in
        {531}let v_1023: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_1021)) && success?(symmetricstatepack(1-proj-2-tuple(v_1021),2-proj-3-tuple(v_1016),3-proj-3-tuple(v_1016)))) then (if (not-caught-fail(v_1022) && success?(is-true(success?(1-proj-3-tuple(v_1022))))) then symmetricstatepack(1-proj-3-tuple(v_1022),2-proj-3-tuple(v_1022),hash(3-proj-3-tuple(v_1022),2-proj-2-tuple(v_1021))) else fail-any) else fail-any)) in
        {532}let v_1024: bitstring = catch-fail((if success?(1-proj-2-tuple(v_1015)) then (if (not-caught-fail(v_1016) && success?(is-true(success?(1-proj-3-tuple(v_1016))))) then (if (not-caught-fail(v_1021) && success?(is-true(success?(1-proj-2-tuple(v_1021))))) then (if not-caught-fail(v_1023) then (v_1023,2-proj-2-tuple(v_1021)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {533}let v_1025: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_1024),v_1006,v_994,4-proj-7-tuple(v_991),5-proj-7-tuple(v_991),6-proj-7-tuple(v_991),7-proj-7-tuple(v_991))) in
        {534}let v_1026: bitstring = catch-fail(concat3(v_995,2-proj-2-tuple(v_1015),2-proj-2-tuple(v_1024))) in
        {535}let (hs_1027: handshakestate,message_b_1028: bitstring) = (if (not-caught-fail(v_991) && success?(is-true(success?(1-proj-7-tuple(v_991))))) then (if (not-caught-fail(v_992) && success?(is-true(success?(1-proj-3-tuple(v_992))))) then (if not-caught-fail(v_994) then (if not-caught-fail(v_995) then (if not-caught-fail(v_997) then (if not-caught-fail(v_1004) then (if not-caught-fail(v_1006) then (if (not-caught-fail(v_1015) && success?(is-true(success?(1-proj-2-tuple(v_1015))))) then (if (not-caught-fail(v_1024) && success?(is-true(success?(1-proj-2-tuple(v_1024))))) then (if not-caught-fail(v_1025) then (if not-caught-fail(v_1026) then (v_1025,v_1026) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {536}event SendMsg(bob,charlie,stagepack_b(sid),msg_b(bob,charlie,sid));
        {537}insert statestore(bob,charlie,sid,statepack_c(hs_1027));
        {538}out(pub, message_b_1028)
    ) | (
        {573}get statestore(=bob,=charlie,=sid,statepack_c(hs_1029: handshakestate)) in
        {540}in(pub, message_c_1030: bitstring);
        {541}let v_1031: bitstring = catch-fail(handshakestateunpack(hs_1029)) in
        {542}let v_1032: bitstring = catch-fail(deconcat3(message_c_1030)) in
        {543}let v_1033: bool = catch-fail(true) in
        {544}let v_1034: bitstring = catch-fail(keypairunpack(2-proj-7-tuple(v_1031))) in
        {545}let v_1035: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1031))) in
        {546}let v_1036: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1035),(if (success?(5-proj-7-tuple(v_1031)) && success?(2-proj-7-tuple(v_1031))) then (if (not-caught-fail(v_1034) && success?(is-true(success?(1-proj-2-tuple(v_1034))))) then dhexp(2-proj-2-tuple(v_1034),5-proj-7-tuple(v_1031)) else fail-any) else fail-any))) in
        {547}let v_1037: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1035),(if (success?(5-proj-7-tuple(v_1031)) && success?(2-proj-7-tuple(v_1031))) then (if (not-caught-fail(v_1034) && success?(is-true(success?(1-proj-2-tuple(v_1034))))) then dhexp(2-proj-2-tuple(v_1034),5-proj-7-tuple(v_1031)) else fail-any) else fail-any))) in
        {548}let v_1038: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1035),(if (success?(5-proj-7-tuple(v_1031)) && success?(2-proj-7-tuple(v_1031))) then (if (not-caught-fail(v_1034) && success?(is-true(success?(1-proj-2-tuple(v_1034))))) then dhexp(2-proj-2-tuple(v_1034),5-proj-7-tuple(v_1031)) else fail-any) else fail-any))) in
        {549}let v_1039: bitstring = catch-fail((if (success?((if (success?(5-proj-7-tuple(v_1031)) && success?(2-proj-7-tuple(v_1031))) then (if (not-caught-fail(v_1034) && success?(is-true(success?(1-proj-2-tuple(v_1034))))) then dhexp(2-proj-2-tuple(v_1034),5-proj-7-tuple(v_1031)) else fail-any) else fail-any)) && success?(2-proj-3-tuple(v_1035))) then (if not-caught-fail(v_1036) then (if not-caught-fail(v_1037) then (if not-caught-fail(v_1038) then (v_1036,v_1037,v_1038) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {550}let v_1040: symmetricstate = catch-fail((if (success?((if (success?(5-proj-7-tuple(v_1031)) && success?(2-proj-7-tuple(v_1031))) then (if (not-caught-fail(v_1034) && success?(is-true(success?(1-proj-2-tuple(v_1034))))) then dhexp(2-proj-2-tuple(v_1034),5-proj-7-tuple(v_1031)) else fail-any) else fail-any)) && success?(1-proj-7-tuple(v_1031))) then (if (not-caught-fail(v_1035) && success?(is-true(success?(1-proj-3-tuple(v_1035))))) then (if (not-caught-fail(v_1039) && success?(is-true(success?(1-proj-3-tuple(v_1039))))) then symmetricstatepack((if success?(2-proj-3-tuple(v_1039)) then cipherstatepack(2-proj-3-tuple(v_1039),minnonce) else fail-any),1-proj-3-tuple(v_1039),3-proj-3-tuple(v_1035)) else fail-any) else fail-any) else fail-any)) in
        {551}let v_1041: bitstring = catch-fail(symmetricstateunpack(v_1040)) in
        {552}let v_1042: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1041))) in
        {553}let v_1043: aead = catch-fail(decrypt(1-proj-2-tuple(v_1042),2-proj-2-tuple(v_1042),3-proj-3-tuple(v_1041),3-proj-3-tuple(v_1032))) in
        {554}let v_1044: bitstring = catch-fail(aeadunpack(v_1043)) in
        {555}let v_1045: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1041))) in
        {556}let v_1046: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1042))) && success?(1-proj-3-tuple(v_1041))) then (if (not-caught-fail(v_1045) && success?(is-true(success?(1-proj-2-tuple(v_1045))))) then cipherstatepack(1-proj-2-tuple(v_1045),increment_nonce(2-proj-2-tuple(v_1042))) else fail-any) else fail-any)) in
        {557}let v_1047: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1032)) && (success?(3-proj-3-tuple(v_1041)) && success?(1-proj-3-tuple(v_1041)))) then (if (not-caught-fail(v_1042) && success?(is-true(success?(1-proj-2-tuple(v_1042))))) then (if not-caught-fail(v_1043) then (if (not-caught-fail(v_1044) && success?(is-true(success?(1-proj-3-tuple(v_1044))))) then (if not-caught-fail(v_1046) then (v_1046,3-proj-3-tuple(v_1044),1-proj-3-tuple(v_1044)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {558}let v_1048: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1047),2-proj-3-tuple(v_1041),3-proj-3-tuple(v_1041)))) in
        {559}let v_1049: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_1032)) && success?(symmetricstatepack(1-proj-3-tuple(v_1047),2-proj-3-tuple(v_1041),3-proj-3-tuple(v_1041)))) then (if (not-caught-fail(v_1048) && success?(is-true(success?(1-proj-3-tuple(v_1048))))) then symmetricstatepack(1-proj-3-tuple(v_1048),2-proj-3-tuple(v_1048),hash(3-proj-3-tuple(v_1048),3-proj-3-tuple(v_1032))) else fail-any) else fail-any)) in
        {560}let v_1050: bitstring = catch-fail((if success?(3-proj-3-tuple(v_1032)) then (if (not-caught-fail(v_1041) && success?(is-true(success?(1-proj-3-tuple(v_1041))))) then (if (not-caught-fail(v_1047) && success?(is-true(success?(1-proj-3-tuple(v_1047))))) then (if not-caught-fail(v_1049) then (v_1049,2-proj-3-tuple(v_1047),3-proj-3-tuple(v_1047)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {561}let v_1051: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_1050),2-proj-7-tuple(v_1031),3-proj-7-tuple(v_1031),4-proj-7-tuple(v_1031),5-proj-7-tuple(v_1031),6-proj-7-tuple(v_1031),7-proj-7-tuple(v_1031))) in
        {562}let v_1052: bitstring = catch-fail(symmetricstateunpack(1-proj-3-tuple(v_1050))) in
        {563}let v_1053: key = catch-fail(hmac_hash1(2-proj-3-tuple(v_1052),zero)) in
        {564}let v_1054: key = catch-fail(hmac_hash2(2-proj-3-tuple(v_1052),zero)) in
        {565}let v_1055: key = catch-fail(hmac_hash3(2-proj-3-tuple(v_1052),zero)) in
        {566}let v_1056: bitstring = catch-fail((if success?(2-proj-3-tuple(v_1052)) then (if not-caught-fail(v_1053) then (if not-caught-fail(v_1054) then (if not-caught-fail(v_1055) then (v_1053,v_1054,v_1055) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {567}let v_1057: cipherstate = catch-fail((if success?(1-proj-3-tuple(v_1056)) then cipherstatepack(1-proj-3-tuple(v_1056),minnonce) else fail-any)) in
        {568}let v_1058: cipherstate = catch-fail((if success?(2-proj-3-tuple(v_1056)) then cipherstatepack(2-proj-3-tuple(v_1056),minnonce) else fail-any)) in
        {569}let v_1059: bitstring = catch-fail((if success?(1-proj-3-tuple(v_1050)) then (if (not-caught-fail(v_1052) && success?(is-true(success?(1-proj-3-tuple(v_1052))))) then (if (not-caught-fail(v_1056) && success?(is-true(success?(1-proj-3-tuple(v_1056))))) then (if not-caught-fail(v_1057) then (if not-caught-fail(v_1058) then (1-proj-3-tuple(v_1050),v_1057,v_1058) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {570}let (hs_1060: handshakestate,plaintext_c_1061: bitstring,valid_1062: bool,cs1_1063: cipherstate,cs2_1064: cipherstate) = (if (not-caught-fail(v_1031) && success?(is-true(success?(1-proj-7-tuple(v_1031))))) then (if (not-caught-fail(v_1032) && success?(is-true(success?(1-proj-3-tuple(v_1032))))) then (if not-caught-fail(v_1033) then (if not-caught-fail(v_1040) then (if (not-caught-fail(v_1050) && success?(is-true(success?(1-proj-3-tuple(v_1050))))) then (if (v_1033 && 3-proj-3-tuple(v_1050)) then (if not-caught-fail(v_1051) then (if (not-caught-fail(v_1059) && success?(is-true(success?(1-proj-3-tuple(v_1059))))) then (v_1051,2-proj-3-tuple(v_1050),true,2-proj-3-tuple(v_1059),3-proj-3-tuple(v_1059)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {571}event RecvMsg(bob,charlie,stagepack_c(sid),plaintext_c_1061);
        {572}insert statestore(bob,charlie,sid,statepack_d(hs_1060,cs1_1063,cs2_1064))
    ) | (
        {574}!
        {593}get statestore(=bob,=charlie,=sid,statepack_d(hs_1065: handshakestate,cs1_1066: cipherstate,cs2_1067: cipherstate)) in
        {575}let hs_1068: handshakestate = handshakestatesetcs(hs_1065,cs2_1067) in
        {576}let v_1069: bitstring = catch-fail(handshakestateunpack(hs_1068)) in
        {577}let v_1070: bitstring = catch-fail((empty,empty,empty)) in
        {578}let v_1071: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1069))) in
        {579}let v_1072: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1071))) in
        {580}let v_1073: bitstring = catch-fail(encrypt(1-proj-2-tuple(v_1072),2-proj-2-tuple(v_1072),3-proj-3-tuple(v_1071),msg_d(bob,charlie,sid))) in
        {581}let v_1074: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1071))) in
        {582}let v_1075: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1072))) && success?(1-proj-3-tuple(v_1071))) then (if (not-caught-fail(v_1074) && success?(is-true(success?(1-proj-2-tuple(v_1074))))) then cipherstatepack(1-proj-2-tuple(v_1074),increment_nonce(2-proj-2-tuple(v_1072))) else fail-any) else fail-any)) in
        {583}let v_1076: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1071)) && success?(1-proj-3-tuple(v_1071))) then (if (not-caught-fail(v_1072) && success?(is-true(success?(1-proj-2-tuple(v_1072))))) then (if not-caught-fail(v_1073) then (if not-caught-fail(v_1075) then (v_1075,v_1073) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {584}let v_1077: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-2-tuple(v_1076),2-proj-3-tuple(v_1071),3-proj-3-tuple(v_1071)))) in
        {585}let v_1078: symmetricstate = catch-fail((if (success?(2-proj-2-tuple(v_1076)) && success?(symmetricstatepack(1-proj-2-tuple(v_1076),2-proj-3-tuple(v_1071),3-proj-3-tuple(v_1071)))) then (if (not-caught-fail(v_1077) && success?(is-true(success?(1-proj-3-tuple(v_1077))))) then symmetricstatepack(1-proj-3-tuple(v_1077),2-proj-3-tuple(v_1077),hash(3-proj-3-tuple(v_1077),2-proj-2-tuple(v_1076))) else fail-any) else fail-any)) in
        {586}let v_1079: bitstring = catch-fail((if success?(1-proj-7-tuple(v_1069)) then (if (not-caught-fail(v_1071) && success?(is-true(success?(1-proj-3-tuple(v_1071))))) then (if (not-caught-fail(v_1076) && success?(is-true(success?(1-proj-2-tuple(v_1076))))) then (if not-caught-fail(v_1078) then (v_1078,2-proj-2-tuple(v_1076)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {587}let v_1080: handshakestate = catch-fail(handshakestatepack(1-proj-2-tuple(v_1079),2-proj-7-tuple(v_1069),3-proj-7-tuple(v_1069),4-proj-7-tuple(v_1069),5-proj-7-tuple(v_1069),6-proj-7-tuple(v_1069),7-proj-7-tuple(v_1069))) in
        {588}let v_1081: bitstring = catch-fail(concat3(1-proj-3-tuple(v_1070),2-proj-3-tuple(v_1070),2-proj-2-tuple(v_1079))) in
        {589}let (hs_1082: handshakestate,message_d_1083: bitstring) = (if (not-caught-fail(v_1069) && success?(is-true(success?(1-proj-7-tuple(v_1069))))) then (if (not-caught-fail(v_1070) && success?(is-true(success?(1-proj-3-tuple(v_1070))))) then (if (not-caught-fail(v_1079) && success?(is-true(success?(1-proj-2-tuple(v_1079))))) then (if not-caught-fail(v_1080) then (if not-caught-fail(v_1081) then (v_1080,v_1081) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {590}event SendMsg(bob,charlie,stagepack_d(sid),msg_d(bob,charlie,sid));
        {591}insert statestore(bob,charlie,sid,statepack_e(hs_1082,cs1_1066,handshakestategetcs(hs_1082)));
        {592}out(pub, message_d_1083)
    ) | (
        {594}!
        {614}get statestore(=bob,=charlie,=sid,statepack_e(hs_1084: handshakestate,cs1_1085: cipherstate,cs2_1086: cipherstate)) in
        {595}let hs_1087: handshakestate = handshakestatesetcs(hs_1084,cs1_1085) in
        {596}in(pub, message_e_1088: bitstring);
        {597}let v_1089: bitstring = catch-fail(handshakestateunpack(hs_1087)) in
        {598}let v_1090: bitstring = catch-fail(deconcat3(message_e_1088)) in
        {599}let v_1091: bool = catch-fail(true) in
        {600}let v_1092: bitstring = catch-fail(symmetricstateunpack(1-proj-7-tuple(v_1089))) in
        {601}let v_1093: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1092))) in
        {602}let v_1094: aead = catch-fail(decrypt(1-proj-2-tuple(v_1093),2-proj-2-tuple(v_1093),3-proj-3-tuple(v_1092),3-proj-3-tuple(v_1090))) in
        {603}let v_1095: bitstring = catch-fail(aeadunpack(v_1094)) in
        {604}let v_1096: bitstring = catch-fail(cipherstateunpack(1-proj-3-tuple(v_1092))) in
        {605}let v_1097: cipherstate = catch-fail((if (success?(increment_nonce(2-proj-2-tuple(v_1093))) && success?(1-proj-3-tuple(v_1092))) then (if (not-caught-fail(v_1096) && success?(is-true(success?(1-proj-2-tuple(v_1096))))) then cipherstatepack(1-proj-2-tuple(v_1096),increment_nonce(2-proj-2-tuple(v_1093))) else fail-any) else fail-any)) in
        {606}let v_1098: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1090)) && (success?(3-proj-3-tuple(v_1092)) && success?(1-proj-3-tuple(v_1092)))) then (if (not-caught-fail(v_1093) && success?(is-true(success?(1-proj-2-tuple(v_1093))))) then (if not-caught-fail(v_1094) then (if (not-caught-fail(v_1095) && success?(is-true(success?(1-proj-3-tuple(v_1095))))) then (if not-caught-fail(v_1097) then (v_1097,3-proj-3-tuple(v_1095),1-proj-3-tuple(v_1095)) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {607}let v_1099: bitstring = catch-fail(symmetricstateunpack(symmetricstatepack(1-proj-3-tuple(v_1098),2-proj-3-tuple(v_1092),3-proj-3-tuple(v_1092)))) in
        {608}let v_1100: symmetricstate = catch-fail((if (success?(3-proj-3-tuple(v_1090)) && success?(symmetricstatepack(1-proj-3-tuple(v_1098),2-proj-3-tuple(v_1092),3-proj-3-tuple(v_1092)))) then (if (not-caught-fail(v_1099) && success?(is-true(success?(1-proj-3-tuple(v_1099))))) then symmetricstatepack(1-proj-3-tuple(v_1099),2-proj-3-tuple(v_1099),hash(3-proj-3-tuple(v_1099),3-proj-3-tuple(v_1090))) else fail-any) else fail-any)) in
        {609}let v_1101: bitstring = catch-fail((if (success?(3-proj-3-tuple(v_1090)) && success?(1-proj-7-tuple(v_1089))) then (if (not-caught-fail(v_1092) && success?(is-true(success?(1-proj-3-tuple(v_1092))))) then (if (not-caught-fail(v_1098) && success?(is-true(success?(1-proj-3-tuple(v_1098))))) then (if not-caught-fail(v_1100) then (v_1100,2-proj-3-tuple(v_1098),3-proj-3-tuple(v_1098)) else fail-any) else fail-any) else fail-any) else fail-any)) in
        {610}let v_1102: handshakestate = catch-fail(handshakestatepack(1-proj-3-tuple(v_1101),2-proj-7-tuple(v_1089),3-proj-7-tuple(v_1089),4-proj-7-tuple(v_1089),5-proj-7-tuple(v_1089),6-proj-7-tuple(v_1089),7-proj-7-tuple(v_1089))) in
        {611}let (hs_1103: handshakestate,plaintext_e_1104: bitstring,valid_1105: bool) = (if (not-caught-fail(v_1089) && success?(is-true(success?(1-proj-7-tuple(v_1089))))) then (if (not-caught-fail(v_1090) && success?(is-true(success?(1-proj-3-tuple(v_1090))))) then (if not-caught-fail(v_1091) then (if (not-caught-fail(v_1101) && success?(is-true(success?(1-proj-3-tuple(v_1101))))) then (if (v_1091 && 3-proj-3-tuple(v_1101)) then (if not-caught-fail(v_1102) then (v_1102,2-proj-3-tuple(v_1101),true) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) else fail-any) in
        {612}event RecvMsg(bob,charlie,stagepack_e(sid),plaintext_e_1104);
        {613}event RecvEnd(valid_1105)
    ) | (
        {615}event LeakS(phase0,bob);
        {616}out(pub, key_s(bob))
    ) | (
        {617}phase 1;
        {618}event LeakS(phase1,bob);
        {619}out(pub, key_s(bob))
    )
)

-- Query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1208,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1208,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)); not attacker_p1(msg_a(alice,bob,sid_a)); attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob)); attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice))); attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1208,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1208,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)); not attacker_p1(msg_b(bob,alice,sid_b)); attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice)); attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob))); attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1208,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1208,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)); not attacker_p1(msg_c(alice,bob,sid_a)); attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob)); attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice))); attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1208,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1208,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)); event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)); not attacker_p1(msg_d(bob,alice,sid_b)); attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice)); attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob))); attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)); event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1208,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1208,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)); event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)); event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)); not attacker_p1(msg_e(alice,bob,sid_a)); attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob)); attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice))); attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)); not event(RecvEnd(true))
Completing...
200 rules inserted. The rule base contains 200 rules. 108 rules in the queue.
400 rules inserted. The rule base contains 389 rules. 146 rules in the queue.
600 rules inserted. The rule base contains 561 rules. 118 rules in the queue.
800 rules inserted. The rule base contains 741 rules. 188 rules in the queue.
1000 rules inserted. The rule base contains 897 rules. 234 rules in the queue.
1200 rules inserted. The rule base contains 1045 rules. 224 rules in the queue.
1400 rules inserted. The rule base contains 1212 rules. 225 rules in the queue.
1600 rules inserted. The rule base contains 1361 rules. 261 rules in the queue.
1800 rules inserted. The rule base contains 1495 rules. 286 rules in the queue.
2000 rules inserted. The rule base contains 1648 rules. 341 rules in the queue.
2200 rules inserted. The rule base contains 1772 rules. 336 rules in the queue.
2400 rules inserted. The rule base contains 1878 rules. 336 rules in the queue.
2600 rules inserted. The rule base contains 1978 rules. 340 rules in the queue.
2800 rules inserted. The rule base contains 2048 rules. 318 rules in the queue.
3000 rules inserted. The rule base contains 2136 rules. 272 rules in the queue.
3200 rules inserted. The rule base contains 2251 rules. 243 rules in the queue.
3400 rules inserted. The rule base contains 2350 rules. 205 rules in the queue.
3600 rules inserted. The rule base contains 2435 rules. 164 rules in the queue.
3800 rules inserted. The rule base contains 2561 rules. 187 rules in the queue.
4000 rules inserted. The rule base contains 2706 rules. 178 rules in the queue.
4200 rules inserted. The rule base contains 2871 rules. 214 rules in the queue.
4400 rules inserted. The rule base contains 3016 rules. 207 rules in the queue.
4600 rules inserted. The rule base contains 3150 rules. 177 rules in the queue.
4800 rules inserted. The rule base contains 3266 rules. 160 rules in the queue.
5000 rules inserted. The rule base contains 3381 rules. 179 rules in the queue.
5200 rules inserted. The rule base contains 3531 rules. 192 rules in the queue.
5400 rules inserted. The rule base contains 3675 rules. 172 rules in the queue.
5600 rules inserted. The rule base contains 3814 rules. 122 rules in the queue.
5800 rules inserted. The rule base contains 3900 rules. 120 rules in the queue.
6000 rules inserted. The rule base contains 4030 rules. 82 rules in the queue.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m))
goal reachable: begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_50454010]),msg_a(alice,charlie,sid[!1 = @sid_50454010]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_50454011]),msg_a(alice,charlie,sid[!1 = @sid_50454010])))
Abbreviations:
sid_50454046 = sid[!1 = @sid_50454036]
sid_50454047 = sid[!1 = @sid_50454018]

1. The entry statestore(bob,alice,sid_50454046,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {321}.
table(statestore(bob,alice,sid_50454046,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

2. The entry statestore(alice,charlie,sid_50454047,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {167}.
table(statestore(alice,charlie,sid_50454047,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,charlie,sid_50454047,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {190}.
The event SendMsg(alice,charlie,stagepack_a(sid_50454047),msg_a(alice,charlie,sid_50454047)) may be executed at {187}.
So the message concat3(dhexp(key_e(alice,charlie,sid_50454047),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_50454047),g)),msg_a(alice,charlie,sid_50454047))) may be sent on channel pub at output {189}.
mess(pub,concat3(dhexp(key_e(alice,charlie,sid_50454047),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_50454047),g)),msg_a(alice,charlie,sid_50454047)))).

4. The entry statestore(bob,alice,sid_50454046,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 1 may be read at get {343}.
The message concat3(dhexp(key_e(alice,charlie,sid_50454047),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_50454047),g)),msg_a(alice,charlie,sid_50454047))) that may be sent on channel pub by 3 may be received at input {322}.
We have dhexp(key_e(alice,charlie,sid_50454047),g) <> caught-fail.
So event RecvMsg(bob,alice,stagepack_a(sid_50454046),msg_a(alice,charlie,sid_50454047)) may be executed at {341}.
end(RecvMsg(bob,alice,stagepack_a(sid_50454046),msg_a(alice,charlie,sid_50454047))).


RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) cannot be proved.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1208,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_50454050]),msg_a(alice,bob,sid[!1 = @sid_50454050]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_50454051]),msg_a(alice,bob,sid[!1 = @sid_50454050])))
goal reachable: begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_50454054]),msg_a(alice,charlie,sid[!1 = @sid_50454054]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_50454055]),msg_a(alice,charlie,sid[!1 = @sid_50454054])))
RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1208,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1208,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_50454064]),msg_a(alice,bob,sid[!1 = @sid_50454064]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_50454065]),msg_a(alice,bob,sid[!1 = @sid_50454064])))
goal reachable: begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_50454068]),msg_a(alice,charlie,sid[!1 = @sid_50454068]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_50454069]),msg_a(alice,charlie,sid[!1 = @sid_50454068])))
RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,c_1208,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_50454082]),msg_a(alice,charlie,sid[!1 = @sid_50454082]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_50454083]),msg_a(alice,charlie,sid[!1 = @sid_50454082])))
Abbreviations:
sid_50454118 = sid[!1 = @sid_50454108]
sid_50454119 = sid[!1 = @sid_50454090]

1. The entry statestore(bob,alice,sid_50454118,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {321}.
table(statestore(bob,alice,sid_50454118,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

2. The entry statestore(alice,charlie,sid_50454119,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {167}.
table(statestore(alice,charlie,sid_50454119,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,charlie,sid_50454119,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {190}.
The event SendMsg(alice,charlie,stagepack_a(sid_50454119),msg_a(alice,charlie,sid_50454119)) may be executed at {187}.
So the message concat3(dhexp(key_e(alice,charlie,sid_50454119),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_50454119),g)),msg_a(alice,charlie,sid_50454119))) may be sent on channel pub at output {189}.
mess(pub,concat3(dhexp(key_e(alice,charlie,sid_50454119),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_50454119),g)),msg_a(alice,charlie,sid_50454119)))).

4. The entry statestore(bob,alice,sid_50454118,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 1 may be read at get {343}.
The message concat3(dhexp(key_e(alice,charlie,sid_50454119),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_50454119),g)),msg_a(alice,charlie,sid_50454119))) that may be sent on channel pub by 3 may be received at input {322}.
We have dhexp(key_e(alice,charlie,sid_50454119),g) <> caught-fail.
So event RecvMsg(bob,alice,stagepack_a(sid_50454118),msg_a(alice,charlie,sid_50454119)) may be executed at {341}.
end(RecvMsg(bob,alice,stagepack_a(sid_50454118),msg_a(alice,charlie,sid_50454119))).


RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) cannot be proved.
Starting query event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,charlie,stagepack_a(sid[!1 = @sid_50454126]),msg_a(alice,charlie,sid[!1 = @sid_50454126]))) -> end(RecvMsg(bob,alice,stagepack_a(sid[!1 = @sid_50454127]),msg_a(alice,charlie,sid[!1 = @sid_50454126])))
Abbreviations:
sid_50454162 = sid[!1 = @sid_50454152]
sid_50454163 = sid[!1 = @sid_50454134]

1. The entry statestore(bob,alice,sid_50454162,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {321}.
table(statestore(bob,alice,sid_50454162,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

2. The entry statestore(alice,charlie,sid_50454163,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {167}.
table(statestore(alice,charlie,sid_50454163,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,charlie,sid_50454163,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {190}.
The event SendMsg(alice,charlie,stagepack_a(sid_50454163),msg_a(alice,charlie,sid_50454163)) may be executed at {187}.
So the message concat3(dhexp(key_e(alice,charlie,sid_50454163),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_50454163),g)),msg_a(alice,charlie,sid_50454163))) may be sent on channel pub at output {189}.
mess(pub,concat3(dhexp(key_e(alice,charlie,sid_50454163),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_50454163),g)),msg_a(alice,charlie,sid_50454163)))).

4. The entry statestore(bob,alice,sid_50454162,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 1 may be read at get {343}.
The message concat3(dhexp(key_e(alice,charlie,sid_50454163),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,charlie,sid_50454163),g)),msg_a(alice,charlie,sid_50454163))) that may be sent on channel pub by 3 may be received at input {322}.
We have dhexp(key_e(alice,charlie,sid_50454163),g) <> caught-fail.
So event RecvMsg(bob,alice,stagepack_a(sid_50454162),msg_a(alice,charlie,sid_50454163)) may be executed at {341}.
end(RecvMsg(bob,alice,stagepack_a(sid_50454162),msg_a(alice,charlie,sid_50454163))).


RESULT event(RecvMsg(bob,alice,stagepack_a(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_a(sid_a),m)) || event(LeakS(phase0,alice)) cannot be proved.
Starting query not attacker_p1(msg_a(alice,bob,sid_a))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_50454166]),msg_a(alice,bob,sid[!1 = @sid_50454166]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_50454166]))
Abbreviations:
sid_50454218 = sid[!1 = @sid_50454193]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_50454218,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {14}.
table(statestore(alice,bob,sid_50454218,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,bob,sid_50454218,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {37}.
The event SendMsg(alice,bob,stagepack_a(sid_50454218),msg_a(alice,bob,sid_50454218)) may be executed at {34}.
So the message concat3(dhexp(key_e(alice,bob,sid_50454218),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454218),g)),msg_a(alice,bob,sid_50454218))) may be sent on channel pub at output {36}.
mess(pub,concat3(dhexp(key_e(alice,bob,sid_50454218),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454218),g)),msg_a(alice,bob,sid_50454218)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(dhexp(key_e(alice,bob,sid_50454218),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454218),g)),msg_a(alice,bob,sid_50454218))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e(alice,bob,sid_50454218),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454218),g)),msg_a(alice,bob,sid_50454218))) by listening on this channel.
attacker(concat3(dhexp(key_e(alice,bob,sid_50454218),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454218),g)),msg_a(alice,bob,sid_50454218)))).

5. By 4, the attacker may know concat3(dhexp(key_e(alice,bob,sid_50454218),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454218),g)),msg_a(alice,bob,sid_50454218))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454218),g)),msg_a(alice,bob,sid_50454218)).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454218),g)),msg_a(alice,bob,sid_50454218))).

6. By 4, the attacker may know concat3(dhexp(key_e(alice,bob,sid_50454218),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454218),g)),msg_a(alice,bob,sid_50454218))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_e(alice,bob,sid_50454218),g).
attacker(dhexp(key_e(alice,bob,sid_50454218),g)).

7. Using the function empty the attacker may obtain empty.
attacker(empty).

8. Using the function somename the attacker may obtain somename.
attacker(somename).

9. By 8, the attacker may know somename.
By 7, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

10. By 9, the attacker may know hash(somename,empty).
By 7, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

11. By 10, the attacker may know hash(hash(somename,empty),empty).
By 6, the attacker may know dhexp(key_e(alice,bob,sid_50454218),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454218),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454218),g))).

12. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

13. By 7, the attacker may know empty.
By 12, the attacker may know minnonce.
By 11, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454218),g)).
By 5, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454218),g)),msg_a(alice,bob,sid_50454218)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454218),g)),msg_a(alice,bob,sid_50454218)).
attacker(aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454218),g)),msg_a(alice,bob,sid_50454218))).

14. By 13, the attacker may know aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454218),g)),msg_a(alice,bob,sid_50454218)).
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_50454218).
attacker(msg_a(alice,bob,sid_50454218)).

15. By 14, the attacker may know msg_a(alice,bob,sid_50454218).
So the attacker may know msg_a(alice,bob,sid_50454218) in phase 1.
attacker_p1(msg_a(alice,bob,sid_50454218)).


RESULT not attacker_p1(msg_a(alice,bob,sid_a)) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_50454221]),msg_a(alice,bob,sid[!1 = @sid_50454221]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_50454221]))
Abbreviations:
sid_50454273 = sid[!1 = @sid_50454248]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_50454273,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {14}.
table(statestore(alice,bob,sid_50454273,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,bob,sid_50454273,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {37}.
The event SendMsg(alice,bob,stagepack_a(sid_50454273),msg_a(alice,bob,sid_50454273)) may be executed at {34}.
So the message concat3(dhexp(key_e(alice,bob,sid_50454273),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454273),g)),msg_a(alice,bob,sid_50454273))) may be sent on channel pub at output {36}.
mess(pub,concat3(dhexp(key_e(alice,bob,sid_50454273),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454273),g)),msg_a(alice,bob,sid_50454273)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(dhexp(key_e(alice,bob,sid_50454273),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454273),g)),msg_a(alice,bob,sid_50454273))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e(alice,bob,sid_50454273),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454273),g)),msg_a(alice,bob,sid_50454273))) by listening on this channel.
attacker(concat3(dhexp(key_e(alice,bob,sid_50454273),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454273),g)),msg_a(alice,bob,sid_50454273)))).

5. By 4, the attacker may know concat3(dhexp(key_e(alice,bob,sid_50454273),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454273),g)),msg_a(alice,bob,sid_50454273))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454273),g)),msg_a(alice,bob,sid_50454273)).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454273),g)),msg_a(alice,bob,sid_50454273))).

6. By 4, the attacker may know concat3(dhexp(key_e(alice,bob,sid_50454273),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454273),g)),msg_a(alice,bob,sid_50454273))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_e(alice,bob,sid_50454273),g).
attacker(dhexp(key_e(alice,bob,sid_50454273),g)).

7. Using the function empty the attacker may obtain empty.
attacker(empty).

8. Using the function somename the attacker may obtain somename.
attacker(somename).

9. By 8, the attacker may know somename.
By 7, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

10. By 9, the attacker may know hash(somename,empty).
By 7, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

11. By 10, the attacker may know hash(hash(somename,empty),empty).
By 6, the attacker may know dhexp(key_e(alice,bob,sid_50454273),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454273),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454273),g))).

12. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

13. By 7, the attacker may know empty.
By 12, the attacker may know minnonce.
By 11, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454273),g)).
By 5, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454273),g)),msg_a(alice,bob,sid_50454273)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454273),g)),msg_a(alice,bob,sid_50454273)).
attacker(aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454273),g)),msg_a(alice,bob,sid_50454273))).

14. By 13, the attacker may know aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454273),g)),msg_a(alice,bob,sid_50454273)).
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_50454273).
attacker(msg_a(alice,bob,sid_50454273)).

15. By 14, the attacker may know msg_a(alice,bob,sid_50454273).
So the attacker may know msg_a(alice,bob,sid_50454273) in phase 1.
attacker_p1(msg_a(alice,bob,sid_50454273)).


RESULT attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob)) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice)))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_50454276]),msg_a(alice,bob,sid[!1 = @sid_50454276]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_50454276]))
Abbreviations:
sid_50454329 = sid[!1 = @sid_50454304]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_50454329,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {14}.
table(statestore(alice,bob,sid_50454329,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,bob,sid_50454329,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {37}.
The event SendMsg(alice,bob,stagepack_a(sid_50454329),msg_a(alice,bob,sid_50454329)) may be executed at {34}.
So the message concat3(dhexp(key_e(alice,bob,sid_50454329),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454329),g)),msg_a(alice,bob,sid_50454329))) may be sent on channel pub at output {36}.
mess(pub,concat3(dhexp(key_e(alice,bob,sid_50454329),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454329),g)),msg_a(alice,bob,sid_50454329)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(dhexp(key_e(alice,bob,sid_50454329),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454329),g)),msg_a(alice,bob,sid_50454329))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e(alice,bob,sid_50454329),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454329),g)),msg_a(alice,bob,sid_50454329))) by listening on this channel.
attacker(concat3(dhexp(key_e(alice,bob,sid_50454329),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454329),g)),msg_a(alice,bob,sid_50454329)))).

5. By 4, the attacker may know concat3(dhexp(key_e(alice,bob,sid_50454329),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454329),g)),msg_a(alice,bob,sid_50454329))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454329),g)),msg_a(alice,bob,sid_50454329)).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454329),g)),msg_a(alice,bob,sid_50454329))).

6. By 4, the attacker may know concat3(dhexp(key_e(alice,bob,sid_50454329),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454329),g)),msg_a(alice,bob,sid_50454329))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_e(alice,bob,sid_50454329),g).
attacker(dhexp(key_e(alice,bob,sid_50454329),g)).

7. Using the function empty the attacker may obtain empty.
attacker(empty).

8. Using the function somename the attacker may obtain somename.
attacker(somename).

9. By 8, the attacker may know somename.
By 7, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

10. By 9, the attacker may know hash(somename,empty).
By 7, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

11. By 10, the attacker may know hash(hash(somename,empty),empty).
By 6, the attacker may know dhexp(key_e(alice,bob,sid_50454329),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454329),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454329),g))).

12. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

13. By 7, the attacker may know empty.
By 12, the attacker may know minnonce.
By 11, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454329),g)).
By 5, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454329),g)),msg_a(alice,bob,sid_50454329)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454329),g)),msg_a(alice,bob,sid_50454329)).
attacker(aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454329),g)),msg_a(alice,bob,sid_50454329))).

14. By 13, the attacker may know aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454329),g)),msg_a(alice,bob,sid_50454329)).
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_50454329).
attacker(msg_a(alice,bob,sid_50454329)).

15. By 14, the attacker may know msg_a(alice,bob,sid_50454329).
So the attacker may know msg_a(alice,bob,sid_50454329) in phase 1.
attacker_p1(msg_a(alice,bob,sid_50454329)).


RESULT attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice))) cannot be proved.
Starting query attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_50454332]),msg_a(alice,bob,sid[!1 = @sid_50454332]))) -> attacker_p1(msg_a(alice,bob,sid[!1 = @sid_50454332]))
Abbreviations:
sid_50454384 = sid[!1 = @sid_50454359]

1. Using the function pub the attacker may obtain pub.
attacker(pub).

2. The entry statestore(alice,bob,sid_50454384,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {14}.
table(statestore(alice,bob,sid_50454384,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,bob,sid_50454384,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {37}.
The event SendMsg(alice,bob,stagepack_a(sid_50454384),msg_a(alice,bob,sid_50454384)) may be executed at {34}.
So the message concat3(dhexp(key_e(alice,bob,sid_50454384),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454384),g)),msg_a(alice,bob,sid_50454384))) may be sent on channel pub at output {36}.
mess(pub,concat3(dhexp(key_e(alice,bob,sid_50454384),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454384),g)),msg_a(alice,bob,sid_50454384)))).

4. By 1, the attacker may have the channel pub.
By 3, the message concat3(dhexp(key_e(alice,bob,sid_50454384),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454384),g)),msg_a(alice,bob,sid_50454384))) may be sent on this channel.
So the attacker may obtain the message concat3(dhexp(key_e(alice,bob,sid_50454384),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454384),g)),msg_a(alice,bob,sid_50454384))) by listening on this channel.
attacker(concat3(dhexp(key_e(alice,bob,sid_50454384),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454384),g)),msg_a(alice,bob,sid_50454384)))).

5. By 4, the attacker may know concat3(dhexp(key_e(alice,bob,sid_50454384),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454384),g)),msg_a(alice,bob,sid_50454384))).
Using the function 3-proj-concat3 the attacker may obtain encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454384),g)),msg_a(alice,bob,sid_50454384)).
attacker(encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454384),g)),msg_a(alice,bob,sid_50454384))).

6. By 4, the attacker may know concat3(dhexp(key_e(alice,bob,sid_50454384),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454384),g)),msg_a(alice,bob,sid_50454384))).
Using the function 1-proj-concat3 the attacker may obtain dhexp(key_e(alice,bob,sid_50454384),g).
attacker(dhexp(key_e(alice,bob,sid_50454384),g)).

7. Using the function empty the attacker may obtain empty.
attacker(empty).

8. Using the function somename the attacker may obtain somename.
attacker(somename).

9. By 8, the attacker may know somename.
By 7, the attacker may know empty.
Using the function hash the attacker may obtain hash(somename,empty).
attacker(hash(somename,empty)).

10. By 9, the attacker may know hash(somename,empty).
By 7, the attacker may know empty.
Using the function hash the attacker may obtain hash(hash(somename,empty),empty).
attacker(hash(hash(somename,empty),empty)).

11. By 10, the attacker may know hash(hash(somename,empty),empty).
By 6, the attacker may know dhexp(key_e(alice,bob,sid_50454384),g).
Using the function hash the attacker may obtain hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454384),g)).
attacker(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454384),g))).

12. Using the function minnonce the attacker may obtain minnonce.
attacker(minnonce).

13. By 7, the attacker may know empty.
By 12, the attacker may know minnonce.
By 11, the attacker may know hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454384),g)).
By 5, the attacker may know encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454384),g)),msg_a(alice,bob,sid_50454384)).
Using the function decrypt the attacker may obtain aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454384),g)),msg_a(alice,bob,sid_50454384)).
attacker(aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454384),g)),msg_a(alice,bob,sid_50454384))).

14. By 13, the attacker may know aeadpack(true,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454384),g)),msg_a(alice,bob,sid_50454384)).
Using the function 3-proj-aeadpack the attacker may obtain msg_a(alice,bob,sid_50454384).
attacker(msg_a(alice,bob,sid_50454384)).

15. By 14, the attacker may know msg_a(alice,bob,sid_50454384).
So the attacker may know msg_a(alice,bob,sid_50454384) in phase 1.
attacker_p1(msg_a(alice,bob,sid_50454384)).


RESULT attacker_p1(msg_a(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m))
goal reachable: begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_50454387]),msg_b(bob,charlie,sid[!1 = @sid_50454387]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_50454388]),msg_a(alice,bob,sid[!1 = @sid_50454388]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_50454388]),msg_b(bob,charlie,sid[!1 = @sid_50454387])))
Abbreviations:
sid_50454462 = sid[!1 = @sid_50454411]
sid_50454463 = sid[!1 = @sid_50454437]

1. The entry statestore(alice,bob,sid_50454462,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {14}.
table(statestore(alice,bob,sid_50454462,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

2. The entry statestore(alice,bob,sid_50454462,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 1 may be read at get {37}.
The event SendMsg(alice,bob,stagepack_a(sid_50454462),msg_a(alice,bob,sid_50454462)) may be executed at {34}.
So the entry statestore(alice,bob,sid_50454462,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454462),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454462),g)),msg_a(alice,bob,sid_50454462)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50454462),g),key_e(alice,bob,sid_50454462)),empty,empty,empty,true))) may be inserted in a table at insert {35}.
table(statestore(alice,bob,sid_50454462,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454462),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454462),g)),msg_a(alice,bob,sid_50454462)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50454462),g),key_e(alice,bob,sid_50454462)),empty,empty,empty,true)))).

3. The entry statestore(bob,charlie,sid_50454463,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {476}.
table(statestore(bob,charlie,sid_50454463,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

4. The entry statestore(alice,bob,sid_50454462,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 1 may be read at get {37}.
The event SendMsg(alice,bob,stagepack_a(sid_50454462),msg_a(alice,bob,sid_50454462)) may be executed at {34}.
So the message concat3(dhexp(key_e(alice,bob,sid_50454462),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454462),g)),msg_a(alice,bob,sid_50454462))) may be sent on channel pub at output {36}.
mess(pub,concat3(dhexp(key_e(alice,bob,sid_50454462),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454462),g)),msg_a(alice,bob,sid_50454462)))).

5. The entry statestore(bob,charlie,sid_50454463,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 3 may be read at get {498}.
The message concat3(dhexp(key_e(alice,bob,sid_50454462),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454462),g)),msg_a(alice,bob,sid_50454462))) that may be sent on channel pub by 4 may be received at input {477}.
We have dhexp(key_e(alice,bob,sid_50454462),g) <> caught-fail.
So the entry statestore(bob,charlie,sid_50454463,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454462),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454462),g)),msg_a(alice,bob,sid_50454462)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_50454462),g),empty,false))) may be inserted in a table at insert {497}.
table(statestore(bob,charlie,sid_50454463,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454462),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454462),g)),msg_a(alice,bob,sid_50454462)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_50454462),g),empty,false)))).

6. The entry statestore(bob,charlie,sid_50454463,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454462),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454462),g)),msg_a(alice,bob,sid_50454462)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_50454462),g),empty,false))) that may be in a table by 5 may be read at get {539}.
The event SendMsg(bob,charlie,stagepack_b(sid_50454463),msg_b(bob,charlie,sid_50454463)) may be executed at {536}.
So the message concat3(dhexp(key_e(bob,charlie,sid_50454463),g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454462),dhexp(key_e(bob,charlie,sid_50454463),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454462),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454462),g)),msg_a(alice,bob,sid_50454462))),dhexp(key_e(bob,charlie,sid_50454463),g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454462),dhexp(key_e(bob,charlie,sid_50454463),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454462),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454462),g)),msg_a(alice,bob,sid_50454462))),dhexp(key_e(bob,charlie,sid_50454463),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454462),dhexp(key_e(bob,charlie,sid_50454463),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454462),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454462),g)),msg_a(alice,bob,sid_50454462))),dhexp(key_e(bob,charlie,sid_50454463),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50454463))) may be sent on channel pub at output {538}.
mess(pub,concat3(dhexp(key_e(bob,charlie,sid_50454463),g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454462),dhexp(key_e(bob,charlie,sid_50454463),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454462),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454462),g)),msg_a(alice,bob,sid_50454462))),dhexp(key_e(bob,charlie,sid_50454463),g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454462),dhexp(key_e(bob,charlie,sid_50454463),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454462),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454462),g)),msg_a(alice,bob,sid_50454462))),dhexp(key_e(bob,charlie,sid_50454463),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454462),dhexp(key_e(bob,charlie,sid_50454463),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454462),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454462),g)),msg_a(alice,bob,sid_50454462))),dhexp(key_e(bob,charlie,sid_50454463),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50454463)))).

7. The entry statestore(alice,bob,sid_50454462,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454462),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454462),g)),msg_a(alice,bob,sid_50454462)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50454462),g),key_e(alice,bob,sid_50454462)),empty,empty,empty,true))) that may be in a table by 2 may be read at get {78}.
The message concat3(dhexp(key_e(bob,charlie,sid_50454463),g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454462),dhexp(key_e(bob,charlie,sid_50454463),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454462),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454462),g)),msg_a(alice,bob,sid_50454462))),dhexp(key_e(bob,charlie,sid_50454463),g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454462),dhexp(key_e(bob,charlie,sid_50454463),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454462),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454462),g)),msg_a(alice,bob,sid_50454462))),dhexp(key_e(bob,charlie,sid_50454463),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454462),dhexp(key_e(bob,charlie,sid_50454463),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454462),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454462),g)),msg_a(alice,bob,sid_50454462))),dhexp(key_e(bob,charlie,sid_50454463),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50454463))) that may be sent on channel pub by 6 may be received at input {38}.
We have dhexp(key_e(bob,charlie,sid_50454463),g) <> caught-fail.
So event RecvMsg(alice,bob,stagepack_b(sid_50454462),msg_b(bob,charlie,sid_50454463)) may be executed at {76}.
end(RecvMsg(alice,bob,stagepack_b(sid_50454462),msg_b(bob,charlie,sid_50454463))).


RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1208,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_50454466]),msg_b(bob,charlie,sid[!1 = @sid_50454466]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_50454467]),msg_a(alice,bob,sid[!1 = @sid_50454467]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_50454467]),msg_b(bob,charlie,sid[!1 = @sid_50454466])))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_50454470]),msg_b(bob,alice,sid[!1 = @sid_50454470]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_50454471]),msg_a(alice,bob,sid[!1 = @sid_50454471]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_50454471]),msg_b(bob,alice,sid[!1 = @sid_50454470])))
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1208,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1208,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_50454480]),msg_b(bob,charlie,sid[!1 = @sid_50454480]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_50454481]),msg_a(alice,bob,sid[!1 = @sid_50454481]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_50454481]),msg_b(bob,charlie,sid[!1 = @sid_50454480])))
goal reachable: begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_50454484]),msg_b(bob,alice,sid[!1 = @sid_50454484]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_50454485]),msg_a(alice,bob,sid[!1 = @sid_50454485]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_50454485]),msg_b(bob,alice,sid[!1 = @sid_50454484])))
RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,c_1208,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_50454494]),msg_b(bob,charlie,sid[!1 = @sid_50454494]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_50454495]),msg_a(alice,bob,sid[!1 = @sid_50454495]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_50454495]),msg_b(bob,charlie,sid[!1 = @sid_50454494])))
Abbreviations:
sid_50454569 = sid[!1 = @sid_50454518]
sid_50454570 = sid[!1 = @sid_50454544]

1. The entry statestore(alice,bob,sid_50454569,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {14}.
table(statestore(alice,bob,sid_50454569,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

2. The entry statestore(alice,bob,sid_50454569,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 1 may be read at get {37}.
The event SendMsg(alice,bob,stagepack_a(sid_50454569),msg_a(alice,bob,sid_50454569)) may be executed at {34}.
So the entry statestore(alice,bob,sid_50454569,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454569),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454569),g)),msg_a(alice,bob,sid_50454569)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50454569),g),key_e(alice,bob,sid_50454569)),empty,empty,empty,true))) may be inserted in a table at insert {35}.
table(statestore(alice,bob,sid_50454569,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454569),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454569),g)),msg_a(alice,bob,sid_50454569)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50454569),g),key_e(alice,bob,sid_50454569)),empty,empty,empty,true)))).

3. The entry statestore(bob,charlie,sid_50454570,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {476}.
table(statestore(bob,charlie,sid_50454570,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

4. The entry statestore(alice,bob,sid_50454569,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 1 may be read at get {37}.
The event SendMsg(alice,bob,stagepack_a(sid_50454569),msg_a(alice,bob,sid_50454569)) may be executed at {34}.
So the message concat3(dhexp(key_e(alice,bob,sid_50454569),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454569),g)),msg_a(alice,bob,sid_50454569))) may be sent on channel pub at output {36}.
mess(pub,concat3(dhexp(key_e(alice,bob,sid_50454569),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454569),g)),msg_a(alice,bob,sid_50454569)))).

5. The entry statestore(bob,charlie,sid_50454570,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 3 may be read at get {498}.
The message concat3(dhexp(key_e(alice,bob,sid_50454569),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454569),g)),msg_a(alice,bob,sid_50454569))) that may be sent on channel pub by 4 may be received at input {477}.
We have dhexp(key_e(alice,bob,sid_50454569),g) <> caught-fail.
So the entry statestore(bob,charlie,sid_50454570,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454569),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454569),g)),msg_a(alice,bob,sid_50454569)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_50454569),g),empty,false))) may be inserted in a table at insert {497}.
table(statestore(bob,charlie,sid_50454570,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454569),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454569),g)),msg_a(alice,bob,sid_50454569)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_50454569),g),empty,false)))).

6. The entry statestore(bob,charlie,sid_50454570,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454569),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454569),g)),msg_a(alice,bob,sid_50454569)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_50454569),g),empty,false))) that may be in a table by 5 may be read at get {539}.
The event SendMsg(bob,charlie,stagepack_b(sid_50454570),msg_b(bob,charlie,sid_50454570)) may be executed at {536}.
So the message concat3(dhexp(key_e(bob,charlie,sid_50454570),g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454569),dhexp(key_e(bob,charlie,sid_50454570),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454569),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454569),g)),msg_a(alice,bob,sid_50454569))),dhexp(key_e(bob,charlie,sid_50454570),g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454569),dhexp(key_e(bob,charlie,sid_50454570),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454569),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454569),g)),msg_a(alice,bob,sid_50454569))),dhexp(key_e(bob,charlie,sid_50454570),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454569),dhexp(key_e(bob,charlie,sid_50454570),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454569),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454569),g)),msg_a(alice,bob,sid_50454569))),dhexp(key_e(bob,charlie,sid_50454570),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50454570))) may be sent on channel pub at output {538}.
mess(pub,concat3(dhexp(key_e(bob,charlie,sid_50454570),g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454569),dhexp(key_e(bob,charlie,sid_50454570),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454569),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454569),g)),msg_a(alice,bob,sid_50454569))),dhexp(key_e(bob,charlie,sid_50454570),g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454569),dhexp(key_e(bob,charlie,sid_50454570),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454569),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454569),g)),msg_a(alice,bob,sid_50454569))),dhexp(key_e(bob,charlie,sid_50454570),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454569),dhexp(key_e(bob,charlie,sid_50454570),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454569),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454569),g)),msg_a(alice,bob,sid_50454569))),dhexp(key_e(bob,charlie,sid_50454570),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50454570)))).

7. The entry statestore(alice,bob,sid_50454569,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454569),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454569),g)),msg_a(alice,bob,sid_50454569)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50454569),g),key_e(alice,bob,sid_50454569)),empty,empty,empty,true))) that may be in a table by 2 may be read at get {78}.
The message concat3(dhexp(key_e(bob,charlie,sid_50454570),g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454569),dhexp(key_e(bob,charlie,sid_50454570),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454569),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454569),g)),msg_a(alice,bob,sid_50454569))),dhexp(key_e(bob,charlie,sid_50454570),g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454569),dhexp(key_e(bob,charlie,sid_50454570),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454569),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454569),g)),msg_a(alice,bob,sid_50454569))),dhexp(key_e(bob,charlie,sid_50454570),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454569),dhexp(key_e(bob,charlie,sid_50454570),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454569),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454569),g)),msg_a(alice,bob,sid_50454569))),dhexp(key_e(bob,charlie,sid_50454570),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50454570))) that may be sent on channel pub by 6 may be received at input {38}.
We have dhexp(key_e(bob,charlie,sid_50454570),g) <> caught-fail.
So event RecvMsg(alice,bob,stagepack_b(sid_50454569),msg_b(bob,charlie,sid_50454570)) may be executed at {76}.
end(RecvMsg(alice,bob,stagepack_b(sid_50454569),msg_b(bob,charlie,sid_50454570))).


RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_50454573]),msg_b(bob,charlie,sid[!1 = @sid_50454573]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_50454574]),msg_a(alice,bob,sid[!1 = @sid_50454574]))) -> end(RecvMsg(alice,bob,stagepack_b(sid[!1 = @sid_50454574]),msg_b(bob,charlie,sid[!1 = @sid_50454573])))
Abbreviations:
sid_50454648 = sid[!1 = @sid_50454597]
sid_50454649 = sid[!1 = @sid_50454623]

1. The entry statestore(alice,bob,sid_50454648,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {14}.
table(statestore(alice,bob,sid_50454648,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

2. The entry statestore(alice,bob,sid_50454648,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 1 may be read at get {37}.
The event SendMsg(alice,bob,stagepack_a(sid_50454648),msg_a(alice,bob,sid_50454648)) may be executed at {34}.
So the entry statestore(alice,bob,sid_50454648,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454648),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454648),g)),msg_a(alice,bob,sid_50454648)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50454648),g),key_e(alice,bob,sid_50454648)),empty,empty,empty,true))) may be inserted in a table at insert {35}.
table(statestore(alice,bob,sid_50454648,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454648),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454648),g)),msg_a(alice,bob,sid_50454648)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50454648),g),key_e(alice,bob,sid_50454648)),empty,empty,empty,true)))).

3. The entry statestore(bob,charlie,sid_50454649,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {476}.
table(statestore(bob,charlie,sid_50454649,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

4. The entry statestore(alice,bob,sid_50454648,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 1 may be read at get {37}.
The event SendMsg(alice,bob,stagepack_a(sid_50454648),msg_a(alice,bob,sid_50454648)) may be executed at {34}.
So the message concat3(dhexp(key_e(alice,bob,sid_50454648),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454648),g)),msg_a(alice,bob,sid_50454648))) may be sent on channel pub at output {36}.
mess(pub,concat3(dhexp(key_e(alice,bob,sid_50454648),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454648),g)),msg_a(alice,bob,sid_50454648)))).

5. The entry statestore(bob,charlie,sid_50454649,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 3 may be read at get {498}.
The message concat3(dhexp(key_e(alice,bob,sid_50454648),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454648),g)),msg_a(alice,bob,sid_50454648))) that may be sent on channel pub by 4 may be received at input {477}.
We have dhexp(key_e(alice,bob,sid_50454648),g) <> caught-fail.
So the entry statestore(bob,charlie,sid_50454649,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454648),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454648),g)),msg_a(alice,bob,sid_50454648)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_50454648),g),empty,false))) may be inserted in a table at insert {497}.
table(statestore(bob,charlie,sid_50454649,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454648),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454648),g)),msg_a(alice,bob,sid_50454648)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_50454648),g),empty,false)))).

6. The entry statestore(bob,charlie,sid_50454649,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454648),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454648),g)),msg_a(alice,bob,sid_50454648)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_50454648),g),empty,false))) that may be in a table by 5 may be read at get {539}.
The event SendMsg(bob,charlie,stagepack_b(sid_50454649),msg_b(bob,charlie,sid_50454649)) may be executed at {536}.
So the message concat3(dhexp(key_e(bob,charlie,sid_50454649),g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454648),dhexp(key_e(bob,charlie,sid_50454649),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454648),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454648),g)),msg_a(alice,bob,sid_50454648))),dhexp(key_e(bob,charlie,sid_50454649),g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454648),dhexp(key_e(bob,charlie,sid_50454649),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454648),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454648),g)),msg_a(alice,bob,sid_50454648))),dhexp(key_e(bob,charlie,sid_50454649),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454648),dhexp(key_e(bob,charlie,sid_50454649),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454648),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454648),g)),msg_a(alice,bob,sid_50454648))),dhexp(key_e(bob,charlie,sid_50454649),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50454649))) may be sent on channel pub at output {538}.
mess(pub,concat3(dhexp(key_e(bob,charlie,sid_50454649),g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454648),dhexp(key_e(bob,charlie,sid_50454649),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454648),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454648),g)),msg_a(alice,bob,sid_50454648))),dhexp(key_e(bob,charlie,sid_50454649),g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454648),dhexp(key_e(bob,charlie,sid_50454649),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454648),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454648),g)),msg_a(alice,bob,sid_50454648))),dhexp(key_e(bob,charlie,sid_50454649),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454648),dhexp(key_e(bob,charlie,sid_50454649),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454648),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454648),g)),msg_a(alice,bob,sid_50454648))),dhexp(key_e(bob,charlie,sid_50454649),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50454649)))).

7. The entry statestore(alice,bob,sid_50454648,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454648),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454648),g)),msg_a(alice,bob,sid_50454648)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50454648),g),key_e(alice,bob,sid_50454648)),empty,empty,empty,true))) that may be in a table by 2 may be read at get {78}.
The message concat3(dhexp(key_e(bob,charlie,sid_50454649),g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454648),dhexp(key_e(bob,charlie,sid_50454649),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454648),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454648),g)),msg_a(alice,bob,sid_50454648))),dhexp(key_e(bob,charlie,sid_50454649),g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454648),dhexp(key_e(bob,charlie,sid_50454649),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454648),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454648),g)),msg_a(alice,bob,sid_50454648))),dhexp(key_e(bob,charlie,sid_50454649),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454648),dhexp(key_e(bob,charlie,sid_50454649),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454648),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454648),g)),msg_a(alice,bob,sid_50454648))),dhexp(key_e(bob,charlie,sid_50454649),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50454649))) that may be sent on channel pub by 6 may be received at input {38}.
We have dhexp(key_e(bob,charlie,sid_50454649),g) <> caught-fail.
So event RecvMsg(alice,bob,stagepack_b(sid_50454648),msg_b(bob,charlie,sid_50454649)) may be executed at {76}.
end(RecvMsg(alice,bob,stagepack_b(sid_50454648),msg_b(bob,charlie,sid_50454649))).


RESULT event(RecvMsg(alice,bob,stagepack_b(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_b(sid_b),m)) || event(LeakS(phase0,bob)) cannot be proved.
Starting query not attacker_p1(msg_b(bob,alice,sid_b))
RESULT not attacker_p1(msg_b(bob,alice,sid_b)) is true.
Starting query attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice))
RESULT attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice)) is true.
Starting query attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob)))
RESULT attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob))) is true.
Starting query attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice))
RESULT attacker_p1(msg_b(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_50454665]),msg_c(alice,bob,sid[!1 = @sid_50454665]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_50454666]),msg_b(bob,alice,sid[!1 = @sid_50454666]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_50454665]),msg_a(alice,bob,sid[!1 = @sid_50454665]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_50454666]),msg_c(alice,bob,sid[!1 = @sid_50454665])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1208,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_50454674]),msg_c(alice,bob,sid[!1 = @sid_50454674]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_50454675]),msg_b(bob,alice,sid[!1 = @sid_50454675]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_50454674]),msg_a(alice,bob,sid[!1 = @sid_50454674]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_50454675]),msg_c(alice,bob,sid[!1 = @sid_50454674])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1208,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1208,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_50454684]),msg_c(alice,bob,sid[!1 = @sid_50454684]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_50454685]),msg_b(bob,alice,sid[!1 = @sid_50454685]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_50454684]),msg_a(alice,bob,sid[!1 = @sid_50454684]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_50454685]),msg_c(alice,bob,sid[!1 = @sid_50454684])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,c_1208,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_50454694]),msg_c(alice,bob,sid[!1 = @sid_50454694]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_50454695]),msg_b(bob,alice,sid[!1 = @sid_50454695]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_50454694]),msg_a(alice,bob,sid[!1 = @sid_50454694]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_50454695]),msg_c(alice,bob,sid[!1 = @sid_50454694])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_50454703]),msg_c(alice,bob,sid[!1 = @sid_50454703]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_50454704]),msg_b(bob,alice,sid[!1 = @sid_50454704]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_50454703]),msg_a(alice,bob,sid[!1 = @sid_50454703]))) -> end(RecvMsg(bob,alice,stagepack_c(sid[!1 = @sid_50454704]),msg_c(alice,bob,sid[!1 = @sid_50454703])))
RESULT event(RecvMsg(bob,alice,stagepack_c(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_c(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query not attacker_p1(msg_c(alice,bob,sid_a))
RESULT not attacker_p1(msg_c(alice,bob,sid_a)) is true.
Starting query attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob))
RESULT attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob)) is true.
Starting query attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice)))
RESULT attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice))) is true.
Starting query attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob))
RESULT attacker_p1(msg_c(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m))
goal reachable: begin(SendMsg(bob,charlie,stagepack_d(sid[!1 = @sid_50454725]),msg_d(bob,charlie,sid[!1 = @sid_50454725]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_50454726]),msg_c(alice,bob,sid[!1 = @sid_50454726]))) && begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_50454725]),msg_b(bob,charlie,sid[!1 = @sid_50454725]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_50454726]),msg_a(alice,bob,sid[!1 = @sid_50454726]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_50454726]),msg_d(bob,charlie,sid[!1 = @sid_50454725])))
Abbreviations:
sid_50454966 = sid[!1 = @sid_50454953]
sid_50454967 = sid[!1 = @sid_50454913]

1. The entry statestore(alice,bob,sid_50454966,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {14}.
table(statestore(alice,bob,sid_50454966,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

2. The entry statestore(alice,bob,sid_50454966,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 1 may be read at get {37}.
The event SendMsg(alice,bob,stagepack_a(sid_50454966),msg_a(alice,bob,sid_50454966)) may be executed at {34}.
So the entry statestore(alice,bob,sid_50454966,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50454966),g),key_e(alice,bob,sid_50454966)),empty,empty,empty,true))) may be inserted in a table at insert {35}.
table(statestore(alice,bob,sid_50454966,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50454966),g),key_e(alice,bob,sid_50454966)),empty,empty,empty,true)))).

3. The entry statestore(bob,charlie,sid_50454967,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {476}.
table(statestore(bob,charlie,sid_50454967,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

4. The entry statestore(alice,bob,sid_50454966,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 1 may be read at get {37}.
The event SendMsg(alice,bob,stagepack_a(sid_50454966),msg_a(alice,bob,sid_50454966)) may be executed at {34}.
So the message concat3(dhexp(key_e(alice,bob,sid_50454966),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))) may be sent on channel pub at output {36}.
mess(pub,concat3(dhexp(key_e(alice,bob,sid_50454966),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966)))).

5. The entry statestore(bob,charlie,sid_50454967,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 3 may be read at get {498}.
The message concat3(dhexp(key_e(alice,bob,sid_50454966),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))) that may be sent on channel pub by 4 may be received at input {477}.
We have dhexp(key_e(alice,bob,sid_50454966),g) <> caught-fail.
So the entry statestore(bob,charlie,sid_50454967,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_50454966),g),empty,false))) may be inserted in a table at insert {497}.
table(statestore(bob,charlie,sid_50454967,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_50454966),g),empty,false)))).

6. The entry statestore(bob,charlie,sid_50454967,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_50454966),g),empty,false))) that may be in a table by 5 may be read at get {539}.
The event SendMsg(bob,charlie,stagepack_b(sid_50454967),msg_b(bob,charlie,sid_50454967)) may be executed at {536}.
So the message concat3(dhexp(key_e(bob,charlie,sid_50454967),g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50454967))) may be sent on channel pub at output {538}.
mess(pub,concat3(dhexp(key_e(bob,charlie,sid_50454967),g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50454967)))).

7. The entry statestore(alice,bob,sid_50454966,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50454966),g),key_e(alice,bob,sid_50454966)),empty,empty,empty,true))) that may be in a table by 2 may be read at get {78}.
The message concat3(dhexp(key_e(bob,charlie,sid_50454967),g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50454967))) that may be sent on channel pub by 6 may be received at input {38}.
So the entry statestore(alice,bob,sid_50454966,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50454967)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50454966),g),key_e(alice,bob,sid_50454966)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_50454967),g),empty,true))) may be inserted in a table at insert {77}.
table(statestore(alice,bob,sid_50454966,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50454967)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50454966),g),key_e(alice,bob,sid_50454966)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_50454967),g),empty,true)))).

8. The entry statestore(alice,bob,sid_50454966,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50454967)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50454966),g),key_e(alice,bob,sid_50454966)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_50454967),g),empty,true))) that may be in a table by 7 may be read at get {111}.
The event SendMsg(alice,bob,stagepack_c(sid_50454966),msg_c(alice,bob,sid_50454966)) may be executed at {108}.
So the entry statestore(alice,bob,sid_50454966,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50454966),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50454966),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50454967))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50454966),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50454967))),msg_c(alice,bob,sid_50454966)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50454966),g),key_e(alice,bob,sid_50454966)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_50454967),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50454966),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50454966),g))),zero),minnonce))) may be inserted in a table at insert {109}.
table(statestore(alice,bob,sid_50454966,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50454966),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50454966),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50454967))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50454966),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50454967))),msg_c(alice,bob,sid_50454966)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50454966),g),key_e(alice,bob,sid_50454966)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_50454967),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50454966),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50454966),g))),zero),minnonce)))).

9. The entry statestore(bob,charlie,sid_50454967,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_50454966),g),empty,false))) that may be in a table by 5 may be read at get {539}.
The event SendMsg(bob,charlie,stagepack_b(sid_50454967),msg_b(bob,charlie,sid_50454967)) may be executed at {536}.
So the entry statestore(bob,charlie,sid_50454967,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50454967)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_50454967),g),key_e(bob,charlie,sid_50454967)),empty,dhexp(key_e(alice,bob,sid_50454966),g),empty,false))) may be inserted in a table at insert {537}.
table(statestore(bob,charlie,sid_50454967,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50454967)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_50454967),g),key_e(bob,charlie,sid_50454967)),empty,dhexp(key_e(alice,bob,sid_50454966),g),empty,false)))).

10. The entry statestore(alice,bob,sid_50454966,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50454967)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50454966),g),key_e(alice,bob,sid_50454966)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_50454967),g),empty,true))) that may be in a table by 7 may be read at get {111}.
The event SendMsg(alice,bob,stagepack_c(sid_50454966),msg_c(alice,bob,sid_50454966)) may be executed at {108}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50454966),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50454967))),msg_c(alice,bob,sid_50454966))) may be sent on channel pub at output {110}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50454966),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50454967))),msg_c(alice,bob,sid_50454966)))).

11. The entry statestore(bob,charlie,sid_50454967,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50454967)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_50454967),g),key_e(bob,charlie,sid_50454967)),empty,dhexp(key_e(alice,bob,sid_50454966),g),empty,false))) that may be in a table by 9 may be read at get {573}.
The message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50454966),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50454967))),msg_c(alice,bob,sid_50454966))) that may be sent on channel pub by 10 may be received at input {540}.
So the entry statestore(bob,charlie,sid_50454967,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50454966),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50454966),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50454967))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50454966),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50454967))),msg_c(alice,bob,sid_50454966)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_50454967),g),key_e(bob,charlie,sid_50454967)),empty,dhexp(key_e(alice,bob,sid_50454966),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50454966),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50454966),g))),zero),minnonce))) may be inserted in a table at insert {572}.
table(statestore(bob,charlie,sid_50454967,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50454966),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50454966),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50454967))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50454966),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50454967))),msg_c(alice,bob,sid_50454966)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_50454967),g),key_e(bob,charlie,sid_50454967)),empty,dhexp(key_e(alice,bob,sid_50454966),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50454966),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50454966),g))),zero),minnonce)))).

12. The entry statestore(bob,charlie,sid_50454967,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50454966),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50454966),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50454967))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50454966),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50454967))),msg_c(alice,bob,sid_50454966)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_50454967),g),key_e(bob,charlie,sid_50454967)),empty,dhexp(key_e(alice,bob,sid_50454966),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50454966),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50454966),g))),zero),minnonce))) that may be in a table by 11 may be read at get {593}.
The event SendMsg(bob,charlie,stagepack_d(sid_50454967),msg_d(bob,charlie,sid_50454967)) may be executed at {590}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50454966),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50454967))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50454966),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50454967))),msg_c(alice,bob,sid_50454966))),msg_d(bob,charlie,sid_50454967))) may be sent on channel pub at output {592}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50454966),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50454967))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50454966),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50454967))),msg_c(alice,bob,sid_50454966))),msg_d(bob,charlie,sid_50454967)))).

13. The entry statestore(alice,bob,sid_50454966,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50454966),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50454966),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50454967))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50454966),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50454967))),msg_c(alice,bob,sid_50454966)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50454966),g),key_e(alice,bob,sid_50454966)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_50454967),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50454966),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50454966),g))),zero),minnonce))) that may be in a table by 8 may be read at get {132}.
The message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50454966),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50454967))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50454967),dhexp(key_e(alice,bob,sid_50454966),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50454966),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50454966),dhexp(key_e(bob,charlie,sid_50454967),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50454966),g)),msg_a(alice,bob,sid_50454966))),dhexp(key_e(bob,charlie,sid_50454967),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50454967))),msg_c(alice,bob,sid_50454966))),msg_d(bob,charlie,sid_50454967))) that may be sent on channel pub by 12 may be received at input {114}.
So event RecvMsg(alice,bob,stagepack_d(sid_50454966),msg_d(bob,charlie,sid_50454967)) may be executed at {130}.
end(RecvMsg(alice,bob,stagepack_d(sid_50454966),msg_d(bob,charlie,sid_50454967))).


RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1208,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(bob,charlie,stagepack_d(sid[!1 = @sid_50454970]),msg_d(bob,charlie,sid[!1 = @sid_50454970]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_50454971]),msg_c(alice,bob,sid[!1 = @sid_50454971]))) && begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_50454970]),msg_b(bob,charlie,sid[!1 = @sid_50454970]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_50454971]),msg_a(alice,bob,sid[!1 = @sid_50454971]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_50454971]),msg_d(bob,charlie,sid[!1 = @sid_50454970])))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_50454974]),msg_d(bob,alice,sid[!1 = @sid_50454974]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_50454975]),msg_c(alice,bob,sid[!1 = @sid_50454975]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_50454974]),msg_b(bob,alice,sid[!1 = @sid_50454974]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_50454975]),msg_a(alice,bob,sid[!1 = @sid_50454975]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_50454975]),msg_d(bob,alice,sid[!1 = @sid_50454974])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1208,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1208,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(bob,charlie,stagepack_d(sid[!1 = @sid_50454984]),msg_d(bob,charlie,sid[!1 = @sid_50454984]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_50454985]),msg_c(alice,bob,sid[!1 = @sid_50454985]))) && begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_50454984]),msg_b(bob,charlie,sid[!1 = @sid_50454984]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_50454985]),msg_a(alice,bob,sid[!1 = @sid_50454985]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_50454985]),msg_d(bob,charlie,sid[!1 = @sid_50454984])))
goal reachable: begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_50454988]),msg_d(bob,alice,sid[!1 = @sid_50454988]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_50454989]),msg_c(alice,bob,sid[!1 = @sid_50454989]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_50454988]),msg_b(bob,alice,sid[!1 = @sid_50454988]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_50454989]),msg_a(alice,bob,sid[!1 = @sid_50454989]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_50454989]),msg_d(bob,alice,sid[!1 = @sid_50454988])))
RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,c_1208,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(bob,charlie,stagepack_d(sid[!1 = @sid_50454998]),msg_d(bob,charlie,sid[!1 = @sid_50454998]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_50454999]),msg_c(alice,bob,sid[!1 = @sid_50454999]))) && begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_50454998]),msg_b(bob,charlie,sid[!1 = @sid_50454998]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_50454999]),msg_a(alice,bob,sid[!1 = @sid_50454999]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_50454999]),msg_d(bob,charlie,sid[!1 = @sid_50454998])))
Abbreviations:
sid_50455239 = sid[!1 = @sid_50455226]
sid_50455240 = sid[!1 = @sid_50455186]

1. The entry statestore(alice,bob,sid_50455239,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {14}.
table(statestore(alice,bob,sid_50455239,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

2. The entry statestore(alice,bob,sid_50455239,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 1 may be read at get {37}.
The event SendMsg(alice,bob,stagepack_a(sid_50455239),msg_a(alice,bob,sid_50455239)) may be executed at {34}.
So the entry statestore(alice,bob,sid_50455239,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50455239),g),key_e(alice,bob,sid_50455239)),empty,empty,empty,true))) may be inserted in a table at insert {35}.
table(statestore(alice,bob,sid_50455239,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50455239),g),key_e(alice,bob,sid_50455239)),empty,empty,empty,true)))).

3. The entry statestore(bob,charlie,sid_50455240,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {476}.
table(statestore(bob,charlie,sid_50455240,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

4. The entry statestore(alice,bob,sid_50455239,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 1 may be read at get {37}.
The event SendMsg(alice,bob,stagepack_a(sid_50455239),msg_a(alice,bob,sid_50455239)) may be executed at {34}.
So the message concat3(dhexp(key_e(alice,bob,sid_50455239),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))) may be sent on channel pub at output {36}.
mess(pub,concat3(dhexp(key_e(alice,bob,sid_50455239),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239)))).

5. The entry statestore(bob,charlie,sid_50455240,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 3 may be read at get {498}.
The message concat3(dhexp(key_e(alice,bob,sid_50455239),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))) that may be sent on channel pub by 4 may be received at input {477}.
We have dhexp(key_e(alice,bob,sid_50455239),g) <> caught-fail.
So the entry statestore(bob,charlie,sid_50455240,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_50455239),g),empty,false))) may be inserted in a table at insert {497}.
table(statestore(bob,charlie,sid_50455240,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_50455239),g),empty,false)))).

6. The entry statestore(bob,charlie,sid_50455240,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_50455239),g),empty,false))) that may be in a table by 5 may be read at get {539}.
The event SendMsg(bob,charlie,stagepack_b(sid_50455240),msg_b(bob,charlie,sid_50455240)) may be executed at {536}.
So the message concat3(dhexp(key_e(bob,charlie,sid_50455240),g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455240))) may be sent on channel pub at output {538}.
mess(pub,concat3(dhexp(key_e(bob,charlie,sid_50455240),g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455240)))).

7. The entry statestore(alice,bob,sid_50455239,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50455239),g),key_e(alice,bob,sid_50455239)),empty,empty,empty,true))) that may be in a table by 2 may be read at get {78}.
The message concat3(dhexp(key_e(bob,charlie,sid_50455240),g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455240))) that may be sent on channel pub by 6 may be received at input {38}.
So the entry statestore(alice,bob,sid_50455239,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455240)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50455239),g),key_e(alice,bob,sid_50455239)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_50455240),g),empty,true))) may be inserted in a table at insert {77}.
table(statestore(alice,bob,sid_50455239,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455240)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50455239),g),key_e(alice,bob,sid_50455239)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_50455240),g),empty,true)))).

8. The entry statestore(alice,bob,sid_50455239,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455240)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50455239),g),key_e(alice,bob,sid_50455239)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_50455240),g),empty,true))) that may be in a table by 7 may be read at get {111}.
The event SendMsg(alice,bob,stagepack_c(sid_50455239),msg_c(alice,bob,sid_50455239)) may be executed at {108}.
So the entry statestore(alice,bob,sid_50455239,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455239),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455239),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455240))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455239),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455240))),msg_c(alice,bob,sid_50455239)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50455239),g),key_e(alice,bob,sid_50455239)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_50455240),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455239),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455239),g))),zero),minnonce))) may be inserted in a table at insert {109}.
table(statestore(alice,bob,sid_50455239,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455239),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455239),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455240))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455239),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455240))),msg_c(alice,bob,sid_50455239)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50455239),g),key_e(alice,bob,sid_50455239)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_50455240),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455239),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455239),g))),zero),minnonce)))).

9. The entry statestore(bob,charlie,sid_50455240,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_50455239),g),empty,false))) that may be in a table by 5 may be read at get {539}.
The event SendMsg(bob,charlie,stagepack_b(sid_50455240),msg_b(bob,charlie,sid_50455240)) may be executed at {536}.
So the entry statestore(bob,charlie,sid_50455240,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455240)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_50455240),g),key_e(bob,charlie,sid_50455240)),empty,dhexp(key_e(alice,bob,sid_50455239),g),empty,false))) may be inserted in a table at insert {537}.
table(statestore(bob,charlie,sid_50455240,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455240)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_50455240),g),key_e(bob,charlie,sid_50455240)),empty,dhexp(key_e(alice,bob,sid_50455239),g),empty,false)))).

10. The entry statestore(alice,bob,sid_50455239,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455240)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50455239),g),key_e(alice,bob,sid_50455239)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_50455240),g),empty,true))) that may be in a table by 7 may be read at get {111}.
The event SendMsg(alice,bob,stagepack_c(sid_50455239),msg_c(alice,bob,sid_50455239)) may be executed at {108}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455239),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455240))),msg_c(alice,bob,sid_50455239))) may be sent on channel pub at output {110}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455239),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455240))),msg_c(alice,bob,sid_50455239)))).

11. The entry statestore(bob,charlie,sid_50455240,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455240)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_50455240),g),key_e(bob,charlie,sid_50455240)),empty,dhexp(key_e(alice,bob,sid_50455239),g),empty,false))) that may be in a table by 9 may be read at get {573}.
The message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455239),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455240))),msg_c(alice,bob,sid_50455239))) that may be sent on channel pub by 10 may be received at input {540}.
So the entry statestore(bob,charlie,sid_50455240,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455239),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455239),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455240))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455239),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455240))),msg_c(alice,bob,sid_50455239)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_50455240),g),key_e(bob,charlie,sid_50455240)),empty,dhexp(key_e(alice,bob,sid_50455239),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455239),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455239),g))),zero),minnonce))) may be inserted in a table at insert {572}.
table(statestore(bob,charlie,sid_50455240,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455239),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455239),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455240))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455239),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455240))),msg_c(alice,bob,sid_50455239)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_50455240),g),key_e(bob,charlie,sid_50455240)),empty,dhexp(key_e(alice,bob,sid_50455239),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455239),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455239),g))),zero),minnonce)))).

12. The entry statestore(bob,charlie,sid_50455240,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455239),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455239),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455240))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455239),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455240))),msg_c(alice,bob,sid_50455239)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_50455240),g),key_e(bob,charlie,sid_50455240)),empty,dhexp(key_e(alice,bob,sid_50455239),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455239),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455239),g))),zero),minnonce))) that may be in a table by 11 may be read at get {593}.
The event SendMsg(bob,charlie,stagepack_d(sid_50455240),msg_d(bob,charlie,sid_50455240)) may be executed at {590}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455239),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455240))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455239),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455240))),msg_c(alice,bob,sid_50455239))),msg_d(bob,charlie,sid_50455240))) may be sent on channel pub at output {592}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455239),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455240))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455239),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455240))),msg_c(alice,bob,sid_50455239))),msg_d(bob,charlie,sid_50455240)))).

13. The entry statestore(alice,bob,sid_50455239,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455239),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455239),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455240))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455239),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455240))),msg_c(alice,bob,sid_50455239)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50455239),g),key_e(alice,bob,sid_50455239)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_50455240),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455239),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455239),g))),zero),minnonce))) that may be in a table by 8 may be read at get {132}.
The message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455239),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455240))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455240),dhexp(key_e(alice,bob,sid_50455239),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455239),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455239),dhexp(key_e(bob,charlie,sid_50455240),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455239),g)),msg_a(alice,bob,sid_50455239))),dhexp(key_e(bob,charlie,sid_50455240),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455240))),msg_c(alice,bob,sid_50455239))),msg_d(bob,charlie,sid_50455240))) that may be sent on channel pub by 12 may be received at input {114}.
So event RecvMsg(alice,bob,stagepack_d(sid_50455239),msg_d(bob,charlie,sid_50455240)) may be executed at {130}.
end(RecvMsg(alice,bob,stagepack_d(sid_50455239),msg_d(bob,charlie,sid_50455240))).


RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) || event(LeakS(phase0,alice)) cannot be proved.
Starting query event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(bob,charlie,stagepack_d(sid[!1 = @sid_50455243]),msg_d(bob,charlie,sid[!1 = @sid_50455243]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_50455244]),msg_c(alice,bob,sid[!1 = @sid_50455244]))) && begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_50455243]),msg_b(bob,charlie,sid[!1 = @sid_50455243]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_50455244]),msg_a(alice,bob,sid[!1 = @sid_50455244]))) -> end(RecvMsg(alice,bob,stagepack_d(sid[!1 = @sid_50455244]),msg_d(bob,charlie,sid[!1 = @sid_50455243])))
Abbreviations:
sid_50455484 = sid[!1 = @sid_50455471]
sid_50455485 = sid[!1 = @sid_50455431]

1. The entry statestore(alice,bob,sid_50455484,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {14}.
table(statestore(alice,bob,sid_50455484,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

2. The entry statestore(alice,bob,sid_50455484,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 1 may be read at get {37}.
The event SendMsg(alice,bob,stagepack_a(sid_50455484),msg_a(alice,bob,sid_50455484)) may be executed at {34}.
So the entry statestore(alice,bob,sid_50455484,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50455484),g),key_e(alice,bob,sid_50455484)),empty,empty,empty,true))) may be inserted in a table at insert {35}.
table(statestore(alice,bob,sid_50455484,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50455484),g),key_e(alice,bob,sid_50455484)),empty,empty,empty,true)))).

3. The entry statestore(bob,charlie,sid_50455485,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {476}.
table(statestore(bob,charlie,sid_50455485,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

4. The entry statestore(alice,bob,sid_50455484,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 1 may be read at get {37}.
The event SendMsg(alice,bob,stagepack_a(sid_50455484),msg_a(alice,bob,sid_50455484)) may be executed at {34}.
So the message concat3(dhexp(key_e(alice,bob,sid_50455484),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))) may be sent on channel pub at output {36}.
mess(pub,concat3(dhexp(key_e(alice,bob,sid_50455484),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484)))).

5. The entry statestore(bob,charlie,sid_50455485,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 3 may be read at get {498}.
The message concat3(dhexp(key_e(alice,bob,sid_50455484),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))) that may be sent on channel pub by 4 may be received at input {477}.
We have dhexp(key_e(alice,bob,sid_50455484),g) <> caught-fail.
So the entry statestore(bob,charlie,sid_50455485,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_50455484),g),empty,false))) may be inserted in a table at insert {497}.
table(statestore(bob,charlie,sid_50455485,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_50455484),g),empty,false)))).

6. The entry statestore(bob,charlie,sid_50455485,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_50455484),g),empty,false))) that may be in a table by 5 may be read at get {539}.
The event SendMsg(bob,charlie,stagepack_b(sid_50455485),msg_b(bob,charlie,sid_50455485)) may be executed at {536}.
So the message concat3(dhexp(key_e(bob,charlie,sid_50455485),g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455485))) may be sent on channel pub at output {538}.
mess(pub,concat3(dhexp(key_e(bob,charlie,sid_50455485),g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455485)))).

7. The entry statestore(alice,bob,sid_50455484,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50455484),g),key_e(alice,bob,sid_50455484)),empty,empty,empty,true))) that may be in a table by 2 may be read at get {78}.
The message concat3(dhexp(key_e(bob,charlie,sid_50455485),g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455485))) that may be sent on channel pub by 6 may be received at input {38}.
So the entry statestore(alice,bob,sid_50455484,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455485)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50455484),g),key_e(alice,bob,sid_50455484)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_50455485),g),empty,true))) may be inserted in a table at insert {77}.
table(statestore(alice,bob,sid_50455484,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455485)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50455484),g),key_e(alice,bob,sid_50455484)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_50455485),g),empty,true)))).

8. The entry statestore(alice,bob,sid_50455484,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455485)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50455484),g),key_e(alice,bob,sid_50455484)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_50455485),g),empty,true))) that may be in a table by 7 may be read at get {111}.
The event SendMsg(alice,bob,stagepack_c(sid_50455484),msg_c(alice,bob,sid_50455484)) may be executed at {108}.
So the entry statestore(alice,bob,sid_50455484,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455484),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455484),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455485))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455484),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455485))),msg_c(alice,bob,sid_50455484)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50455484),g),key_e(alice,bob,sid_50455484)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_50455485),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455484),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455484),g))),zero),minnonce))) may be inserted in a table at insert {109}.
table(statestore(alice,bob,sid_50455484,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455484),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455484),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455485))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455484),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455485))),msg_c(alice,bob,sid_50455484)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50455484),g),key_e(alice,bob,sid_50455484)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_50455485),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455484),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455484),g))),zero),minnonce)))).

9. The entry statestore(bob,charlie,sid_50455485,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_50455484),g),empty,false))) that may be in a table by 5 may be read at get {539}.
The event SendMsg(bob,charlie,stagepack_b(sid_50455485),msg_b(bob,charlie,sid_50455485)) may be executed at {536}.
So the entry statestore(bob,charlie,sid_50455485,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455485)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_50455485),g),key_e(bob,charlie,sid_50455485)),empty,dhexp(key_e(alice,bob,sid_50455484),g),empty,false))) may be inserted in a table at insert {537}.
table(statestore(bob,charlie,sid_50455485,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455485)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_50455485),g),key_e(bob,charlie,sid_50455485)),empty,dhexp(key_e(alice,bob,sid_50455484),g),empty,false)))).

10. The entry statestore(alice,bob,sid_50455484,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455485)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50455484),g),key_e(alice,bob,sid_50455484)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_50455485),g),empty,true))) that may be in a table by 7 may be read at get {111}.
The event SendMsg(alice,bob,stagepack_c(sid_50455484),msg_c(alice,bob,sid_50455484)) may be executed at {108}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455484),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455485))),msg_c(alice,bob,sid_50455484))) may be sent on channel pub at output {110}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455484),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455485))),msg_c(alice,bob,sid_50455484)))).

11. The entry statestore(bob,charlie,sid_50455485,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455485)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_50455485),g),key_e(bob,charlie,sid_50455485)),empty,dhexp(key_e(alice,bob,sid_50455484),g),empty,false))) that may be in a table by 9 may be read at get {573}.
The message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455484),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455485))),msg_c(alice,bob,sid_50455484))) that may be sent on channel pub by 10 may be received at input {540}.
So the entry statestore(bob,charlie,sid_50455485,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455484),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455484),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455485))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455484),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455485))),msg_c(alice,bob,sid_50455484)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_50455485),g),key_e(bob,charlie,sid_50455485)),empty,dhexp(key_e(alice,bob,sid_50455484),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455484),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455484),g))),zero),minnonce))) may be inserted in a table at insert {572}.
table(statestore(bob,charlie,sid_50455485,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455484),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455484),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455485))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455484),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455485))),msg_c(alice,bob,sid_50455484)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_50455485),g),key_e(bob,charlie,sid_50455485)),empty,dhexp(key_e(alice,bob,sid_50455484),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455484),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455484),g))),zero),minnonce)))).

12. The entry statestore(bob,charlie,sid_50455485,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455484),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455484),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455485))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455484),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455485))),msg_c(alice,bob,sid_50455484)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_50455485),g),key_e(bob,charlie,sid_50455485)),empty,dhexp(key_e(alice,bob,sid_50455484),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455484),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455484),g))),zero),minnonce))) that may be in a table by 11 may be read at get {593}.
The event SendMsg(bob,charlie,stagepack_d(sid_50455485),msg_d(bob,charlie,sid_50455485)) may be executed at {590}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455484),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455485))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455484),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455485))),msg_c(alice,bob,sid_50455484))),msg_d(bob,charlie,sid_50455485))) may be sent on channel pub at output {592}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455484),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455485))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455484),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455485))),msg_c(alice,bob,sid_50455484))),msg_d(bob,charlie,sid_50455485)))).

13. The entry statestore(alice,bob,sid_50455484,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455484),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455484),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455485))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455484),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455485))),msg_c(alice,bob,sid_50455484)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50455484),g),key_e(alice,bob,sid_50455484)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_50455485),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455484),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455484),g))),zero),minnonce))) that may be in a table by 8 may be read at get {132}.
The message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455484),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455485))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455485),dhexp(key_e(alice,bob,sid_50455484),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455484),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455484),dhexp(key_e(bob,charlie,sid_50455485),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455484),g)),msg_a(alice,bob,sid_50455484))),dhexp(key_e(bob,charlie,sid_50455485),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455485))),msg_c(alice,bob,sid_50455484))),msg_d(bob,charlie,sid_50455485))) that may be sent on channel pub by 12 may be received at input {114}.
So event RecvMsg(alice,bob,stagepack_d(sid_50455484),msg_d(bob,charlie,sid_50455485)) may be executed at {130}.
end(RecvMsg(alice,bob,stagepack_d(sid_50455484),msg_d(bob,charlie,sid_50455485))).


RESULT event(RecvMsg(alice,bob,stagepack_d(sid_a),m)) ==> event(SendMsg(bob,alice,stagepack_d(sid_b),m)) || event(LeakS(phase0,bob)) cannot be proved.
Starting query not attacker_p1(msg_d(bob,alice,sid_b))
RESULT not attacker_p1(msg_d(bob,alice,sid_b)) is true.
Starting query attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice))
RESULT attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || event(LeakS(phase1,alice)) is true.
Starting query attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob)))
RESULT attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) || (event(LeakS(phase1,alice)) && event(LeakS(p,bob))) is true.
Starting query attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice))
RESULT attacker_p1(msg_d(bob,alice,sid_b)) ==> event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_50455501]),msg_e(alice,bob,sid[!1 = @sid_50455501]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_50455502]),msg_d(bob,alice,sid[!1 = @sid_50455502]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_50455501]),msg_c(alice,bob,sid[!1 = @sid_50455501]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_50455502]),msg_b(bob,alice,sid[!1 = @sid_50455502]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_50455501]),msg_a(alice,bob,sid[!1 = @sid_50455501]))) -> end(RecvMsg(bob,alice,stagepack_e(sid[!1 = @sid_50455502]),msg_e(alice,bob,sid[!1 = @sid_50455501])))
RESULT event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1208,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_50455510]),msg_e(alice,bob,sid[!1 = @sid_50455510]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_50455511]),msg_d(bob,alice,sid[!1 = @sid_50455511]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_50455510]),msg_c(alice,bob,sid[!1 = @sid_50455510]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_50455511]),msg_b(bob,alice,sid[!1 = @sid_50455511]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_50455510]),msg_a(alice,bob,sid[!1 = @sid_50455510]))) -> end(RecvMsg(bob,alice,stagepack_e(sid[!1 = @sid_50455511]),msg_e(alice,bob,sid[!1 = @sid_50455510])))
RESULT event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1208,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1208,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_50455520]),msg_e(alice,bob,sid[!1 = @sid_50455520]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_50455521]),msg_d(bob,alice,sid[!1 = @sid_50455521]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_50455520]),msg_c(alice,bob,sid[!1 = @sid_50455520]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_50455521]),msg_b(bob,alice,sid[!1 = @sid_50455521]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_50455520]),msg_a(alice,bob,sid[!1 = @sid_50455520]))) -> end(RecvMsg(bob,alice,stagepack_e(sid[!1 = @sid_50455521]),msg_e(alice,bob,sid[!1 = @sid_50455520])))
RESULT event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,c_1208,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_50455530]),msg_e(alice,bob,sid[!1 = @sid_50455530]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_50455531]),msg_d(bob,alice,sid[!1 = @sid_50455531]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_50455530]),msg_c(alice,bob,sid[!1 = @sid_50455530]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_50455531]),msg_b(bob,alice,sid[!1 = @sid_50455531]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_50455530]),msg_a(alice,bob,sid[!1 = @sid_50455530]))) -> end(RecvMsg(bob,alice,stagepack_e(sid[!1 = @sid_50455531]),msg_e(alice,bob,sid[!1 = @sid_50455530])))
RESULT event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)) || event(LeakS(phase0,bob)) is true.
Starting query event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_50455539]),msg_e(alice,bob,sid[!1 = @sid_50455539]))) && begin(SendMsg(bob,alice,stagepack_d(sid[!1 = @sid_50455540]),msg_d(bob,alice,sid[!1 = @sid_50455540]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_50455539]),msg_c(alice,bob,sid[!1 = @sid_50455539]))) && begin(SendMsg(bob,alice,stagepack_b(sid[!1 = @sid_50455540]),msg_b(bob,alice,sid[!1 = @sid_50455540]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_50455539]),msg_a(alice,bob,sid[!1 = @sid_50455539]))) -> end(RecvMsg(bob,alice,stagepack_e(sid[!1 = @sid_50455540]),msg_e(alice,bob,sid[!1 = @sid_50455539])))
RESULT event(RecvMsg(bob,alice,stagepack_e(sid_b),m)) ==> event(SendMsg(alice,bob,stagepack_e(sid_a),m)) || event(LeakS(phase0,alice)) is true.
Starting query not attacker_p1(msg_e(alice,bob,sid_a))
RESULT not attacker_p1(msg_e(alice,bob,sid_a)) is true.
Starting query attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob))
RESULT attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || event(LeakS(phase1,bob)) is true.
Starting query attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice)))
RESULT attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) || (event(LeakS(phase1,bob)) && event(LeakS(p,alice))) is true.
Starting query attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakS(phase0,bob))
RESULT attacker_p1(msg_e(alice,bob,sid_a)) ==> event(LeakS(phase0,bob)) is true.
Starting query not event(RecvEnd(true))
goal reachable: begin(SendMsg(alice,bob,stagepack_e(sid[!1 = @sid_50455559]),msg_e(alice,bob,sid[!1 = @sid_50455559]))) && begin(SendMsg(bob,charlie,stagepack_d(sid[!1 = @sid_50455560]),msg_d(bob,charlie,sid[!1 = @sid_50455560]))) && begin(SendMsg(alice,bob,stagepack_c(sid[!1 = @sid_50455559]),msg_c(alice,bob,sid[!1 = @sid_50455559]))) && begin(SendMsg(bob,charlie,stagepack_b(sid[!1 = @sid_50455560]),msg_b(bob,charlie,sid[!1 = @sid_50455560]))) && begin(SendMsg(alice,bob,stagepack_a(sid[!1 = @sid_50455559]),msg_a(alice,bob,sid[!1 = @sid_50455559]))) -> end(RecvEnd(true))
Abbreviations:
sid_50455968 = sid[!1 = @sid_50455957]
sid_50455969 = sid[!1 = @sid_50455887]

1. The entry statestore(bob,charlie,sid_50455968,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) may be inserted in a table at insert {476}.
table(statestore(bob,charlie,sid_50455968,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false)))).

2. The entry statestore(alice,bob,sid_50455969,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) may be inserted in a table at insert {14}.
table(statestore(alice,bob,sid_50455969,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true)))).

3. The entry statestore(alice,bob,sid_50455969,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {37}.
The event SendMsg(alice,bob,stagepack_a(sid_50455969),msg_a(alice,bob,sid_50455969)) may be executed at {34}.
So the message concat3(dhexp(key_e(alice,bob,sid_50455969),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))) may be sent on channel pub at output {36}.
mess(pub,concat3(dhexp(key_e(alice,bob,sid_50455969),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969)))).

4. The entry statestore(bob,charlie,sid_50455968,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,false))) that may be in a table by 1 may be read at get {498}.
The message concat3(dhexp(key_e(alice,bob,sid_50455969),g),empty,encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))) that may be sent on channel pub by 3 may be received at input {477}.
We have dhexp(key_e(alice,bob,sid_50455969),g) <> caught-fail.
So the entry statestore(bob,charlie,sid_50455968,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_50455969),g),empty,false))) may be inserted in a table at insert {497}.
table(statestore(bob,charlie,sid_50455968,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_50455969),g),empty,false)))).

5. The entry statestore(bob,charlie,sid_50455968,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_50455969),g),empty,false))) that may be in a table by 4 may be read at get {539}.
The event SendMsg(bob,charlie,stagepack_b(sid_50455968),msg_b(bob,charlie,sid_50455968)) may be executed at {536}.
So the entry statestore(bob,charlie,sid_50455968,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_50455968),g),key_e(bob,charlie,sid_50455968)),empty,dhexp(key_e(alice,bob,sid_50455969),g),empty,false))) may be inserted in a table at insert {537}.
table(statestore(bob,charlie,sid_50455968,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_50455968),g),key_e(bob,charlie,sid_50455968)),empty,dhexp(key_e(alice,bob,sid_50455969),g),empty,false)))).

6. The entry statestore(alice,bob,sid_50455969,statepack_a(handshakestatepack(symmetricstatepack(cipherstatepack(empty,minnonce),hash(somename,empty),hash(hash(somename,empty),empty)),keypairpack(empty,empty),keypairpack(empty,empty),empty,empty,empty,true))) that may be in a table by 2 may be read at get {37}.
The event SendMsg(alice,bob,stagepack_a(sid_50455969),msg_a(alice,bob,sid_50455969)) may be executed at {34}.
So the entry statestore(alice,bob,sid_50455969,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50455969),g),key_e(alice,bob,sid_50455969)),empty,empty,empty,true))) may be inserted in a table at insert {35}.
table(statestore(alice,bob,sid_50455969,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50455969),g),key_e(alice,bob,sid_50455969)),empty,empty,empty,true)))).

7. The entry statestore(bob,charlie,sid_50455968,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969)))),keypairpack(empty,empty),keypairpack(empty,empty),empty,dhexp(key_e(alice,bob,sid_50455969),g),empty,false))) that may be in a table by 4 may be read at get {539}.
The event SendMsg(bob,charlie,stagepack_b(sid_50455968),msg_b(bob,charlie,sid_50455968)) may be executed at {536}.
So the message concat3(dhexp(key_e(bob,charlie,sid_50455968),g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))) may be sent on channel pub at output {538}.
mess(pub,concat3(dhexp(key_e(bob,charlie,sid_50455968),g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968)))).

8. The entry statestore(alice,bob,sid_50455969,statepack_b(handshakestatepack(symmetricstatepack(cipherstatepack(empty,increment_nonce(minnonce)),hash(somename,empty),hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50455969),g),key_e(alice,bob,sid_50455969)),empty,empty,empty,true))) that may be in a table by 6 may be read at get {78}.
The message concat3(dhexp(key_e(bob,charlie,sid_50455968),g),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))) that may be sent on channel pub by 7 may be received at input {38}.
So the entry statestore(alice,bob,sid_50455969,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50455969),g),key_e(alice,bob,sid_50455969)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_50455968),g),empty,true))) may be inserted in a table at insert {77}.
table(statestore(alice,bob,sid_50455969,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50455969),g),key_e(alice,bob,sid_50455969)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_50455968),g),empty,true)))).

9. The entry statestore(alice,bob,sid_50455969,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50455969),g),key_e(alice,bob,sid_50455969)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_50455968),g),empty,true))) that may be in a table by 8 may be read at get {111}.
The event SendMsg(alice,bob,stagepack_c(sid_50455969),msg_c(alice,bob,sid_50455969)) may be executed at {108}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),msg_c(alice,bob,sid_50455969))) may be sent on channel pub at output {110}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),msg_c(alice,bob,sid_50455969)))).

10. The entry statestore(bob,charlie,sid_50455968,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_50455968),g),key_e(bob,charlie,sid_50455968)),empty,dhexp(key_e(alice,bob,sid_50455969),g),empty,false))) that may be in a table by 5 may be read at get {573}.
The message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),msg_c(alice,bob,sid_50455969))) that may be sent on channel pub by 9 may be received at input {540}.
So the entry statestore(bob,charlie,sid_50455968,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),msg_c(alice,bob,sid_50455969)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_50455968),g),key_e(bob,charlie,sid_50455968)),empty,dhexp(key_e(alice,bob,sid_50455969),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),minnonce))) may be inserted in a table at insert {572}.
table(statestore(bob,charlie,sid_50455968,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),msg_c(alice,bob,sid_50455969)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_50455968),g),key_e(bob,charlie,sid_50455968)),empty,dhexp(key_e(alice,bob,sid_50455969),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),minnonce)))).

11. The entry statestore(bob,charlie,sid_50455968,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),msg_c(alice,bob,sid_50455969)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_50455968),g),key_e(bob,charlie,sid_50455968)),empty,dhexp(key_e(alice,bob,sid_50455969),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),minnonce))) that may be in a table by 10 may be read at get {593}.
The event SendMsg(bob,charlie,stagepack_d(sid_50455968),msg_d(bob,charlie,sid_50455968)) may be executed at {590}.
So the entry statestore(bob,charlie,sid_50455968,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),msg_c(alice,bob,sid_50455969))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),msg_c(alice,bob,sid_50455969))),msg_d(bob,charlie,sid_50455968)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_50455968),g),key_e(bob,charlie,sid_50455968)),empty,dhexp(key_e(alice,bob,sid_50455969),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),increment_nonce(minnonce)))) may be inserted in a table at insert {591}.
table(statestore(bob,charlie,sid_50455968,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),msg_c(alice,bob,sid_50455969))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),msg_c(alice,bob,sid_50455969))),msg_d(bob,charlie,sid_50455968)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_50455968),g),key_e(bob,charlie,sid_50455968)),empty,dhexp(key_e(alice,bob,sid_50455969),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),increment_nonce(minnonce))))).

12. The entry statestore(alice,bob,sid_50455969,statepack_c(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(increment_nonce(minnonce))),hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50455969),g),key_e(alice,bob,sid_50455969)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_50455968),g),empty,true))) that may be in a table by 8 may be read at get {111}.
The event SendMsg(alice,bob,stagepack_c(sid_50455969),msg_c(alice,bob,sid_50455969)) may be executed at {108}.
So the entry statestore(alice,bob,sid_50455969,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),msg_c(alice,bob,sid_50455969)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50455969),g),key_e(alice,bob,sid_50455969)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_50455968),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),minnonce))) may be inserted in a table at insert {109}.
table(statestore(alice,bob,sid_50455969,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),msg_c(alice,bob,sid_50455969)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50455969),g),key_e(alice,bob,sid_50455969)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_50455968),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),minnonce)))).

13. The entry statestore(bob,charlie,sid_50455968,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),msg_c(alice,bob,sid_50455969)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_50455968),g),key_e(bob,charlie,sid_50455968)),empty,dhexp(key_e(alice,bob,sid_50455969),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),minnonce))) that may be in a table by 10 may be read at get {593}.
The event SendMsg(bob,charlie,stagepack_d(sid_50455968),msg_d(bob,charlie,sid_50455968)) may be executed at {590}.
So the message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),msg_c(alice,bob,sid_50455969))),msg_d(bob,charlie,sid_50455968))) may be sent on channel pub at output {592}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),msg_c(alice,bob,sid_50455969))),msg_d(bob,charlie,sid_50455968)))).

14. The entry statestore(alice,bob,sid_50455969,statepack_d(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),msg_c(alice,bob,sid_50455969)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50455969),g),key_e(alice,bob,sid_50455969)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_50455968),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),minnonce))) that may be in a table by 12 may be read at get {132}.
The message concat3(empty,empty,encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),msg_c(alice,bob,sid_50455969))),msg_d(bob,charlie,sid_50455968))) that may be sent on channel pub by 13 may be received at input {114}.
So the entry statestore(alice,bob,sid_50455969,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),msg_c(alice,bob,sid_50455969))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),msg_c(alice,bob,sid_50455969))),msg_d(bob,charlie,sid_50455968)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50455969),g),key_e(alice,bob,sid_50455969)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_50455968),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),increment_nonce(minnonce)))) may be inserted in a table at insert {131}.
table(statestore(alice,bob,sid_50455969,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),msg_c(alice,bob,sid_50455969))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),msg_c(alice,bob,sid_50455969))),msg_d(bob,charlie,sid_50455968)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50455969),g),key_e(alice,bob,sid_50455969)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_50455968),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),increment_nonce(minnonce))))).

15. The entry statestore(alice,bob,sid_50455969,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),msg_c(alice,bob,sid_50455969))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),msg_c(alice,bob,sid_50455969))),msg_d(bob,charlie,sid_50455968)))),keypairpack(empty,empty),keypairpack(dhexp(key_e(alice,bob,sid_50455969),g),key_e(alice,bob,sid_50455969)),dhexp(key_s(bob),g),dhexp(key_e(bob,charlie,sid_50455968),g),empty,true),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),increment_nonce(minnonce)))) that may be in a table by 14 may be read at get {151}.
The event SendMsg(alice,bob,stagepack_e(sid_50455969),msg_e(alice,bob,sid_50455969)) may be executed at {149}.
So the message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),msg_c(alice,bob,sid_50455969))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),msg_c(alice,bob,sid_50455969))),msg_d(bob,charlie,sid_50455968))),msg_e(alice,bob,sid_50455969))) may be sent on channel pub at output {150}.
mess(pub,concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),msg_c(alice,bob,sid_50455969))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),msg_c(alice,bob,sid_50455969))),msg_d(bob,charlie,sid_50455968))),msg_e(alice,bob,sid_50455969)))).

16. The entry statestore(bob,charlie,sid_50455968,statepack_e(handshakestatepack(symmetricstatepack(cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),increment_nonce(minnonce)),hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),msg_c(alice,bob,sid_50455969))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),msg_c(alice,bob,sid_50455969))),msg_d(bob,charlie,sid_50455968)))),keypairpack(dhexp(key_s(bob),g),key_s(bob)),keypairpack(dhexp(key_e(bob,charlie,sid_50455968),g),key_e(bob,charlie,sid_50455968)),empty,dhexp(key_e(alice,bob,sid_50455969),g),empty,false),cipherstatepack(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),minnonce),cipherstatepack(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),increment_nonce(minnonce)))) that may be in a table by 11 may be read at get {614}.
The message concat3(empty,empty,encrypt(hmac_hash1(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),msg_c(alice,bob,sid_50455969))),encrypt(hmac_hash2(hmac_hash1(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),zero),minnonce,hash(hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),encrypt(hmac_hash2(hmac_hash1(hash(somename,empty),dhexp(key_e(bob,charlie,sid_50455968),dhexp(key_e(alice,bob,sid_50455969),g))),dhexp(key_s(bob),dhexp(key_e(alice,bob,sid_50455969),g))),minnonce,hash(hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),increment_nonce(minnonce),hash(hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),encrypt(hmac_hash2(hash(somename,empty),dhexp(key_e(alice,bob,sid_50455969),dhexp(key_e(bob,charlie,sid_50455968),g))),minnonce,hash(hash(hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),encrypt(empty,minnonce,hash(hash(hash(somename,empty),empty),dhexp(key_e(alice,bob,sid_50455969),g)),msg_a(alice,bob,sid_50455969))),dhexp(key_e(bob,charlie,sid_50455968),g)),dhexp(key_s(bob),g))),msg_b(bob,charlie,sid_50455968))),msg_c(alice,bob,sid_50455969))),msg_d(bob,charlie,sid_50455968))),msg_e(alice,bob,sid_50455969))) that may be sent on channel pub by 15 may be received at input {596}.
So event RecvEnd(true) may be executed at {613}.
end(RecvEnd(true)).


RESULT not event(RecvEnd(true)) cannot be proved.
